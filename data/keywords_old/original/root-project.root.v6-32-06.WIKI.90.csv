id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTQpResidual.html:3759,Modifiability,inherit,inheritance,3759,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:5970,Modifiability,inherit,inherits,5970,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:6087,Modifiability,inherit,inherits,6087,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:10836,Modifiability,inherit,inherited,10836,"e=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fRA;  ; TVectorD fRC;  ; TVectorD fRgamma;  ; TVectorD fRlambda;  ; TVectorD fRphi;  ; TVectorD fRpi;  ; TVectorD fRQ;  ; TVectorD fRt;  ; TVectorD fRu;  ; TVectorD fRv;  ; TVectorD fRw;  ; TVectorD fRz;  . Static Protected Member Functions; static void GondzioProjection (TVectorD &v, Double_t rmin, Double_t rmax);  Replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; Double_t fDualityGap;  ; Double_t fMclo;  ; Double_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; Double_t fNxlo;  ; Double_t fNxup;  ; Double_t fResidualNorm;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:11492,Modifiability,inherit,inherited,11492,"Gap;  ; Double_t fMclo;  ; Double_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; Double_t fNxlo;  ; Double_t fNxup;  ; Double_t fResidualNorm;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpResidual.h>. Inheritance diagram for TQpResidual:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpResidual() [1/3]. TQpResidual::TQpResidual ; (; ). Constructor. ; Definition at line 63 of file TQpResidual.cxx",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:11995,Modifiability,inherit,inherited,11995," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpResidual.h>. Inheritance diagram for TQpResidual:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpResidual() [1/3]. TQpResidual::TQpResidual ; (; ). Constructor. ; Definition at line 63 of file TQpResidual.cxx. ◆ TQpResidual() [2/3]. TQpResidual::TQpResidual ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz, . TVectorD & ; ixlow, . TVectorD & ; ixupp, . TVectorD & ; iclow, . TVectorD & ; icupp . ). Constructor. ; Definition at line 81 of file TQpResidual.cxx. ◆ TQpResidual() [3/3]. TQpResidual::TQpResidual ; (; const TQpResidual & ; another). Copy constructor. ; Definition at line 127 of file TQpResidual.cxx. ◆ ~TQpResidual(). TQpResidual::~TQpResidual ; (; ). inlineoverride . Definition at line 106 of file TQpResidual.h. ",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:12094,Modifiability,inherit,inherited,12094," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpResidual.h>. Inheritance diagram for TQpResidual:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpResidual() [1/3]. TQpResidual::TQpResidual ; (; ). Constructor. ; Definition at line 63 of file TQpResidual.cxx. ◆ TQpResidual() [2/3]. TQpResidual::TQpResidual ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz, . TVectorD & ; ixlow, . TVectorD & ; ixupp, . TVectorD & ; iclow, . TVectorD & ; icupp . ). Constructor. ; Definition at line 81 of file TQpResidual.cxx. ◆ TQpResidual() [3/3]. TQpResidual::TQpResidual ; (; const TQpResidual & ; another). Copy constructor. ; Definition at line 127 of file TQpResidual.cxx. ◆ ~TQpResidual(). TQpResidual::~TQpResidual ; (; ). inlineoverride . Definition at line 106 of file TQpResidual.h. ",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:13352,Modifiability,variab,variables,13352,"ram for TQpResidual:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpResidual() [1/3]. TQpResidual::TQpResidual ; (; ). Constructor. ; Definition at line 63 of file TQpResidual.cxx. ◆ TQpResidual() [2/3]. TQpResidual::TQpResidual ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz, . TVectorD & ; ixlow, . TVectorD & ; ixupp, . TVectorD & ; iclow, . TVectorD & ; icupp . ). Constructor. ; Definition at line 81 of file TQpResidual.cxx. ◆ TQpResidual() [3/3]. TQpResidual::TQpResidual ; (; const TQpResidual & ; another). Copy constructor. ; Definition at line 127 of file TQpResidual.cxx. ◆ ~TQpResidual(). TQpResidual::~TQpResidual ; (; ). inlineoverride . Definition at line 106 of file TQpResidual.h. Member Function Documentation. ◆ Add_r3_xz_alpha(). void TQpResidual::Add_r3_xz_alpha ; (; TQpVar * ; vars, . Double_t ; alpha . ). Modify the ""complementarity"" component of the residuals, by adding the pairwise products of the complementary variables plus a constant alpha to this term. ; Definition at line 237 of file TQpResidual.cxx. ◆ CalcResids(). void TQpResidual::CalcResids ; (; TQpDataBase * ; problem, . TQpVar * ; vars . ). Calculate residuals, their norms, and duality complementarity gap, given a problem and variable set. ; Definition at line 137 of file TQpResidual.cxx. ◆ Clear_r1r2(). void TQpResidual::Clear_r1r2 ; (; ). set the noncomplementarity components of the residual (the terms arising from the linear equalities in the KKT conditions) to 0. ; Definition at line 280 of file TQpResidual.cxx. ◆ Clear_r3(). void TQpResidual::Clear_r3 ; (; ). set the complementarity component of the residuals to 0. ; Definition at line 267 of file TQpResidual.cxx. ◆ GetDualityGap(). Double_t TQpResidual::GetDualityGap ; (; ). inline . Definition at line 109 of file TQpResidual.h. ◆ GetResidualNorm(). Double_t TQpResidual::GetResidualNorm ; (; ). inline . Definition at line 108 of file TQpResidu",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:13633,Modifiability,variab,variable,13633,"◆ TQpResidual() [2/3]. TQpResidual::TQpResidual ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz, . TVectorD & ; ixlow, . TVectorD & ; ixupp, . TVectorD & ; iclow, . TVectorD & ; icupp . ). Constructor. ; Definition at line 81 of file TQpResidual.cxx. ◆ TQpResidual() [3/3]. TQpResidual::TQpResidual ; (; const TQpResidual & ; another). Copy constructor. ; Definition at line 127 of file TQpResidual.cxx. ◆ ~TQpResidual(). TQpResidual::~TQpResidual ; (; ). inlineoverride . Definition at line 106 of file TQpResidual.h. Member Function Documentation. ◆ Add_r3_xz_alpha(). void TQpResidual::Add_r3_xz_alpha ; (; TQpVar * ; vars, . Double_t ; alpha . ). Modify the ""complementarity"" component of the residuals, by adding the pairwise products of the complementary variables plus a constant alpha to this term. ; Definition at line 237 of file TQpResidual.cxx. ◆ CalcResids(). void TQpResidual::CalcResids ; (; TQpDataBase * ; problem, . TQpVar * ; vars . ). Calculate residuals, their norms, and duality complementarity gap, given a problem and variable set. ; Definition at line 137 of file TQpResidual.cxx. ◆ Clear_r1r2(). void TQpResidual::Clear_r1r2 ; (; ). set the noncomplementarity components of the residual (the terms arising from the linear equalities in the KKT conditions) to 0. ; Definition at line 280 of file TQpResidual.cxx. ◆ Clear_r3(). void TQpResidual::Clear_r3 ; (; ). set the complementarity component of the residuals to 0. ; Definition at line 267 of file TQpResidual.cxx. ◆ GetDualityGap(). Double_t TQpResidual::GetDualityGap ; (; ). inline . Definition at line 109 of file TQpResidual.h. ◆ GetResidualNorm(). Double_t TQpResidual::GetResidualNorm ; (; ). inline . Definition at line 108 of file TQpResidual.h. ◆ GondzioProjection(). void TQpResidual::GondzioProjection ; (; TVectorD & ; v, . Double_t ; rmin, . Double_t ; rmax . ). staticprotected . Replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i ",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:15536,Modifiability,variab,variables,15536,"mplementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ; Then if the resulting value is less than -rmax, replace it by -rmax. ; Definition at line 357 of file TQpResidual.cxx. ◆ operator=(). TQpResidual & TQpResidual::operator= ; (; const TQpResidual & ; source). Assignment operator. ; Definition at line 378 of file TQpResidual.cxx. ◆ Project_r3(). void TQpResidual::Project_r3 ; (; Double_t ; rmin, . Double_t ; rmax . ). Perform the projection operation required by Gondzio algorithm: replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ; Then if the resulting value is less than -rmax, replace it by -rmax. ; Definition at line 299 of file TQpResidual.cxx. ◆ Set_r3_xz_alpha(). void TQpResidual::Set_r3_xz_alpha ; (; TQpVar * ; vars, . Double_t ; alpha . ). Set the ""complementarity"" component of the residuals to the pairwise products of the complementary variables plus a constant alpha . ; Definition at line 257 of file TQpResidual.cxx. ◆ ValidNonZeroPattern(). Bool_t TQpResidual::ValidNonZeroPattern ; (; ). Check if vector elements as selected through array indices are non-zero. ; Definition at line 323 of file TQpResidual.cxx. Member Data Documentation. ◆ fCloIndex. TVectorD TQpResidual::fCloIndex. protected . Definition at line 83 of file TQpResidual.h. ◆ fCupIndex. TVectorD TQpResidual::fCupIndex. protected . Definition at line 82 of file TQpResidual.h. ◆ fDualityGap. Double_t TQpResidual::fDualityGap. protected . Definition at line 66 of file TQpResidual.h. ◆ fMclo. Double_t TQpResidual::fMclo. protected . Definition at line 77 of file TQpResidual.h. ◆ fMcup. Double_t TQpResidual::fMcup. protected . Definition at line 76 of file TQpResidual.h. ◆ fMy. Int_t TQpResidual::fMy. protected . Definition at line 71 of file TQpResidual.h. ◆ fMz. Int_t TQpResidual::fMz. protected . Definition at line 72 of f",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpResidual.html:5601,Security,hash,hash,5601," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQpResidual.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpResidual.html
https://root.cern/doc/master/classTQpSolverBase.html:4831,Availability,error,error,4831,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:4920,Availability,error,error,4920,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:5075,Availability,error,error,5075,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:5372,Availability,error,error,5372,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:9936,Availability,error,error,9936," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:17815,Availability,robust,robustness,17815,"ect ; Reimplemented from TObject.; Definition at line 164 of file TQpSolverBase.h. ◆ operator=(). TQpSolverBase & TQpSolverBase::operator= ; (; const TQpSolverBase & ; source). Assignment operator. ; Definition at line 330 of file TQpSolverBase.cxx. ◆ SetArTol(). void TQpSolverBase::SetArTol ; (; Double_t ; ar). inline . Definition at line 158 of file TQpSolverBase.h. ◆ SetMuTol(). void TQpSolverBase::SetMuTol ; (; Double_t ; m). inline . Definition at line 155 of file TQpSolverBase.h. ◆ Solve(). virtual Int_t TQpSolverBase::Solve ; (; TQpDataBase * ; prob, . TQpVar * ; iterate, . TQpResidual * ; resids . ). pure virtual . Implemented in TGondzioSolver, and TMehrotraSolver. ◆ Start(). void TQpSolverBase::Start ; (; TQpProbBase * ; formulation, . TQpVar * ; iterate, . TQpDataBase * ; prob, . TQpResidual * ; resid, . TQpVar * ; step . ). virtual . Implements a default starting-point heuristic. ; While interior-point theory places fairly loose restrictions on the choice of starting point, the choice of heuristic can significantly affect the robustness and efficiency of the algorithm. ; Definition at line 118 of file TQpSolverBase.cxx. ◆ SteveStart(). void TQpSolverBase::SteveStart ; (; TQpProbBase * ; formulation, . TQpVar * ; iterate, . TQpDataBase * ; prob, . TQpResidual * ; resid, . TQpVar * ; step . ). virtual . Starting point algorithm according to Stephen Wright. ; Definition at line 154 of file TQpSolverBase.cxx. ◆ Streamer(). void TQpSolverBase::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TQpSolverBase::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 164 of file TQpSolverBase.h. Member Data Documentation. ◆ fArtol. Double_t TQpSolverBase::fArtol. protected . Definition at line 81 of file TQpSolverBase.h. ◆ fDnorm. Double_t TQpSolverBase::fDnorm. protected . Definition at line 78 of file TQpSolverBase.h. ◆ fGamma_a. Double",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:350,Energy Efficiency,monitor,monitoring,350,". ROOT: TQpSolverBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Protected Attributes |; List of all members ; TQpSolverBase Class Referenceabstract. ; The Solver class contains methods for monitoring and checking the convergence status of the algorithm, methods to determine the step length along a given direction, methods to define the starting point, and the solve method that implements the interior-point algorithm. ; Definition at line 72 of file TQpSolverBase.h. Public Member Functions;  TQpSolverBase ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level)=0;  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual ",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:4837,Integrability,message,message,4837,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:5378,Integrability,message,message,5378,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:6580,Integrability,message,message,6580,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:9942,Integrability,message,message,9942," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:10315,Integrability,message,message,10315," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Publi",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:15405,Integrability,rout,routine,15405,"pVar * ; step . ). virtual . Default starting point. ; Definition at line 128 of file TQpSolverBase.cxx. ◆ DefStatus(). Int_t TQpSolverBase::DefStatus ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Int_t ; i, . Double_t ; mu, . Int_t ; level . ). virtual . Default status method. ; Definition at line 278 of file TQpSolverBase.cxx. ◆ DoMonitor(). void TQpSolverBase::DoMonitor ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Double_t ; alpha, . Double_t ; sigma, . Int_t ; i, . Double_t ; mu, . Int_t ; stop_code, . Int_t ; level . ). virtual . Monitor progress / convergence aat each interior-point iteration. ; Definition at line 255 of file TQpSolverBase.cxx. ◆ DoStatus(). Int_t TQpSolverBase::DoStatus ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Int_t ; i, . Double_t ; mu, . Int_t ; level . ). virtual . Tests for termination. ; Unless the user supplies a specific termination routine, this method calls another method defaultStatus, which returns a code indicating the current convergence status. ; Definition at line 268 of file TQpSolverBase.cxx. ◆ DumbStart(). void TQpSolverBase::DumbStart ; (; TQpProbBase * ; formulation, . TQpVar * ; iterate, . TQpDataBase * ; prob, . TQpResidual * ; resid, . TQpVar * ; step . ). virtual . Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ; Definition at line 202 of file TQpSolverBase.cxx. ◆ FinalStepLength(). Double_t TQpSolverBase::FinalStepLength ; (; TQpVar * ; iterate, . TQpVar * ; step . ). virtual . Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ; Definition at line 218 of file TQpSolverBase.cxx. ◆ GetArTol(). Double_t TQpSolverBase::GetArTol ; (; ). inline . Definition at line 159 of file TQpSolverBase.h. ◆ GetLinearSystem(). TQpLinSolverBase *",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:1874,Modifiability,variab,variables,1874,"aNorm ();  ; virtual void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level)=0;  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resids)=0;  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar ",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:1968,Modifiability,variab,variables,1968,"aNorm ();  ; virtual void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level)=0;  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resids)=0;  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar ",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:2177,Modifiability,variab,variables,2177,"ataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resids)=0;  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TO",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:3070,Modifiability,inherit,inherited,3070,"*step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resids)=0;  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:4467,Modifiability,inherit,inheritance,4467,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:6678,Modifiability,inherit,inherits,6678,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:6795,Modifiability,inherit,inherits,6795,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:10816,Modifiability,inherit,inherited,10816,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Int_t fIter;  . Protected Attributes; Double_t fArtol;  ; Double_t fDnorm;  ; Double_t fGamma_a;  ; Double_t fGamma_f;  ; Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:11687,Modifiability,inherit,inherited,11687,"c const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Int_t fIter;  . Protected Attributes; Double_t fArtol;  ; Double_t fDnorm;  ; Double_t fGamma_a;  ; Double_t fGamma_f;  ; Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpSolverBase.h>. Inheritance diagram for TQpSolverBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:12328,Modifiability,inherit,inherited,12328," Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpSolverBase.h>. Inheritance diagram for TQpSolverBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpSolverBase() [1/2]. TQpSolverBase::TQpSolverBase ; (; ). Default constructor. ; Definition at line 62 of file TQpSolverBase.cxx. ◆ TQpSolverBase() [2/2]. TQpSolverBase::TQpSolverBase ; (; const TQpSolverBase & ; another). Copy constructor. ; Definition at line 92 of file TQpSolverBase.cxx. ◆ ~TQpSolverBase(). TQpSolverBase::~TQpSolverBase ; (; ). override . Deconstructor. ; Definition at line 101 of file TQpSolverBase.cxx. Member Function Documentation. ◆ Class(). static TClass * TQpSolverBase::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQpSolverBase::Class_Name ;",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:12427,Modifiability,inherit,inherited,12427," Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpSolverBase.h>. Inheritance diagram for TQpSolverBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpSolverBase() [1/2]. TQpSolverBase::TQpSolverBase ; (; ). Default constructor. ; Definition at line 62 of file TQpSolverBase.cxx. ◆ TQpSolverBase() [2/2]. TQpSolverBase::TQpSolverBase ; (; const TQpSolverBase & ; another). Copy constructor. ; Definition at line 92 of file TQpSolverBase.cxx. ◆ ~TQpSolverBase(). TQpSolverBase::~TQpSolverBase ; (; ). override . Deconstructor. ; Definition at line 101 of file TQpSolverBase.cxx. Member Function Documentation. ◆ Class(). static TClass * TQpSolverBase::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQpSolverBase::Class_Name ;",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:15824,Modifiability,variab,variables,15824,"TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Double_t ; alpha, . Double_t ; sigma, . Int_t ; i, . Double_t ; mu, . Int_t ; stop_code, . Int_t ; level . ). virtual . Monitor progress / convergence aat each interior-point iteration. ; Definition at line 255 of file TQpSolverBase.cxx. ◆ DoStatus(). Int_t TQpSolverBase::DoStatus ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Int_t ; i, . Double_t ; mu, . Int_t ; level . ). virtual . Tests for termination. ; Unless the user supplies a specific termination routine, this method calls another method defaultStatus, which returns a code indicating the current convergence status. ; Definition at line 268 of file TQpSolverBase.cxx. ◆ DumbStart(). void TQpSolverBase::DumbStart ; (; TQpProbBase * ; formulation, . TQpVar * ; iterate, . TQpDataBase * ; prob, . TQpResidual * ; resid, . TQpVar * ; step . ). virtual . Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ; Definition at line 202 of file TQpSolverBase.cxx. ◆ FinalStepLength(). Double_t TQpSolverBase::FinalStepLength ; (; TQpVar * ; iterate, . TQpVar * ; step . ). virtual . Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ; Definition at line 218 of file TQpSolverBase.cxx. ◆ GetArTol(). Double_t TQpSolverBase::GetArTol ; (; ). inline . Definition at line 159 of file TQpSolverBase.h. ◆ GetLinearSystem(). TQpLinSolverBase * TQpSolverBase::GetLinearSystem ; (; ). inline . Definition at line 154 of file TQpSolverBase.h. ◆ GetMuTol(). Double_t TQpSolverBase::GetMuTol ; (; ). inline . Definition at line 156 of file TQpSolverBase.h. ◆ IsA(). TClass * TQpSolverBase::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 164 of file TQpSolverBase.h. ◆ ope",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:15918,Modifiability,variab,variables,15918,"TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Double_t ; alpha, . Double_t ; sigma, . Int_t ; i, . Double_t ; mu, . Int_t ; stop_code, . Int_t ; level . ). virtual . Monitor progress / convergence aat each interior-point iteration. ; Definition at line 255 of file TQpSolverBase.cxx. ◆ DoStatus(). Int_t TQpSolverBase::DoStatus ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Int_t ; i, . Double_t ; mu, . Int_t ; level . ). virtual . Tests for termination. ; Unless the user supplies a specific termination routine, this method calls another method defaultStatus, which returns a code indicating the current convergence status. ; Definition at line 268 of file TQpSolverBase.cxx. ◆ DumbStart(). void TQpSolverBase::DumbStart ; (; TQpProbBase * ; formulation, . TQpVar * ; iterate, . TQpDataBase * ; prob, . TQpResidual * ; resid, . TQpVar * ; step . ). virtual . Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ; Definition at line 202 of file TQpSolverBase.cxx. ◆ FinalStepLength(). Double_t TQpSolverBase::FinalStepLength ; (; TQpVar * ; iterate, . TQpVar * ; step . ). virtual . Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ; Definition at line 218 of file TQpSolverBase.cxx. ◆ GetArTol(). Double_t TQpSolverBase::GetArTol ; (; ). inline . Definition at line 159 of file TQpSolverBase.h. ◆ GetLinearSystem(). TQpLinSolverBase * TQpSolverBase::GetLinearSystem ; (; ). inline . Definition at line 154 of file TQpSolverBase.h. ◆ GetMuTol(). Double_t TQpSolverBase::GetMuTol ; (; ). inline . Definition at line 156 of file TQpSolverBase.h. ◆ IsA(). TClass * TQpSolverBase::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 164 of file TQpSolverBase.h. ◆ ope",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:16226,Modifiability,variab,variables,16226,"_t TQpSolverBase::DoStatus ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Int_t ; i, . Double_t ; mu, . Int_t ; level . ). virtual . Tests for termination. ; Unless the user supplies a specific termination routine, this method calls another method defaultStatus, which returns a code indicating the current convergence status. ; Definition at line 268 of file TQpSolverBase.cxx. ◆ DumbStart(). void TQpSolverBase::DumbStart ; (; TQpProbBase * ; formulation, . TQpVar * ; iterate, . TQpDataBase * ; prob, . TQpResidual * ; resid, . TQpVar * ; step . ). virtual . Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ; Definition at line 202 of file TQpSolverBase.cxx. ◆ FinalStepLength(). Double_t TQpSolverBase::FinalStepLength ; (; TQpVar * ; iterate, . TQpVar * ; step . ). virtual . Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ; Definition at line 218 of file TQpSolverBase.cxx. ◆ GetArTol(). Double_t TQpSolverBase::GetArTol ; (; ). inline . Definition at line 159 of file TQpSolverBase.h. ◆ GetLinearSystem(). TQpLinSolverBase * TQpSolverBase::GetLinearSystem ; (; ). inline . Definition at line 154 of file TQpSolverBase.h. ◆ GetMuTol(). Double_t TQpSolverBase::GetMuTol ; (; ). inline . Definition at line 156 of file TQpSolverBase.h. ◆ IsA(). TClass * TQpSolverBase::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 164 of file TQpSolverBase.h. ◆ operator=(). TQpSolverBase & TQpSolverBase::operator= ; (; const TQpSolverBase & ; source). Assignment operator. ; Definition at line 330 of file TQpSolverBase.cxx. ◆ SetArTol(). void TQpSolverBase::SetArTol ; (; Double_t ; ar). inline . Definition at line 158 of file TQpSolverBase.h. ◆ SetMuTol(). void TQpSolverBase::SetMuT",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpSolverBase.html:6309,Security,hash,hash,6309," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTQpSolverBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html
https://root.cern/doc/master/classTQpVar.html:5698,Availability,error,error,5698,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:5787,Availability,error,error,5787,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:5942,Availability,error,error,5942,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:6239,Availability,error,error,6239,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:10792,Availability,error,error,10792,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fGamma;  ; TVectorD fLambda;  ; Int_t fNComplementaryVariables;  ; TVectorD fPhi;  ; TVectorD fPi;  ; TVectorD fS;  ; TVectorD fT;  ; TVectorD fU;  ; TVectorD fV;  ; TVectorD fW;  ; TVectorD fX;  ; TVectorD fY;  ; TVectorD fZ;  . Static Protected Member Functions; static Double_t FindBlocking (TVectorD &w,",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:5704,Integrability,message,message,5704,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:6245,Integrability,message,message,6245,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:7447,Integrability,message,message,7447,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:10798,Integrability,message,message,10798,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fGamma;  ; TVectorD fLambda;  ; Int_t fNComplementaryVariables;  ; TVectorD fPhi;  ; TVectorD fPi;  ; TVectorD fS;  ; TVectorD fT;  ; TVectorD fU;  ; TVectorD fV;  ; TVectorD fW;  ; TVectorD fX;  ; TVectorD fY;  ; TVectorD fZ;  . Static Protected Member Functions; static Double_t FindBlocking (TVectorD &w,",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:11171,Integrability,message,message,11171,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fGamma;  ; TVectorD fLambda;  ; Int_t fNComplementaryVariables;  ; TVectorD fPhi;  ; TVectorD fPi;  ; TVectorD fS;  ; TVectorD fT;  ; TVectorD fU;  ; TVectorD fV;  ; TVectorD fW;  ; TVectorD fX;  ; TVectorD fY;  ; TVectorD fZ;  . Static Protected Member Functions; static Double_t FindBlocking (TVectorD &w, TVectorD &wstep, TVectorD &u, TVectorD &ustep, Double_t maxStep, Double_t &w_elt, Double_t &wstep_elt, Double_t &u_elt, Double_t &ustep_elt, int &first_or_second);  See other FindBlocking function. ;  ; static Double_t FindBlockingSub (Int_t n, Double_t *w, Int_t incw, Double_t *wstep, Int_t incwstep, Double_t *u, Int_t incu, Double_t *ustep, Int_t incustep, Double_t maxS",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:330,Modifiability,variab,variables,330,". ROOT: TQpVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TQpVar Class Reference. ; Class containing the variables for the general QP formulation. ; In terms of in our abstract problem formulation, these variables are the vectors x, y, z and s. ; Definition at line 59 of file TQpVar.h. Public Types; enum  EVarBlock { ;   kno_block; , kt_block; , klambda_block; , ku_block; , ;   kpi_block; , kv_block; , kgamma_block; , kw_block; , ;   kphi_block. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TQpVar ();  Default constructor. ;  ;  TQpVar (const TQpVar &another);  Copy constructor. ;  ;  TQpVar (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  TQpVar (TVectorD &x_in, TVectorD &s_in, TVectorD &y_in, TVectorD &z_in, TVectorD &v_in, TVectorD &gamma_in, TVectorD &w_in, TVectorD &phi_in, TVectorD &t_in, TVectorD &lambda_in, TVectorD &u_in, TVectorD &pi_in, TVectorD &ixlow_in, TVectorD &ixupp_in, TVectorD &iclow_in, TVectorD &icupp_in);  Constructor. ;  ;  ~TQpVar () override;  ; virtual Double_t FindBlocking (TQpVar *step, Double_t &primalValue, Double_t &primalStep, Double",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:429,Modifiability,variab,variables,429,". ROOT: TQpVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TQpVar Class Reference. ; Class containing the variables for the general QP formulation. ; In terms of in our abstract problem formulation, these variables are the vectors x, y, z and s. ; Definition at line 59 of file TQpVar.h. Public Types; enum  EVarBlock { ;   kno_block; , kt_block; , klambda_block; , ku_block; , ;   kpi_block; , kv_block; , kgamma_block; , kw_block; , ;   kphi_block. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TQpVar ();  Default constructor. ;  ;  TQpVar (const TQpVar &another);  Copy constructor. ;  ;  TQpVar (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  TQpVar (TVectorD &x_in, TVectorD &s_in, TVectorD &y_in, TVectorD &z_in, TVectorD &v_in, TVectorD &gamma_in, TVectorD &w_in, TVectorD &phi_in, TVectorD &t_in, TVectorD &lambda_in, TVectorD &u_in, TVectorD &pi_in, TVectorD &ixlow_in, TVectorD &ixupp_in, TVectorD &iclow_in, TVectorD &icupp_in);  Constructor. ;  ;  ~TQpVar () override;  ; virtual Double_t FindBlocking (TQpVar *step, Double_t &primalValue, Double_t &primalStep, Double",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:695,Modifiability,inherit,inherited,695,". ROOT: TQpVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TQpVar Class Reference. ; Class containing the variables for the general QP formulation. ; In terms of in our abstract problem formulation, these variables are the vectors x, y, z and s. ; Definition at line 59 of file TQpVar.h. Public Types; enum  EVarBlock { ;   kno_block; , kt_block; , klambda_block; , ku_block; , ;   kpi_block; , kv_block; , kgamma_block; , kw_block; , ;   kphi_block. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TQpVar ();  Default constructor. ;  ;  TQpVar (const TQpVar &another);  Copy constructor. ;  ;  TQpVar (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  TQpVar (TVectorD &x_in, TVectorD &s_in, TVectorD &y_in, TVectorD &z_in, TVectorD &v_in, TVectorD &gamma_in, TVectorD &w_in, TVectorD &phi_in, TVectorD &t_in, TVectorD &lambda_in, TVectorD &u_in, TVectorD &pi_in, TVectorD &ixlow_in, TVectorD &ixupp_in, TVectorD &iclow_in, TVectorD &icupp_in);  Constructor. ;  ;  ~TQpVar () override;  ; virtual Double_t FindBlocking (TQpVar *step, Double_t &primalValue, Double_t &primalStep, Double",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:2178,Modifiability,variab,variables,2178," enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TQpVar ();  Default constructor. ;  ;  TQpVar (const TQpVar &another);  Copy constructor. ;  ;  TQpVar (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  TQpVar (TVectorD &x_in, TVectorD &s_in, TVectorD &y_in, TVectorD &z_in, TVectorD &v_in, TVectorD &gamma_in, TVectorD &w_in, TVectorD &phi_in, TVectorD &t_in, TVectorD &lambda_in, TVectorD &u_in, TVectorD &pi_in, TVectorD &ixlow_in, TVectorD &ixupp_in, TVectorD &iclow_in, TVectorD &icupp_in);  Constructor. ;  ;  ~TQpVar () override;  ; virtual Double_t FindBlocking (TQpVar *step, Double_t &primalValue, Double_t &primalStep, Double_t &dualValue, Double_t &dualStep, Int_t &firstOrSecond);  Performs the same function as StepBound, and supplies additional information about which component of the nonnegative variables is responsible for restricting alpha. ;  ; virtual Double_t GetMu ();  compute complementarity gap, obtained by taking the inner product of the complementary vectors and dividing by the total number of components computes mu = (t'lambda +u'pi + v'gamma + w'phi)/(mclow+mcupp+nxlow+nxupp) ;  ; virtual void InteriorPoint (Double_t alpha, Double_t beta);  Sets components of (u,t,v,w) to alpha and of (lambda,pi,phi,gamma) to beta. ;  ; virtual Bool_t IsInteriorPoint ();  Is the current position an interior point ? ;  ; virtual Double_t MuStep (TQpVar *step, Double_t alpha);  Compute the complementarity gap resulting from a step of length ""alpha"" along direction ""step"". ;  ; virtual void Negate ();  Perform a ""negate"" operation on all data vectors : x = -x. ;  ; virtual Double_t Norm1 ();  Return the sum of the vector-norm1's. ;  ; virtual Double_t NormInf",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:3627,Modifiability,variab,variables,3627,"ha, Double_t beta);  Sets components of (u,t,v,w) to alpha and of (lambda,pi,phi,gamma) to beta. ;  ; virtual Bool_t IsInteriorPoint ();  Is the current position an interior point ? ;  ; virtual Double_t MuStep (TQpVar *step, Double_t alpha);  Compute the complementarity gap resulting from a step of length ""alpha"" along direction ""step"". ;  ; virtual void Negate ();  Perform a ""negate"" operation on all data vectors : x = -x. ;  ; virtual Double_t Norm1 ();  Return the sum of the vector-norm1's. ;  ; virtual Double_t NormInf ();  Return the sum of the vector-normInf's. ;  ; TQpVar & operator= (const TQpVar &source);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print class members. ;  ; virtual void Saxpy (TQpVar *b, Double_t alpha);  Perform a ""saxpy"" operation on all data vectors : x += alpha*y. ;  ; virtual void ShiftBoundVariables (Double_t alpha, Double_t beta);  Add alpha to components of (u,t,v,w) and beta to components of (lambda,pi,phi,gamma) ;  ; virtual Double_t StepBound (TQpVar *b);  calculate the largest alpha in (0,1] such that the/ nonnegative variables stay nonnegative in the given search direction. ;  ; virtual Bool_t ValidNonZeroPattern ();  Check that the variables conform to the non-zero indices. ;  ; virtual Double_t Violation ();  The amount by which the current variables violate the non-negativity constraints. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:3745,Modifiability,variab,variables,3745,"pVar *step, Double_t alpha);  Compute the complementarity gap resulting from a step of length ""alpha"" along direction ""step"". ;  ; virtual void Negate ();  Perform a ""negate"" operation on all data vectors : x = -x. ;  ; virtual Double_t Norm1 ();  Return the sum of the vector-norm1's. ;  ; virtual Double_t NormInf ();  Return the sum of the vector-normInf's. ;  ; TQpVar & operator= (const TQpVar &source);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print class members. ;  ; virtual void Saxpy (TQpVar *b, Double_t alpha);  Perform a ""saxpy"" operation on all data vectors : x += alpha*y. ;  ; virtual void ShiftBoundVariables (Double_t alpha, Double_t beta);  Add alpha to components of (u,t,v,w) and beta to components of (lambda,pi,phi,gamma) ;  ; virtual Double_t StepBound (TQpVar *b);  calculate the largest alpha in (0,1] such that the/ nonnegative variables stay nonnegative in the given search direction. ;  ; virtual Bool_t ValidNonZeroPattern ();  Check that the variables conform to the non-zero indices. ;  ; virtual Double_t Violation ();  The amount by which the current variables violate the non-negativity constraints. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:3857,Modifiability,variab,variables,3857,"ection ""step"". ;  ; virtual void Negate ();  Perform a ""negate"" operation on all data vectors : x = -x. ;  ; virtual Double_t Norm1 ();  Return the sum of the vector-norm1's. ;  ; virtual Double_t NormInf ();  Return the sum of the vector-normInf's. ;  ; TQpVar & operator= (const TQpVar &source);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print class members. ;  ; virtual void Saxpy (TQpVar *b, Double_t alpha);  Perform a ""saxpy"" operation on all data vectors : x += alpha*y. ;  ; virtual void ShiftBoundVariables (Double_t alpha, Double_t beta);  Add alpha to components of (u,t,v,w) and beta to components of (lambda,pi,phi,gamma) ;  ; virtual Double_t StepBound (TQpVar *b);  calculate the largest alpha in (0,1] such that the/ nonnegative variables stay nonnegative in the given search direction. ;  ; virtual Bool_t ValidNonZeroPattern ();  Check that the variables conform to the non-zero indices. ;  ; virtual Double_t Violation ();  The amount by which the current variables violate the non-negativity constraints. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using t",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:3937,Modifiability,inherit,inherited,3937,";  ; virtual Double_t Norm1 ();  Return the sum of the vector-norm1's. ;  ; virtual Double_t NormInf ();  Return the sum of the vector-normInf's. ;  ; TQpVar & operator= (const TQpVar &source);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print class members. ;  ; virtual void Saxpy (TQpVar *b, Double_t alpha);  Perform a ""saxpy"" operation on all data vectors : x += alpha*y. ;  ; virtual void ShiftBoundVariables (Double_t alpha, Double_t beta);  Add alpha to components of (u,t,v,w) and beta to components of (lambda,pi,phi,gamma) ;  ; virtual Double_t StepBound (TQpVar *b);  calculate the largest alpha in (0,1] such that the/ nonnegative variables stay nonnegative in the given search direction. ;  ; virtual Bool_t ValidNonZeroPattern ();  Check that the variables conform to the non-zero indices. ;  ; virtual Double_t Violation ();  The amount by which the current variables violate the non-negativity constraints. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:5334,Modifiability,inherit,inheritance,5334,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:7545,Modifiability,inherit,inherits,7545,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:7662,Modifiability,inherit,inherits,7662,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:12760,Modifiability,inherit,inherited,12760,"tep, Double_t &w_elt, Double_t &wstep_elt, Double_t &u_elt, Double_t &ustep_elt, int &first_or_second);  See other FindBlocking function. ;  ; static Double_t FindBlockingSub (Int_t n, Double_t *w, Int_t incw, Double_t *wstep, Int_t incwstep, Double_t *u, Int_t incu, Double_t *ustep, Int_t incustep, Double_t maxStep, Double_t &w_elt, Double_t &wstep_elt, Double_t &u_elt, Double_t &ustep_elt, Int_t &first_or_second);  See FindBlocking function. ;  ; static Double_t StepBound (TVectorD &v, TVectorD &dir, Double_t maxStep);  Find the maximum stepsize of v in direction dir before violating the nonnegativity constraints. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpVar.h>. Inheritance diagram for TQpVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EVarBlock. enum TQpVar::EVarBlock. Enumeratorkno_block ; kt_block ; klambda_block ; ku_block ; kpi_block ; kv_block ; ",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:13263,Modifiability,inherit,inherited,13263,"ind the maximum stepsize of v in direction dir before violating the nonnegativity constraints. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpVar.h>. Inheritance diagram for TQpVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EVarBlock. enum TQpVar::EVarBlock. Enumeratorkno_block ; kt_block ; klambda_block ; ku_block ; kpi_block ; kv_block ; kgamma_block ; kw_block ; kphi_block . Definition at line 127 of file TQpVar.h. Constructor & Destructor Documentation. ◆ TQpVar() [1/4]. TQpVar::TQpVar ; (; ). Default constructor. ; Definition at line 59 of file TQpVar.cxx. ◆ TQpVar() [2/4]. TQpVar::TQpVar ; (; TVectorD & ; x_in, . TVectorD & ; s_in, . TVectorD & ; y_in, . TVectorD & ; z_in, . TVectorD & ; v_in, . TVectorD & ; gamma_in, . TVectorD & ; w_in, . TVectorD & ; phi_in, . TVectorD & ; t_in, . TVectorD & ; lambda_in, . TVectorD & ; u_in, . TVectorD & ; pi_in, . T",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:13362,Modifiability,inherit,inherited,13362,"ind the maximum stepsize of v in direction dir before violating the nonnegativity constraints. ;  . Protected Attributes; TVectorD fCloIndex;  ; TVectorD fCupIndex;  ; Int_t fMclo;  ; Int_t fMcup;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; Int_t fNxlo;  ; Int_t fNxup;  ; TVectorD fXloIndex;  ; TVectorD fXupIndex;  . Additional Inherited Members;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQpVar.h>. Inheritance diagram for TQpVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EVarBlock. enum TQpVar::EVarBlock. Enumeratorkno_block ; kt_block ; klambda_block ; ku_block ; kpi_block ; kv_block ; kgamma_block ; kw_block ; kphi_block . Definition at line 127 of file TQpVar.h. Constructor & Destructor Documentation. ◆ TQpVar() [1/4]. TQpVar::TQpVar ; (; ). Default constructor. ; Definition at line 59 of file TQpVar.cxx. ◆ TQpVar() [2/4]. TQpVar::TQpVar ; (; TVectorD & ; x_in, . TVectorD & ; s_in, . TVectorD & ; y_in, . TVectorD & ; z_in, . TVectorD & ; v_in, . TVectorD & ; gamma_in, . TVectorD & ; w_in, . TVectorD & ; phi_in, . TVectorD & ; t_in, . TVectorD & ; lambda_in, . TVectorD & ; u_in, . TVectorD & ; pi_in, . T",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:15359,Modifiability,variab,variables,15359,"mbda_in, . TVectorD & ; u_in, . TVectorD & ; pi_in, . TVectorD & ; ixlow_in, . TVectorD & ; ixupp_in, . TVectorD & ; iclow_in, . TVectorD & ; icupp_in . ). Constructor. ; Definition at line 75 of file TQpVar.cxx. ◆ TQpVar() [3/4]. TQpVar::TQpVar ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz, . TVectorD & ; ixlow, . TVectorD & ; ixupp, . TVectorD & ; iclow, . TVectorD & ; icupp . ). Constructor. ; Definition at line 130 of file TQpVar.cxx. ◆ TQpVar() [4/4]. TQpVar::TQpVar ; (; const TQpVar & ; another). Copy constructor. ; Definition at line 181 of file TQpVar.cxx. ◆ ~TQpVar(). TQpVar::~TQpVar ; (; ). inlineoverride . Definition at line 120 of file TQpVar.h. Member Function Documentation. ◆ FindBlocking() [1/2]. Double_t TQpVar::FindBlocking ; (; TQpVar * ; step, . Double_t & ; primalValue, . Double_t & ; primalStep, . Double_t & ; dualValue, . Double_t & ; dualStep, . Int_t & ; fIrstOrSecond . ). virtual . Performs the same function as StepBound, and supplies additional information about which component of the nonnegative variables is responsible for restricting alpha. ; In terms of the abstract formulation, the components have the following meanings :; primalValue : the value of the blocking component of the primal variables (u,t,v,w). primalStep : the corresponding value of the blocking component of the primal step variables (b->u,b->t,b->v,b->w) dualValue : the value of the blocking component of the dual variables/ (lambda,pi,phi,gamma). dualStep : the corresponding value of the blocking component of the dual step variables (b->lambda,b->pi,b->phi,b->gamma) firstOrSecond : 1 if the primal step is blocking, 2 if the dual step is block, 0 if no step is blocking. ; Definition at line 414 of file TQpVar.cxx. ◆ FindBlocking() [2/2]. Double_t TQpVar::FindBlocking ; (; TVectorD & ; w, . TVectorD & ; wstep, . TVectorD & ; u, . TVectorD & ; ustep, . Double_t ; maxStep, . Double_t & ; w_elt, . Double_t & ; wstep_elt, . Double_t & ; u_elt, . Double_t & ; ustep_elt, . int & ; ",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:15557,Modifiability,variab,variables,15557," ; Definition at line 75 of file TQpVar.cxx. ◆ TQpVar() [3/4]. TQpVar::TQpVar ; (; Int_t ; nx, . Int_t ; my, . Int_t ; mz, . TVectorD & ; ixlow, . TVectorD & ; ixupp, . TVectorD & ; iclow, . TVectorD & ; icupp . ). Constructor. ; Definition at line 130 of file TQpVar.cxx. ◆ TQpVar() [4/4]. TQpVar::TQpVar ; (; const TQpVar & ; another). Copy constructor. ; Definition at line 181 of file TQpVar.cxx. ◆ ~TQpVar(). TQpVar::~TQpVar ; (; ). inlineoverride . Definition at line 120 of file TQpVar.h. Member Function Documentation. ◆ FindBlocking() [1/2]. Double_t TQpVar::FindBlocking ; (; TQpVar * ; step, . Double_t & ; primalValue, . Double_t & ; primalStep, . Double_t & ; dualValue, . Double_t & ; dualStep, . Int_t & ; fIrstOrSecond . ). virtual . Performs the same function as StepBound, and supplies additional information about which component of the nonnegative variables is responsible for restricting alpha. ; In terms of the abstract formulation, the components have the following meanings :; primalValue : the value of the blocking component of the primal variables (u,t,v,w). primalStep : the corresponding value of the blocking component of the primal step variables (b->u,b->t,b->v,b->w) dualValue : the value of the blocking component of the dual variables/ (lambda,pi,phi,gamma). dualStep : the corresponding value of the blocking component of the dual step variables (b->lambda,b->pi,b->phi,b->gamma) firstOrSecond : 1 if the primal step is blocking, 2 if the dual step is block, 0 if no step is blocking. ; Definition at line 414 of file TQpVar.cxx. ◆ FindBlocking() [2/2]. Double_t TQpVar::FindBlocking ; (; TVectorD & ; w, . TVectorD & ; wstep, . TVectorD & ; u, . TVectorD & ; ustep, . Double_t ; maxStep, . Double_t & ; w_elt, . Double_t & ; wstep_elt, . Double_t & ; u_elt, . Double_t & ; ustep_elt, . int & ; first_or_second . ). staticprotected . See other FindBlocking function. ; Definition at line 446 of file TQpVar.cxx. ◆ FindBlockingSub(). Double_t TQpVar::FindBlockingSu",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:15660,Modifiability,variab,variables,15660," TVectorD & ; icupp . ). Constructor. ; Definition at line 130 of file TQpVar.cxx. ◆ TQpVar() [4/4]. TQpVar::TQpVar ; (; const TQpVar & ; another). Copy constructor. ; Definition at line 181 of file TQpVar.cxx. ◆ ~TQpVar(). TQpVar::~TQpVar ; (; ). inlineoverride . Definition at line 120 of file TQpVar.h. Member Function Documentation. ◆ FindBlocking() [1/2]. Double_t TQpVar::FindBlocking ; (; TQpVar * ; step, . Double_t & ; primalValue, . Double_t & ; primalStep, . Double_t & ; dualValue, . Double_t & ; dualStep, . Int_t & ; fIrstOrSecond . ). virtual . Performs the same function as StepBound, and supplies additional information about which component of the nonnegative variables is responsible for restricting alpha. ; In terms of the abstract formulation, the components have the following meanings :; primalValue : the value of the blocking component of the primal variables (u,t,v,w). primalStep : the corresponding value of the blocking component of the primal step variables (b->u,b->t,b->v,b->w) dualValue : the value of the blocking component of the dual variables/ (lambda,pi,phi,gamma). dualStep : the corresponding value of the blocking component of the dual step variables (b->lambda,b->pi,b->phi,b->gamma) firstOrSecond : 1 if the primal step is blocking, 2 if the dual step is block, 0 if no step is blocking. ; Definition at line 414 of file TQpVar.cxx. ◆ FindBlocking() [2/2]. Double_t TQpVar::FindBlocking ; (; TVectorD & ; w, . TVectorD & ; wstep, . TVectorD & ; u, . TVectorD & ; ustep, . Double_t ; maxStep, . Double_t & ; w_elt, . Double_t & ; wstep_elt, . Double_t & ; u_elt, . Double_t & ; ustep_elt, . int & ; first_or_second . ). staticprotected . See other FindBlocking function. ; Definition at line 446 of file TQpVar.cxx. ◆ FindBlockingSub(). Double_t TQpVar::FindBlockingSub ; (; Int_t ; n, . Double_t * ; w, . Int_t ; incw, . Double_t * ; wstep, . Int_t ; incwstep, . Double_t * ; u, . Int_t ; incu, . Double_t * ; ustep, . Int_t ; incustep, . Double_t ; maxSte",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:15752,Modifiability,variab,variables,15752," TVectorD & ; icupp . ). Constructor. ; Definition at line 130 of file TQpVar.cxx. ◆ TQpVar() [4/4]. TQpVar::TQpVar ; (; const TQpVar & ; another). Copy constructor. ; Definition at line 181 of file TQpVar.cxx. ◆ ~TQpVar(). TQpVar::~TQpVar ; (; ). inlineoverride . Definition at line 120 of file TQpVar.h. Member Function Documentation. ◆ FindBlocking() [1/2]. Double_t TQpVar::FindBlocking ; (; TQpVar * ; step, . Double_t & ; primalValue, . Double_t & ; primalStep, . Double_t & ; dualValue, . Double_t & ; dualStep, . Int_t & ; fIrstOrSecond . ). virtual . Performs the same function as StepBound, and supplies additional information about which component of the nonnegative variables is responsible for restricting alpha. ; In terms of the abstract formulation, the components have the following meanings :; primalValue : the value of the blocking component of the primal variables (u,t,v,w). primalStep : the corresponding value of the blocking component of the primal step variables (b->u,b->t,b->v,b->w) dualValue : the value of the blocking component of the dual variables/ (lambda,pi,phi,gamma). dualStep : the corresponding value of the blocking component of the dual step variables (b->lambda,b->pi,b->phi,b->gamma) firstOrSecond : 1 if the primal step is blocking, 2 if the dual step is block, 0 if no step is blocking. ; Definition at line 414 of file TQpVar.cxx. ◆ FindBlocking() [2/2]. Double_t TQpVar::FindBlocking ; (; TVectorD & ; w, . TVectorD & ; wstep, . TVectorD & ; u, . TVectorD & ; ustep, . Double_t ; maxStep, . Double_t & ; w_elt, . Double_t & ; wstep_elt, . Double_t & ; u_elt, . Double_t & ; ustep_elt, . int & ; first_or_second . ). staticprotected . See other FindBlocking function. ; Definition at line 446 of file TQpVar.cxx. ◆ FindBlockingSub(). Double_t TQpVar::FindBlockingSub ; (; Int_t ; n, . Double_t * ; w, . Int_t ; incw, . Double_t * ; wstep, . Int_t ; incwstep, . Double_t * ; u, . Int_t ; incu, . Double_t * ; ustep, . Int_t ; incustep, . Double_t ; maxSte",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:15864,Modifiability,variab,variables,15864,"Var(). TQpVar::~TQpVar ; (; ). inlineoverride . Definition at line 120 of file TQpVar.h. Member Function Documentation. ◆ FindBlocking() [1/2]. Double_t TQpVar::FindBlocking ; (; TQpVar * ; step, . Double_t & ; primalValue, . Double_t & ; primalStep, . Double_t & ; dualValue, . Double_t & ; dualStep, . Int_t & ; fIrstOrSecond . ). virtual . Performs the same function as StepBound, and supplies additional information about which component of the nonnegative variables is responsible for restricting alpha. ; In terms of the abstract formulation, the components have the following meanings :; primalValue : the value of the blocking component of the primal variables (u,t,v,w). primalStep : the corresponding value of the blocking component of the primal step variables (b->u,b->t,b->v,b->w) dualValue : the value of the blocking component of the dual variables/ (lambda,pi,phi,gamma). dualStep : the corresponding value of the blocking component of the dual step variables (b->lambda,b->pi,b->phi,b->gamma) firstOrSecond : 1 if the primal step is blocking, 2 if the dual step is block, 0 if no step is blocking. ; Definition at line 414 of file TQpVar.cxx. ◆ FindBlocking() [2/2]. Double_t TQpVar::FindBlocking ; (; TVectorD & ; w, . TVectorD & ; wstep, . TVectorD & ; u, . TVectorD & ; ustep, . Double_t ; maxStep, . Double_t & ; w_elt, . Double_t & ; wstep_elt, . Double_t & ; u_elt, . Double_t & ; ustep_elt, . int & ; first_or_second . ). staticprotected . See other FindBlocking function. ; Definition at line 446 of file TQpVar.cxx. ◆ FindBlockingSub(). Double_t TQpVar::FindBlockingSub ; (; Int_t ; n, . Double_t * ; w, . Int_t ; incw, . Double_t * ; wstep, . Int_t ; incwstep, . Double_t * ; u, . Int_t ; incu, . Double_t * ; ustep, . Int_t ; incustep, . Double_t ; maxStep, . Double_t & ; w_elt, . Double_t & ; wstep_elt, . Double_t & ; u_elt, . Double_t & ; ustep_elt, . Int_t & ; first_or_second . ). staticprotected . See FindBlocking function. ; Definition at line 465 of file TQpVar.c",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:19161,Modifiability,variab,variables,19161,"f ; (; ). virtual . Return the sum of the vector-normInf's. ; Definition at line 700 of file TQpVar.cxx. ◆ operator=(). TQpVar & TQpVar::operator= ; (; const TQpVar & ; source). Assignment operator. ; Definition at line 772 of file TQpVar.cxx. ◆ Print(). void TQpVar::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print class members. ; Reimplemented from TObject.; Definition at line 639 of file TQpVar.cxx. ◆ Saxpy(). void TQpVar::Saxpy ; (; TQpVar * ; b, . Double_t ; alpha . ). virtual . Perform a ""saxpy"" operation on all data vectors : x += alpha*y. ; Definition at line 232 of file TQpVar.cxx. ◆ ShiftBoundVariables(). void TQpVar::ShiftBoundVariables ; (; Double_t ; alpha, . Double_t ; beta . ). virtual . Add alpha to components of (u,t,v,w) and beta to components of (lambda,pi,phi,gamma) ; Definition at line 615 of file TQpVar.cxx. ◆ StepBound() [1/2]. Double_t TQpVar::StepBound ; (; TQpVar * ; b). virtual . calculate the largest alpha in (0,1] such that the/ nonnegative variables stay nonnegative in the given search direction. ; In the general QP problem formulation this is the largest value of alpha such that (t,u,v,w,lambda,pi,phi,gamma) + alpha * (b->t,b->u,b->v,b->w,b->lambda,b->pi, b->phi,b->gamma) >= 0. ; Definition at line 304 of file TQpVar.cxx. ◆ StepBound() [2/2]. Double_t TQpVar::StepBound ; (; TVectorD & ; v, . TVectorD & ; dir, . Double_t ; maxStep . ). staticprotected . Find the maximum stepsize of v in direction dir before violating the nonnegativity constraints. ; Definition at line 348 of file TQpVar.cxx. ◆ ValidNonZeroPattern(). Bool_t TQpVar::ValidNonZeroPattern ; (; ). virtual . Check that the variables conform to the non-zero indices. ; Definition at line 740 of file TQpVar.cxx. ◆ Violation(). Double_t TQpVar::Violation ; (; ). virtual . The amount by which the current variables violate the non-negativity constraints. ; Definition at line 574 of file TQpVar.cxx. Member Data Documentation. ◆ fCloIndex. TVectorD TQpVar::fCloInde",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:19817,Modifiability,variab,variables,19817,"es ; (; Double_t ; alpha, . Double_t ; beta . ). virtual . Add alpha to components of (u,t,v,w) and beta to components of (lambda,pi,phi,gamma) ; Definition at line 615 of file TQpVar.cxx. ◆ StepBound() [1/2]. Double_t TQpVar::StepBound ; (; TQpVar * ; b). virtual . calculate the largest alpha in (0,1] such that the/ nonnegative variables stay nonnegative in the given search direction. ; In the general QP problem formulation this is the largest value of alpha such that (t,u,v,w,lambda,pi,phi,gamma) + alpha * (b->t,b->u,b->v,b->w,b->lambda,b->pi, b->phi,b->gamma) >= 0. ; Definition at line 304 of file TQpVar.cxx. ◆ StepBound() [2/2]. Double_t TQpVar::StepBound ; (; TVectorD & ; v, . TVectorD & ; dir, . Double_t ; maxStep . ). staticprotected . Find the maximum stepsize of v in direction dir before violating the nonnegativity constraints. ; Definition at line 348 of file TQpVar.cxx. ◆ ValidNonZeroPattern(). Bool_t TQpVar::ValidNonZeroPattern ; (; ). virtual . Check that the variables conform to the non-zero indices. ; Definition at line 740 of file TQpVar.cxx. ◆ Violation(). Double_t TQpVar::Violation ; (; ). virtual . The amount by which the current variables violate the non-negativity constraints. ; Definition at line 574 of file TQpVar.cxx. Member Data Documentation. ◆ fCloIndex. TVectorD TQpVar::fCloIndex. protected . Definition at line 75 of file TQpVar.h. ◆ fCupIndex. TVectorD TQpVar::fCupIndex. protected . Definition at line 74 of file TQpVar.h. ◆ fGamma. TVectorD TQpVar::fGamma. Definition at line 100 of file TQpVar.h. ◆ fLambda. TVectorD TQpVar::fLambda. Definition at line 103 of file TQpVar.h. ◆ fMclo. Int_t TQpVar::fMclo. protected . Definition at line 69 of file TQpVar.h. ◆ fMcup. Int_t TQpVar::fMcup. protected . Definition at line 68 of file TQpVar.h. ◆ fMy. Int_t TQpVar::fMy. protected . Definition at line 64 of file TQpVar.h. ◆ fMz. Int_t TQpVar::fMz. protected . Definition at line 65 of file TQpVar.h. ◆ fNComplementaryVariables. Int_t TQpVar::fNComplem",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:19997,Modifiability,variab,variables,19997,"e TQpVar.cxx. ◆ StepBound() [1/2]. Double_t TQpVar::StepBound ; (; TQpVar * ; b). virtual . calculate the largest alpha in (0,1] such that the/ nonnegative variables stay nonnegative in the given search direction. ; In the general QP problem formulation this is the largest value of alpha such that (t,u,v,w,lambda,pi,phi,gamma) + alpha * (b->t,b->u,b->v,b->w,b->lambda,b->pi, b->phi,b->gamma) >= 0. ; Definition at line 304 of file TQpVar.cxx. ◆ StepBound() [2/2]. Double_t TQpVar::StepBound ; (; TVectorD & ; v, . TVectorD & ; dir, . Double_t ; maxStep . ). staticprotected . Find the maximum stepsize of v in direction dir before violating the nonnegativity constraints. ; Definition at line 348 of file TQpVar.cxx. ◆ ValidNonZeroPattern(). Bool_t TQpVar::ValidNonZeroPattern ; (; ). virtual . Check that the variables conform to the non-zero indices. ; Definition at line 740 of file TQpVar.cxx. ◆ Violation(). Double_t TQpVar::Violation ; (; ). virtual . The amount by which the current variables violate the non-negativity constraints. ; Definition at line 574 of file TQpVar.cxx. Member Data Documentation. ◆ fCloIndex. TVectorD TQpVar::fCloIndex. protected . Definition at line 75 of file TQpVar.h. ◆ fCupIndex. TVectorD TQpVar::fCupIndex. protected . Definition at line 74 of file TQpVar.h. ◆ fGamma. TVectorD TQpVar::fGamma. Definition at line 100 of file TQpVar.h. ◆ fLambda. TVectorD TQpVar::fLambda. Definition at line 103 of file TQpVar.h. ◆ fMclo. Int_t TQpVar::fMclo. protected . Definition at line 69 of file TQpVar.h. ◆ fMcup. Int_t TQpVar::fMcup. protected . Definition at line 68 of file TQpVar.h. ◆ fMy. Int_t TQpVar::fMy. protected . Definition at line 64 of file TQpVar.h. ◆ fMz. Int_t TQpVar::fMz. protected . Definition at line 65 of file TQpVar.h. ◆ fNComplementaryVariables. Int_t TQpVar::fNComplementaryVariables. Definition at line 88 of file TQpVar.h. ◆ fNx. Int_t TQpVar::fNx. protected . Definition at line 63 of file TQpVar.h. ◆ fNxlo. Int_t TQpVar::fNxlo. protected ",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQpVar.html:7176,Security,hash,hash,7176," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQpVar.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQpVar.html
https://root.cern/doc/master/classTQSlot.html:3977,Availability,error,error,3977,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:4066,Availability,error,error,4066,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:4221,Availability,error,error,4221,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:4518,Availability,error,error,4518,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:8894,Availability,error,error,8894,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TRefCnt;  TRefCnt (EReferenceFlag);  Leave fRefs alone. ;  ;  TRefCnt (Int_t initRef=0);  ; virtual ~TRefCnt ();  ; void AddReference ();  ; UInt_t References () const;  ; UInt_t RemoveReference ();  ; void SetRefCount (UInt_t r);  . Protected Attributes; ClassInfo_t * fClass;  ; Int_t fExecuti",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:3983,Integrability,message,message,3983,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:4524,Integrability,message,message,4524,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:5657,Integrability,message,message,5657,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:8900,Integrability,message,message,8900,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TRefCnt;  TRefCnt (EReferenceFlag);  Leave fRefs alone. ;  ;  TRefCnt (Int_t initRef=0);  ; virtual ~TRefCnt ();  ; void AddReference ();  ; UInt_t References () const;  ; UInt_t RemoveReference ();  ; void SetRefCount (UInt_t r);  . Protected Attributes; ClassInfo_t * fClass;  ; Int_t fExecuti",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:9273,Integrability,message,message,9273,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TRefCnt;  TRefCnt (EReferenceFlag);  Leave fRefs alone. ;  ;  TRefCnt (Int_t initRef=0);  ; virtual ~TRefCnt ();  ; void AddReference ();  ; UInt_t References () const;  ; UInt_t RemoveReference ();  ; void SetRefCount (UInt_t r);  . Protected Attributes; ClassInfo_t * fClass;  ; Int_t fExecuting;  ; CallFunc_t * fFunc;  ; TFunction * fMethod;  ; TString fName;  ; Longptr_t fOffset;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. }; ",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:2216,Modifiability,inherit,inherited,2216,"ue. ;  ; void ExecuteMethod (void *object, Int_t nargs, va_list ap)=delete;  ; void ExecuteMethod (void *object, Long64_t param);  ExecuteMethod the method for the specified object and with single argument value. ;  ; void ExecuteMethod (void *object, Long_t param);  ExecuteMethod the method for the specified object and with single argument value. ;  ; void ExecuteMethod (void *object, Longptr_t *paramArr, Int_t nparam=-1);  ExecuteMethod the method for the specified object and with several argument values. ;  ; CallFunc_t * GetFunc () const;  ; Int_t GetMethodNargs ();  ; const char * GetName () const override;  Returns name of object. ;  ; Longptr_t GetOffset () const;  ; Bool_t IsExecuting () const;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *opt="""") const override;  Print info about slot. ;  ; CallFunc_t * StartExecuting ();  Mark the slot as executing. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:3613,Modifiability,inherit,inheritance,3613,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:5755,Modifiability,inherit,inherits,5755,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:5872,Modifiability,inherit,inherits,5872," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:9580,Modifiability,inherit,inherited,9580,"al void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TRefCnt;  TRefCnt (EReferenceFlag);  Leave fRefs alone. ;  ;  TRefCnt (Int_t initRef=0);  ; virtual ~TRefCnt ();  ; void AddReference ();  ; UInt_t References () const;  ; UInt_t RemoveReference ();  ; void SetRefCount (UInt_t r);  . Protected Attributes; ClassInfo_t * fClass;  ; Int_t fExecuting;  ; CallFunc_t * fFunc;  ; TFunction * fMethod;  ; TString fName;  ; Longptr_t fOffset;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); ,",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:10006,Modifiability,inherit,inherited,10006," TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TRefCnt;  TRefCnt (EReferenceFlag);  Leave fRefs alone. ;  ;  TRefCnt (Int_t initRef=0);  ; virtual ~TRefCnt ();  ; void AddReference ();  ; UInt_t References () const;  ; UInt_t RemoveReference ();  ; void SetRefCount (UInt_t r);  . Protected Attributes; ClassInfo_t * fClass;  ; Int_t fExecuting;  ; CallFunc_t * fFunc;  ; TFunction * fMethod;  ; TString fName;  ; Longptr_t fOffset;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ve",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:10091,Modifiability,inherit,inherited,10091,"ceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TRefCnt;  TRefCnt (EReferenceFlag);  Leave fRefs alone. ;  ;  TRefCnt (Int_t initRef=0);  ; virtual ~TRefCnt ();  ; void AddReference ();  ; UInt_t References () const;  ; UInt_t RemoveReference ();  ; void SetRefCount (UInt_t r);  . Protected Attributes; ClassInfo_t * fClass;  ; Int_t fExecuting;  ; CallFunc_t * fFunc;  ; TFunction * fMethod;  ; TString fName;  ; Longptr_t fOffset;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static voi",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:10729,Modifiability,inherit,inherited,10729,"ting;  ; CallFunc_t * fFunc;  ; TFunction * fMethod;  ; TString fName;  ; Longptr_t fOffset;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TQSlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQSlot() [1/2]. TQSlot::TQSlot ; (; TClass * ; cl, . const char * ; method_name, . const char * ; funcnam",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:10827,Modifiability,inherit,inherited,10827,"ting;  ; CallFunc_t * fFunc;  ; TFunction * fMethod;  ; TString fName;  ; Longptr_t fOffset;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TQSlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQSlot() [1/2]. TQSlot::TQSlot ; (; TClass * ; cl, . const char * ; method_name, . const char * ; funcnam",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:11330,Modifiability,inherit,inherited,11330," enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TQSlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQSlot() [1/2]. TQSlot::TQSlot ; (; TClass * ; cl, . const char * ; method_name, . const char * ; funcname . ). Create the method invocation environment. ; Necessary input information: the class, full method name with prototype string of the form: method(char*,int,float). To initialize class method with default arguments, method string with default parameters should be of the form:; method(=""ABC"",1234,3.14) (!! parameter string should consists of '=').; To execute the method call TQSlot::ExecuteMethod(object,...). ; Definition at line 95 of file TQConnection.cxx. ◆ TQSlot() [2/2]. TQSlot::TQSlot ; (; const char * ; class_name, . const char * ; funcname .",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:11429,Modifiability,inherit,inherited,11429," enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TQSlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQSlot() [1/2]. TQSlot::TQSlot ; (; TClass * ; cl, . const char * ; method_name, . const char * ; funcname . ). Create the method invocation environment. ; Necessary input information: the class, full method name with prototype string of the form: method(char*,int,float). To initialize class method with default arguments, method string with default parameters should be of the form:; method(=""ABC"",1234,3.14) (!! parameter string should consists of '=').; To execute the method call TQSlot::ExecuteMethod(object,...). ; Definition at line 95 of file TQConnection.cxx. ◆ TQSlot() [2/2]. TQSlot::TQSlot ; (; const char * ; class_name, . const char * ; funcname .",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQSlot.html:5386,Security,hash,hash,5386,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTQSlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQSlot.html
https://root.cern/doc/master/classTQt5Timer.html:4658,Availability,error,error,4658,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:4747,Availability,error,error,4747,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:4902,Availability,error,error,4902,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:5199,Availability,error,error,5199,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:9634,Availability,error,error,9634," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:4664,Integrability,message,message,4664,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:5205,Integrability,message,message,5205,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:6407,Integrability,message,message,6407,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:9640,Integrability,message,message,9640," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:10013,Integrability,message,message,10013," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:484,Modifiability,inherit,inherited,484,". ROOT: TQt5Timer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TQt5Timer Class ReferenceWeb Display » QT5 Web Display. . Definition at line 70 of file rootqt5.cpp. Public Member Functions;  TQt5Timer (Long_t milliSec, Bool_t mode);  ; void Timeout () override;  timeout handler used to process all qt5 events in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Star",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:2429,Modifiability,inherit,inherited,2429,"verride;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:2897,Modifiability,inherit,inherited,2897,"kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer ",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:4294,Modifiability,inherit,inheritance,4294,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:6505,Modifiability,inherit,inherits,6505,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:6622,Modifiability,inherit,inherits,6622,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:10320,Modifiability,inherit,inherited,10320," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:12307,Modifiability,inherit,inherited,12307," void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:12963,Modifiability,inherit,inherited,12963,"l Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:13347,Modifiability,inherit,inherited,13347,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:13565,Modifiability,inherit,inherited,13565,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:14083,Modifiability,inherit,inherited,14083,"ar * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:15243,Modifiability,inherit,inherited,15243,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:15342,Modifiability,inherit,inherited,15342,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:15553,Modifiability,inherit,inherited,15553,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:15666,Modifiability,inherit,inherited,15666,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:16515,Modifiability,inherit,inherited,16515,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt5Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt5Timer(). TQt5Timer::TQt5Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 72 of file rootqt5.cpp. Member Function Documentation. ◆ Timeout(). void TQt5Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt5 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 76 of file rootqt5.cpp. gui/qt5webdisplay/rootqt5.cpp. TQt5Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:16718,Modifiability,inherit,inherited,16718,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt5Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt5Timer(). TQt5Timer::TQt5Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 72 of file rootqt5.cpp. Member Function Documentation. ◆ Timeout(). void TQt5Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt5 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 76 of file rootqt5.cpp. gui/qt5webdisplay/rootqt5.cpp. TQt5Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:16931,Modifiability,inherit,inherited,16931,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt5Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt5Timer(). TQt5Timer::TQt5Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 72 of file rootqt5.cpp. Member Function Documentation. ◆ Timeout(). void TQt5Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt5 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 76 of file rootqt5.cpp. gui/qt5webdisplay/rootqt5.cpp. TQt5Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:387,Safety,timeout,timeout,387,". ROOT: TQt5Timer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TQt5Timer Class ReferenceWeb Display » QT5 Web Display. . Definition at line 70 of file rootqt5.cpp. Public Member Functions;  TQt5Timer (Long_t milliSec, Bool_t mode);  ; void Timeout () override;  timeout handler used to process all qt5 events in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Star",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:2085,Safety,timeout,timeout,2085,"r * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObje",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:17448,Safety,timeout,timeout,17448,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt5Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt5Timer(). TQt5Timer::TQt5Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 72 of file rootqt5.cpp. Member Function Documentation. ◆ Timeout(). void TQt5Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt5 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 76 of file rootqt5.cpp. gui/qt5webdisplay/rootqt5.cpp. TQt5Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt5Timer.html:6136,Security,hash,hash,6136," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTQt5Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html
https://root.cern/doc/master/classTQt6Timer.html:4658,Availability,error,error,4658,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:4747,Availability,error,error,4747,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:4902,Availability,error,error,4902,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:5199,Availability,error,error,5199,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:9634,Availability,error,error,9634," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:4664,Integrability,message,message,4664,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:5205,Integrability,message,message,5205,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:6407,Integrability,message,message,6407,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:9640,Integrability,message,message,9640," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:10013,Integrability,message,message,10013," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:484,Modifiability,inherit,inherited,484,". ROOT: TQt6Timer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TQt6Timer Class ReferenceWeb Display » QT6 Web Display. . Definition at line 49 of file rootqt6.cpp. Public Member Functions;  TQt6Timer (Long_t milliSec, Bool_t mode);  ; void Timeout () override;  timeout handler used to process all qt6 events in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Star",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:2429,Modifiability,inherit,inherited,2429,"verride;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:2897,Modifiability,inherit,inherited,2897,"kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer ",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:4294,Modifiability,inherit,inheritance,4294,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:6505,Modifiability,inherit,inherits,6505,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:6622,Modifiability,inherit,inherits,6622,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:10320,Modifiability,inherit,inherited,10320," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:12307,Modifiability,inherit,inherited,12307," void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:12963,Modifiability,inherit,inherited,12963,"l Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:13347,Modifiability,inherit,inherited,13347,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:13565,Modifiability,inherit,inherited,13565,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:14083,Modifiability,inherit,inherited,14083,"ar * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:15243,Modifiability,inherit,inherited,15243,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:15342,Modifiability,inherit,inherited,15342,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:15553,Modifiability,inherit,inherited,15553,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:15666,Modifiability,inherit,inherited,15666,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:16515,Modifiability,inherit,inherited,16515,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt6Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt6Timer(). TQt6Timer::TQt6Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 51 of file rootqt6.cpp. Member Function Documentation. ◆ Timeout(). void TQt6Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt6 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 55 of file rootqt6.cpp. gui/qt6webdisplay/rootqt6.cpp. TQt6Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:16718,Modifiability,inherit,inherited,16718,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt6Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt6Timer(). TQt6Timer::TQt6Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 51 of file rootqt6.cpp. Member Function Documentation. ◆ Timeout(). void TQt6Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt6 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 55 of file rootqt6.cpp. gui/qt6webdisplay/rootqt6.cpp. TQt6Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:16931,Modifiability,inherit,inherited,16931,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt6Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt6Timer(). TQt6Timer::TQt6Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 51 of file rootqt6.cpp. Member Function Documentation. ◆ Timeout(). void TQt6Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt6 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 55 of file rootqt6.cpp. gui/qt6webdisplay/rootqt6.cpp. TQt6Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:387,Safety,timeout,timeout,387,". ROOT: TQt6Timer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TQt6Timer Class ReferenceWeb Display » QT6 Web Display. . Definition at line 49 of file rootqt6.cpp. Public Member Functions;  TQt6Timer (Long_t milliSec, Bool_t mode);  ; void Timeout () override;  timeout handler used to process all qt6 events in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Star",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:2085,Safety,timeout,timeout,2085,"r * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObje",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:17448,Safety,timeout,timeout,17448,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt6Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt6Timer(). TQt6Timer::TQt6Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 51 of file rootqt6.cpp. Member Function Documentation. ◆ Timeout(). void TQt6Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt6 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 55 of file rootqt6.cpp. gui/qt6webdisplay/rootqt6.cpp. TQt6Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQt6Timer.html:6136,Security,hash,hash,6136," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTQt6Timer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html
https://root.cern/doc/master/classTQuaternion.html:11429,Availability,error,error,11429,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:11518,Availability,error,error,11518,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:11673,Availability,error,error,11673,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:11970,Availability,error,error,11970,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:16413,Availability,error,error,16413,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:341,Integrability,interface,interface,341,". ROOT: TQuaternion Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TQuaternion Class ReferenceMath » Legacy Physics Classes. ; Legacy Code TQuaternion is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TQuaternion might still be a valid solution. Consider using instead ROOT::Math::Quaternion.; Quaternion is a 4-component mathematic object quite convenient when dealing with space rotation (or reference frame transformation). ; In short, think of quaternion Q as a 3-vector augmented by a real number. \( Q = Q|_r + Q|_V \); Quaternion multiplication :; Quaternion multiplication is given by : ; \[; Q.Q' = (Q|_r + Q|_V )*( Q'|_r + Q'|_V) = [ Q|_r*Q'|_r - Q|_V*Q'|_V ] + [ Q|_r*Q'|_V + Q'|_r*Q|_V + Q|_V X Q'|_V ]; \]. where :; \( Q|_r*Q'|_r \) is a real number product of real numbers; \( Q|_V*Q'|_V \) is a real number, scalar product of two 3-vectors; \( Q|_r*Q'|_V \) is a 3-vector, scaling of a 3-vector by a real number; \( Q|_VXQ'|_V \) is a 3-vector, cross product of two 3-vectors. Thus, quaternion product is a generalization of real number product and product of a vector by a real number. Product of two pure vectors gives a quaternion whose real part is the opposite of scalar product and the vector part the cross product.; The conjugate of a quaternion \( Q = Q|r + Q|V \) is \( \bar{Q} = Q|r - Q|V \); The magnitude of a quaternion \( Q \) is given by \( |Q|^2 = Q.\bar{Q} = \bar{Q}.Q = Q^2|r + |Q|V|^2 \); Therefore, the inverse of a quaternion is \( Q-1 = \bar{Q} /|Q|^2 \); ""unit"" quaternion is a quaternion of magnitude 1 : \( |Q|^2 = 1. \) Unit quaternions are a subset of the quaternions set.; Quaternion and rotations :; A rotation of angle \( f \) around a given ",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:482,Integrability,depend,depending,482,". ROOT: TQuaternion Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TQuaternion Class ReferenceMath » Legacy Physics Classes. ; Legacy Code TQuaternion is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TQuaternion might still be a valid solution. Consider using instead ROOT::Math::Quaternion.; Quaternion is a 4-component mathematic object quite convenient when dealing with space rotation (or reference frame transformation). ; In short, think of quaternion Q as a 3-vector augmented by a real number. \( Q = Q|_r + Q|_V \); Quaternion multiplication :; Quaternion multiplication is given by : ; \[; Q.Q' = (Q|_r + Q|_V )*( Q'|_r + Q'|_V) = [ Q|_r*Q'|_r - Q|_V*Q'|_V ] + [ Q|_r*Q'|_V + Q'|_r*Q|_V + Q|_V X Q'|_V ]; \]. where :; \( Q|_r*Q'|_r \) is a real number product of real numbers; \( Q|_V*Q'|_V \) is a real number, scalar product of two 3-vectors; \( Q|_r*Q'|_V \) is a 3-vector, scaling of a 3-vector by a real number; \( Q|_VXQ'|_V \) is a 3-vector, cross product of two 3-vectors. Thus, quaternion product is a generalization of real number product and product of a vector by a real number. Product of two pure vectors gives a quaternion whose real part is the opposite of scalar product and the vector part the cross product.; The conjugate of a quaternion \( Q = Q|r + Q|V \) is \( \bar{Q} = Q|r - Q|V \); The magnitude of a quaternion \( Q \) is given by \( |Q|^2 = Q.\bar{Q} = \bar{Q}.Q = Q^2|r + |Q|V|^2 \); Therefore, the inverse of a quaternion is \( Q-1 = \bar{Q} /|Q|^2 \); ""unit"" quaternion is a quaternion of magnitude 1 : \( |Q|^2 = 1. \) Unit quaternions are a subset of the quaternions set.; Quaternion and rotations :; A rotation of angle \( f \) around a given ",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:11435,Integrability,message,message,11435,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:11976,Integrability,message,message,11976,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:13178,Integrability,message,message,13178,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:16419,Integrability,message,message,16419,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:16792,Integrability,message,message,16792," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Publi",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:9668,Modifiability,inherit,inherited,9668,"rator[] (int);  ; Double_t operator[] (int) const;  ; void Print (Option_t *option="""") const override;  Print Quaternion parameters. ;  ; Double_t QMag () const;  ; Double_t QMag2 () const;  ; void Rotate (TVector3 &vect) const;  rotate vect by current quaternion ;  ; TVector3 Rotation (const TVector3 &vect) const;  rotation of vect by current quaternion ;  ; TQuaternion & SetAxisQAngle (TVector3 &v, Double_t QAngle);  set quaternion from vector and angle (rad) quaternion is set as unitary N.B : this angle is half of the corresponding rotation angle ;  ; TQuaternion & SetQAngle (Double_t angle);  Set angle of quaternion (rad) - keep quaternion norm N.B : this angle is half of the corresponding rotation angle. ;  ; TQuaternion & SetRV (Double_t r, TVector3 &vect);  ; TQuaternion & SetRXYZ (Double_t r, Double_t x, Double_t y, Double_t z);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:11065,Modifiability,inherit,inheritance,11065,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:13276,Modifiability,inherit,inherits,13276,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:13393,Modifiability,inherit,inherits,13393,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:17293,Modifiability,inherit,inherited,17293,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Double_t fRealPart;  ; TVector3 fVectorPart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMu",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:17890,Modifiability,inherit,inherited,17890,"rite (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Double_t fRealPart;  ; TVector3 fVectorPart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQuaternion.h>. Inheritance diagram for TQuaternion:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:18531,Modifiability,inherit,inherited,18531,";  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Double_t fRealPart;  ; TVector3 fVectorPart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQuaternion.h>. Inheritance diagram for TQuaternion:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQuaternion() [1/5]. TQuaternion::TQuaternion ; (; Double_t ; real = 0, . Double_t ; X = 0, . Double_t ; Y = 0, . Double_t ; Z = 0 . ). Definition at line 114 of file TQuaternion.cxx. ◆ TQuaternion() [2/5]. TQuaternion::TQuaternion ; (; const TVector3 & ; vector, . Double_t ; real = 0 . ). Definition at line 105 of file TQuaternion.cxx. ◆ TQuaternion() [3/5]. TQuaternion::TQuaternion ; (; const Double_t * ; x0). Definition at line 108 of file TQuaternion.cxx. ◆ TQuaternion() [4/5]. TQuaternion::TQuaternion ; (; const Float_t * ; x0). Definition at line 111 of file TQuaternion.cxx. ◆ TQuaternion() [5/5]. TQuaternion::TQuater",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:18630,Modifiability,inherit,inherited,18630,";  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Double_t fRealPart;  ; TVector3 fVectorPart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQuaternion.h>. Inheritance diagram for TQuaternion:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQuaternion() [1/5]. TQuaternion::TQuaternion ; (; Double_t ; real = 0, . Double_t ; X = 0, . Double_t ; Y = 0, . Double_t ; Z = 0 . ). Definition at line 114 of file TQuaternion.cxx. ◆ TQuaternion() [2/5]. TQuaternion::TQuaternion ; (; const TVector3 & ; vector, . Double_t ; real = 0 . ). Definition at line 105 of file TQuaternion.cxx. ◆ TQuaternion() [3/5]. TQuaternion::TQuaternion ; (; const Double_t * ; x0). Definition at line 108 of file TQuaternion.cxx. ◆ TQuaternion() [4/5]. TQuaternion::TQuaternion ; (; const Float_t * ; x0). Definition at line 111 of file TQuaternion.cxx. ◆ TQuaternion() [5/5]. TQuaternion::TQuater",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:4327,Performance,optimiz,optimized,4327,"ne verifies that : \( Q.Q^{-1} = Q^{-1}.Q = Q|_r*Q|_r + Q|_V*Q|_V + Q|_r*Q|_V -Q|_r*Q|_V + Q|_VXQ|_V = Q\leq|_r + Q\leq|_V = 1 \); The rotation of a vector V by the rotation described by a unit quaternion Q is obtained by the following operation : \( V' = Q*V*Q^{-1} \), considering V as a quaternion whose real part is null.; Numeric computation considerations :; Numerically, the quaternion multiplication involves 12 additions and 16 multiplications. It is therefore faster than 3x3 matrixes multiplication involving 18 additions and 27 multiplications.; On the contrary, rotation of a vector by the above formula ( \( Q*V*Q^{-1} \) ) involves 18 additions and 24 multiplications, whereas multiplication of a 3-vector by a 3x3 matrix involves only 6 additions and 9 multiplications.; When dealing with numerous composition of space rotation, it is therefore faster to use quaternion product. On the other hand if a huge set of vectors must be rotated by a given quaternion, it is more optimized to convert the quaternion into a rotation matrix once, and then use that later to rotate the set of vectors.; More information :; http://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation; http://en.wikipedia.org/wiki/Quaternion; This Class represents all quaternions (unit or non-unit) It possesses a Normalize() method to make a given quaternion unit The Rotate(TVector3&) and Rotation(TVector3&) methods can be used even for a non-unit quaternion, in that case, the proper normalization is applied to perform the rotation.; A TRotation constructor exists than takes a quaternion for parameter (even non-unit), in that cas the proper normalisation is applied. ; Definition at line 11 of file TQuaternion.h. Public Member Functions;  TQuaternion (const Double_t *);  ;  TQuaternion (const Float_t *);  ;  TQuaternion (const TQuaternion &);  ;  TQuaternion (const TVector3 &vector, Double_t real=0);  ;  TQuaternion (Double_t real=0, Double_t X=0, Double_t Y=0, Double_t Z=0);  ;  ~TQuaternion () o",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:4845,Performance,perform,perform,4845,"rically, the quaternion multiplication involves 12 additions and 16 multiplications. It is therefore faster than 3x3 matrixes multiplication involving 18 additions and 27 multiplications.; On the contrary, rotation of a vector by the above formula ( \( Q*V*Q^{-1} \) ) involves 18 additions and 24 multiplications, whereas multiplication of a 3-vector by a 3x3 matrix involves only 6 additions and 9 multiplications.; When dealing with numerous composition of space rotation, it is therefore faster to use quaternion product. On the other hand if a huge set of vectors must be rotated by a given quaternion, it is more optimized to convert the quaternion into a rotation matrix once, and then use that later to rotate the set of vectors.; More information :; http://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation; http://en.wikipedia.org/wiki/Quaternion; This Class represents all quaternions (unit or non-unit) It possesses a Normalize() method to make a given quaternion unit The Rotate(TVector3&) and Rotation(TVector3&) methods can be used even for a non-unit quaternion, in that case, the proper normalization is applied to perform the rotation.; A TRotation constructor exists than takes a quaternion for parameter (even non-unit), in that cas the proper normalisation is applied. ; Definition at line 11 of file TQuaternion.h. Public Member Functions;  TQuaternion (const Double_t *);  ;  TQuaternion (const Float_t *);  ;  TQuaternion (const TQuaternion &);  ;  TQuaternion (const TVector3 &vector, Double_t real=0);  ;  TQuaternion (Double_t real=0, Double_t X=0, Double_t Y=0, Double_t Z=0);  ;  ~TQuaternion () override;  ; TQuaternion Conjugate () const;  ; TQuaternion & DivideLeft (const TQuaternion &quaternion);  left division ;  ; TQuaternion & DivideLeft (const TVector3 &vector);  left division ;  ; Double_t GetQAngle () const;  Get angle of quaternion (rad) N.B : this angle is half of the corresponding rotation angle. ;  ; void GetRXYZ (Double_t *carray) const;  ; void",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQuaternion.html:12907,Security,hash,hash,12907," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTQuaternion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQuaternion.html
https://root.cern/doc/master/classTQueryDescription.html:3306,Availability,error,error,3306,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:3395,Availability,error,error,3395,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:3550,Availability,error,error,3550,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:3847,Availability,error,error,3847,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:8342,Availability,error,error,8342," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:3312,Integrability,message,message,3312,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:3853,Integrability,message,message,3853,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:4986,Integrability,message,message,4986,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:8348,Integrability,message,message,8348," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:8721,Integrability,message,message,8721," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Publi",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:624,Modifiability,inherit,inherited,624,". ROOT: TQueryDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TQueryDescription Class Reference. . Definition at line 82 of file TSessionViewer.h. Public Types; enum  ESessionQueryStatus { ;   kSessionQueryAborted = 0; , kSessionQuerySubmitted; , kSessionQueryRunning; , kSessionQueryStopped; , ;   kSessionQueryCompleted; , kSessionQueryFinalized; , kSessionQueryCreated; , kSessionQueryFromProof. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:1545,Modifiability,inherit,inherited,1545,"; , kSessionQueryFinalized; , kSessionQueryCreated; , kSessionQueryFromProof. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:2942,Modifiability,inherit,inheritance,2942,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:5084,Modifiability,inherit,inherits,5084,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:5201,Modifiability,inherit,inherits,5201," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:9222,Modifiability,inherit,inherited,9222,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TObject * fChain;  ; TTime fEndTime;  ; TString fEventList;  ; Long64_t fFirstEntry;  ; Int_t fNbFiles;  ; Long64_t fNoEntries;  ; TString fOptions;  ; TString fQueryName;  ; TString fReference;  ; TQueryResult * fResult;  ; TString fSelectorString;  ; TTime fStartTime;  ; ESessionQueryStatus fStatus;  ; TString fTDSetString;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtu",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:10105,Modifiability,inherit,inherited,10105,"mber Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TObject * fChain;  ; TTime fEndTime;  ; TString fEventList;  ; Long64_t fFirstEntry;  ; Int_t fNbFiles;  ; Long64_t fNoEntries;  ; TString fOptions;  ; TString fQueryName;  ; TString fReference;  ; TQueryResult * fResult;  ; TString fSelectorString;  ; TTime fStartTime;  ; ESessionQueryStatus fStatus;  ; TString fTDSetString;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSessionViewer.h>. Inheritance diagram for TQueryDescription:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESessionQueryStatus. enum TQueryDescription::ESessionQueryStatus. EnumeratorkSessionQueryAborted ; kSessionQuerySubmitted ; kSessionQueryRunning ; kSessionQueryStopped ; kSessionQueryCompleted ; kSessionQueryFinalized ; kSessionQueryCreated ; kSessionQueryFromProof . Definition at line 85 of file TSessionViewer.h. Member Function Documentation. ◆ Class(). static TClass * TQueryDescription::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQueryDescription::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQuer",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:10204,Modifiability,inherit,inherited,10204,"mber Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TObject * fChain;  ; TTime fEndTime;  ; TString fEventList;  ; Long64_t fFirstEntry;  ; Int_t fNbFiles;  ; Long64_t fNoEntries;  ; TString fOptions;  ; TString fQueryName;  ; TString fReference;  ; TQueryResult * fResult;  ; TString fSelectorString;  ; TTime fStartTime;  ; ESessionQueryStatus fStatus;  ; TString fTDSetString;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSessionViewer.h>. Inheritance diagram for TQueryDescription:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESessionQueryStatus. enum TQueryDescription::ESessionQueryStatus. EnumeratorkSessionQueryAborted ; kSessionQuerySubmitted ; kSessionQueryRunning ; kSessionQueryStopped ; kSessionQueryCompleted ; kSessionQueryFinalized ; kSessionQueryCreated ; kSessionQueryFromProof . Definition at line 85 of file TSessionViewer.h. Member Function Documentation. ◆ Class(). static TClass * TQueryDescription::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQueryDescription::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQuer",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryDescription.html:4715,Security,hash,hash,4715,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTQueryDescription.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html
https://root.cern/doc/master/classTQueryResult.html:5720,Availability,error,error,5720,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:5809,Availability,error,error,5809,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:5964,Availability,error,error,5964,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:6261,Availability,error,error,6261,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:10345,Availability,error,error,10345,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:12600,Deployability,update,update,12600,"har * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TQueryResult (Int_t seqnum, const char *opt, TList *inlist, Long64_t entries, Long64_t first, const char *selec);  Main constructor. ;  ; void AddInput (TObject *obj);  Add obj to the input list. ;  ; void AddLogLine (const char *logline);  Fill log file. ;  ; TQueryResult * CloneInfo ();  Return an instance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void RecordEnd (EQueryStatus status, TList *outlist=nullptr);  End of query settings. ;  ; void SaveSelector (const char *selec);  Save the selector header and implementation into the dedicated TMacro instances. ;  ; void SetArchived (const char *archfile);  Set (or update) query in archived state. ;  ; virtual void SetFinalized ();  ; virtual void SetInputList (TList *in, bool adopt=true);  Set / change the input list. ;  ; void SetMergeTime (Float_t mergetime);  ; void SetNumMergers (Int_t nmergers);  ; virtual void SetOutputList (TList *out, bool adopt=true);  Set / change the output list. ;  ; void SetPrepTime (Float_t preptime);  ; virtual void SetProcessInfo (Long64_t ent, Float_t cpu=0., Long64_t siz=-1, Float_t inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTermTime (Float_t termtime);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fArchived;  whether the query has been archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:22821,Deployability,update,update,22821,"::Matches ; (; const char * ; ref). Return TRUE if reference ref matches. ; Definition at line 502 of file TQueryResult.cxx. ◆ Print(). void TQueryResult::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print query content. Use opt = ""F"" for a full listing. ; Reimplemented from TNamed.; Definition at line 315 of file TQueryResult.cxx. ◆ RecordEnd(). void TQueryResult::RecordEnd ; (; EQueryStatus ; status, . TList * ; outlist = nullptr . ). protectedvirtual . End of query settings. ; Reimplemented in TProofQueryResult.; Definition at line 246 of file TQueryResult.cxx. ◆ SaveSelector(). void TQueryResult::SaveSelector ; (; const char * ; selector). protected . Save the selector header and implementation into the dedicated TMacro instances. ; The header is searched for in the same directory of the implementation file. ; Definition at line 175 of file TQueryResult.cxx. ◆ SetArchived(). void TQueryResult::SetArchived ; (; const char * ; archfile). protected . Set (or update) query in archived state. ; Definition at line 303 of file TQueryResult.cxx. ◆ SetFinalized(). virtual void TQueryResult::SetFinalized ; (; ). inlineprotectedvirtual . Reimplemented in TProofQueryResult.; Definition at line 96 of file TQueryResult.h. ◆ SetInputList(). void TQueryResult::SetInputList ; (; TList * ; in, . bool ; adopt = true . ). protectedvirtual . Set / change the input list. ; The flag 'adopt' determines whether the list is adopted (default) or cloned. If adopted, object ownership is transferred to this object. The internal fInputList will always be owner of its objects. ; Definition at line 431 of file TQueryResult.cxx. ◆ SetMergeTime(). void TQueryResult::SetMergeTime ; (; Float_t ; mergetime). inlineprotected . Definition at line 103 of file TQueryResult.h. ◆ SetNumMergers(). void TQueryResult::SetNumMergers ; (; Int_t ; nmergers). inlineprotected . Definition at line 106 of file TQueryResult.h. ◆ SetOutputList(). void TQueryResult::SetOutputList ; (; TList * ; out, . bo",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:5726,Integrability,message,message,5726,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:6267,Integrability,message,message,6267,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:7257,Integrability,message,message,7257,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:10351,Integrability,message,message,10351,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:10724,Integrability,message,message,10724," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:14046,Integrability,message,messages,14046," inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTermTime (Float_t termtime);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fArchived;  whether the query has been archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; TDatime fEnd;  time when processing ended ;  ; Long64_t fEntries;  number of entries processed ;  ; bool fFinalized;  whether Terminate has been run ;  ; Long64_t fFirst;  first entry processed ;  ; Float_t fInitTime;  Initialization time (seconds) (millisec precision) ;  ; TList * fInputList;  input list; contains also data sets, entry list, ... ;  ; TString fLibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fOptions;  processing options + aclic mode (< opt >#< aclic_mode >) ;  ; TList * fOutputList;  output list ;  ; TString fParList;  colon-separated list of PAR loaded at fStart ;  ; Float_t fPrepTime;  Prepare time (seconds) (millisec precision) ;  ; Float_t fProcTime;  Processing time (seconds) (millisec precision) ;  ; Float_t fRecvTime;  Transfer-to-client time (seconds) (millisec precision) ;  ; TString fResultFile;  URL of the file where results have been archived. ;  ; TMacro * fSelecHdr;  selector header file ;  ; TMacro * fSelecImp;  selector implementation file ;  ; Int_t fSeqNum;  query unique sequential number ;  ; TDatime fStart;  time when processing started ;  ; EQueryStatus fStatus;  query status ;  ; Float_t fTermTime;  Terminate time (seconds) (millisec precision) ;  ; Float_t fUsedCP",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:27358,Integrability,message,messages,27358,"finition at line 61 of file TQueryResult.h. ◆ fEntries. Long64_t TQueryResult::fEntries. protected . number of entries processed ; Definition at line 65 of file TQueryResult.h. ◆ fFinalized. bool TQueryResult::fFinalized. protected . whether Terminate has been run ; Definition at line 74 of file TQueryResult.h. ◆ fFirst. Long64_t TQueryResult::fFirst. protected . first entry processed ; Definition at line 66 of file TQueryResult.h. ◆ fInitTime. Float_t TQueryResult::fInitTime. protected . Initialization time (seconds) (millisec precision) ; Definition at line 78 of file TQueryResult.h. ◆ fInputList. TList* TQueryResult::fInputList. protected . input list; contains also data sets, entry list, ... ; Definition at line 64 of file TQueryResult.h. ◆ fLibList. TString TQueryResult::fLibList. protected . blank-separated list of libs loaded at fStart ; Definition at line 71 of file TQueryResult.h. ◆ fLogFile. TMacro* TQueryResult::fLogFile. protected . file with log messages from the query ; Definition at line 68 of file TQueryResult.h. ◆ fMergeTime. Float_t TQueryResult::fMergeTime. protected . Merging time (seconds) (millisec precision) ; Definition at line 80 of file TQueryResult.h. ◆ fNumMergers. Int_t TQueryResult::fNumMergers. protected . Number of submergers. ; Definition at line 84 of file TQueryResult.h. ◆ fNumWrks. Int_t TQueryResult::fNumWrks. protected . Number of workers at start. ; Definition at line 83 of file TQueryResult.h. ◆ fOptions. TString TQueryResult::fOptions. protected . processing options + aclic mode (< opt >#< aclic_mode >) ; Definition at line 63 of file TQueryResult.h. ◆ fOutputList. TList* TQueryResult::fOutputList. protected . output list ; Definition at line 73 of file TQueryResult.h. ◆ fParList. TString TQueryResult::fParList. protected . colon-separated list of PAR loaded at fStart ; Definition at line 72 of file TQueryResult.h. ◆ fPrepTime. Float_t TQueryResult::fPrepTime. protected . Prepare time (seconds) (millisec precision) ; Definiti",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:564,Modifiability,inherit,inherited,564,". ROOT: TQueryResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TQueryResult Class ReferenceTree Library. ; A container class for query results. ; Definition at line 41 of file TQueryResult.h. Public Types; enum  EQueryStatus { ;   kAborted = 0; , kSubmitted; , kRunning; , kStopped; , ;   kCompleted. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TQueryResult ();  ;  ~TQueryResult () override;  Destructor. ;  ; void Browse (TBrowser *b=nullptr) override;  To support browsing of the results. ;  ; Long64_t GetBytes () const;  ; TDatime GetEndTime () const;  ; Long64_t GetEntries () const;  ; Long64_t GetFirst () const;  ; Float_t GetInitTime () const;  ; TList * GetInputList ();  ; TObject * GetInputObject (const char *classname) const;  Return first instance of class 'classname' in the input list. ;  ; const char * GetLibList () const;  ; TMacro * GetLogFile () const;  ; Float_t GetMergeTime () const;  ; Int_t GetNumMergers () const;  ; Int_t GetNumWrks () const;  ; const char * GetOptions () const;  ; TList * GetOutputList ();  ; const char * GetParList () const;  ; Float_t GetPrepTime () const;  ; Float_t GetProcTime ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:2821,Modifiability,inherit,inherited,2821,"  ; const char * GetOptions () const;  ; TList * GetOutputList ();  ; const char * GetParList () const;  ; Float_t GetPrepTime () const;  ; Float_t GetProcTime () const;  ; Float_t GetRecvTime () const;  ; const char * GetResultFile () const;  ; TMacro * GetSelecHdr () const;  ; TMacro * GetSelecImp () const;  ; Int_t GetSeqNum () const;  ; TDatime GetStartTime () const;  ; EQueryStatus GetStatus () const;  ; Float_t GetTermTime () const;  ; Float_t GetUsedCPU () const;  ; TClass * IsA () const override;  ; bool IsArchived () const;  ; virtual bool IsDone () const;  ; bool IsDraw () const;  ; bool IsFinalized () const;  ; bool Matches (const char *ref);  Return TRUE if reference ref matches. ;  ; void Print (Option_t *opt="""") const override;  Print query content. Use opt = ""F"" for a full listing. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:4365,Modifiability,inherit,inherited,4365,"bjects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:5356,Modifiability,inherit,inheritance,5356,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:7355,Modifiability,inherit,inherits,7355,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:7472,Modifiability,inherit,inherits,7472,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:11225,Modifiability,inherit,inherited,11225,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TQueryResult (Int_t seqnum, const char *opt, TList *inlist, Long64_t entries, Long64_t first, const char *selec);  Main constructor. ;  ; void AddInput (TObject *obj);  Add obj to the input list. ;  ; void AddLogLine (const char *logline);  Fill log file. ;  ; TQueryResult * CloneInfo ();  Return an instance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void Rec",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:11435,Modifiability,inherit,inherited,11435,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TQueryResult (Int_t seqnum, const char *opt, TList *inlist, Long64_t entries, Long64_t first, const char *selec);  Main constructor. ;  ; void AddInput (TObject *obj);  Add obj to the input list. ;  ; void AddLogLine (const char *logline);  Fill log file. ;  ; TQueryResult * CloneInfo ();  Return an instance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void Rec",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:13232,Modifiability,inherit,inherited,13232,"nstance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void RecordEnd (EQueryStatus status, TList *outlist=nullptr);  End of query settings. ;  ; void SaveSelector (const char *selec);  Save the selector header and implementation into the dedicated TMacro instances. ;  ; void SetArchived (const char *archfile);  Set (or update) query in archived state. ;  ; virtual void SetFinalized ();  ; virtual void SetInputList (TList *in, bool adopt=true);  Set / change the input list. ;  ; void SetMergeTime (Float_t mergetime);  ; void SetNumMergers (Int_t nmergers);  ; virtual void SetOutputList (TList *out, bool adopt=true);  Set / change the output list. ;  ; void SetPrepTime (Float_t preptime);  ; virtual void SetProcessInfo (Long64_t ent, Float_t cpu=0., Long64_t siz=-1, Float_t inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTermTime (Float_t termtime);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fArchived;  whether the query has been archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; TDatime fEnd;  time when processing ended ;  ; Long64_t fEntries;  number of entries processed ;  ; bool fFinalized;  whether Terminate has been run ;  ; Long64_t fFirst;  first entry processed ;  ; Float_t fInitTime;  Initialization time (seconds) (millisec precision) ;  ; TList * fInputList;  input list; contains also data sets, entry list, ... ;  ; TString fLibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fO",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:15121,Modifiability,inherit,inherited,15121,"LibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fOptions;  processing options + aclic mode (< opt >#< aclic_mode >) ;  ; TList * fOutputList;  output list ;  ; TString fParList;  colon-separated list of PAR loaded at fStart ;  ; Float_t fPrepTime;  Prepare time (seconds) (millisec precision) ;  ; Float_t fProcTime;  Processing time (seconds) (millisec precision) ;  ; Float_t fRecvTime;  Transfer-to-client time (seconds) (millisec precision) ;  ; TString fResultFile;  URL of the file where results have been archived. ;  ; TMacro * fSelecHdr;  selector header file ;  ; TMacro * fSelecImp;  selector implementation file ;  ; Int_t fSeqNum;  query unique sequential number ;  ; TDatime fStart;  time when processing started ;  ; EQueryStatus fStatus;  query status ;  ; Float_t fTermTime;  Terminate time (seconds) (millisec precision) ;  ; Float_t fUsedCPU;  real CPU time used (seconds) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TProof;  ; class TProofLite;  ; class TProofPlayerLite;  ; class TProofPlayerRemote;  ; class TProofServ;  ; class TQueryResultManager;  ; class TTreePlayer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TQueryResult.h>. Inheritance diagram for TQueryResult:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EQueryStatus. enum TQueryResult::EQueryStatus. EnumeratorkAborted ; kSubmitted ; kRunning ; kStopped ; kCompleted . Definition at line 52 of file TQueryResult.h. Constructor & Destructor Documentation. ◆ TQueryResult() [1/2]. TQueryResult::TQueryResult ; (; Int_t ; seqnum, . con",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:15404,Modifiability,inherit,inherited,15404," at fStart ;  ; Float_t fPrepTime;  Prepare time (seconds) (millisec precision) ;  ; Float_t fProcTime;  Processing time (seconds) (millisec precision) ;  ; Float_t fRecvTime;  Transfer-to-client time (seconds) (millisec precision) ;  ; TString fResultFile;  URL of the file where results have been archived. ;  ; TMacro * fSelecHdr;  selector header file ;  ; TMacro * fSelecImp;  selector implementation file ;  ; Int_t fSeqNum;  query unique sequential number ;  ; TDatime fStart;  time when processing started ;  ; EQueryStatus fStatus;  query status ;  ; Float_t fTermTime;  Terminate time (seconds) (millisec precision) ;  ; Float_t fUsedCPU;  real CPU time used (seconds) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TProof;  ; class TProofLite;  ; class TProofPlayerLite;  ; class TProofPlayerRemote;  ; class TProofServ;  ; class TQueryResultManager;  ; class TTreePlayer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TQueryResult.h>. Inheritance diagram for TQueryResult:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EQueryStatus. enum TQueryResult::EQueryStatus. EnumeratorkAborted ; kSubmitted ; kRunning ; kStopped ; kCompleted . Definition at line 52 of file TQueryResult.h. Constructor & Destructor Documentation. ◆ TQueryResult() [1/2]. TQueryResult::TQueryResult ; (; Int_t ; seqnum, . const char * ; opt, . TList * ; inlist, . Long64_t ; entries, . Long64_t ; first, . const char * ; selec . ). protected . Main constructor. ; Definition at line 37 of file TQueryResult.cxx. ◆ TQueryResult() [2/2]. TQueryResult::TQueryResult ; (; ). inline . Definition at line 109 of file TQueryResult.h. ◆ ~TQueryResult(). TQueryResult::~TQueryResult ; (; ). override . Destructor. ; Definition at line 109 of file TQueryResult.cxx. Member Function Documentation. ◆",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:13990,Performance,load,loaded,13990," inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTermTime (Float_t termtime);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fArchived;  whether the query has been archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; TDatime fEnd;  time when processing ended ;  ; Long64_t fEntries;  number of entries processed ;  ; bool fFinalized;  whether Terminate has been run ;  ; Long64_t fFirst;  first entry processed ;  ; Float_t fInitTime;  Initialization time (seconds) (millisec precision) ;  ; TList * fInputList;  input list; contains also data sets, entry list, ... ;  ; TString fLibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fOptions;  processing options + aclic mode (< opt >#< aclic_mode >) ;  ; TList * fOutputList;  output list ;  ; TString fParList;  colon-separated list of PAR loaded at fStart ;  ; Float_t fPrepTime;  Prepare time (seconds) (millisec precision) ;  ; Float_t fProcTime;  Processing time (seconds) (millisec precision) ;  ; Float_t fRecvTime;  Transfer-to-client time (seconds) (millisec precision) ;  ; TString fResultFile;  URL of the file where results have been archived. ;  ; TMacro * fSelecHdr;  selector header file ;  ; TMacro * fSelecImp;  selector implementation file ;  ; Int_t fSeqNum;  query unique sequential number ;  ; TDatime fStart;  time when processing started ;  ; EQueryStatus fStatus;  query status ;  ; Float_t fTermTime;  Terminate time (seconds) (millisec precision) ;  ; Float_t fUsedCP",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:14409,Performance,load,loaded,14409,"n archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; TDatime fEnd;  time when processing ended ;  ; Long64_t fEntries;  number of entries processed ;  ; bool fFinalized;  whether Terminate has been run ;  ; Long64_t fFirst;  first entry processed ;  ; Float_t fInitTime;  Initialization time (seconds) (millisec precision) ;  ; TList * fInputList;  input list; contains also data sets, entry list, ... ;  ; TString fLibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fOptions;  processing options + aclic mode (< opt >#< aclic_mode >) ;  ; TList * fOutputList;  output list ;  ; TString fParList;  colon-separated list of PAR loaded at fStart ;  ; Float_t fPrepTime;  Prepare time (seconds) (millisec precision) ;  ; Float_t fProcTime;  Processing time (seconds) (millisec precision) ;  ; Float_t fRecvTime;  Transfer-to-client time (seconds) (millisec precision) ;  ; TString fResultFile;  URL of the file where results have been archived. ;  ; TMacro * fSelecHdr;  selector header file ;  ; TMacro * fSelecImp;  selector implementation file ;  ; Int_t fSeqNum;  query unique sequential number ;  ; TDatime fStart;  time when processing started ;  ; EQueryStatus fStatus;  query status ;  ; Float_t fTermTime;  Terminate time (seconds) (millisec precision) ;  ; Float_t fUsedCPU;  real CPU time used (seconds) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TProof;  ; class TProofLite;  ; class TProofPlayerLite;  ; class TProofPlayerRemote;  ; class TProofServ;  ; class TQueryResultManager;  ; class TTreePlayer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #incl",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:27223,Performance,load,loaded,27223," draw action query ; Definition at line 58 of file TQueryResult.h. ◆ fEnd. TDatime TQueryResult::fEnd. protected . time when processing ended ; Definition at line 61 of file TQueryResult.h. ◆ fEntries. Long64_t TQueryResult::fEntries. protected . number of entries processed ; Definition at line 65 of file TQueryResult.h. ◆ fFinalized. bool TQueryResult::fFinalized. protected . whether Terminate has been run ; Definition at line 74 of file TQueryResult.h. ◆ fFirst. Long64_t TQueryResult::fFirst. protected . first entry processed ; Definition at line 66 of file TQueryResult.h. ◆ fInitTime. Float_t TQueryResult::fInitTime. protected . Initialization time (seconds) (millisec precision) ; Definition at line 78 of file TQueryResult.h. ◆ fInputList. TList* TQueryResult::fInputList. protected . input list; contains also data sets, entry list, ... ; Definition at line 64 of file TQueryResult.h. ◆ fLibList. TString TQueryResult::fLibList. protected . blank-separated list of libs loaded at fStart ; Definition at line 71 of file TQueryResult.h. ◆ fLogFile. TMacro* TQueryResult::fLogFile. protected . file with log messages from the query ; Definition at line 68 of file TQueryResult.h. ◆ fMergeTime. Float_t TQueryResult::fMergeTime. protected . Merging time (seconds) (millisec precision) ; Definition at line 80 of file TQueryResult.h. ◆ fNumMergers. Int_t TQueryResult::fNumMergers. protected . Number of submergers. ; Definition at line 84 of file TQueryResult.h. ◆ fNumWrks. Int_t TQueryResult::fNumWrks. protected . Number of workers at start. ; Definition at line 83 of file TQueryResult.h. ◆ fOptions. TString TQueryResult::fOptions. protected . processing options + aclic mode (< opt >#< aclic_mode >) ; Definition at line 63 of file TQueryResult.h. ◆ fOutputList. TList* TQueryResult::fOutputList. protected . output list ; Definition at line 73 of file TQueryResult.h. ◆ fParList. TString TQueryResult::fParList. protected . colon-separated list of PAR loaded at fStart ; Definition a",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:28208,Performance,load,loaded,28208,oaded at fStart ; Definition at line 71 of file TQueryResult.h. ◆ fLogFile. TMacro* TQueryResult::fLogFile. protected . file with log messages from the query ; Definition at line 68 of file TQueryResult.h. ◆ fMergeTime. Float_t TQueryResult::fMergeTime. protected . Merging time (seconds) (millisec precision) ; Definition at line 80 of file TQueryResult.h. ◆ fNumMergers. Int_t TQueryResult::fNumMergers. protected . Number of submergers. ; Definition at line 84 of file TQueryResult.h. ◆ fNumWrks. Int_t TQueryResult::fNumWrks. protected . Number of workers at start. ; Definition at line 83 of file TQueryResult.h. ◆ fOptions. TString TQueryResult::fOptions. protected . processing options + aclic mode (< opt >#< aclic_mode >) ; Definition at line 63 of file TQueryResult.h. ◆ fOutputList. TList* TQueryResult::fOutputList. protected . output list ; Definition at line 73 of file TQueryResult.h. ◆ fParList. TString TQueryResult::fParList. protected . colon-separated list of PAR loaded at fStart ; Definition at line 72 of file TQueryResult.h. ◆ fPrepTime. Float_t TQueryResult::fPrepTime. protected . Prepare time (seconds) (millisec precision) ; Definition at line 77 of file TQueryResult.h. ◆ fProcTime. Float_t TQueryResult::fProcTime. protected . Processing time (seconds) (millisec precision) ; Definition at line 79 of file TQueryResult.h. ◆ fRecvTime. Float_t TQueryResult::fRecvTime. protected . Transfer-to-client time (seconds) (millisec precision) ; Definition at line 81 of file TQueryResult.h. ◆ fResultFile. TString TQueryResult::fResultFile. protected . URL of the file where results have been archived. ; Definition at line 76 of file TQueryResult.h. ◆ fSelecHdr. TMacro* TQueryResult::fSelecHdr. protected . selector header file ; Definition at line 69 of file TQueryResult.h. ◆ fSelecImp. TMacro* TQueryResult::fSelecImp. protected . selector implementation file ; Definition at line 70 of file TQueryResult.h. ◆ fSeqNum. Int_t TQueryResult::fSeqNum. protected . query unique s,MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:3689,Security,hash,hash,3689," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:18731,Security,access,access,18731," ReturnsName of the file containing the class declaration ; Definition at line 156 of file TQueryResult.h. ◆ GetBytes(). Long64_t TQueryResult::GetBytes ; (; ); const. inline . Definition at line 129 of file TQueryResult.h. ◆ GetEndTime(). TDatime TQueryResult::GetEndTime ; (; ); const. inline . Definition at line 123 of file TQueryResult.h. ◆ GetEntries(). Long64_t TQueryResult::GetEntries ; (; ); const. inline . Definition at line 127 of file TQueryResult.h. ◆ GetFirst(). Long64_t TQueryResult::GetFirst ; (; ); const. inline . Definition at line 128 of file TQueryResult.h. ◆ GetInitTime(). Float_t TQueryResult::GetInitTime ; (; ); const. inline . Definition at line 139 of file TQueryResult.h. ◆ GetInputList(). TList * TQueryResult::GetInputList ; (; ). inline . Definition at line 125 of file TQueryResult.h. ◆ GetInputObject(). TObject * TQueryResult::GetInputObject ; (; const char * ; classname); const. Return first instance of class 'classname' in the input list. ; Useful to access TDSet, TEventList, ... ; Definition at line 516 of file TQueryResult.cxx. ◆ GetLibList(). const char * TQueryResult::GetLibList ; (; ); const. inline . Definition at line 134 of file TQueryResult.h. ◆ GetLogFile(). TMacro * TQueryResult::GetLogFile ; (; ); const. inline . Definition at line 131 of file TQueryResult.h. ◆ GetMergeTime(). Float_t TQueryResult::GetMergeTime ; (; ); const. inline . Definition at line 141 of file TQueryResult.h. ◆ GetNumMergers(). Int_t TQueryResult::GetNumMergers ; (; ); const. inline . Definition at line 145 of file TQueryResult.h. ◆ GetNumWrks(). Int_t TQueryResult::GetNumWrks ; (; ); const. inline . Definition at line 144 of file TQueryResult.h. ◆ GetOptions(). const char * TQueryResult::GetOptions ; (; ); const. inline . Definition at line 124 of file TQueryResult.h. ◆ GetOutputList(). TList * TQueryResult::GetOutputList ; (; ). inline . Definition at line 136 of file TQueryResult.h. ◆ GetParList(). const char * TQueryResult::GetParList ; (; ); const. i",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:12180,Testability,log,logline,12180,"clFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TQueryResult (Int_t seqnum, const char *opt, TList *inlist, Long64_t entries, Long64_t first, const char *selec);  Main constructor. ;  ; void AddInput (TObject *obj);  Add obj to the input list. ;  ; void AddLogLine (const char *logline);  Fill log file. ;  ; TQueryResult * CloneInfo ();  Return an instance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void RecordEnd (EQueryStatus status, TList *outlist=nullptr);  End of query settings. ;  ; void SaveSelector (const char *selec);  Save the selector header and implementation into the dedicated TMacro instances. ;  ; void SetArchived (const char *archfile);  Set (or update) query in archived state. ;  ; virtual void SetFinalized ();  ; virtual void SetInputList (TList *in, bool adopt=true);  Set / change the input list. ;  ; void SetMergeTime (Float_t mergetime);  ; void SetNumMergers (Int_t nmergers);  ; virtual void SetOutputList (TList *out, bool adopt=true);  Set / change the output list. ;  ; void SetPrepTime (Float_t preptime);  ; virtual void SetProcessInfo (Long64_t ent, Float_t cpu=0., Long64_t siz=-1, Float_t inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTer",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:12196,Testability,log,log,12196,"clFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TQueryResult (Int_t seqnum, const char *opt, TList *inlist, Long64_t entries, Long64_t first, const char *selec);  Main constructor. ;  ; void AddInput (TObject *obj);  Add obj to the input list. ;  ; void AddLogLine (const char *logline);  Fill log file. ;  ; TQueryResult * CloneInfo ();  Return an instance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void RecordEnd (EQueryStatus status, TList *outlist=nullptr);  End of query settings. ;  ; void SaveSelector (const char *selec);  Save the selector header and implementation into the dedicated TMacro instances. ;  ; void SetArchived (const char *archfile);  Set (or update) query in archived state. ;  ; virtual void SetFinalized ();  ; virtual void SetInputList (TList *in, bool adopt=true);  Set / change the input list. ;  ; void SetMergeTime (Float_t mergetime);  ; void SetNumMergers (Int_t nmergers);  ; virtual void SetOutputList (TList *out, bool adopt=true);  Set / change the output list. ;  ; void SetPrepTime (Float_t preptime);  ; virtual void SetProcessInfo (Long64_t ent, Float_t cpu=0., Long64_t siz=-1, Float_t inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTer",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:14042,Testability,log,log,14042," inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTermTime (Float_t termtime);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fArchived;  whether the query has been archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; TDatime fEnd;  time when processing ended ;  ; Long64_t fEntries;  number of entries processed ;  ; bool fFinalized;  whether Terminate has been run ;  ; Long64_t fFirst;  first entry processed ;  ; Float_t fInitTime;  Initialization time (seconds) (millisec precision) ;  ; TList * fInputList;  input list; contains also data sets, entry list, ... ;  ; TString fLibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fOptions;  processing options + aclic mode (< opt >#< aclic_mode >) ;  ; TList * fOutputList;  output list ;  ; TString fParList;  colon-separated list of PAR loaded at fStart ;  ; Float_t fPrepTime;  Prepare time (seconds) (millisec precision) ;  ; Float_t fProcTime;  Processing time (seconds) (millisec precision) ;  ; Float_t fRecvTime;  Transfer-to-client time (seconds) (millisec precision) ;  ; TString fResultFile;  URL of the file where results have been archived. ;  ; TMacro * fSelecHdr;  selector header file ;  ; TMacro * fSelecImp;  selector implementation file ;  ; Int_t fSeqNum;  query unique sequential number ;  ; TDatime fStart;  time when processing started ;  ; EQueryStatus fStatus;  query status ;  ; Float_t fTermTime;  Terminate time (seconds) (millisec precision) ;  ; Float_t fUsedCP",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:16635,Testability,log,logline,16635,"ra instead.; [legend]; Member Enumeration Documentation. ◆ EQueryStatus. enum TQueryResult::EQueryStatus. EnumeratorkAborted ; kSubmitted ; kRunning ; kStopped ; kCompleted . Definition at line 52 of file TQueryResult.h. Constructor & Destructor Documentation. ◆ TQueryResult() [1/2]. TQueryResult::TQueryResult ; (; Int_t ; seqnum, . const char * ; opt, . TList * ; inlist, . Long64_t ; entries, . Long64_t ; first, . const char * ; selec . ). protected . Main constructor. ; Definition at line 37 of file TQueryResult.cxx. ◆ TQueryResult() [2/2]. TQueryResult::TQueryResult ; (; ). inline . Definition at line 109 of file TQueryResult.h. ◆ ~TQueryResult(). TQueryResult::~TQueryResult ; (; ). override . Destructor. ; Definition at line 109 of file TQueryResult.cxx. Member Function Documentation. ◆ AddInput(). void TQueryResult::AddInput ; (; TObject * ; obj). protected . Add obj to the input list. ; Definition at line 294 of file TQueryResult.cxx. ◆ AddLogLine(). void TQueryResult::AddLogLine ; (; const char * ; logline). protected . Fill log file. ; Definition at line 285 of file TQueryResult.cxx. ◆ Browse(). void TQueryResult::Browse ; (; TBrowser * ; b = nullptr). overridevirtual . To support browsing of the results. ; Reimplemented from TObject.; Definition at line 419 of file TQueryResult.cxx. ◆ Class(). static TClass * TQueryResult::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQueryResult::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQueryResult::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 156 of file TQueryResult.h. ◆ CloneInfo(). TQueryResult * TQueryResult::CloneInfo ; (; ). protected . Return an instance of TQueryResult containing only the local info fields, i.e. ; no outputlist, liblist, dset, selectors, etc.. Used for fast retrieve of information about existing queries and their status. ; Definition a",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:16662,Testability,log,log,16662,"tation. ◆ EQueryStatus. enum TQueryResult::EQueryStatus. EnumeratorkAborted ; kSubmitted ; kRunning ; kStopped ; kCompleted . Definition at line 52 of file TQueryResult.h. Constructor & Destructor Documentation. ◆ TQueryResult() [1/2]. TQueryResult::TQueryResult ; (; Int_t ; seqnum, . const char * ; opt, . TList * ; inlist, . Long64_t ; entries, . Long64_t ; first, . const char * ; selec . ). protected . Main constructor. ; Definition at line 37 of file TQueryResult.cxx. ◆ TQueryResult() [2/2]. TQueryResult::TQueryResult ; (; ). inline . Definition at line 109 of file TQueryResult.h. ◆ ~TQueryResult(). TQueryResult::~TQueryResult ; (; ). override . Destructor. ; Definition at line 109 of file TQueryResult.cxx. Member Function Documentation. ◆ AddInput(). void TQueryResult::AddInput ; (; TObject * ; obj). protected . Add obj to the input list. ; Definition at line 294 of file TQueryResult.cxx. ◆ AddLogLine(). void TQueryResult::AddLogLine ; (; const char * ; logline). protected . Fill log file. ; Definition at line 285 of file TQueryResult.cxx. ◆ Browse(). void TQueryResult::Browse ; (; TBrowser * ; b = nullptr). overridevirtual . To support browsing of the results. ; Reimplemented from TObject.; Definition at line 419 of file TQueryResult.cxx. ◆ Class(). static TClass * TQueryResult::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQueryResult::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQueryResult::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 156 of file TQueryResult.h. ◆ CloneInfo(). TQueryResult * TQueryResult::CloneInfo ; (; ). protected . Return an instance of TQueryResult containing only the local info fields, i.e. ; no outputlist, liblist, dset, selectors, etc.. Used for fast retrieve of information about existing queries and their status. ; Definition at line 124 of file TQueryResult.cxx. ◆ DeclFileNam",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResult.html:27354,Testability,log,log,27354,"finition at line 61 of file TQueryResult.h. ◆ fEntries. Long64_t TQueryResult::fEntries. protected . number of entries processed ; Definition at line 65 of file TQueryResult.h. ◆ fFinalized. bool TQueryResult::fFinalized. protected . whether Terminate has been run ; Definition at line 74 of file TQueryResult.h. ◆ fFirst. Long64_t TQueryResult::fFirst. protected . first entry processed ; Definition at line 66 of file TQueryResult.h. ◆ fInitTime. Float_t TQueryResult::fInitTime. protected . Initialization time (seconds) (millisec precision) ; Definition at line 78 of file TQueryResult.h. ◆ fInputList. TList* TQueryResult::fInputList. protected . input list; contains also data sets, entry list, ... ; Definition at line 64 of file TQueryResult.h. ◆ fLibList. TString TQueryResult::fLibList. protected . blank-separated list of libs loaded at fStart ; Definition at line 71 of file TQueryResult.h. ◆ fLogFile. TMacro* TQueryResult::fLogFile. protected . file with log messages from the query ; Definition at line 68 of file TQueryResult.h. ◆ fMergeTime. Float_t TQueryResult::fMergeTime. protected . Merging time (seconds) (millisec precision) ; Definition at line 80 of file TQueryResult.h. ◆ fNumMergers. Int_t TQueryResult::fNumMergers. protected . Number of submergers. ; Definition at line 84 of file TQueryResult.h. ◆ fNumWrks. Int_t TQueryResult::fNumWrks. protected . Number of workers at start. ; Definition at line 83 of file TQueryResult.h. ◆ fOptions. TString TQueryResult::fOptions. protected . processing options + aclic mode (< opt >#< aclic_mode >) ; Definition at line 63 of file TQueryResult.h. ◆ fOutputList. TList* TQueryResult::fOutputList. protected . output list ; Definition at line 73 of file TQueryResult.h. ◆ fParList. TString TQueryResult::fParList. protected . colon-separated list of PAR loaded at fStart ; Definition at line 72 of file TQueryResult.h. ◆ fPrepTime. Float_t TQueryResult::fPrepTime. protected . Prepare time (seconds) (millisec precision) ; Definiti",MatchSource.WIKI,doc/master/classTQueryResult.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResult.html
https://root.cern/doc/master/classTQueryResultManager.html:4331,Availability,error,error,4331,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:4420,Availability,error,error,4420,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:4575,Availability,error,error,4575,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:4872,Availability,error,error,4872,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:9436,Availability,error,error,9436," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:4337,Integrability,message,message,4337,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:4878,Integrability,message,message,4878,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:6080,Integrability,message,message,6080,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:9442,Integrability,message,message,9442," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:9815,Integrability,message,message,9815," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:2570,Modifiability,inherit,inherited,2570,";  Try locking query area of session tagged sessiontag. ;  ; TList * PreviousQueries () const;  ; TList * Queries () const;  ; const char * QueryDir () const;  ; void RemoveQuery (const char *queryref, TList *otherlist=0);  Remove everything about query queryref; if defined 'otherlist' will containe the list of removed pointers (already deleted) ;  ; void RemoveQuery (TQueryResult *qr, Bool_t soft=kFALSE);  Remove everything about query qr. ;  ; void ResetTime ();  ; void SaveQuery (TProofQueryResult *qr, const char *fout=0);  Save current status of query 'qr' to file name fout. ;  ; void SaveQuery (TProofQueryResult *qr, Int_t mxq);  Save current query honouring the max number of queries allowed. ;  ; void ScanPreviousQueries (const char *dir);  Scan the queries directory for the results of previous queries. ;  ; Int_t SeqNum () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:3967,Modifiability,inherit,inheritance,3967,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:6178,Modifiability,inherit,inherits,6178,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:6295,Modifiability,inherit,inherits,6295,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:10316,Modifiability,inherit,inherited,10316,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddLogFile (TProofQueryResult *pq);  Add part of log file concerning TQueryResult pq to its macro container. ;  . Private Attributes; TStopwatch fCompute;  ; Int_t fDrawQueries;  ; Int_t fKeptQueries;  ; TProofLockPath * fLock;  ; FILE * fLogFile;  ; TList * fPreviousQueries;  ; TList * fQueries;  ; TString fQueryDir;  ; Int_t fSeqNum;  ; TString fSessionDir;  ; TString fSessionTag;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; ,",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:11266,Modifiability,inherit,inherited,11266,"om TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddLogFile (TProofQueryResult *pq);  Add part of log file concerning TQueryResult pq to its macro container. ;  . Private Attributes; TStopwatch fCompute;  ; Int_t fDrawQueries;  ; Int_t fKeptQueries;  ; TProofLockPath * fLock;  ; FILE * fLogFile;  ; TList * fPreviousQueries;  ; TList * fQueries;  ; TString fQueryDir;  ; Int_t fSeqNum;  ; TString fSessionDir;  ; TString fSessionTag;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQueryResultManager.h>. Inheritance diagram for TQueryResultManager:. This browser is not able to show SVG: try Firefox, Chrome, S",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:11907,Modifiability,inherit,inherited,11907,"KeptQueries;  ; TProofLockPath * fLock;  ; FILE * fLogFile;  ; TList * fPreviousQueries;  ; TList * fQueries;  ; TString fQueryDir;  ; Int_t fSeqNum;  ; TString fSessionDir;  ; TString fSessionTag;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQueryResultManager.h>. Inheritance diagram for TQueryResultManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQueryResultManager(). TQueryResultManager::TQueryResultManager ; (; const char * ; qdir, . const char * ; stag, . const char * ; sdir, . TProofLockPath * ; lck, . FILE * ; logfile = 0 . ). Constructor. ; Definition at line 42 of file TQueryResultManager.cxx. ◆ ~TQueryResultManager(). TQueryResultManager::~TQueryResultManager ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 62 of file TQueryResultManager.cxx. Member Function Documentation. ◆ AddLogFile(). void TQueryResultManager::AddLogFile ; (; TProofQueryResult * ; pq). private . Add pa",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:12006,Modifiability,inherit,inherited,12006,"KeptQueries;  ; TProofLockPath * fLock;  ; FILE * fLogFile;  ; TList * fPreviousQueries;  ; TList * fQueries;  ; TString fQueryDir;  ; Int_t fSeqNum;  ; TString fSessionDir;  ; TString fSessionTag;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQueryResultManager.h>. Inheritance diagram for TQueryResultManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQueryResultManager(). TQueryResultManager::TQueryResultManager ; (; const char * ; qdir, . const char * ; stag, . const char * ; sdir, . TProofLockPath * ; lck, . FILE * ; logfile = 0 . ). Constructor. ; Definition at line 42 of file TQueryResultManager.cxx. ◆ ~TQueryResultManager(). TQueryResultManager::~TQueryResultManager ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 62 of file TQueryResultManager.cxx. Member Function Documentation. ◆ AddLogFile(). void TQueryResultManager::AddLogFile ; (; TProofQueryResult * ; pq). private . Add pa",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:18270,Performance,load,loaded,18270,"; soft = kFALSE . ). Remove everything about query qr. ; If soft = TRUE leave a track in memory with the relevant info ; Definition at line 512 of file TQueryResultManager.cxx. ◆ ResetTime(). void TQueryResultManager::ResetTime ; (; ). inline . Definition at line 76 of file TQueryResultManager.h. ◆ SaveQuery() [1/2]. void TQueryResultManager::SaveQuery ; (; TProofQueryResult * ; qr, . const char * ; fout = 0 . ). Save current status of query 'qr' to file name fout. ; If fout == 0 (default) use the default name. ; Definition at line 450 of file TQueryResultManager.cxx. ◆ SaveQuery() [2/2]. void TQueryResultManager::SaveQuery ; (; TProofQueryResult * ; qr, . Int_t ; mxq . ). Save current query honouring the max number of queries allowed. ; Definition at line 683 of file TQueryResultManager.cxx. ◆ ScanPreviousQueries(). void TQueryResultManager::ScanPreviousQueries ; (; const char * ; dir). Scan the queries directory for the results of previous queries. ; The headers of the query results found are loaded in fPreviousQueries. The full query result can be retrieved via TProof::Retrieve. ; Definition at line 157 of file TQueryResultManager.cxx. ◆ SeqNum(). Int_t TQueryResultManager::SeqNum ; (; ); const. inline . Definition at line 58 of file TQueryResultManager.h. ◆ Streamer(). void TQueryResultManager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TQueryResultManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 84 of file TQueryResultManager.h. Member Data Documentation. ◆ fCompute. TStopwatch TQueryResultManager::fCompute. private . Definition at line 48 of file TQueryResultManager.h. ◆ fDrawQueries. Int_t TQueryResultManager::fDrawQueries. private . Definition at line 42 of file TQueryResultManager.h. ◆ fKeptQueries. Int_t TQueryResultManager::fKeptQueries. private . Definition at line 43 of file TQueryResultManager.h. ◆ fLock",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:5809,Security,hash,hash,5809," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:572,Testability,log,logfile,572,". ROOT: TQueryResultManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TQueryResultManager Class ReferencePROOF » PROOF kernel Libraries. ; Class managing the query-result area. ; Definition at line 35 of file TQueryResultManager.h. Public Member Functions;  TQueryResultManager (const char *qdir, const char *stag, const char *sdir, TProofLockPath *lck, FILE *logfile=0);  Constructor. ;  ;  ~TQueryResultManager () override;  Cleanup. ;  ; Int_t ApplyMaxQueries (Int_t mxq);  Scan the queries directory and remove the oldest ones (and relative dirs, if empty) in such a way only 'mxq' queries are kept. ;  ; Int_t CleanupQueriesDir ();  Remove all queries results referring to previous sessions. ;  ; Int_t CleanupSession (const char *sessiontag);  Cleanup query dir qdir. ;  ; Int_t DrawQueries () const;  ; Bool_t FinalizeQuery (TProofQueryResult *pq, TProof *proof, TVirtualProofPlayer *player);  Final steps after Process() to complete the TQueryResult instance. ;  ; Float_t GetCpuTime ();  ; Float_t GetRealTime ();  ; void IncrementDrawQueries ();  ; void IncrementSeqNum ();  ; TClass * IsA () const override;  ; Int_t KeptQueries () const;  ; TProofQueryResult * LocateQuery (TString queryref, Int_t &qry, TString &qdir);  Locate query referenced by queryref. ;  ; Int_t LockSession (const char *sessiontag, TProofLockPath **lck);  Try locking query area of session tagged sessiontag. ;  ; TList * PreviousQueries () const;  ; TList * Queries () const;  ; const char * QueryDir () const;  ; void RemoveQuery (const char *queryref, TList *otherlist=0);  Remove everything about query queryref; if defined 'otherlist' will containe the list of removed pointers (already deleted) ;  ; void RemoveQuery (TQueryResult *qr, Bool_t soft=kFALSE);  Remove everything about query qr. ;  ; ",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:10882,Testability,log,log,10882,"ptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddLogFile (TProofQueryResult *pq);  Add part of log file concerning TQueryResult pq to its macro container. ;  . Private Attributes; TStopwatch fCompute;  ; Int_t fDrawQueries;  ; Int_t fKeptQueries;  ; TProofLockPath * fLock;  ; FILE * fLogFile;  ; TList * fPreviousQueries;  ; TList * fQueries;  ; TString fQueryDir;  ; Int_t fSeqNum;  ; TString fSessionDir;  ; TString fSessionTag;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:12580,Testability,log,logfile,12580,"{ kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQueryResultManager.h>. Inheritance diagram for TQueryResultManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQueryResultManager(). TQueryResultManager::TQueryResultManager ; (; const char * ; qdir, . const char * ; stag, . const char * ; sdir, . TProofLockPath * ; lck, . FILE * ; logfile = 0 . ). Constructor. ; Definition at line 42 of file TQueryResultManager.cxx. ◆ ~TQueryResultManager(). TQueryResultManager::~TQueryResultManager ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 62 of file TQueryResultManager.cxx. Member Function Documentation. ◆ AddLogFile(). void TQueryResultManager::AddLogFile ; (; TProofQueryResult * ; pq). private . Add part of log file concerning TQueryResult pq to its macro container. ; Definition at line 72 of file TQueryResultManager.cxx. ◆ ApplyMaxQueries(). Int_t TQueryResultManager::ApplyMaxQueries ; (; Int_t ; mxq). Scan the queries directory and remove the oldest ones (and relative dirs, if empty) in such a way only 'mxq' queries are kept. ; Return 0 on success, -1 in case of problems ; Definition at line 236 of file TQueryResultManager.cxx. ◆ Class(). static TClass * TQueryResultManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name()",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQueryResultManager.html:13028,Testability,log,log,13028,"(int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQueryResultManager.h>. Inheritance diagram for TQueryResultManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQueryResultManager(). TQueryResultManager::TQueryResultManager ; (; const char * ; qdir, . const char * ; stag, . const char * ; sdir, . TProofLockPath * ; lck, . FILE * ; logfile = 0 . ). Constructor. ; Definition at line 42 of file TQueryResultManager.cxx. ◆ ~TQueryResultManager(). TQueryResultManager::~TQueryResultManager ; (; ). override . Cleanup. ; Not really necessary since after this dtor there is no live anyway. ; Definition at line 62 of file TQueryResultManager.cxx. Member Function Documentation. ◆ AddLogFile(). void TQueryResultManager::AddLogFile ; (; TProofQueryResult * ; pq). private . Add part of log file concerning TQueryResult pq to its macro container. ; Definition at line 72 of file TQueryResultManager.cxx. ◆ ApplyMaxQueries(). Int_t TQueryResultManager::ApplyMaxQueries ; (; Int_t ; mxq). Scan the queries directory and remove the oldest ones (and relative dirs, if empty) in such a way only 'mxq' queries are kept. ; Return 0 on success, -1 in case of problems ; Definition at line 236 of file TQueryResultManager.cxx. ◆ Class(). static TClass * TQueryResultManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQueryResultManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQueryResultManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 84 of file TQueryResultManager.h. ◆ CleanupQueriesDir(). Int_t TQueryResultManager::CleanupQueriesDir ; (; ). Remove all queries results referring to previous sessions. ; Definition at line 107 of file TQuer",MatchSource.WIKI,doc/master/classTQueryResultManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html
https://root.cern/doc/master/classTQUndoManager.html:13155,Availability,error,error,13155,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:13244,Availability,error,error,13244,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out.",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:13399,Availability,error,error,13399," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:13696,Availability,error,error,13696,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:16959,Availability,error,error,16959," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Co",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:13161,Integrability,message,message,13161,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:13702,Integrability,message,message,13702,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:14492,Integrability,message,message,14492,". ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator de",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:16965,Integrability,message,message,16965," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Co",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:17338,Integrability,message,message,17338," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const cha",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:1942,Modifiability,inherit,inherited,1942,"nt to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:4739,Modifiability,inherit,inherited,4739,"rogress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:7680,Modifiability,inherit,inherited,7680,erride;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; virtual TObject * Remove (TObjLink *lnk);  Remove object link (and therefore the object it contains) from the list. ;  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this ,MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:8551,Modifiability,inherit,inherited,8551," Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:8897,Modifiability,inherit,inherit,8897,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:11955,Modifiability,inherit,inherited,11955," the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:12860,Modifiability,inherit,inheritance,12860," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:14590,Modifiability,inherit,inherits,14590," action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void *vp);  Only called by plac",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:14707,Modifiability,inherit,inherits,14707,"const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void *vp);  Only called by placement new when throwing an exception. ;  ; void operator delete[] (void *ptr);  Operator delete []. ;  ; void operat",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:17377,Modifiability,inherit,inherited,17377,"ual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:19539,Modifiability,inherit,inherited,19539,"ListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQCommand; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TQCommand * GetCommand ();  Return a command which is doing redo/undo action. ;  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:19842,Modifiability,inherit,inherited,19842,"g);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQCommand; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TQCommand * GetCommand ();  Return a command which is doing redo/undo action. ;  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of t",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:20051,Modifiability,inherit,inherited,20051,"g);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQCommand; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TQCommand * GetCommand ();  Return a command which is doing redo/undo action. ;  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of t",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:20746,Modifiability,inherit,inherited,20746,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:21297,Modifiability,inherit,inherited,21297,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:21815,Modifiability,inherit,inherited,21815,"constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:23136,Modifiability,inherit,inherited,23136," const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print collection entry. ;  ;  Protected Member Functions inherited from TQCommand; virtual void Init (const char *cl, void *object, const char *redo, const char *undo);  Common protected method used in several constructors. ;  ; void PrintCollectionHeader (Option_t *option) const override;  Print collection header. ;  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *op",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:23429,Modifiability,inherit,inherited,23429,"ceiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print collection entry. ;  ;  Protected Member Functions inherited from TQCommand; virtual void Init (const char *cl, void *object, const char *redo, const char *undo);  Common protected method used in several constructors. ;  ; void PrintCollectionHeader (Option_t *option) const override;  Print collection header. ;  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollect",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:24417,Modifiability,inherit,inherited,24417,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * f",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:24527,Modifiability,inherit,inherited,24527,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * f",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:24814,Modifiability,inherit,inherited,24814,"mpare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attribut",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:25025,Modifiability,inherit,inherited,25025,"ev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQO",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:25286,Modifiability,inherit,inherited,25286,"rn the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:25579,Modifiability,inherit,inherited,25579,"rn the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:25877,Modifiability,inherit,inherited,25877,"rn the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:25949,Modifiability,inherit,inherited,25949,"rn the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:26033,Modifiability,inherit,inherited,26033,"rn the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:26261,Modifiability,inherit,inherited,26261,"nnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:26330,Modifiability,inherit,inherited,26330,"nnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:26437,Modifiability,inherit,inherited,26437,"nnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:27078,Modifiability,inherit,inherited,27078,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:27227,Modifiability,inherit,inherited,27227,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:27360,Modifiability,inherit,inherited,27360,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:27466,Modifiability,inherit,inherited,27466,"tCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSigna",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:28322,Modifiability,inherit,inherited,28322,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TQCommand.h>. Inheritance diagram for TQUndoManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQUndoManager(). TQUndoManager::TQUndoManager ; (; ). Constructor. ; Definition at line 877 of file TQCommand.cxx. ◆ ~TQUndoManager(). TQUndoManager::~TQUndoManager ; (; ). virtual . Destructor. ; Definition at line 889 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQUndoManager::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TQCommand.; Definition at line 119 of file TQCommand.h. ◆ Add() [2/2]. void TQUndoManager::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the stack of commands. ; Command's redo action will be executed.; option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" -",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:24743,Performance,perform,perform,24743,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * f",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:25621,Performance,cache,cache,25621,"rn the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:11661,Safety,safe,safe,11661,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:9808,Security,hash,hash,9808," collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collecti",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:11296,Security,access,accessible,11296," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:11636,Security,access,access,11636,"d Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:21161,Security,access,accessible,21161,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Cla",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:1232,Testability,log,logging,1232,"ions |; Protected Member Functions |; Protected Attributes |; List of all members ; TQUndoManager Class Reference. ; Recorder of operations for undo and redo. ; Definition at line 103 of file TQCommand.h. Public Member Functions;  TQUndoManager ();  Constructor. ;  ; virtual ~TQUndoManager ();  Destructor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the stack of commands. ;  ; Bool_t CanRedo () const override;  Returns kTRUE if redo action is possible. ;  ; Bool_t CanUndo () const override;  Returns kTRUE if undo action is possible. ;  ; virtual void CurrentChanged (TQCommand *c);  emit signal ;  ; TQCommand * GetCurrent () const;  Returns the last executed command. ;  ; TQCommand * GetCursor () const;  Returns a command correspondent to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *r",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:1614,Testability,log,logging,1614,"ide;  Add command to the stack of commands. ;  ; Bool_t CanRedo () const override;  Returns kTRUE if redo action is possible. ;  ; Bool_t CanUndo () const override;  Returns kTRUE if undo action is possible. ;  ; virtual void CurrentChanged (TQCommand *c);  emit signal ;  ; TQCommand * GetCurrent () const;  Returns the last executed command. ;  ; TQCommand * GetCursor () const;  Returns a command correspondent to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress com",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:31395,Testability,log,logging,31395,"e TQCommand.cxx. ◆ DeclFileName(). static const char * TQUndoManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 133 of file TQCommand.h. ◆ GetCurrent(). TQCommand * TQUndoManager::GetCurrent ; (; ); const. Returns the last executed command. ; Definition at line 1121 of file TQCommand.cxx. ◆ GetCursor(). TQCommand * TQUndoManager::GetCursor ; (; ); const. Returns a command correspondent to the current cursor position in stack. ; Definition at line 1129 of file TQCommand.cxx. ◆ GetLimit(). UInt_t TQUndoManager::GetLimit ; (; ); const. Returns a maximum number of commands which could be located in stack. ; Definition at line 1145 of file TQCommand.cxx. ◆ IsA(). TClass * TQUndoManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TQCommand.; Definition at line 133 of file TQCommand.h. ◆ IsLogging(). Bool_t TQUndoManager::IsLogging ; (; ); const. Returns kTRUE if logging is ON. ; Definition at line 1113 of file TQCommand.cxx. ◆ ls(). void TQUndoManager::ls ; (; Option_t * ; option = """"); const. overridevirtual . Lists all commands in stack. ; Reimplemented from TQCommand.; Definition at line 901 of file TQCommand.cxx. ◆ PrintCollectionEntry(). void TQUndoManager::PrintCollectionEntry ; (; TObject * ; entry, . Option_t * ; option, . Int_t ; recurse . ); const. overrideprotectedvirtual . Print collection entry. ; Reimplemented from TCollection.; Definition at line 921 of file TQCommand.cxx. ◆ Redo(). void TQUndoManager::Redo ; (; Option_t * ; option = """"). overridevirtual . Performs redo action. Move cursor position forward in history stack. ; Reimplemented from TQCommand.; Definition at line 1053 of file TQCommand.cxx. ◆ SetLimit(). void TQUndoManager::SetLimit ; (; UInt_t ; limit). virtual . Returns a maximum number of commands which could be located in stack. ; Definition at line 1137 of file TQCommand.cxx. ◆ SetLogging(). void TQUndoManager",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:32449,Testability,log,logging,32449,"mand.cxx. ◆ ls(). void TQUndoManager::ls ; (; Option_t * ; option = """"); const. overridevirtual . Lists all commands in stack. ; Reimplemented from TQCommand.; Definition at line 901 of file TQCommand.cxx. ◆ PrintCollectionEntry(). void TQUndoManager::PrintCollectionEntry ; (; TObject * ; entry, . Option_t * ; option, . Int_t ; recurse . ); const. overrideprotectedvirtual . Print collection entry. ; Reimplemented from TCollection.; Definition at line 921 of file TQCommand.cxx. ◆ Redo(). void TQUndoManager::Redo ; (; Option_t * ; option = """"). overridevirtual . Performs redo action. Move cursor position forward in history stack. ; Reimplemented from TQCommand.; Definition at line 1053 of file TQCommand.cxx. ◆ SetLimit(). void TQUndoManager::SetLimit ; (; UInt_t ; limit). virtual . Returns a maximum number of commands which could be located in stack. ; Definition at line 1137 of file TQCommand.cxx. ◆ SetLogging(). void TQUndoManager::SetLogging ; (; Bool_t ; on = kTRUE). virtual . Start logging. ; Delete all previous log records Note: logging is not implemented yet ; Definition at line 938 of file TQCommand.cxx. ◆ Streamer(). void TQUndoManager::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TQCommand. ◆ StreamerNVirtual(). void TQUndoManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 133 of file TQCommand.h. ◆ Undo(). void TQUndoManager::Undo ; (; Option_t * ; option = """"). overridevirtual . Performs undo action. Move cursor position backward in history stack. ; Reimplemented from TQCommand.; Definition at line 1021 of file TQCommand.cxx. Member Data Documentation. ◆ fCurrent. TQCommand* TQUndoManager::fCurrent. protected . Definition at line 107 of file TQCommand.h. ◆ fCursor. TObjLink* TQUndoManager::fCursor. protected . Definition at line 106 of file TQCommand.h. ◆ fLimit. UInt_t TQUndoManager::fLimit. protected . Definition at lin",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:32480,Testability,log,log,32480," = """"); const. overridevirtual . Lists all commands in stack. ; Reimplemented from TQCommand.; Definition at line 901 of file TQCommand.cxx. ◆ PrintCollectionEntry(). void TQUndoManager::PrintCollectionEntry ; (; TObject * ; entry, . Option_t * ; option, . Int_t ; recurse . ); const. overrideprotectedvirtual . Print collection entry. ; Reimplemented from TCollection.; Definition at line 921 of file TQCommand.cxx. ◆ Redo(). void TQUndoManager::Redo ; (; Option_t * ; option = """"). overridevirtual . Performs redo action. Move cursor position forward in history stack. ; Reimplemented from TQCommand.; Definition at line 1053 of file TQCommand.cxx. ◆ SetLimit(). void TQUndoManager::SetLimit ; (; UInt_t ; limit). virtual . Returns a maximum number of commands which could be located in stack. ; Definition at line 1137 of file TQCommand.cxx. ◆ SetLogging(). void TQUndoManager::SetLogging ; (; Bool_t ; on = kTRUE). virtual . Start logging. ; Delete all previous log records Note: logging is not implemented yet ; Definition at line 938 of file TQCommand.cxx. ◆ Streamer(). void TQUndoManager::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TQCommand. ◆ StreamerNVirtual(). void TQUndoManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 133 of file TQCommand.h. ◆ Undo(). void TQUndoManager::Undo ; (; Option_t * ; option = """"). overridevirtual . Performs undo action. Move cursor position backward in history stack. ; Reimplemented from TQCommand.; Definition at line 1021 of file TQCommand.cxx. Member Data Documentation. ◆ fCurrent. TQCommand* TQUndoManager::fCurrent. protected . Definition at line 107 of file TQCommand.h. ◆ fCursor. TObjLink* TQUndoManager::fCursor. protected . Definition at line 106 of file TQCommand.h. ◆ fLimit. UInt_t TQUndoManager::fLimit. protected . Definition at line 108 of file TQCommand.h. ◆ fLogBook. TList* TQUndoManager::fLog",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:32498,Testability,log,logging,32498," = """"); const. overridevirtual . Lists all commands in stack. ; Reimplemented from TQCommand.; Definition at line 901 of file TQCommand.cxx. ◆ PrintCollectionEntry(). void TQUndoManager::PrintCollectionEntry ; (; TObject * ; entry, . Option_t * ; option, . Int_t ; recurse . ); const. overrideprotectedvirtual . Print collection entry. ; Reimplemented from TCollection.; Definition at line 921 of file TQCommand.cxx. ◆ Redo(). void TQUndoManager::Redo ; (; Option_t * ; option = """"). overridevirtual . Performs redo action. Move cursor position forward in history stack. ; Reimplemented from TQCommand.; Definition at line 1053 of file TQCommand.cxx. ◆ SetLimit(). void TQUndoManager::SetLimit ; (; UInt_t ; limit). virtual . Returns a maximum number of commands which could be located in stack. ; Definition at line 1137 of file TQCommand.cxx. ◆ SetLogging(). void TQUndoManager::SetLogging ; (; Bool_t ; on = kTRUE). virtual . Start logging. ; Delete all previous log records Note: logging is not implemented yet ; Definition at line 938 of file TQCommand.cxx. ◆ Streamer(). void TQUndoManager::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TQCommand. ◆ StreamerNVirtual(). void TQUndoManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 133 of file TQCommand.h. ◆ Undo(). void TQUndoManager::Undo ; (; Option_t * ; option = """"). overridevirtual . Performs undo action. Move cursor position backward in history stack. ; Reimplemented from TQCommand.; Definition at line 1021 of file TQCommand.cxx. Member Data Documentation. ◆ fCurrent. TQCommand* TQUndoManager::fCurrent. protected . Definition at line 107 of file TQCommand.h. ◆ fCursor. TObjLink* TQUndoManager::fCursor. protected . Definition at line 106 of file TQCommand.h. ◆ fLimit. UInt_t TQUndoManager::fLimit. protected . Definition at line 108 of file TQCommand.h. ◆ fLogBook. TList* TQUndoManager::fLog",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:340,Usability,undo,undo,340,". ROOT: TQUndoManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TQUndoManager Class Reference. ; Recorder of operations for undo and redo. ; Definition at line 103 of file TQCommand.h. Public Member Functions;  TQUndoManager ();  Constructor. ;  ; virtual ~TQUndoManager ();  Destructor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the stack of commands. ;  ; Bool_t CanRedo () const override;  Returns kTRUE if redo action is possible. ;  ; Bool_t CanUndo () const override;  Returns kTRUE if undo action is possible. ;  ; virtual void CurrentChanged (TQCommand *c);  emit signal ;  ; TQCommand * GetCurrent () const;  Returns the last executed command. ;  ; TQCommand * GetCursor () const;  Returns a command correspondent to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullpt",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:773,Usability,undo,undo,773,". ROOT: TQUndoManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TQUndoManager Class Reference. ; Recorder of operations for undo and redo. ; Definition at line 103 of file TQCommand.h. Public Member Functions;  TQUndoManager ();  Constructor. ;  ; virtual ~TQUndoManager ();  Destructor. ;  ; void Add (TObject *obj) override;  ; void Add (TObject *obj, Option_t *opt) override;  Add command to the stack of commands. ;  ; Bool_t CanRedo () const override;  Returns kTRUE if redo action is possible. ;  ; Bool_t CanUndo () const override;  Returns kTRUE if undo action is possible. ;  ; virtual void CurrentChanged (TQCommand *c);  emit signal ;  ; TQCommand * GetCurrent () const;  Returns the last executed command. ;  ; TQCommand * GetCursor () const;  Returns a command correspondent to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullpt",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:1851,Usability,undo,undo,1851,"e. ;  ; virtual void CurrentChanged (TQCommand *c);  emit signal ;  ; TQCommand * GetCurrent () const;  Returns the last executed command. ;  ; TQCommand * GetCursor () const;  Returns a command correspondent to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the comm",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:2064,Usability,undo,undo,2064,"nt to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:2221,Usability,undo,undo,2221,"ing () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Return",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:2926,Usability,undo,undo,2926,"ack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtu",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:3003,Usability,undo,undo,3003,"har *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Un",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:3291,Usability,undo,undo,3291,"nd ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:3495,Usability,undo,undo,3495,"mmands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:3572,Usability,undo,undo,3572,"void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets des",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:3813,Usability,undo,undo,3813," command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which undo redo actions are applied. ;  ; TQConnection * GetRedo () const;  ; Long_t * GetRedoArgs () const;  Returns a pointer to array of redo arguments. ;  ; const char * GetRedoName () const;  Returns the name of redo command. ;  ; Int_t GetStatus () const;  Returns a number of sequential undo or redo operations. ;  ; const char * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:4330,Usability,undo,undo,4330,"har * GetTitle () const override;  Returns command description. ;  ; TQConnection * GetUndo () const;  ; Long_t * GetUndoArgs () const;  Returns a pointer to array of undo arguments. ;  ; const char * GetUndoName () const;  Returns the name of undo command. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object befor",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:4627,Usability,undo,undo,4627,"t override;  Equal comparison. ;  ; Bool_t IsExecuting () const;  Returns kTRUE if command execution is in progress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at t",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:19792,Usability,undo,undo,19792,"ListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQCommand; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TQCommand * GetCommand ();  Return a command which is doing redo/undo action. ;  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:23241,Usability,undo,undo,23241," const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print collection entry. ;  ;  Protected Member Functions inherited from TQCommand; virtual void Init (const char *cl, void *object, const char *redo, const char *undo);  Common protected method used in several constructors. ;  ; void PrintCollectionHeader (Option_t *option) const override;  Print collection header. ;  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *op",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:29764,Usability,undo,undo,29764,"(). TQUndoManager::~TQUndoManager ; (; ). virtual . Destructor. ; Definition at line 889 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQUndoManager::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TQCommand.; Definition at line 119 of file TQCommand.h. ◆ Add() [2/2]. void TQUndoManager::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the stack of commands. ; Command's redo action will be executed.; option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" - input command will be compressed . Reimplemented from TQCommand.; Definition at line 959 of file TQCommand.cxx. ◆ CanRedo(). Bool_t TQUndoManager::CanRedo ; (; ); const. overridevirtual . Returns kTRUE if redo action is possible. ; Reimplemented from TQCommand.; Definition at line 1085 of file TQCommand.cxx. ◆ CanUndo(). Bool_t TQUndoManager::CanUndo ; (; ); const. overridevirtual . Returns kTRUE if undo action is possible. ; Reimplemented from TQCommand.; Definition at line 1099 of file TQCommand.cxx. ◆ Class(). static TClass * TQUndoManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TQUndoManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TQUndoManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 133 of file TQCommand.h. ◆ CurrentChanged(). void TQUndoManager::CurrentChanged ; (; TQCommand * ; c). virtual . emit signal ; Definition at line 1013 of file TQCommand.cxx. ◆ DeclFileName(). static const char * TQUndoManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 133 of file TQCommand.h. ◆ GetCurrent(). TQCommand * TQUndoManager::GetCurrent ; (; ); const. Returns the last executed command. ; Definition at line 1121 of file TQCommand.cxx. ◆ GetCursor(",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTQUndoManager.html:33008,Usability,undo,undo,33008,"; (; Option_t * ; option = """"). overridevirtual . Performs redo action. Move cursor position forward in history stack. ; Reimplemented from TQCommand.; Definition at line 1053 of file TQCommand.cxx. ◆ SetLimit(). void TQUndoManager::SetLimit ; (; UInt_t ; limit). virtual . Returns a maximum number of commands which could be located in stack. ; Definition at line 1137 of file TQCommand.cxx. ◆ SetLogging(). void TQUndoManager::SetLogging ; (; Bool_t ; on = kTRUE). virtual . Start logging. ; Delete all previous log records Note: logging is not implemented yet ; Definition at line 938 of file TQCommand.cxx. ◆ Streamer(). void TQUndoManager::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TQCommand. ◆ StreamerNVirtual(). void TQUndoManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 133 of file TQCommand.h. ◆ Undo(). void TQUndoManager::Undo ; (; Option_t * ; option = """"). overridevirtual . Performs undo action. Move cursor position backward in history stack. ; Reimplemented from TQCommand.; Definition at line 1021 of file TQCommand.cxx. Member Data Documentation. ◆ fCurrent. TQCommand* TQUndoManager::fCurrent. protected . Definition at line 107 of file TQCommand.h. ◆ fCursor. TObjLink* TQUndoManager::fCursor. protected . Definition at line 106 of file TQCommand.h. ◆ fLimit. UInt_t TQUndoManager::fLimit. protected . Definition at line 108 of file TQCommand.h. ◆ fLogBook. TList* TQUndoManager::fLogBook. protected . Definition at line 109 of file TQCommand.h. ◆ fLogging. Bool_t TQUndoManager::fLogging. protected . Definition at line 110 of file TQCommand.h. Libraries for TQUndoManager:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TQCommand.h; core/base/src/TQCommand.cxx. TQUndoManager. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTQUndoManager.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html
https://root.cern/doc/master/classTrack.html:2175,Availability,error,error,2175,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:2264,Availability,error,error,2264,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:2419,Availability,error,error,2419,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:2716,Availability,error,error,2716,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:7390,Availability,error,error,7390,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TRefArray fHits;  ; Int_t fNhit;  ; Float_t fPx;  ; Float_t fPy;  ; Float_t fPz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSi",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:2181,Integrability,message,message,2181,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:2722,Integrability,message,message,2722,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:3924,Integrability,message,message,3924,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:7396,Integrability,message,message,7396,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TRefArray fHits;  ; Int_t fNhit;  ; Float_t fPx;  ; Float_t fPy;  ; Float_t fPz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSi",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:7769,Integrability,message,message,7769,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TRefArray fHits;  ; Int_t fNhit;  ; Float_t fPx;  ; Float_t fPy;  ; Float_t fPz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu =",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:414,Modifiability,inherit,inherited,414,". ROOT: Track Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; Track Class Reference. . Definition at line 30 of file JetEvent.h. Public Member Functions;  Track ();  ;  ~Track () override;  ; TRefArray & GetHits ();  ; Int_t GetNhit () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:1811,Modifiability,inherit,inheritance,1811,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:4022,Modifiability,inherit,inherits,4022,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:4139,Modifiability,inherit,inherits,4139,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:8198,Modifiability,inherit,inherited,8198,"TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TRefArray fHits;  ; Int_t fNhit;  ; Float_t fPx;  ; Float_t fPy;  ; Float_t fPz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:8854,Modifiability,inherit,inherited,8854,"lptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TRefArray fHits;  ; Int_t fNhit;  ; Float_t fPx;  ; Float_t fPy;  ; Float_t fPz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/JetEvent.h>. Inheritance diagram for Track:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Track(). Track::Track ; (; ). inl",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:9357,Modifiability,inherit,inherited,9357," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/JetEvent.h>. Inheritance diagram for Track:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Track(). Track::Track ; (; ). inline . Definition at line 40 of file JetEvent.h. ◆ ~Track(). Track::~Track ; (; ). inlineoverride . Definition at line 41 of file JetEvent.h. Member Function Documentation. ◆ GetHits(). TRefArray & Track::GetHits ; (; ). inline . Definition at line 43 of file JetEvent.h. ◆ GetNhit(). Int_t Track::GetNhit ; (; ); const. inline . Definition at line 42 of file JetEvent.h. Member Data Documentation. ◆ fHits. TRefArray Track::fHits. Definition at line 37 of file JetEvent.h. ◆ fNhit. Int_t Track::fNhit. Definition at l",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:9456,Modifiability,inherit,inherited,9456," 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/JetEvent.h>. Inheritance diagram for Track:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Track(). Track::Track ; (; ). inline . Definition at line 40 of file JetEvent.h. ◆ ~Track(). Track::~Track ; (; ). inlineoverride . Definition at line 41 of file JetEvent.h. Member Function Documentation. ◆ GetHits(). TRefArray & Track::GetHits ; (; ). inline . Definition at line 43 of file JetEvent.h. ◆ GetNhit(). Int_t Track::GetNhit ; (; ); const. inline . Definition at line 42 of file JetEvent.h. Member Data Documentation. ◆ fHits. TRefArray Track::fHits. Definition at line 37 of file JetEvent.h. ◆ fNhit. Int_t Track::fNhit. Definition at l",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTrack.html:3653,Security,hash,hash,3653," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTrack.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTrack.html
https://root.cern/doc/master/classTRadialGradient.html:8539,Availability,error,error,8539,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:8628,Availability,error,error,8628,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:8783,Availability,error,error,8783,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:9080,Availability,error,error,9080,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:13164,Availability,error,error,13164,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColorGradient; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr V",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:8545,Integrability,message,message,8545,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:9086,Integrability,message,message,9086,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:10076,Integrability,message,message,10076,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:13170,Integrability,message,message,13170,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColorGradient; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr V",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:13543,Integrability,message,message,13543," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColorGradient; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColor; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateColorsCircle (Int_t offset, const char *name, UChar_t *rgb);  Create the ""circle"" colors in the color wheel. ;  ; sta",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:16114,Integrability,depend,dependent,16114," Number, Double_t *Stops, Double_t *Red, Double_t *Green, Double_t *Blue, UInt_t NColors, Float_t alpha=1., Bool_t setPalette=kTRUE);  Static function creating a color table with several connected linear gradients. ;  ; static const char * DeclFileName ();  ; static Bool_t DefinedColors (Int_t set_always_on=0);  Static method returning kTRUE if some new colors have been defined after initialisation or since the last call to this method. ;  ; static Int_t GetColor (const char *hexcolor);  Static method returning color number for color specified by hex color string of form: ""#rrggbb"", where rr, gg and bb are in hex between [0,FF], e.g. ;  ; static Int_t GetColor (Float_t r, Float_t g, Float_t b, Float_t a=1.);  Static method returning color number for color specified by r, g and b. ;  ; static Int_t GetColor (Int_t r, Int_t g, Int_t b, Float_t a=1.);  Static method returning color number for color specified by r, g and b. ;  ; static Int_t GetColor (ULong_t pixel);  Static method returning color number for color specified by system dependent pixel value. ;  ; static Int_t GetColorBright (Int_t color);  Static function: Returns the bright color number corresponding to n If the TColor object does not exist, it is created at a free color index. ;  ; static Int_t GetColorByName (const char *colorname);  Static method returning color index for a color specified by name. ;  ; static Int_t GetColorDark (Int_t color);  Static function: Returns the dark color number corresponding to n If the TColor object does not exist, it is created at a free color index. ;  ; static Int_t GetColorPalette (Int_t i);  Static function returning the color number i in current palette. ;  ; static Int_t GetColorTransparent (Int_t color, Float_t a);  Static function: Returns the transparent color number corresponding to n. ;  ; static Int_t GetFirstFreeColorIndex ();  Static function: Returns the first free color greater in the list of colors. ;  ; static Int_t GetFreeColorIndex ();  Static functio",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:18926,Integrability,depend,dependent,18926,"e RGB from HLS. ;  ; static void HLS2RGB (Int_t h, Int_t l, Int_t s, Int_t &r, Int_t &g, Int_t &b);  Static method to compute RGB from HLS. ;  ; static void HLStoRGB (Float_t h, Float_t l, Float_t s, Float_t &r, Float_t &g, Float_t &b);  ; static void HSV2RGB (Float_t h, Float_t s, Float_t v, Float_t &r, Float_t &g, Float_t &b);  Static method to compute RGB from HSV: ;  ; static void InitializeColors ();  Initialize colors used by the TCanvas based graphics (via TColor objects). ;  ; static void InvertPalette ();  Invert the current color palette. ;  ; static Bool_t IsGrayscale ();  Return whether all colors return grayscale values. ;  ; static void ListColors (Int_t ci1=0, Int_t ci2=0, Bool_t showEmpty=kFALSE);  List nb colors from the color index ci. ;  ; static ULong_t Number2Pixel (Int_t ci);  Static method that given a color index number, returns the corresponding pixel value. ;  ; static void Pixel2RGB (ULong_t pixel, Float_t &r, Float_t &g, Float_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static void Pixel2RGB (ULong_t pixel, Int_t &r, Int_t &g, Int_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static const char * PixelAsHexString (ULong_t pixel);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to a hexadecimal string. ;  ; static void RGB2HLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HLS (Int_t r, Int_t g, Int_t b, Int_t &h, Int_t &l, Int_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HSV (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &s, Float_t &v);  Static method to compute HSV from RGB. ;  ; static ULong_t RGB2Pixel (Float_t r, Float_t g, Float_t b);  Convert r,g,b to graphics system",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:19130,Integrability,depend,dependent,19130," &r, Float_t &g, Float_t &b);  ; static void HSV2RGB (Float_t h, Float_t s, Float_t v, Float_t &r, Float_t &g, Float_t &b);  Static method to compute RGB from HSV: ;  ; static void InitializeColors ();  Initialize colors used by the TCanvas based graphics (via TColor objects). ;  ; static void InvertPalette ();  Invert the current color palette. ;  ; static Bool_t IsGrayscale ();  Return whether all colors return grayscale values. ;  ; static void ListColors (Int_t ci1=0, Int_t ci2=0, Bool_t showEmpty=kFALSE);  List nb colors from the color index ci. ;  ; static ULong_t Number2Pixel (Int_t ci);  Static method that given a color index number, returns the corresponding pixel value. ;  ; static void Pixel2RGB (ULong_t pixel, Float_t &r, Float_t &g, Float_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static void Pixel2RGB (ULong_t pixel, Int_t &r, Int_t &g, Int_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static const char * PixelAsHexString (ULong_t pixel);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to a hexadecimal string. ;  ; static void RGB2HLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HLS (Int_t r, Int_t g, Int_t b, Int_t &h, Int_t &l, Int_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HSV (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &s, Float_t &v);  Static method to compute HSV from RGB. ;  ; static ULong_t RGB2Pixel (Float_t r, Float_t g, Float_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static ULong_t RGB2Pixel (Int_t r, Int_t g, Int_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static void RGBtoHLS (Float_t r, Float_t g, Float_t b, Float_t",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:19319,Integrability,depend,dependent,19319,";  Initialize colors used by the TCanvas based graphics (via TColor objects). ;  ; static void InvertPalette ();  Invert the current color palette. ;  ; static Bool_t IsGrayscale ();  Return whether all colors return grayscale values. ;  ; static void ListColors (Int_t ci1=0, Int_t ci2=0, Bool_t showEmpty=kFALSE);  List nb colors from the color index ci. ;  ; static ULong_t Number2Pixel (Int_t ci);  Static method that given a color index number, returns the corresponding pixel value. ;  ; static void Pixel2RGB (ULong_t pixel, Float_t &r, Float_t &g, Float_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static void Pixel2RGB (ULong_t pixel, Int_t &r, Int_t &g, Int_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static const char * PixelAsHexString (ULong_t pixel);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to a hexadecimal string. ;  ; static void RGB2HLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HLS (Int_t r, Int_t g, Int_t b, Int_t &h, Int_t &l, Int_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HSV (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &s, Float_t &v);  Static method to compute HSV from RGB. ;  ; static ULong_t RGB2Pixel (Float_t r, Float_t g, Float_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static ULong_t RGB2Pixel (Int_t r, Int_t g, Int_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static void RGBtoHLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  ; static Bool_t SaveColor (std::ostream &out, Int_t ci);  Save a color with index > 228 as a C++ statement(s) on output stream out. ;  ; static void SetColorThreshold (F",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:19934,Integrability,depend,dependent,19934," Float_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static void Pixel2RGB (ULong_t pixel, Int_t &r, Int_t &g, Int_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static const char * PixelAsHexString (ULong_t pixel);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to a hexadecimal string. ;  ; static void RGB2HLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HLS (Int_t r, Int_t g, Int_t b, Int_t &h, Int_t &l, Int_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HSV (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &s, Float_t &v);  Static method to compute HSV from RGB. ;  ; static ULong_t RGB2Pixel (Float_t r, Float_t g, Float_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static ULong_t RGB2Pixel (Int_t r, Int_t g, Int_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static void RGBtoHLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  ; static Bool_t SaveColor (std::ostream &out, Int_t ci);  Save a color with index > 228 as a C++ statement(s) on output stream out. ;  ; static void SetColorThreshold (Float_t t);  This method specifies the color threshold used by GetColor to retrieve a color. ;  ; static void SetGrayscale (Bool_t set=kTRUE);  Set whether all colors should return grayscale values. ;  ; static void SetPalette (Int_t ncolors, Int_t *colors, Float_t alpha=1.);  Static function. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:20050,Integrability,depend,dependent,20050,"xel()) to r,g,b triplet. ;  ; static void Pixel2RGB (ULong_t pixel, Int_t &r, Int_t &g, Int_t &b);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to r,g,b triplet. ;  ; static const char * PixelAsHexString (ULong_t pixel);  Convert machine dependent pixel value (obtained via RGB2Pixel or via Number2Pixel() or via TColor::GetPixel()) to a hexadecimal string. ;  ; static void RGB2HLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HLS (Int_t r, Int_t g, Int_t b, Int_t &h, Int_t &l, Int_t &s);  Static method to compute HLS from RGB. ;  ; static void RGB2HSV (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &s, Float_t &v);  Static method to compute HSV from RGB. ;  ; static ULong_t RGB2Pixel (Float_t r, Float_t g, Float_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static ULong_t RGB2Pixel (Int_t r, Int_t g, Int_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static void RGBtoHLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  ; static Bool_t SaveColor (std::ostream &out, Int_t ci);  Save a color with index > 228 as a C++ statement(s) on output stream out. ;  ; static void SetColorThreshold (Float_t t);  This method specifies the color threshold used by GetColor to retrieve a color. ;  ; static void SetGrayscale (Bool_t set=kTRUE);  Set whether all colors should return grayscale values. ;  ; static void SetPalette (Int_t ncolors, Int_t *colors, Float_t alpha=1.);  Static function. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version (",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:428,Modifiability,inherit,inherited,428,". ROOT: TRadialGradient Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRadialGradient Class Reference. . Definition at line 124 of file TColorGradient.h. Public Types; enum  EGradientType { kSimple; , kExtended; };  ;  Public Types inherited from TColorGradient; enum  ECoordinateMode { kPadMode; , kObjectBoundingMode; };  ; typedef std::vector< Color_t >::size_type SizeType_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRadialGradient ();  ; const Point & GetCenter () const;  Get center. ;  ; const Point & GetEnd () const;  Get end. ;  ; EGradientType GetGradientType () const;  Get gradient type. ;  ; Double_t GetR1 () const;  ; Double_t GetR2 () const;  Get R2. ;  ; Double_t GetRadius () const;  Get radius. ;  ; const Point & GetStart () const;  Get start. ;  ; TClass * IsA () const override;  ; void SetRadialGradient (const Point &center, Double_t radius);  Set radial gradient. ;  ; void SetStartEndR1R2 (const Point &p1, Double_t r1, const Point &p2, Double_t r2);  Set start and end R1 and R2. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ; ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:593,Modifiability,inherit,inherited,593,". ROOT: TRadialGradient Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRadialGradient Class Reference. . Definition at line 124 of file TColorGradient.h. Public Types; enum  EGradientType { kSimple; , kExtended; };  ;  Public Types inherited from TColorGradient; enum  ECoordinateMode { kPadMode; , kObjectBoundingMode; };  ; typedef std::vector< Color_t >::size_type SizeType_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRadialGradient ();  ; const Point & GetCenter () const;  Get center. ;  ; const Point & GetEnd () const;  Get end. ;  ; EGradientType GetGradientType () const;  Get gradient type. ;  ; Double_t GetR1 () const;  ; Double_t GetR2 () const;  Get R2. ;  ; Double_t GetRadius () const;  Get radius. ;  ; const Point & GetStart () const;  Get start. ;  ; TClass * IsA () const override;  ; void SetRadialGradient (const Point &center, Double_t radius);  Set radial gradient. ;  ; void SetStartEndR1R2 (const Point &p1, Double_t r1, const Point &p2, Double_t r2);  Set start and end R1 and R2. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ; ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:2509,Modifiability,inherit,inherited,2509,"ialGradient (const Point &center, Double_t radius);  Set radial gradient. ;  ; void SetStartEndR1R2 (const Point &p1, Double_t r1, const Point &p2, Double_t r2);  Set start and end R1 and R2. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  Public Member Functions inherited from TColorGradient;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ; Double_t GetColorAlpha (UInt_t indx) const;  Return alpha parameter of selected color. ;  ; const Double_t * GetColorPositions () const;  Get color positions. ;  ; const Double_t * GetColors () const;  Get colors. ;  ; ECoordinateMode GetCoordinateMode () const;  Get coordinate mode. ;  ; SizeType_t GetNumberOfSteps () const;  Get number of steps. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Color_t *colorIndices);  Reset color. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Double_t *colorIndices);  Reset color. ;  ; void SetColorAlpha (UInt_t",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:3871,Modifiability,inherit,inherited,3871,"oints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ; Double_t GetColorAlpha (UInt_t indx) const;  Return alpha parameter of selected color. ;  ; const Double_t * GetColorPositions () const;  Get color positions. ;  ; const Double_t * GetColors () const;  Get colors. ;  ; ECoordinateMode GetCoordinateMode () const;  Get coordinate mode. ;  ; SizeType_t GetNumberOfSteps () const;  Get number of steps. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Color_t *colorIndices);  Reset color. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Double_t *colorIndices);  Reset color. ;  ; void SetColorAlpha (UInt_t indx, Double_t alpha);  Change alpha parameter of the color. ;  ; void SetCoordinateMode (ECoordinateMode mode);  Set coordinate mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TColor;  TColor ();  Default constructor. ;  ;  TColor (const TColor &color);  Color copy constructor. ;  ;  TColor (Float_t r, Float_t g, Float_t b, Float_t a=1);  Fast TColor constructor. ;  ;  TColor (Int_t color, Float_t r, Float_t g, Float_t b, const char *name="""", Float_t a=1);  Normal color constructor. ;  ; virtual ~TColor ();  Color destructor. ;  ; const char * AsHexString () const;  Return color as hexadecimal string. ;  ; void Copy (TObject &color) const override;  Copy this color to obj. ;  ; Float_t GetAlpha () const;  ; Float_t GetBlue () const;  ; virtual Float_t GetGrayscale () const;  ; Float_t GetGreen () const;  ; virtual void GetHLS (Float_t &h, Float_t &l, Float_t &s) const;  ; Float_t GetHue () const;  ; Float_t GetLight () const;  ; Int_t GetNumber () const;  ; ULong_t GetPixel () const;  Return pixel value corresponding to this color. ;  ; Float_t GetRed () const;  ; virtual void GetRGB (Float_t &r, Float_t &g, Float_t &b) con",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:5529,Modifiability,inherit,inherited,5529,"Float_t &h, Float_t &l, Float_t &s) const;  ; Float_t GetHue () const;  ; Float_t GetLight () const;  ; Int_t GetNumber () const;  ; ULong_t GetPixel () const;  Return pixel value corresponding to this color. ;  ; Float_t GetRed () const;  ; virtual void GetRGB (Float_t &r, Float_t &g, Float_t &b) const;  ; Float_t GetSaturation () const;  ; void ls (Option_t *option="""") const override;  List this color with its attributes. ;  ; TColor & operator= (const TColor &color);  ; void Print (Option_t *option="""") const override;  Dump this color with its attributes. ;  ; virtual void SetAlpha (Float_t a);  ; void SetName (const char *name) override;  Set the color name and change also the name of the ""dark"" and ""bright"" associated colors if they exist. ;  ; virtual void SetRGB (Float_t r, Float_t g, Float_t b);  Initialize this color and its ""dark"" and ""bright"" associated colors. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:7082,Modifiability,inherit,inherited,7082,"  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:8175,Modifiability,inherit,inheritance,8175,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:10174,Modifiability,inherit,inherits,10174,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:10291,Modifiability,inherit,inherits,10291,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:14044,Modifiability,inherit,inherited,14044,"ge. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColorGradient; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColor; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateColorsCircle (Int_t offset, const char *name, UChar_t *rgb);  Create the ""circle"" colors in the color wheel. ;  ; static void CreateColorsGray ();  Create the Gray scale colors in the Color Wheel. ;  ; static void CreateColorsRectangle (Int_t offset, const char *name, UChar_t *rgb);  Create the ""rectangular"" colors in the color wheel. ;  ; static Int_t CreateColorTableFromFile (TString fileName, Float_t alpha=1.);  Static function creating a color palette based on an input text file. ;  ; static void CreateColorWheel ();  Static function steering the creation of all colors in the color wheel. ;  ; static Int_t CreateGradientColorTable (UInt_t Number, Double_t *Stops, Double_t *Red, Double_t *Green, Double_t *Blue, UInt_t NColors, Float_t alpha=1.,",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:14262,Modifiability,inherit,inherited,14262,"ge. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColorGradient; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TColor; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateColorsCircle (Int_t offset, const char *name, UChar_t *rgb);  Create the ""circle"" colors in the color wheel. ;  ; static void CreateColorsGray ();  Create the Gray scale colors in the Color Wheel. ;  ; static void CreateColorsRectangle (Int_t offset, const char *name, UChar_t *rgb);  Create the ""rectangular"" colors in the color wheel. ;  ; static Int_t CreateColorTableFromFile (TString fileName, Float_t alpha=1.);  Static function creating a color palette based on an input text file. ;  ; static void CreateColorWheel ();  Static function steering the creation of all colors in the color wheel. ;  ; static Int_t CreateGradientColorTable (UInt_t Number, Double_t *Stops, Double_t *Red, Double_t *Green, Double_t *Blue, UInt_t NColors, Float_t alpha=1.,",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:20671,Modifiability,inherit,inherited,20671,"Float_t g, Float_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static ULong_t RGB2Pixel (Int_t r, Int_t g, Int_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static void RGBtoHLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  ; static Bool_t SaveColor (std::ostream &out, Int_t ci);  Save a color with index > 228 as a C++ statement(s) on output stream out. ;  ; static void SetColorThreshold (Float_t t);  This method specifies the color threshold used by GetColor to retrieve a color. ;  ; static void SetGrayscale (Bool_t set=kTRUE);  Set whether all colors should return grayscale values. ;  ; static void SetPalette (Int_t ncolors, Int_t *colors, Float_t alpha=1.);  Static function. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Point fEnd;  ; Double_t fR1 = 0.;  ; Double_t fR2 = 0.;  ; Point fStart;  ; EGradientType fType = kSimple;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t f",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:20881,Modifiability,inherit,inherited,20881,"Float_t g, Float_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static ULong_t RGB2Pixel (Int_t r, Int_t g, Int_t b);  Convert r,g,b to graphics system dependent pixel value. ;  ; static void RGBtoHLS (Float_t r, Float_t g, Float_t b, Float_t &h, Float_t &l, Float_t &s);  ; static Bool_t SaveColor (std::ostream &out, Int_t ci);  Save a color with index > 228 as a C++ statement(s) on output stream out. ;  ; static void SetColorThreshold (Float_t t);  This method specifies the color threshold used by GetColor to retrieve a color. ;  ; static void SetGrayscale (Bool_t set=kTRUE);  Set whether all colors should return grayscale values. ;  ; static void SetPalette (Int_t ncolors, Int_t *colors, Float_t alpha=1.);  Static function. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Point fEnd;  ; Double_t fR1 = 0.;  ; Double_t fR2 = 0.;  ; Point fStart;  ; EGradientType fType = kSimple;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t f",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:21544,Modifiability,inherit,inherited,21544," Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Point fEnd;  ; Double_t fR1 = 0.;  ; Double_t fR2 = 0.;  ; Point fStart;  ; EGradientType fType = kSimple;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TColorGradient.h>. Inheritance diagram for TRadialGradient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGradientType. enum TRadialGradient::EGradientType. EnumeratorkSimple ; kExtended . Definition at line 126 of file TColorGradient.h. Constructor & Destructor Documentation. ◆ TRadialGradient(). TRadialGradient::TRadialGradient ; (; ). inline . Definition at line 134 of file TColorGradient.h. Member Function Documentation. ◆ Class(). static TClass * TRadialGradient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:21643,Modifiability,inherit,inherited,21643," Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Point fEnd;  ; Double_t fR1 = 0.;  ; Double_t fR2 = 0.;  ; Point fStart;  ; EGradientType fType = kSimple;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TColorGradient.h>. Inheritance diagram for TRadialGradient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGradientType. enum TRadialGradient::EGradientType. EnumeratorkSimple ; kExtended . Definition at line 126 of file TColorGradient.h. Constructor & Destructor Documentation. ◆ TRadialGradient(). TRadialGradient::TRadialGradient ; (; ). inline . Definition at line 134 of file TColorGradient.h. Member Function Documentation. ◆ Class(). static TClass * TRadialGradient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:21848,Modifiability,inherit,inherited,21848,"ic Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Point fEnd;  ; Double_t fR1 = 0.;  ; Double_t fR2 = 0.;  ; Point fStart;  ; EGradientType fType = kSimple;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TColorGradient.h>. Inheritance diagram for TRadialGradient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGradientType. enum TRadialGradient::EGradientType. EnumeratorkSimple ; kExtended . Definition at line 126 of file TColorGradient.h. Constructor & Destructor Documentation. ◆ TRadialGradient(). TRadialGradient::TRadialGradient ; (; ). inline . Definition at line 134 of file TColorGradient.h. Member Function Documentation. ◆ Class(). static TClass * TRadialGradient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRadialGradient::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRadialGradient::Class_Version ; (; ). inlinestaticconstexpr . Retur",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:21939,Modifiability,inherit,inherited,21939,"Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Point fEnd;  ; Double_t fR1 = 0.;  ; Double_t fR2 = 0.;  ; Point fStart;  ; EGradientType fType = kSimple;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TColorGradient.h>. Inheritance diagram for TRadialGradient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGradientType. enum TRadialGradient::EGradientType. EnumeratorkSimple ; kExtended . Definition at line 126 of file TColorGradient.h. Constructor & Destructor Documentation. ◆ TRadialGradient(). TRadialGradient::TRadialGradient ; (; ). inline . Definition at line 134 of file TColorGradient.h. Member Function Documentation. ◆ Class(). static TClass * TRadialGradient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRadialGradient::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRadialGradient::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 160 of file TColorGradient.h. ◆ DeclFileName(). static c",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:2168,Security,validat,validate,2168,"kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRadialGradient ();  ; const Point & GetCenter () const;  Get center. ;  ; const Point & GetEnd () const;  Get end. ;  ; EGradientType GetGradientType () const;  Get gradient type. ;  ; Double_t GetR1 () const;  ; Double_t GetR2 () const;  Get R2. ;  ; Double_t GetRadius () const;  Get radius. ;  ; const Point & GetStart () const;  Get start. ;  ; TClass * IsA () const override;  ; void SetRadialGradient (const Point &center, Double_t radius);  Set radial gradient. ;  ; void SetStartEndR1R2 (const Point &p1, Double_t r1, const Point &p2, Double_t r2);  Set start and end R1 and R2. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  Public Member Functions inherited from TColorGradient;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ; Double_t GetColorAlpha (UIn",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:2407,Security,validat,validate,2407," ;  ; EGradientType GetGradientType () const;  Get gradient type. ;  ; Double_t GetR1 () const;  ; Double_t GetR2 () const;  Get R2. ;  ; Double_t GetRadius () const;  Get radius. ;  ; const Point & GetStart () const;  Get start. ;  ; TClass * IsA () const override;  ; void SetRadialGradient (const Point &center, Double_t radius);  Set radial gradient. ;  ; void SetStartEndR1R2 (const Point &p1, Double_t r1, const Point &p2, Double_t r2);  Set start and end R1 and R2. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  Public Member Functions inherited from TColorGradient;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ; Double_t GetColorAlpha (UInt_t indx) const;  Return alpha parameter of selected color. ;  ; const Double_t * GetColorPositions () const;  Get color positions. ;  ; const Double_t * GetColors () const;  Get colors. ;  ; ECoordinateMode GetCoordinateMode () const;  Get coordinate mode. ;  ; SizeType_t GetNumberOfS",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:2730,Security,validat,validate,2730,"ialGradient (const Point &center, Double_t radius);  Set radial gradient. ;  ; void SetStartEndR1R2 (const Point &p1, Double_t r1, const Point &p2, Double_t r2);  Set start and end R1 and R2. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  Public Member Functions inherited from TColorGradient;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ; Double_t GetColorAlpha (UInt_t indx) const;  Return alpha parameter of selected color. ;  ; const Double_t * GetColorPositions () const;  Get color positions. ;  ; const Double_t * GetColors () const;  Get colors. ;  ; ECoordinateMode GetCoordinateMode () const;  Get coordinate mode. ;  ; SizeType_t GetNumberOfSteps () const;  Get number of steps. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Color_t *colorIndices);  Reset color. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Double_t *colorIndices);  Reset color. ;  ; void SetColorAlpha (UInt_t",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:2969,Security,validat,validate,2969,"reamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  Public Member Functions inherited from TColorGradient;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Double_t *colors, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;  ; Double_t GetColorAlpha (UInt_t indx) const;  Return alpha parameter of selected color. ;  ; const Double_t * GetColorPositions () const;  Get color positions. ;  ; const Double_t * GetColors () const;  Get colors. ;  ; ECoordinateMode GetCoordinateMode () const;  Get coordinate mode. ;  ; SizeType_t GetNumberOfSteps () const;  Get number of steps. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Color_t *colorIndices);  Reset color. ;  ; void ResetColor (UInt_t nPoints, const Double_t *points, const Double_t *colorIndices);  Reset color. ;  ; void SetColorAlpha (UInt_t indx, Double_t alpha);  Change alpha parameter of the color. ;  ; void SetCoordinateMode (ECoordinateMode mode);  Set coordinate mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TColor;  TColor ();  Default constr",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:6397,Security,hash,hash,6397,"and its ""dark"" and ""bright"" associated colors. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely a",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:25408,Security,validat,validate,25408,"al gradient. ; Definition at line 287 of file TColorGradient.cxx. ◆ SetStartEndR1R2(). void TRadialGradient::SetStartEndR1R2 ; (; const Point & ; p1, . Double_t ; r1, . const Point & ; p2, . Double_t ; r2 . ). Set start and end R1 and R2. ; Definition at line 242 of file TColorGradient.cxx. ◆ Streamer(). void TRadialGradient::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TColorGradient. ◆ StreamerNVirtual(). void TRadialGradient::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 160 of file TColorGradient.h. ◆ TColorGradient() [1/3]. TColorGradient::TColorGradient ; (; ). inline . Definition at line 70 of file TColorGradient.h. ◆ TColorGradient() [2/3]. TColorGradient::TColorGradient ; (; Color_t ; newColor, . UInt_t ; nPoints, . const Double_t * ; points, . const Color_t * ; colorIndices, . ECoordinateMode ; mode = kObjectBoundingMode . ). There is no way to validate parameters here, so it's up to user to pass correct arguments. ; Definition at line 71 of file TColorGradient.cxx. ◆ TColorGradient() [3/3]. TColorGradient::TColorGradient ; (; Color_t ; newColor, . UInt_t ; nPoints, . const Double_t * ; points, . const Double_t * ; colors, . ECoordinateMode ; mode = kObjectBoundingMode . ). There is no way to validate parameters here, so it's up to user to pass correct arguments. ; Definition at line 73 of file TColorGradient.cxx. Member Data Documentation. ◆ fEnd. Point TRadialGradient::fEnd. private . Definition at line 155 of file TColorGradient.h. ◆ fR1. Double_t TRadialGradient::fR1 = 0. private . Definition at line 154 of file TColorGradient.h. ◆ fR2. Double_t TRadialGradient::fR2 = 0. private . Definition at line 156 of file TColorGradient.h. ◆ fStart. Point TRadialGradient::fStart. private . Definition at line 153 of file TColorGradient.h. ◆ fType. EGradientType TRadialGradient::fType = kSimple. private . Definition at line 158 of file TColorGradient.h. Librar",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRadialGradient.html:25763,Security,validat,validate,25763,"amer(). void TRadialGradient::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TColorGradient. ◆ StreamerNVirtual(). void TRadialGradient::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 160 of file TColorGradient.h. ◆ TColorGradient() [1/3]. TColorGradient::TColorGradient ; (; ). inline . Definition at line 70 of file TColorGradient.h. ◆ TColorGradient() [2/3]. TColorGradient::TColorGradient ; (; Color_t ; newColor, . UInt_t ; nPoints, . const Double_t * ; points, . const Color_t * ; colorIndices, . ECoordinateMode ; mode = kObjectBoundingMode . ). There is no way to validate parameters here, so it's up to user to pass correct arguments. ; Definition at line 71 of file TColorGradient.cxx. ◆ TColorGradient() [3/3]. TColorGradient::TColorGradient ; (; Color_t ; newColor, . UInt_t ; nPoints, . const Double_t * ; points, . const Double_t * ; colors, . ECoordinateMode ; mode = kObjectBoundingMode . ). There is no way to validate parameters here, so it's up to user to pass correct arguments. ; Definition at line 73 of file TColorGradient.cxx. Member Data Documentation. ◆ fEnd. Point TRadialGradient::fEnd. private . Definition at line 155 of file TColorGradient.h. ◆ fR1. Double_t TRadialGradient::fR1 = 0. private . Definition at line 154 of file TColorGradient.h. ◆ fR2. Double_t TRadialGradient::fR2 = 0. private . Definition at line 156 of file TColorGradient.h. ◆ fStart. Point TRadialGradient::fStart. private . Definition at line 153 of file TColorGradient.h. ◆ fType. EGradientType TRadialGradient::fType = kSimple. private . Definition at line 158 of file TColorGradient.h. Libraries for TRadialGradient:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TColorGradient.h; core/base/src/TColorGradient.cxx. TRadialGradient. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTRadialGradient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html
https://root.cern/doc/master/classTRandom-members.html:1504,Availability,error,error,1504,"domvirtual; Class()TRandomstatic; Class_Name()TRandomstatic; Class_Version()TRandominlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandominlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fSeedTRandomprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; Gaus(Double_t mean=0, Double_t sigma=1)TRandomvirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() const overrideTNamedinlinevirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetSeed() constTRandomvirtual; GetTitle() const overrideTNamedinlinevirtual; GetUniqueID() constTObjectvirtual; HandleTimer(TTimer *timer)TObjectvirtu",MatchSource.WIKI,doc/master/classTRandom-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom-members.html
https://root.cern/doc/master/classTRandom-members.html:1585,Availability,error,error,1585,"domvirtual; Class()TRandomstatic; Class_Name()TRandomstatic; Class_Version()TRandominlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandominlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fSeedTRandomprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; Gaus(Double_t mean=0, Double_t sigma=1)TRandomvirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() const overrideTNamedinlinevirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetSeed() constTRandomvirtual; GetTitle() const overrideTNamedinlinevirtual; GetUniqueID() constTObjectvirtual; HandleTimer(TTimer *timer)TObjectvirtu",MatchSource.WIKI,doc/master/classTRandom-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom-members.html
https://root.cern/doc/master/classTRandom-members.html:187,Modifiability,inherit,inherited,187,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom Member List. This is the complete list of members for TRandom, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Binomial(Int_t ntot, Double_t prob)TRandomvirtual; BreitWigner(Double_t mean=0, Double_t gamma=1)TRandomvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Circle(Double_t &x, Double_t &y, Double_t r)TRandomvirtual; Class()TRandomstatic; Class_Name()TRandomstatic; Class_Version()TRandominlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandominlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectv",MatchSource.WIKI,doc/master/classTRandom-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom-members.html
https://root.cern/doc/master/classTRandom.html:17150,Availability,error,error,17150,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:17239,Availability,error,error,17239,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:17394,Availability,error,error,17394,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:17691,Availability,error,error,17691,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:21775,Availability,error,error,21775,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNam",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:27443,Availability,avail,available,27443," TRandom::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TRandom.h. ◆ DeclFileName(). static const char * TRandom::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TRandom.h. ◆ Exp(). Double_t TRandom::Exp ; (; Double_t ; tau). virtual . Returns an exponential deviate. ; exp( -t/tau ) . Definition at line 252 of file TRandom.cxx. ◆ Gaus(). Double_t TRandom::Gaus ; (; Double_t ; mean = 0, . Double_t ; sigma = 1 . ). virtual . Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ; Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger This is one of the fastest existing method for generating normal random variables. It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia) implemented for example in GSL and available in the MathMore library.; REFERENCE: - W. Hoermann and G. Derflinger (1990): The ACR Method for generating normal random variables, OR Spektrum 12 (1990), 181-185.; Implementation taken from UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien ; Definition at line 275 of file TRandom.cxx. ◆ GetSeed(). UInt_t TRandom::GetSeed ; (; ); const. virtual . Get the random generator seed. ; WarningMight not be the initial seed!; Note that this function returns the given seed only when using as random generator engine TRandom itself, which is an LCG generator and it has as seed (state) only one 32 bit word. In case of the other generators GetSeed will return one of the state elements and not the given seed. See the documentation of the corresponding generator used (for example TRandom3::GetSeed() when using TRandom3 or gRandom. If one needs to save the generator seed in order to be used later for obtaining reproducible numbers, one s",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:31167,Availability,error,error,31167,"viation of the distribution which is not defined. ; For mu =0 and sigma=1, the mpv = -0.22278; The Landau random number generation is implemented using the function landau_quantile(x,sigma), which provides the inverse of the landau cumulative distribution. landau_quantile has been converted from CERNLIB ranlan(G110). ; Definition at line 381 of file TRandom.cxx. ◆ Poisson(). ULong64_t TRandom::Poisson ; (; Double_t ; mean). virtual . Generates a random integer N according to a Poisson law. ; Prob(N) = exp(-mean)*mean^N/Factorial(N); Use a different procedure according to the mean value. The algorithm is the same used by CLHEP. For lower value (mean < 25) use the rejection method based on the exponential. For higher values use a rejection method comparing with a Lorentzian distribution, as suggested by several authors. This routine returns now an unsigned 64 bit integer For large values, larger than 1.84e+19, we print an error message advising to use the Trandom::PoissonD for such large values, and return the max value UINT64_MAX ; Definition at line 404 of file TRandom.cxx. ◆ PoissonD(). Double_t TRandom::PoissonD ; (; Double_t ; mean). virtual . Generates a random number according to a Poisson law. ; Prob(N) = exp(-mean)*mean^N/Factorial(N); This function is a variant of TRandom::Poisson returning a double instead of an integer. ; Definition at line 461 of file TRandom.cxx. ◆ Rannor() [1/2]. void TRandom::Rannor ; (; Double_t & ; a, . Double_t & ; b . ). virtual . Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ; Definition at line 522 of file TRandom.cxx. ◆ Rannor() [2/2]. void TRandom::Rannor ; (; Float_t & ; a, . Float_t & ; b . ). virtual . Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ; Definition at line 507 of file TRandom.cxx. ◆ ReadRandom(). void TRandom::ReadRandom ; (; const char * ; filename). virtual . Reads saved random generator status from filename. ; Definition at line 537 of file TRandom.cxx.",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:6912,Deployability,continuous,continuous,6912,"lXProxy.cxx:168; TF11-Dim function classDefinition TF1.h:233; TF1::GetRandomvirtual Double_t GetRandom(TRandom *rng=nullptr, Option_t *opt=nullptr)Return a random number following this function shape.Definition TF1.cxx:2192; f1TF1 * f1Definition legend1.C:11; or you can use the UNURAN package. You need in this case to initialize UNURAN to the function you would like to generate. TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; TUnuranTUnuran class.Definition TUnuran.h:79; TUnuran::Initbool Init(const std::string &distr, const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::Sampledouble Sample()Sample 1D distribution.Definition TUnuran.cxx:414; The techniques of using directly a TF1,2 or 3 function is powerful and can be used to generate numbers in the defined range of the function. Getting a number from a TF1,2,3 function is also quite fast. UNURAN is a powerful and flexible tool which contains various methods for generate random numbers for continuous distributions of one and multi-dimension. It requires some set-up (initialization) phase and can be very fast when the distribution parameters are not changed for every call.; The following table shows some timings (in nanosecond/call) for basic functions, TF1 functions and using UNURAN obtained running the tutorial math/testrandom.C Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running Linux SLC4 64 bit and compiled with gcc 3.4; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 96.000 494.00",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:6666,Energy Efficiency,power,powerful,6666,"int TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TF11-Dim function classDefinition TF1.h:233; TF1::GetRandomvirtual Double_t GetRandom(TRandom *rng=nullptr, Option_t *opt=nullptr)Return a random number following this function shape.Definition TF1.cxx:2192; f1TF1 * f1Definition legend1.C:11; or you can use the UNURAN package. You need in this case to initialize UNURAN to the function you would like to generate. TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; TUnuranTUnuran class.Definition TUnuran.h:79; TUnuran::Initbool Init(const std::string &distr, const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::Sampledouble Sample()Sample 1D distribution.Definition TUnuran.cxx:414; The techniques of using directly a TF1,2 or 3 function is powerful and can be used to generate numbers in the defined range of the function. Getting a number from a TF1,2,3 function is also quite fast. UNURAN is a powerful and flexible tool which contains various methods for generate random numbers for continuous distributions of one and multi-dimension. It requires some set-up (initialization) phase and can be very fast when the distribution parameters are not changed for every call.; The following table shows some timings (in nanosecond/call) for basic functions, TF1 functions and using UNURAN obtained running the tutorial math/testrandom.C Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running Linux SLC4 64 bit and compiled with gcc 3.4; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:6822,Energy Efficiency,power,powerful,6822,"lXProxy.cxx:168; TF11-Dim function classDefinition TF1.h:233; TF1::GetRandomvirtual Double_t GetRandom(TRandom *rng=nullptr, Option_t *opt=nullptr)Return a random number following this function shape.Definition TF1.cxx:2192; f1TF1 * f1Definition legend1.C:11; or you can use the UNURAN package. You need in this case to initialize UNURAN to the function you would like to generate. TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; TUnuranTUnuran class.Definition TUnuran.h:79; TUnuran::Initbool Init(const std::string &distr, const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::Sampledouble Sample()Sample 1D distribution.Definition TUnuran.cxx:414; The techniques of using directly a TF1,2 or 3 function is powerful and can be used to generate numbers in the defined range of the function. Getting a number from a TF1,2,3 function is also quite fast. UNURAN is a powerful and flexible tool which contains various methods for generate random numbers for continuous distributions of one and multi-dimension. It requires some set-up (initialization) phase and can be very fast when the distribution parameters are not changed for every call.; The following table shows some timings (in nanosecond/call) for basic functions, TF1 functions and using UNURAN obtained running the tutorial math/testrandom.C Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running Linux SLC4 64 bit and compiled with gcc 3.4; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 96.000 494.00",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:441,Integrability,interface,interface,441,". ROOT: TRandom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TRandom Class ReferenceMath » MathCore » Interface classes for Random number generation. ; This is the base class for the ROOT Random number generators. ; This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the BSD rand generator, that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated in just few seconds.; To generate random numbers, one should use one of the derived classes, which are:; TRandom3: it is based on the ""Mersenne Twister generator"", it is fast and a very long period of about \(10^{6000}\). However it fails some of the most stringent tests of the TestU01 suite. In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to the ROOT generator, gRandom.; TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplication of 576 bits. This new implementation is built on the idea and the original code of Alexei Sibidanov, described in his paper . It generates random numbers with 52 bit precision (double precision) and it has an higher luxury level than the original Ranlux generator (p = 2048 instead of p=794).; TRandomMixMax: Generator based on the family of the MIXMAX matrix generators (see the MIXMAX HEPFORGE Web page and the documentation of the class ROOT::Math::MixMaxEngine for more information), that are base on the Asanov dynamical C systems. This generator has a state of N=240",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:6490,Integrability,interface,interface,6490," TF3 objects can also be generated. For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x) you can do : TF1; *f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10); double r = f1->GetRandom(); ; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TF11-Dim function classDefinition TF1.h:233; TF1::GetRandomvirtual Double_t GetRandom(TRandom *rng=nullptr, Option_t *opt=nullptr)Return a random number following this function shape.Definition TF1.cxx:2192; f1TF1 * f1Definition legend1.C:11; or you can use the UNURAN package. You need in this case to initialize UNURAN to the function you would like to generate. TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; TUnuranTUnuran class.Definition TUnuran.h:79; TUnuran::Initbool Init(const std::string &distr, const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::Sampledouble Sample()Sample 1D distribution.Definition TUnuran.cxx:414; The techniques of using directly a TF1,2 or 3 function is powerful and can be used to generate numbers in the defined range of the function. Getting a number from a TF1,2,3 function is also quite fast. UNURAN is a powerful and flexible tool which contains various methods for generate random numbers for continuous distributions of one and multi-dimension. It requires some set-up (initialization) phase and can be very fast when the distribution parameters are not changed for every call.; The following table shows some timings (in nanosecond/call) for basic functions, TF1 functions and using UNURAN obtained running the tutorial math/testrandom.C Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running Linux SLC4 64 bit and compiled with gcc 3.4; Distribution nanoseconds/call; TRandom TRand",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:17156,Integrability,message,message,17156,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:17697,Integrability,message,message,17697,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:18687,Integrability,message,message,18687,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:21781,Integrability,message,message,21781,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNam",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:22154,Integrability,message,message,22154," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; stati",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:31068,Integrability,rout,routine,31068,"andau( (x-mu)/sigma ) Note that mu is not the mpv(most probable value) of the Landa distribution and sigma is not the standard deviation of the distribution which is not defined. ; For mu =0 and sigma=1, the mpv = -0.22278; The Landau random number generation is implemented using the function landau_quantile(x,sigma), which provides the inverse of the landau cumulative distribution. landau_quantile has been converted from CERNLIB ranlan(G110). ; Definition at line 381 of file TRandom.cxx. ◆ Poisson(). ULong64_t TRandom::Poisson ; (; Double_t ; mean). virtual . Generates a random integer N according to a Poisson law. ; Prob(N) = exp(-mean)*mean^N/Factorial(N); Use a different procedure according to the mean value. The algorithm is the same used by CLHEP. For lower value (mean < 25) use the rejection method based on the exponential. For higher values use a rejection method comparing with a Lorentzian distribution, as suggested by several authors. This routine returns now an unsigned 64 bit integer For large values, larger than 1.84e+19, we print an error message advising to use the Trandom::PoissonD for such large values, and return the max value UINT64_MAX ; Definition at line 404 of file TRandom.cxx. ◆ PoissonD(). Double_t TRandom::PoissonD ; (; Double_t ; mean). virtual . Generates a random number according to a Poisson law. ; Prob(N) = exp(-mean)*mean^N/Factorial(N); This function is a variant of TRandom::Poisson returning a double instead of an integer. ; Definition at line 461 of file TRandom.cxx. ◆ Rannor() [1/2]. void TRandom::Rannor ; (; Double_t & ; a, . Double_t & ; b . ). virtual . Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ; Definition at line 522 of file TRandom.cxx. ◆ Rannor() [2/2]. void TRandom::Rannor ; (; Float_t & ; a, . Float_t & ; b . ). virtual . Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ; Definition at line 507 of file TRandom.cxx. ◆ ReadRandom(). void TRandom::ReadRandom ; (; cons",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:31173,Integrability,message,message,31173,"viation of the distribution which is not defined. ; For mu =0 and sigma=1, the mpv = -0.22278; The Landau random number generation is implemented using the function landau_quantile(x,sigma), which provides the inverse of the landau cumulative distribution. landau_quantile has been converted from CERNLIB ranlan(G110). ; Definition at line 381 of file TRandom.cxx. ◆ Poisson(). ULong64_t TRandom::Poisson ; (; Double_t ; mean). virtual . Generates a random integer N according to a Poisson law. ; Prob(N) = exp(-mean)*mean^N/Factorial(N); Use a different procedure according to the mean value. The algorithm is the same used by CLHEP. For lower value (mean < 25) use the rejection method based on the exponential. For higher values use a rejection method comparing with a Lorentzian distribution, as suggested by several authors. This routine returns now an unsigned 64 bit integer For large values, larger than 1.84e+19, we print an error message advising to use the Trandom::PoissonD for such large values, and return the max value UINT64_MAX ; Definition at line 404 of file TRandom.cxx. ◆ PoissonD(). Double_t TRandom::PoissonD ; (; Double_t ; mean). virtual . Generates a random number according to a Poisson law. ; Prob(N) = exp(-mean)*mean^N/Factorial(N); This function is a variant of TRandom::Poisson returning a double instead of an integer. ; Definition at line 461 of file TRandom.cxx. ◆ Rannor() [1/2]. void TRandom::Rannor ; (; Double_t & ; a, . Double_t & ; b . ). virtual . Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ; Definition at line 522 of file TRandom.cxx. ◆ Rannor() [2/2]. void TRandom::Rannor ; (; Float_t & ; a, . Float_t & ; b . ). virtual . Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ; Definition at line 507 of file TRandom.cxx. ◆ ReadRandom(). void TRandom::ReadRandom ; (; const char * ; filename). virtual . Reads saved random generator status from filename. ; Definition at line 537 of file TRandom.cxx.",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:33996,Integrability,depend,depends,33996,"domGen< Engine >.; Definition at line 51 of file TRandom.h. ◆ RndmArray() [1/2]. void TRandom::RndmArray ; (; Int_t ; n, . Double_t * ; array . ). virtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented in TRandom2, TRandom3, TRandomGen< Engine >, and TRandom1.; Definition at line 582 of file TRandom.cxx. ◆ RndmArray() [2/2]. void TRandom::RndmArray ; (; Int_t ; n, . Float_t * ; array . ). virtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented in TRandom2, TRandom3, TRandomGen< Engine >, and TRandom1.; Definition at line 595 of file TRandom.cxx. ◆ SetSeed(). void TRandom::SetSeed ; (; ULong_t ; seed = 0). virtual . Set the random generator seed. ; Note that default value is zero, which is different than the default value used when constructing the class. If the seed is zero the seed is set to a random value which in case of TRandom depends on the lowest 4 bytes of TUUID The UUID will be identical if SetSeed(0) is called with time smaller than 100 ns Instead if a different generator implementation is used (TRandom1, 2 or 3) the seed is generated using a 128 bit UUID. This results in different seeds and then random sequence for every SetSeed(0) call. ; Reimplemented in TRandom1, TRandom2, TRandom3, and TRandomGen< Engine >.; Definition at line 615 of file TRandom.cxx. ◆ Sphere(). void TRandom::Sphere ; (; Double_t & ; x, . Double_t & ; y, . Double_t & ; z, . Double_t ; r . ). virtual . Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ; Input : r = sphere radius Output: x,y,z a random 3-d vector of length r Method: (based on algorithm suggested by Knuth and attributed to Robert E Knop) which uses less random numbers than the CERNLIB RN23DIM algorithm ; Definition at line 664 of file TRandom.cxx. ◆ Streamer(). void TRandom::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed.; Reimplemente",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:1188,Modifiability,extend,extended,1188,"embers |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TRandom Class ReferenceMath » MathCore » Interface classes for Random number generation. ; This is the base class for the ROOT Random number generators. ; This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the BSD rand generator, that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated in just few seconds.; To generate random numbers, one should use one of the derived classes, which are:; TRandom3: it is based on the ""Mersenne Twister generator"", it is fast and a very long period of about \(10^{6000}\). However it fails some of the most stringent tests of the TestU01 suite. In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to the ROOT generator, gRandom.; TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplication of 576 bits. This new implementation is built on the idea and the original code of Alexei Sibidanov, described in his paper . It generates random numbers with 52 bit precision (double precision) and it has an higher luxury level than the original Ranlux generator (p = 2048 instead of p=794).; TRandomMixMax: Generator based on the family of the MIXMAX matrix generators (see the MIXMAX HEPFORGE Web page and the documentation of the class ROOT::Math::MixMaxEngine for more information), that are base on the Asanov dynamical C systems. This generator has a state of N=240 64 bit integers, proof random properties, it provides 61 random bits and it has a very large period ( \(10^{4839}\)). Furtherm",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:6835,Modifiability,flexible,flexible,6835,"lXProxy.cxx:168; TF11-Dim function classDefinition TF1.h:233; TF1::GetRandomvirtual Double_t GetRandom(TRandom *rng=nullptr, Option_t *opt=nullptr)Return a random number following this function shape.Definition TF1.cxx:2192; f1TF1 * f1Definition legend1.C:11; or you can use the UNURAN package. You need in this case to initialize UNURAN to the function you would like to generate. TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; TUnuranTUnuran class.Definition TUnuran.h:79; TUnuran::Initbool Init(const std::string &distr, const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::Sampledouble Sample()Sample 1D distribution.Definition TUnuran.cxx:414; The techniques of using directly a TF1,2 or 3 function is powerful and can be used to generate numbers in the defined range of the function. Getting a number from a TF1,2,3 function is also quite fast. UNURAN is a powerful and flexible tool which contains various methods for generate random numbers for continuous distributions of one and multi-dimension. It requires some set-up (initialization) phase and can be very fast when the distribution parameters are not changed for every call.; The following table shows some timings (in nanosecond/call) for basic functions, TF1 functions and using UNURAN obtained running the tutorial math/testrandom.C Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running Linux SLC4 64 bit and compiled with gcc 3.4; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 96.000 494.00",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:14065,Modifiability,inherit,inherited,14065,"Double_t *array);  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; virtual void RndmArray (Int_t n, Float_t *array);  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; virtual void SetSeed (ULong_t seed=0);  Set the random generator seed. ;  ; virtual void Sphere (Double_t &x, Double_t &y, Double_t &z, Double_t r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Uniform (Double_t x1, Double_t x2);  Returns a uniform deviate on the interval (x1, x2). ;  ; virtual Double_t Uniform (Double_t x1=1);  Returns a uniform deviate on the interval (0, x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:15693,Modifiability,inherit,inherited,15693,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:16786,Modifiability,inherit,inheritance,16786,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:18785,Modifiability,inherit,inherits,18785,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:18902,Modifiability,inherit,inherits,18902,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:22461,Modifiability,inherit,inherited,22461,"rawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSee",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:22752,Modifiability,inherit,inherited,22752,"t_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWrite",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:22962,Modifiability,inherit,inherited,22962,"t_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWrite",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:23509,Modifiability,inherit,inherited,23509,"ual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:23613,Modifiability,inherit,inherited,23613,";  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom.h>. Inheritance diagram for TRandom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:24254,Modifiability,inherit,inherited,24254,"tStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom.h>. Inheritance diagram for TRandom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom(). TRandom::TRandom ; (; UInt_t ; seed = 65539). Default constructor. For seed see SetSeed(). ; Definition at line 187 of file TRandom.cxx. ◆ ~TRandom(). TRandom::~TRandom ; (; ). override . Default destructor. ; Can reset gRandom to 0 if gRandom points to this generator. ; Definition at line 196 of file TRandom.cxx. Member Function Documentation. ◆ Binomial(). Int_t TRandom::Binomial ; (; Int_t ; ntot, . Double_t ; prob . ). virtual . Generates a random integer N according to the binomial law. ; Coded from Los Alamos report LA-5061-MS.; N is binomially distributed between 0 and ntot inclusive with mean prob*ntot and prob i",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:24353,Modifiability,inherit,inherited,24353,"tStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom.h>. Inheritance diagram for TRandom:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom(). TRandom::TRandom ; (; UInt_t ; seed = 65539). Default constructor. For seed see SetSeed(). ; Definition at line 187 of file TRandom.cxx. ◆ ~TRandom(). TRandom::~TRandom ; (; ). override . Default destructor. ; Can reset gRandom to 0 if gRandom points to this generator. ; Definition at line 196 of file TRandom.cxx. Member Function Documentation. ◆ Binomial(). Int_t TRandom::Binomial ; (; Int_t ; ntot, . Double_t ; prob . ). virtual . Generates a random integer N according to the binomial law. ; Coded from Los Alamos report LA-5061-MS.; N is binomially distributed between 0 and ntot inclusive with mean prob*ntot and prob i",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:27225,Modifiability,variab,variables,27225,"ass * TRandom::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TRandom.h. ◆ DeclFileName(). static const char * TRandom::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TRandom.h. ◆ Exp(). Double_t TRandom::Exp ; (; Double_t ; tau). virtual . Returns an exponential deviate. ; exp( -t/tau ) . Definition at line 252 of file TRandom.cxx. ◆ Gaus(). Double_t TRandom::Gaus ; (; Double_t ; mean = 0, . Double_t ; sigma = 1 . ). virtual . Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ; Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger This is one of the fastest existing method for generating normal random variables. It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia) implemented for example in GSL and available in the MathMore library.; REFERENCE: - W. Hoermann and G. Derflinger (1990): The ACR Method for generating normal random variables, OR Spektrum 12 (1990), 181-185.; Implementation taken from UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien ; Definition at line 275 of file TRandom.cxx. ◆ GetSeed(). UInt_t TRandom::GetSeed ; (; ); const. virtual . Get the random generator seed. ; WarningMight not be the initial seed!; Note that this function returns the given seed only when using as random generator engine TRandom itself, which is an LCG generator and it has as seed (state) only one 32 bit word. In case of the other generators GetSeed will return one of the state elements and not the given seed. See the ",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:27574,Modifiability,variab,variables,27574,"const char * TRandom::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TRandom.h. ◆ Exp(). Double_t TRandom::Exp ; (; Double_t ; tau). virtual . Returns an exponential deviate. ; exp( -t/tau ) . Definition at line 252 of file TRandom.cxx. ◆ Gaus(). Double_t TRandom::Gaus ; (; Double_t ; mean = 0, . Double_t ; sigma = 1 . ). virtual . Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ; Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger This is one of the fastest existing method for generating normal random variables. It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia) implemented for example in GSL and available in the MathMore library.; REFERENCE: - W. Hoermann and G. Derflinger (1990): The ACR Method for generating normal random variables, OR Spektrum 12 (1990), 181-185.; Implementation taken from UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien ; Definition at line 275 of file TRandom.cxx. ◆ GetSeed(). UInt_t TRandom::GetSeed ; (; ); const. virtual . Get the random generator seed. ; WarningMight not be the initial seed!; Note that this function returns the given seed only when using as random generator engine TRandom itself, which is an LCG generator and it has as seed (state) only one 32 bit word. In case of the other generators GetSeed will return one of the state elements and not the given seed. See the documentation of the corresponding generator used (for example TRandom3::GetSeed() when using TRandom3 or gRandom. If one needs to save the generator seed in order to be used later for obtaining reproducible numbers, one should store the full generator, either in a file or in memory in a separate TRandom object. Here is an example on how to store reproducible states: // se",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:14933,Security,hash,hash,14933,", x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:1021,Testability,test,tests,1021,"dom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TRandom Class ReferenceMath » MathCore » Interface classes for Random number generation. ; This is the base class for the ROOT Random number generators. ; This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the BSD rand generator, that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated in just few seconds.; To generate random numbers, one should use one of the derived classes, which are:; TRandom3: it is based on the ""Mersenne Twister generator"", it is fast and a very long period of about \(10^{6000}\). However it fails some of the most stringent tests of the TestU01 suite. In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to the ROOT generator, gRandom.; TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplication of 576 bits. This new implementation is built on the idea and the original code of Alexei Sibidanov, described in his paper . It generates random numbers with 52 bit precision (double precision) and it has an higher luxury level than the original Ranlux generator (p = 2048 instead of p=794).; TRandomMixMax: Generator based on the family of the MIXMAX matrix generators (see the MIXMAX HEPFORGE Web page and the documentation of the class ROOT::Math::MixMaxEngine for more information), that are base on the Asanov dynamical C systems. This generator has a state of N=240 64 bit int",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:4526,Testability,test,tests,4526,"; TRandomRanlux48 : Generator based on a the RanLux generator with 48 bits and highest luxury level using the implementation provided by the standard library (std::ranlux48). The drawback of this generator is its slow generation time.; TRandom2 is based on the Tausworthe generator of L'Ecuyer, and it has the advantage of being fast and using only 3 words (of 32 bits) for the state. The period however is not impressively long, it is 10**26. Using the template TRandomGen class (template on the contained Engine type), it is possible to add any generator based on the standard C++ random library (see the C++ random documentation.) or different variants of the MIXMAX generator using the ROOT::Math::MixMaxEngine. Some of the listed generator above (e.g. TRandomMixMax256 or TRandomMT64) are convenient typedef's of generator built using the template TRandomGen class.; Please note also that this class (TRandom) implements also a very simple generator (linear congruential) with period = \(10^9\), known to have defects (the lower random bits are correlated) and it is failing the majority of the random number generator tests. Therefore it should NOT be used in any statistical study.; The following table shows some timings (in nanoseconds/call) for the random numbers obtained using a macbookpro 2.6 GHz Intel Core i7 CPU:. TRandom 3 ns/call (but this is a very BAD Generator, not to be used); TRandom2 5 ns/call; TRandom3 5 ns/call; TRandomMixMax 6 ns/call; TRandomMixMax17 6 ns/call; TRandomMT64 9 ns/call; TRandomMixMax256 10 ns/call; TRandomRanluxpp 14 ns/call; TRandom1 80 ns/call; TRandomRanlux48 250 ns/call. The following methods are provided to generate random numbers distributed according to some basic distributions:. Exp(Double_t tau); Integer(UInt_t imax); Gaus(Double_t mean, Double_t sigma); Rndm(); Uniform(Double_t); Landau(Double_t mean, Double_t sigma); Poisson(Double_t mean); Binomial(Int_t ntot, Double_t prob). Random numbers distributed according to 1-d, 2-d or 3-d dis",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:7246,Testability,test,testrandom,7246,"ge. You need in this case to initialize UNURAN to the function you would like to generate. TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; TUnuranTUnuran class.Definition TUnuran.h:79; TUnuran::Initbool Init(const std::string &distr, const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::Sampledouble Sample()Sample 1D distribution.Definition TUnuran.cxx:414; The techniques of using directly a TF1,2 or 3 function is powerful and can be used to generate numbers in the defined range of the function. Getting a number from a TF1,2,3 function is also quite fast. UNURAN is a powerful and flexible tool which contains various methods for generate random numbers for continuous distributions of one and multi-dimension. It requires some set-up (initialization) phase and can be very fast when the distribution parameters are not changed for every call.; The following table shows some timings (in nanosecond/call) for basic functions, TF1 functions and using UNURAN obtained running the tutorial math/testrandom.C Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running Linux SLC4 64 bit and compiled with gcc 3.4; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 96.000 494.000 109.000 125.000; Poisson(10)....... 138.000 1236.000 165.000 203.000; Poisson(70)....... 818.000 1195.000 835.000 844.000; Poisson(100)...... 837.000 1218.000 849.000 864.000; GausTF1........... 83.000 180.000 87.000 88.000; LandauTF1......... 80.000 180.000 83.000 86.000; GausUNURAN....",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:4340,Usability,simpl,simple,4340,"; TRandomRanlux48 : Generator based on a the RanLux generator with 48 bits and highest luxury level using the implementation provided by the standard library (std::ranlux48). The drawback of this generator is its slow generation time.; TRandom2 is based on the Tausworthe generator of L'Ecuyer, and it has the advantage of being fast and using only 3 words (of 32 bits) for the state. The period however is not impressively long, it is 10**26. Using the template TRandomGen class (template on the contained Engine type), it is possible to add any generator based on the standard C++ random library (see the C++ random documentation.) or different variants of the MIXMAX generator using the ROOT::Math::MixMaxEngine. Some of the listed generator above (e.g. TRandomMixMax256 or TRandomMT64) are convenient typedef's of generator built using the template TRandomGen class.; Please note also that this class (TRandom) implements also a very simple generator (linear congruential) with period = \(10^9\), known to have defects (the lower random bits are correlated) and it is failing the majority of the random number generator tests. Therefore it should NOT be used in any statistical study.; The following table shows some timings (in nanoseconds/call) for the random numbers obtained using a macbookpro 2.6 GHz Intel Core i7 CPU:. TRandom 3 ns/call (but this is a very BAD Generator, not to be used); TRandom2 5 ns/call; TRandom3 5 ns/call; TRandomMixMax 6 ns/call; TRandomMixMax17 6 ns/call; TRandomMT64 9 ns/call; TRandomMixMax256 10 ns/call; TRandomRanluxpp 14 ns/call; TRandom1 80 ns/call; TRandomRanlux48 250 ns/call. The following methods are provided to generate random numbers distributed according to some basic distributions:. Exp(Double_t tau); Integer(UInt_t imax); Gaus(Double_t mean, Double_t sigma); Rndm(); Uniform(Double_t); Landau(Double_t mean, Double_t sigma); Poisson(Double_t mean); Binomial(Int_t ntot, Double_t prob). Random numbers distributed according to 1-d, 2-d or 3-d dis",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom.html:10630,Usability,simpl,simple,10630,"x:381; TRandom::Binomialvirtual Int_t Binomial(Int_t ntot, Double_t prob)Generates a random integer N according to the binomial law.Definition TRandom.cxx:212; Note that the time to generate a number from an arbitrary TF1 function using TF1::GetRandom or using TUnuran is independent of the complexity of the function.; TH1::FillRandom(TH1 *) or TH1::FillRandom(const char *tf1name) can be used to fill an histogram (1-d, 2-d, 3-d from an existing histogram or from an existing function.; Note this interesting feature when working with objects. You can use several TRandom objects, each with their ""independent"" random sequence. For example, one can imagine TRandom *eventGenerator = new TRandom();; TRandom *tracking = new TRandom();; eventGenerator can be used to generate the event kinematics. tracking can be used to track the generated particles with random numbers independent from eventGenerator. This very interesting feature gives the possibility to work with simple and very fast random number generators without worrying about random number periodicity as it was the case with Fortran. One can use TRandom::SetSeed to modify the seed of one generator.; A TRandom object may be written to a Root file. as part of another object; or with its own key (example: gRandom->Write(""Random"") ) ; . Definition at line 27 of file TRandom.h. Public Member Functions;  TRandom (UInt_t seed=65539);  Default constructor. For seed see SetSeed(). ;  ;  ~TRandom () override;  Default destructor. ;  ; virtual Int_t Binomial (Int_t ntot, Double_t prob);  Generates a random integer N according to the binomial law. ;  ; virtual Double_t BreitWigner (Double_t mean=0, Double_t gamma=1);  Return a number distributed following a BreitWigner function with mean and gamma. ;  ; virtual void Circle (Double_t &x, Double_t &y, Double_t r);  Generates random vectors, uniformly distributed over a circle of given radius. ;  ; virtual Double_t Exp (Double_t tau);  Returns an exponential deviate. ;  ; virtual Doub",MatchSource.WIKI,doc/master/classTRandom.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom.html
https://root.cern/doc/master/classTRandom1.html:7869,Availability,error,error,7869,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:7958,Availability,error,error,7958,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:8113,Availability,error,error,8113,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:8410,Availability,error,error,8410,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:12494,Availability,error,error,12494,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetTableSeeds (UInt_t *seeds, Int_t ind",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:1005,Integrability,rout,routine,1005,". ROOT: TRandom1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TRandom1 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; The Ranlux Random number generator class. ; The algorithm for this random engine has been taken from the original implementation in FORTRAN by Fred James as part of CLHEP.; The initialisation is carried out using a Multiplicative Congruential generator using formula constants of L'Ecuyer as described in ""F.James,; Comp. Phys. Comm. 60 (1990) 329-344"". ; Definition at line 27 of file TRandom1.h. Public Member Functions;  TRandom1 ();  Default constructor. ;  ;  TRandom1 (Int_t rowIndex, Int_t colIndex, Int_t lux);  Constructor. ;  ;  TRandom1 (UInt_t seed, Int_t lux=3);  Luxury level is set in the same way as the original FORTRAN routine. ;  ;  ~TRandom1 () override;  Destructor. ;  ; virtual Int_t GetLuxury () const;  Returns current luxury value. ;  ; UInt_t GetSeed () const override;  Returns the current seed (first element of the seed table) ;  ; const UInt_t * GetTheSeeds () const;  Returns the pointer to the current seeds array. ;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Returns a random number in ]0,1]. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t size, Double_t *vect) override;  Returns an array of random numbers in ]0,1[. ;  ; void RndmArray (Int_t size, Float_t *vect) override;  Returns an array of random numbers in ]0,1]. ;  ; void SetSeed (ULong_t seed) override;  Set the state of the generator providing a single seed value and using the luxury level defined when constructing the class. ;  ; virtual void SetSeed2 (UInt_t seed, Int_t lux=3);  Set the state of the generator provid",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:7875,Integrability,message,message,7875,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:8416,Integrability,message,message,8416,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:9406,Integrability,message,message,9406,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:12500,Integrability,message,message,12500,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetTableSeeds (UInt_t *seeds, Int_t ind",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:12873,Integrability,message,message,12873," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetTableSeeds (UInt_t *seeds, Int_t index);  Returns an array of seed values stored in the table, given the index. ;  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ;",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:16501,Integrability,rout,routine,16501,"; };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom1() [1/3]. TRandom1::TRandom1 ; (; ). Default constructor. ; Definition at line 284 of file TRandom1.cxx. ◆ TRandom1() [2/3]. TRandom1::TRandom1 ; (; UInt_t ; seed, . Int_t ; lux = 3 . ). Luxury level is set in the same way as the original FORTRAN routine. . level 0 (p=24): equivalent to the original RCARRY of Marsaglia and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0, now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. . Definition at line 263 of file TRandom1.cxx. ◆ TRandom1() [3/3]. TRandom1::TRandom1 ; (; Int_t ; rowIndex, . Int_t ; colIndex, . Int_t ; lux . ). Constructor. ; Definition at line 310 of file TRandom1.cxx. ◆ ~TRandom1(). TRandom1::~TRandom1 ; (; ). override . Destructor. ; Definition at line 336 of file TRandom1.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom1::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). stati",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:2341,Modifiability,inherit,inherited,2341,"IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Returns a random number in ]0,1]. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t size, Double_t *vect) override;  Returns an array of random numbers in ]0,1[. ;  ; void RndmArray (Int_t size, Float_t *vect) override;  Returns an array of random numbers in ]0,1]. ;  ; void SetSeed (ULong_t seed) override;  Set the state of the generator providing a single seed value and using the luxury level defined when constructing the class. ;  ; virtual void SetSeed2 (UInt_t seed, Int_t lux=3);  Set the state of the generator providing a single seed value and a luxury level. ;  ; virtual void SetSeeds (const UInt_t *seeds, Int_t lux=3);  Set the state of the generator providing an array of seeds. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRandom;  TRandom (UInt_t seed=65539);  Default constructor. For seed see SetSeed(). ;  ;  ~TRandom () override;  Default destructor. ;  ; virtual Int_t Binomial (Int_t ntot, Double_t prob);  Generates a random integer N according to the binomial law. ;  ; virtual Double_t BreitWigner (Double_t mean=0, Double_t gamma=1);  Return a number distributed following a BreitWigner function with mean and gamma. ;  ; virtual void Circle (Double_t &x, Double_t &y, Double_t r);  Generates random vectors, uniformly distributed over a circle of given radius. ;  ; virtual Double_t Exp (Double_t tau);  Returns an exponential deviate. ;  ; virtual Double_t Gaus (Double_t mean=0, Double_t sigma=1);  Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ;  ; virtual UInt_t Integer (UInt_t imax);  Returns a random integer uniformly distributed on the interval [ 0, imax-1 ]. ;  ; virtual Double_t Landau (Double_t mean=0, Double_t si",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:4784,Modifiability,inherit,inherited,4784,"w. ;  ; virtual void Rannor (Double_t &a, Double_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void Rannor (Float_t &a, Float_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void ReadRandom (const char *filename);  Reads saved random generator status from filename. ;  ; virtual void Sphere (Double_t &x, Double_t &y, Double_t &z, Double_t r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Uniform (Double_t x1, Double_t x2);  Returns a uniform deviate on the interval (x1, x2). ;  ; virtual Double_t Uniform (Double_t x1=1);  Returns a uniform deviate on the interval (0, x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:6412,Modifiability,inherit,inherited,6412,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:7505,Modifiability,inherit,inheritance,7505,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:9504,Modifiability,inherit,inherits,9504,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:9621,Modifiability,inherit,inherits,9621,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:13180,Modifiability,inherit,inherited,13180,"rawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetTableSeeds (UInt_t *seeds, Int_t index);  Returns an array of seed values stored in the table, given the index. ;  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (); ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:13603,Modifiability,inherit,inherited,13603,"har *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetTableSeeds (UInt_t *seeds, Int_t index);  Returns an array of seed values stored in the table, given the index. ;  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fCarry;  ; Int_t fCount24;  ; Float_t fFloatSeedTable [24];  ; Int_t fIlag;  ; const Int_t fIntModulus;  ; Int_t fJlag;  ; Int_t fLuxury;  ; const Double_t fMantissaBit12;  ; const Double_t fMantissaBit24;  Temporary array of seed values (transient) ;  ; Int_t fNskip;  ; const UInt_t * fTheSeeds;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:13814,Modifiability,inherit,inherited,13814,"har *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetTableSeeds (UInt_t *seeds, Int_t index);  Returns an array of seed values stored in the table, given the index. ;  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fCarry;  ; Int_t fCount24;  ; Float_t fFloatSeedTable [24];  ; Int_t fIlag;  ; const Int_t fIntModulus;  ; Int_t fJlag;  ; Int_t fLuxury;  ; const Double_t fMantissaBit12;  ; const Double_t fMantissaBit24;  Temporary array of seed values (transient) ;  ; Int_t fNskip;  ; const UInt_t * fTheSeeds;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:14024,Modifiability,inherit,inherited,14024,"har *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetTableSeeds (UInt_t *seeds, Int_t index);  Returns an array of seed values stored in the table, given the index. ;  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fCarry;  ; Int_t fCount24;  ; Float_t fFloatSeedTable [24];  ; Int_t fIlag;  ; const Int_t fIntModulus;  ; Int_t fJlag;  ; Int_t fLuxury;  ; const Double_t fMantissaBit12;  ; const Double_t fMantissaBit24;  Temporary array of seed values (transient) ;  ; Int_t fNskip;  ; const UInt_t * fTheSeeds;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:14863,Modifiability,inherit,inherited,14863,"c const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fCarry;  ; Int_t fCount24;  ; Float_t fFloatSeedTable [24];  ; Int_t fIlag;  ; const Int_t fIntModulus;  ; Int_t fJlag;  ; Int_t fLuxury;  ; const Double_t fMantissaBit12;  ; const Double_t fMantissaBit24;  Temporary array of seed values (transient) ;  ; Int_t fNskip;  ; const UInt_t * fTheSeeds;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t fgMaxIndex = 215;  ; static Int_t fgNumEngines = 0;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:14926,Modifiability,inherit,inherited,14926,"c const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fCarry;  ; Int_t fCount24;  ; Float_t fFloatSeedTable [24];  ; Int_t fIlag;  ; const Int_t fIntModulus;  ; Int_t fJlag;  ; Int_t fLuxury;  ; const Double_t fMantissaBit12;  ; const Double_t fMantissaBit24;  Temporary array of seed values (transient) ;  ; Int_t fNskip;  ; const UInt_t * fTheSeeds;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t fgMaxIndex = 215;  ; static Int_t fgNumEngines = 0;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:15127,Modifiability,inherit,inherited,15127,"leName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fCarry;  ; Int_t fCount24;  ; Float_t fFloatSeedTable [24];  ; Int_t fIlag;  ; const Int_t fIntModulus;  ; Int_t fJlag;  ; Int_t fLuxury;  ; const Double_t fMantissaBit12;  ; const Double_t fMantissaBit24;  Temporary array of seed values (transient) ;  ; Int_t fNskip;  ; const UInt_t * fTheSeeds;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t fgMaxIndex = 215;  ; static Int_t fgNumEngines = 0;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instea",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:15768,Modifiability,inherit,inherited,15768,"dom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t fgMaxIndex = 215;  ; static Int_t fgNumEngines = 0;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom1() [1/3]. TRandom1::TRandom1 ; (; ). Default constructor. ; Definition at line 284 of file TRandom1.cxx. ◆ TRandom1() [2/3]. TRandom1::TRandom1 ; (; UInt_t ; seed, . Int_t ; lux = 3 . ). Luxury level is set in the same way as the original FORTRAN routine. . level 0 (p=24): equivalent to the original RCARRY of Marsaglia and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0, now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possibl",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:15867,Modifiability,inherit,inherited,15867,"dom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t fgMaxIndex = 215;  ; static Int_t fgNumEngines = 0;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom1() [1/3]. TRandom1::TRandom1 ; (; ). Default constructor. ; Definition at line 284 of file TRandom1.cxx. ◆ TRandom1() [2/3]. TRandom1::TRandom1 ; (; UInt_t ; seed, . Int_t ; lux = 3 . ). Luxury level is set in the same way as the original FORTRAN routine. . level 0 (p=24): equivalent to the original RCARRY of Marsaglia and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0, now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possibl",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:5652,Security,hash,hash,5652,", x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:16619,Testability,test,tests,16619,"; , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom1() [1/3]. TRandom1::TRandom1 ; (; ). Default constructor. ; Definition at line 284 of file TRandom1.cxx. ◆ TRandom1() [2/3]. TRandom1::TRandom1 ; (; UInt_t ; seed, . Int_t ; lux = 3 . ). Luxury level is set in the same way as the original FORTRAN routine. . level 0 (p=24): equivalent to the original RCARRY of Marsaglia and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0, now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. . Definition at line 263 of file TRandom1.cxx. ◆ TRandom1() [3/3]. TRandom1::TRandom1 ; (; Int_t ; rowIndex, . Int_t ; colIndex, . Int_t ; lux . ). Constructor. ; Definition at line 310 of file TRandom1.cxx. ◆ ~TRandom1(). TRandom1::~TRandom1 ; (; ). override . Destructor. ; Definition at line 336 of file TRandom1.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom1::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom1::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Vers",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:16712,Testability,test,test,16712,"nu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom1() [1/3]. TRandom1::TRandom1 ; (; ). Default constructor. ; Definition at line 284 of file TRandom1.cxx. ◆ TRandom1() [2/3]. TRandom1::TRandom1 ; (; UInt_t ; seed, . Int_t ; lux = 3 . ). Luxury level is set in the same way as the original FORTRAN routine. . level 0 (p=24): equivalent to the original RCARRY of Marsaglia and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0, now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. . Definition at line 263 of file TRandom1.cxx. ◆ TRandom1() [3/3]. TRandom1::TRandom1 ; (; Int_t ; rowIndex, . Int_t ; colIndex, . Int_t ; lux . ). Constructor. ; Definition at line 310 of file TRandom1.cxx. ◆ ~TRandom1(). TRandom1::~TRandom1 ; (; ). override . Destructor. ; Definition at line 336 of file TRandom1.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom1::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom1::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom1::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:16743,Testability,test,test,16743,"nu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom1() [1/3]. TRandom1::TRandom1 ; (; ). Default constructor. ; Definition at line 284 of file TRandom1.cxx. ◆ TRandom1() [2/3]. TRandom1::TRandom1 ; (; UInt_t ; seed, . Int_t ; lux = 3 . ). Luxury level is set in the same way as the original FORTRAN routine. . level 0 (p=24): equivalent to the original RCARRY of Marsaglia and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0, now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. . Definition at line 263 of file TRandom1.cxx. ◆ TRandom1() [3/3]. TRandom1::TRandom1 ; (; Int_t ; rowIndex, . Int_t ; colIndex, . Int_t ; lux . ). Constructor. ; Definition at line 310 of file TRandom1.cxx. ◆ ~TRandom1(). TRandom1::~TRandom1 ; (; ). override . Destructor. ; Definition at line 336 of file TRandom1.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom1::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom1::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom1::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom1.html:16783,Testability,test,tests,16783,"ject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom1.h>. Inheritance diagram for TRandom1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom1() [1/3]. TRandom1::TRandom1 ; (; ). Default constructor. ; Definition at line 284 of file TRandom1.cxx. ◆ TRandom1() [2/3]. TRandom1::TRandom1 ; (; UInt_t ; seed, . Int_t ; lux = 3 . ). Luxury level is set in the same way as the original FORTRAN routine. . level 0 (p=24): equivalent to the original RCARRY of Marsaglia and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0, now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. . Definition at line 263 of file TRandom1.cxx. ◆ TRandom1() [3/3]. TRandom1::TRandom1 ; (; Int_t ; rowIndex, . Int_t ; colIndex, . Int_t ; lux . ). Constructor. ; Definition at line 310 of file TRandom1.cxx. ◆ ~TRandom1(). TRandom1::~TRandom1 ; (; ). override . Destructor. ; Definition at line 336 of file TRandom1.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom1::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom1::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom1::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 73 of file TRandom1.h. ◆ DeclFileName(). static const char * TRandom1::DeclFil",MatchSource.WIKI,doc/master/classTRandom1.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom1.html
https://root.cern/doc/master/classTRandom2.html:703,Availability,avail,available,703,". ROOT: TRandom2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TRandom2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Random number generator class based on the maximally quidistributed combined Tausworthe generator by L'Ecuyer. ; The period of the generator is 2**88 (about 10**26) and it uses only 3 words for the state.; For more information see: P. L'Ecuyer, Mathematics of Computation, 65, 213 (1996) P. L'Ecuyer, Mathematics of Computation, 68, 225 (1999); The publications are available online at [http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme.ps] [http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme2.ps] ; Definition at line 27 of file TRandom2.h. Public Member Functions;  TRandom2 (UInt_t seed=1);  Default constructor. ;  ;  ~TRandom2 () override;  Default destructor. ;  ; UInt_t GetSeed () const override;  Returns one of the seeds of the generator. ;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers Use a mask of 0xffffffffUL to make in work on 64 bit machines Periodicity of about 10**26 Generate number in interval (0,1) : 0 and 1 are not included in the interval. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void SetSeed (ULong_t seed=0) override;  Set the generator seed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Funct",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:1239,Availability,mask,mask,1239,"dom2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Random number generator class based on the maximally quidistributed combined Tausworthe generator by L'Ecuyer. ; The period of the generator is 2**88 (about 10**26) and it uses only 3 words for the state.; For more information see: P. L'Ecuyer, Mathematics of Computation, 65, 213 (1996) P. L'Ecuyer, Mathematics of Computation, 68, 225 (1999); The publications are available online at [http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme.ps] [http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme2.ps] ; Definition at line 27 of file TRandom2.h. Public Member Functions;  TRandom2 (UInt_t seed=1);  Default constructor. ;  ;  ~TRandom2 () override;  Default destructor. ;  ; UInt_t GetSeed () const override;  Returns one of the seeds of the generator. ;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers Use a mask of 0xffffffffUL to make in work on 64 bit machines Periodicity of about 10**26 Generate number in interval (0,1) : 0 and 1 are not included in the interval. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void SetSeed (ULong_t seed=0) override;  Set the generator seed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRandom;  TRandom (UInt_t seed=65539);  Default constructor. For seed see SetSeed(). ;  ;  ~TRandom () override;  Default destructor. ;  ; virtual Int_t Binomial (Int_t ntot, Double_t prob);  Generates a random integer N accordi",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:7534,Availability,error,error,7534,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:7623,Availability,error,error,7623,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:7778,Availability,error,error,7778,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:8075,Availability,error,error,8075,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:12159,Availability,error,error,12159,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRan",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:17015,Availability,mask,mask,17015," DeclFileName(). static const char * TRandom2::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 43 of file TRandom2.h. ◆ GetSeed(). UInt_t TRandom2::GetSeed ; (; ); const. overridevirtual . Returns one of the seeds of the generator. ; WarningThis is not the initial seed!; The internal state of the generator is described by three UInt_t numbers, called seed numbers, but they are not initial seeds. This function exposes one of them and can't provide full description of the generator state. ; Reimplemented from TRandom.; Definition at line 166 of file TRandom2.cxx. ◆ IsA(). TClass * TRandom2::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TRandom.; Definition at line 43 of file TRandom2.h. ◆ Rndm() [1/3]. Double_t TRandom2::Rndm ; (; ). overridevirtual . TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers Use a mask of 0xffffffffUL to make in work on 64 bit machines Periodicity of about 10**26 Generate number in interval (0,1) : 0 and 1 are not included in the interval. ; Reimplemented from TRandom.; Definition at line 55 of file TRandom2.cxx. ◆ Rndm() [2/3]. Double_t TRandom::Rndm ; (; ). overridevirtual . Machine independent random number generator. ; Based on the BSD Unix (Rand) Linear congruential generator. Produces uniformly-distributed floating points between 0 and 1. Identical sequence on all machines of >= 32 bits. Periodicity = 2**31, generates a number in (0,1). Note that this is a generator which is known to have defects (the lower random bits are correlated) and therefore should NOT be used in any statistical study). ; Reimplemented from TRandom.; Definition at line 49 of file TRandom.cxx. ◆ Rndm() [3/3]. virtual Double_t TRandom::Rndm ; (; Int_t ; ). inlinevirtual . Reimplemented from TRandom.; Definition at line 51 of file TRandom.h. ◆ RndmArray() [1/2]. void TRandom2::RndmArray ; (; Int_t ; n, . Double_t * ; array . ). ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:7540,Integrability,message,message,7540,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:8081,Integrability,message,message,8081,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:9071,Integrability,message,message,9071,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:12165,Integrability,message,message,12165,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRan",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:12538,Integrability,message,message,12538," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Stat",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:2006,Modifiability,inherit,inherited,2006," Default destructor. ;  ; UInt_t GetSeed () const override;  Returns one of the seeds of the generator. ;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers Use a mask of 0xffffffffUL to make in work on 64 bit machines Periodicity of about 10**26 Generate number in interval (0,1) : 0 and 1 are not included in the interval. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void SetSeed (ULong_t seed=0) override;  Set the generator seed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRandom;  TRandom (UInt_t seed=65539);  Default constructor. For seed see SetSeed(). ;  ;  ~TRandom () override;  Default destructor. ;  ; virtual Int_t Binomial (Int_t ntot, Double_t prob);  Generates a random integer N according to the binomial law. ;  ; virtual Double_t BreitWigner (Double_t mean=0, Double_t gamma=1);  Return a number distributed following a BreitWigner function with mean and gamma. ;  ; virtual void Circle (Double_t &x, Double_t &y, Double_t r);  Generates random vectors, uniformly distributed over a circle of given radius. ;  ; virtual Double_t Exp (Double_t tau);  Returns an exponential deviate. ;  ; virtual Double_t Gaus (Double_t mean=0, Double_t sigma=1);  Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ;  ; virtual UInt_t Integer (UInt_t imax);  Returns a random integer uniformly distributed on the interval [ 0, imax-1 ]. ;  ; virtual Double_t Landau (Double_t mean=0, Double_t si",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:4449,Modifiability,inherit,inherited,4449,"w. ;  ; virtual void Rannor (Double_t &a, Double_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void Rannor (Float_t &a, Float_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void ReadRandom (const char *filename);  Reads saved random generator status from filename. ;  ; virtual void Sphere (Double_t &x, Double_t &y, Double_t &z, Double_t r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Uniform (Double_t x1, Double_t x2);  Returns a uniform deviate on the interval (x1, x2). ;  ; virtual Double_t Uniform (Double_t x1=1);  Returns a uniform deviate on the interval (0, x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:6077,Modifiability,inherit,inherited,6077,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:7170,Modifiability,inherit,inheritance,7170,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:9169,Modifiability,inherit,inherits,9169,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:9286,Modifiability,inherit,inherits,9286,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:12845,Modifiability,inherit,inherited,12845,"rawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat fl",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:13136,Modifiability,inherit,inherited,13136," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotD",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:13347,Modifiability,inherit,inherited,13347," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotD",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:13557,Modifiability,inherit,inherited,13557," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotD",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:14123,Modifiability,inherit,inherited,14123,"ed from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:14186,Modifiability,inherit,inherited,14186,"ed from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:14290,Modifiability,inherit,inherited,14290,"ited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom2.h>. Inheritance diagram for TRandom2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instea",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:14931,Modifiability,inherit,inherited,14931,"otected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom2.h>. Inheritance diagram for TRandom2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom2(). TRandom2::TRandom2 ; (; UInt_t ; seed = 1). Default constructor. ; Definition at line 35 of file TRandom2.cxx. ◆ ~TRandom2(). TRandom2::~TRandom2 ; (; ). override . Default destructor. ; Definition at line 45 of file TRandom2.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom2::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom2::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom2::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 43 of file ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:15030,Modifiability,inherit,inherited,15030,"otected Attributes; UInt_t fSeed1;  ; UInt_t fSeed2;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandom2.h>. Inheritance diagram for TRandom2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom2(). TRandom2::TRandom2 ; (; UInt_t ; seed = 1). Default constructor. ; Definition at line 35 of file TRandom2.cxx. ◆ ~TRandom2(). TRandom2::~TRandom2 ; (; ). override . Default destructor. ; Definition at line 45 of file TRandom2.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom2::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom2::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom2::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 43 of file ",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:5317,Security,hash,hash,5317,", x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom2.html:16538,Security,expose,exposes,16538,"(; ). override . Default destructor. ; Definition at line 45 of file TRandom2.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom2::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom2::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom2::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 43 of file TRandom2.h. ◆ DeclFileName(). static const char * TRandom2::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 43 of file TRandom2.h. ◆ GetSeed(). UInt_t TRandom2::GetSeed ; (; ); const. overridevirtual . Returns one of the seeds of the generator. ; WarningThis is not the initial seed!; The internal state of the generator is described by three UInt_t numbers, called seed numbers, but they are not initial seeds. This function exposes one of them and can't provide full description of the generator state. ; Reimplemented from TRandom.; Definition at line 166 of file TRandom2.cxx. ◆ IsA(). TClass * TRandom2::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TRandom.; Definition at line 43 of file TRandom2.h. ◆ Rndm() [1/3]. Double_t TRandom2::Rndm ; (; ). overridevirtual . TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers Use a mask of 0xffffffffUL to make in work on 64 bit machines Periodicity of about 10**26 Generate number in interval (0,1) : 0 and 1 are not included in the interval. ; Reimplemented from TRandom.; Definition at line 55 of file TRandom2.cxx. ◆ Rndm() [2/3]. Double_t TRandom::Rndm ; (; ). overridevirtual . Machine independent random number generator. ; Based on the BSD Unix (Rand) Linear congruential generator. Produces uniformly-distributed floating points between 0 and 1. Identical sequence on all machines of >= 32 bits. Periodicity = 2**31, generates a",MatchSource.WIKI,doc/master/classTRandom2.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom2.html
https://root.cern/doc/master/classTRandom3-members.html:1510,Availability,error,error,1510,"irtual; Class()TRandom3static; Class_Name()TRandom3static; Class_Version()TRandom3inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandom3inlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCount624TRandom3private; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMtTRandom3private; fNameTNamedprotected; fSeedTRandomprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; Gaus(Double_t mean=0, Double_t sigma=1)TRandomvirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() const overrideTNamedinlinevirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetSeed() const overrideTRandom3inlinevirtual; GetState() constTRandom3inlinevirtual; GetTitle() const o",MatchSource.WIKI,doc/master/classTRandom3-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3-members.html
https://root.cern/doc/master/classTRandom3-members.html:1591,Availability,error,error,1591,"irtual; Class()TRandom3static; Class_Name()TRandom3static; Class_Version()TRandom3inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandom3inlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCount624TRandom3private; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMtTRandom3private; fNameTNamedprotected; fSeedTRandomprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; Gaus(Double_t mean=0, Double_t sigma=1)TRandomvirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() const overrideTNamedinlinevirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinlinevirtual; GetSeed() const overrideTRandom3inlinevirtual; GetState() constTRandom3inlinevirtual; GetTitle() const o",MatchSource.WIKI,doc/master/classTRandom3-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3-members.html
https://root.cern/doc/master/classTRandom3-members.html:189,Modifiability,inherit,inherited,189,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom3 Member List. This is the complete list of members for TRandom3, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Binomial(Int_t ntot, Double_t prob)TRandomvirtual; BreitWigner(Double_t mean=0, Double_t gamma=1)TRandomvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Circle(Double_t &x, Double_t &y, Double_t r)TRandomvirtual; Class()TRandom3static; Class_Name()TRandom3static; Class_Version()TRandom3inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandom3inlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCount624TRandom3private; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(c",MatchSource.WIKI,doc/master/classTRandom3-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3-members.html
https://root.cern/doc/master/classTRandom3.html:7949,Availability,error,error,7949,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:8038,Availability,error,error,8038,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:8193,Availability,error,error,8193,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:8490,Availability,error,error,8490,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:12574,Availability,error,error,12574,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRan",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:19313,Deployability,upgrade,upgraded,19313," Rndm() [3/3]. virtual Double_t TRandom::Rndm ; (; Int_t ; ). inlinevirtual . Reimplemented from TRandom.; Definition at line 51 of file TRandom.h. ◆ RndmArray() [1/2]. void TRandom3::RndmArray ; (; Int_t ; n, . Double_t * ; array . ). overridevirtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented from TRandom.; Definition at line 151 of file TRandom3.cxx. ◆ RndmArray() [2/2]. void TRandom3::RndmArray ; (; Int_t ; n, . Float_t * ; array . ). overridevirtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented from TRandom.; Definition at line 143 of file TRandom3.cxx. ◆ SetSeed(). void TRandom3::SetSeed ; (; ULong_t ; seed = 0). overridevirtual . Set the random generator sequence if seed is 0 (default value) a TUUID is generated and used to fill the first 8 integers of the seed array. ; In this case the seed is guaranteed to be unique in space and time. Use upgraded seeding procedure to fix a known problem when seeding with values with many zero in the bit pattern (like 2**28). see http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html ; Reimplemented from TRandom.; Definition at line 206 of file TRandom3.cxx. ◆ Streamer(). void TRandom3::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TRandom3. ; Reimplemented from TRandom.; Definition at line 237 of file TRandom3.cxx. ◆ StreamerNVirtual(). void TRandom3::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 47 of file TRandom3.h. Member Data Documentation. ◆ fCount624. Int_t TRandom3::fCount624. private . Definition at line 31 of file TRandom3.h. ◆ fMt. UInt_t TRandom3::fMt[624]. private . Definition at line 30 of file TRandom3.h. Libraries for TRandom3:. [legend]; The documentation for this class was generated from the following files:; math/mathcore/inc/TRandom3.h; math/mathcore/src/TRandom3.cxx. TRandom3. ROOT master - Reference Guide Generated on Tue Nov 5 20",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:7955,Integrability,message,message,7955,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:8496,Integrability,message,message,8496,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:9486,Integrability,message,message,9486,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:12580,Integrability,message,message,12580,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRan",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:12953,Integrability,message,message,12953," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Stat",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:2421,Modifiability,inherit,inherited,2421,"estructor. ;  ; UInt_t GetSeed () const override;  Return one element of the generator state used to generate the random numbers. ;  ; virtual const UInt_t * GetState () const;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void SetSeed (ULong_t seed=0) override;  Set the random generator sequence if seed is 0 (default value) a TUUID is generated and used to fill the first 8 integers of the seed array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TRandom3. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRandom;  TRandom (UInt_t seed=65539);  Default constructor. For seed see SetSeed(). ;  ;  ~TRandom () override;  Default destructor. ;  ; virtual Int_t Binomial (Int_t ntot, Double_t prob);  Generates a random integer N according to the binomial law. ;  ; virtual Double_t BreitWigner (Double_t mean=0, Double_t gamma=1);  Return a number distributed following a BreitWigner function with mean and gamma. ;  ; virtual void Circle (Double_t &x, Double_t &y, Double_t r);  Generates random vectors, uniformly distributed over a circle of given radius. ;  ; virtual Double_t Exp (Double_t tau);  Returns an exponential deviate. ;  ; virtual Double_t Gaus (Double_t mean=0, Double_t sigma=1);  Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ;  ; virtual UInt_t Integer (UInt_t imax);  Returns a random integer uniformly distributed on the interval [ 0, imax-1 ]. ;  ; virtual Double_t Landau (Double_t mean=0, Double_t si",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:4864,Modifiability,inherit,inherited,4864,"w. ;  ; virtual void Rannor (Double_t &a, Double_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void Rannor (Float_t &a, Float_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void ReadRandom (const char *filename);  Reads saved random generator status from filename. ;  ; virtual void Sphere (Double_t &x, Double_t &y, Double_t &z, Double_t r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Uniform (Double_t x1, Double_t x2);  Returns a uniform deviate on the interval (x1, x2). ;  ; virtual Double_t Uniform (Double_t x1=1);  Returns a uniform deviate on the interval (0, x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:6492,Modifiability,inherit,inherited,6492,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:7585,Modifiability,inherit,inheritance,7585,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:9584,Modifiability,inherit,inherits,9584,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:9701,Modifiability,inherit,inherits,9701,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:13260,Modifiability,inherit,inherited,13260,"rawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat fl",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:13551,Modifiability,inherit,inherited,13551," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fCount624;  ; UInt_t fMt [624];  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:13762,Modifiability,inherit,inherited,13762," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fCount624;  ; UInt_t fMt [624];  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:13972,Modifiability,inherit,inherited,13972," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fCount624;  ; UInt_t fMt [624];  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:14563,Modifiability,inherit,inherited,14563,"lass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fCount624;  ; UInt_t fMt [624];  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:15204,Modifiability,inherit,inherited,15204," *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fCount624;  ; UInt_t fMt [624];  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TRandom3.h>. Inheritance diagram for TRandom3:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom3(). TRandom3::TRandom3 ; (; UInt_t ; seed = 4357). Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ; In this case the seed is guaranteed to be unique in space and time. ; Definition at line 80 of file TRandom3.cxx. ◆ ~TRandom3(). TRandom3::~TRandom3 ; (; ). override . Default destructor. ; Definition at line 90 of file TRandom3.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom3::Class ; (; ). static . ReturnsTClass des",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:15303,Modifiability,inherit,inherited,15303," *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fCount624;  ; UInt_t fMt [624];  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TRandom3.h>. Inheritance diagram for TRandom3:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom3(). TRandom3::TRandom3 ; (; UInt_t ; seed = 4357). Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ; In this case the seed is guaranteed to be unique in space and time. ; Definition at line 80 of file TRandom3.cxx. ◆ ~TRandom3(). TRandom3::~TRandom3 ; (; ). override . Default destructor. ; Definition at line 90 of file TRandom3.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom3::Class ; (; ). static . ReturnsTClass des",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:15508,Modifiability,inherit,inherited,15508,"bers;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TRandom3.h>. Inheritance diagram for TRandom3:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom3(). TRandom3::TRandom3 ; (; UInt_t ; seed = 4357). Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ; In this case the seed is guaranteed to be unique in space and time. ; Definition at line 80 of file TRandom3.cxx. ◆ ~TRandom3(). TRandom3::~TRandom3 ; (; ). override . Default destructor. ; Definition at line 90 of file TRandom3.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom3::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom3::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom3::Class_Version ; (; ). inlinestaticconstexpr . ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:15571,Modifiability,inherit,inherited,15571,"bers;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TRandom3.h>. Inheritance diagram for TRandom3:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandom3(). TRandom3::TRandom3 ; (; UInt_t ; seed = 4357). Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ; In this case the seed is guaranteed to be unique in space and time. ; Definition at line 80 of file TRandom3.cxx. ◆ ~TRandom3(). TRandom3::~TRandom3 ; (; ). override . Default destructor. ; Definition at line 90 of file TRandom3.cxx. Member Function Documentation. ◆ Class(). static TClass * TRandom3::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom3::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom3::Class_Version ; (; ). inlinestaticconstexpr . ",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:5732,Security,hash,hash,5732,", x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:940,Testability,test,tests,940,". ROOT: TRandom3 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRandom3 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Random number generator class based on M. ; Matsumoto and T. Nishimura, Mersenne Twister: A 623-diminsionally equidistributed uniform pseudorandom number generator ACM Transactions on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3–30.; For more information see the Mersenne Twister homepage [http://www.math.keio.ac.jp/~matumoto/emt.html]; Advantage:. large period 2**19937 -1; relatively fast (slightly slower than TRandom2 but much faster than TRandom1). Drawback:; a relative large internal state of 624 integers; generate only 32 random bits; not passing all the random generator tests. It fails some tests in TestU01 (see [http://simul.iro.umontreal.ca/testu01/tu01.html]). An altenativly excellent generator passing all tests of TestU01, having 61 random bits and fast as Mersenne and Twister is MIXMAX (TRandomMixMax). ; Definition at line 27 of file TRandom3.h. Public Member Functions;  TRandom3 (UInt_t seed=4357);  Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ;  ;  ~TRandom3 () override;  Default destructor. ;  ; UInt_t GetSeed () const override;  Return one element of the generator state used to generate the random numbers. ;  ; virtual const UInt_t * GetState () const;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return a",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:961,Testability,test,tests,961,". ROOT: TRandom3 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRandom3 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Random number generator class based on M. ; Matsumoto and T. Nishimura, Mersenne Twister: A 623-diminsionally equidistributed uniform pseudorandom number generator ACM Transactions on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3–30.; For more information see the Mersenne Twister homepage [http://www.math.keio.ac.jp/~matumoto/emt.html]; Advantage:. large period 2**19937 -1; relatively fast (slightly slower than TRandom2 but much faster than TRandom1). Drawback:; a relative large internal state of 624 integers; generate only 32 random bits; not passing all the random generator tests. It fails some tests in TestU01 (see [http://simul.iro.umontreal.ca/testu01/tu01.html]). An altenativly excellent generator passing all tests of TestU01, having 61 random bits and fast as Mersenne and Twister is MIXMAX (TRandomMixMax). ; Definition at line 27 of file TRandom3.h. Public Member Functions;  TRandom3 (UInt_t seed=4357);  Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ;  ;  ~TRandom3 () override;  Default destructor. ;  ; UInt_t GetSeed () const override;  Return one element of the generator state used to generate the random numbers. ;  ; virtual const UInt_t * GetState () const;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return a",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandom3.html:1082,Testability,test,tests,1082,"atches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRandom3 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Random number generator class based on M. ; Matsumoto and T. Nishimura, Mersenne Twister: A 623-diminsionally equidistributed uniform pseudorandom number generator ACM Transactions on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3–30.; For more information see the Mersenne Twister homepage [http://www.math.keio.ac.jp/~matumoto/emt.html]; Advantage:. large period 2**19937 -1; relatively fast (slightly slower than TRandom2 but much faster than TRandom1). Drawback:; a relative large internal state of 624 integers; generate only 32 random bits; not passing all the random generator tests. It fails some tests in TestU01 (see [http://simul.iro.umontreal.ca/testu01/tu01.html]). An altenativly excellent generator passing all tests of TestU01, having 61 random bits and fast as Mersenne and Twister is MIXMAX (TRandomMixMax). ; Definition at line 27 of file TRandom3.h. Public Member Functions;  TRandom3 (UInt_t seed=4357);  Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ;  ;  ~TRandom3 () override;  Default destructor. ;  ; UInt_t GetSeed () const override;  Return one element of the generator state used to generate the random numbers. ;  ; virtual const UInt_t * GetState () const;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void SetSeed (ULong_t seed=0) override;  S",MatchSource.WIKI,doc/master/classTRandom3.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandom3.html
https://root.cern/doc/master/classTRandomGen.html:6816,Availability,error,error,6816,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:6905,Availability,error,error,6905,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:7060,Availability,error,error,7060,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:7357,Availability,error,error,7357,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:11441,Availability,error,error,11441,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRan",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:6822,Integrability,message,message,6822,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:7363,Integrability,message,message,7363,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:8353,Integrability,message,message,8353,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:11447,Integrability,message,message,11447,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRan",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:11820,Integrability,message,message,11820," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Stat",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:18274,Integrability,depend,depends,18274,"ay() [1/2]. template<class Engine > . void TRandomGen< Engine >::RndmArray ; (; Int_t ; n, . Double_t * ; array . ). inlineoverridevirtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented from TRandom.; Definition at line 66 of file TRandomGen.h. ◆ RndmArray() [2/2]. template<class Engine > . void TRandomGen< Engine >::RndmArray ; (; Int_t ; n, . Float_t * ; array . ). inlineoverridevirtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented from TRandom.; Definition at line 63 of file TRandomGen.h. ◆ SetSeed(). template<class Engine > . void TRandomGen< Engine >::SetSeed ; (; ULong_t ; seed = 0). inlineoverridevirtual . Set the random generator seed. ; Note that default value is zero, which is different than the default value used when constructing the class. If the seed is zero the seed is set to a random value which in case of TRandom depends on the lowest 4 bytes of TUUID The UUID will be identical if SetSeed(0) is called with time smaller than 100 ns Instead if a different generator implementation is used (TRandom1, 2 or 3) the seed is generated using a 128 bit UUID. This results in different seeds and then random sequence for every SetSeed(0) call. ; Reimplemented from TRandom.; Definition at line 69 of file TRandomGen.h. ◆ Streamer(). template<class Engine > . void TRandomGen< Engine >::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TRandom. ◆ StreamerNVirtual(). template<class Engine > . void TRandomGen< Engine >::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 73 of file TRandomGen.h. Member Data Documentation. ◆ fEngine. template<class Engine > . Engine TRandomGen< Engine >::fEngine. protected . Definition at line 52 of file TRandomGen.h. math/mathcore/inc/TRandomGen.h. TRandomGen. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:1218,Modifiability,inherit,inherited,1218,"Functions |; Protected Attributes |; List of all members ; TRandomGen< Engine > Class Template Reference. ; template<class Engine>; class TRandomGen< Engine >; Definition at line 48 of file TRandomGen.h. Public Member Functions;  TRandomGen (ULong_t seed=1);  ;  ~TRandomGen () override;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void SetSeed (ULong_t seed=0) override;  Set the random generator seed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRandom;  TRandom (UInt_t seed=65539);  Default constructor. For seed see SetSeed(). ;  ;  ~TRandom () override;  Default destructor. ;  ; virtual Int_t Binomial (Int_t ntot, Double_t prob);  Generates a random integer N according to the binomial law. ;  ; virtual Double_t BreitWigner (Double_t mean=0, Double_t gamma=1);  Return a number distributed following a BreitWigner function with mean and gamma. ;  ; virtual void Circle (Double_t &x, Double_t &y, Double_t r);  Generates random vectors, uniformly distributed over a circle of given radius. ;  ; virtual Double_t Exp (Double_t tau);  Returns an exponential deviate. ;  ; virtual Double_t Gaus (Double_t mean=0, Double_t sigma=1);  Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ;  ; virtual UInt_t GetSeed () const;  Get the random generator seed. ;  ; virtual UInt_t Integer (UInt_t imax);  Returns a random integer uniformly distributed on the interval [ 0",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:3731,Modifiability,inherit,inherited,3731,"w. ;  ; virtual void Rannor (Double_t &a, Double_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void Rannor (Float_t &a, Float_t &b);  Return 2 numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; virtual void ReadRandom (const char *filename);  Reads saved random generator status from filename. ;  ; virtual void Sphere (Double_t &x, Double_t &y, Double_t &z, Double_t r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Uniform (Double_t x1, Double_t x2);  Returns a uniform deviate on the interval (x1, x2). ;  ; virtual Double_t Uniform (Double_t x1=1);  Returns a uniform deviate on the interval (0, x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:5359,Modifiability,inherit,inherited,5359,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:6452,Modifiability,inherit,inheritance,6452,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:8451,Modifiability,inherit,inherits,8451,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:8568,Modifiability,inherit,inherits,8568,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:12127,Modifiability,inherit,inherited,12127,"rawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat fl",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:12418,Modifiability,inherit,inherited,12418," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x020000",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:12629,Modifiability,inherit,inherited,12629," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x020000",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:12839,Modifiability,inherit,inherited,12839," is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x020000",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:13388,Modifiability,inherit,inherited,13388," inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interf",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:13451,Modifiability,inherit,inherited,13451," inherited from TRandom; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interf",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:13555,Modifiability,inherit,inherited,13555,"r Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandomGen.h>. Inheritance diagram for TRandomGen< Engine >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, o",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:14196,Modifiability,inherit,inherited,14196,"ectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandomGen.h>. Inheritance diagram for TRandomGen< Engine >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandomGen(). template<class Engine > . TRandomGen< Engine >::TRandomGen ; (; ULong_t ; seed = 1). inline . Definition at line 55 of file TRandomGen.h. ◆ ~TRandomGen(). template<class Engine > . TRandomGen< Engine >::~TRandomGen ; (; ). inlineoverride . Definition at line 60 of file TRandomGen.h. Member Function Documentation. ◆ Class(). template<class Engine > . static TClass * TRandomGen< Engine >::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). template<class Engine > . static const char * TRandomGen< Engine >::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version().",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:14295,Modifiability,inherit,inherited,14295,"ectTable. ;  . Protected Attributes; Engine fEngine;  ;  Protected Attributes inherited from TRandom; UInt_t fSeed;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRandomGen.h>. Inheritance diagram for TRandomGen< Engine >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRandomGen(). template<class Engine > . TRandomGen< Engine >::TRandomGen ; (; ULong_t ; seed = 1). inline . Definition at line 55 of file TRandomGen.h. ◆ ~TRandomGen(). template<class Engine > . TRandomGen< Engine >::~TRandomGen ; (; ). inlineoverride . Definition at line 60 of file TRandomGen.h. Member Function Documentation. ◆ Class(). template<class Engine > . static TClass * TRandomGen< Engine >::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). template<class Engine > . static const char * TRandomGen< Engine >::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version().",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRandomGen.html:4599,Security,hash,hash,4599,", x1). ;  ; virtual void WriteRandom (const char *filename) const;  Writes random generator status to filename. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTRandomGen.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRandomGen.html
https://root.cern/doc/master/classTRatioPlot.html:1720,Availability,error,errors,1720,", that is used to determine which procedure is chosen. The remaining option string is then passed through to the calculation, if applicable. The other constructor uses a fitted histogram to calculate the fit residual and plot it with the histogram and the fit function. Ratios and differences; The simplest case is passing two histograms without specifying any options. This defaults to using TGraphAsymmErrors::Divide. The option variable is passed through, as are the parameters c1 and c2, that you can set via TRatioPlot::SetC1 and TRatioPlot::SetC1. If you set the option to divsym the method TH1::Divide will be used instead, also receiving all the parameters.; Using the option diff or diffsig, both histograms will be subtracted, and in the case of diffsig, the difference will be divided by the uncertainty. c1 and c2 will only be used to scale the histograms using TH1::Scale prior to subtraction.; Available options are for option: . Option Description . divsym uses the histogram TH1::Divide method, yields symmetric errors . diff subtracts the histograms . diffsig subtracts the histograms and divides by the uncertainty . ; void ratioplot1() {; gStyle->SetOptStat(0);; auto C = new TCanvas(""C"", ""A ratio example"");; auto h1 = new TH1D(""h1"", ""TRatioPlot Example; x; y"", 50, 0, 10);; auto h2 = new TH1D(""h2"", ""h2"", 50, 0, 10);; auto f1 = new TF1(""f1"", ""exp(- x/[0] )"");; f1->SetParameter(0, 3);; h1->FillRandom(""f1"", 1900);; h2->FillRandom(""f1"", 2000);; h1->Sumw2();; h2->Scale(1.9 / 2.);; h2->SetLineColor(kRed);; ; // Create and draw the ratio plot; auto rp = new TRatioPlot(h1, h2);; C->SetTicks(0, 1);; rp->Draw();; rp->GetLowYaxis()->SetNdivisions(505);; ; // Add a legend to the ratio plot; rp->GetUpperPad()->cd();; TLegend *legend = new TLegend(0.3,0.7,0.7,0.85);; legend->AddEntry(""h1"",""First histogram"",""l"");; legend->AddEntry(""h2"",""Second histogram"",""le"");; legend->Draw();; }; kRed@ kRedDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:4481,Availability,error,error,4481," new entry to this legend.Definition TLegend.cxx:320; TLegend::Drawvoid Draw(Option_t *option="""") overrideDraw this legend with its current attributes.Definition TLegend.cxx:425; TRatioPlot::TRatioPlotTRatioPlot()TRatioPlot default constructor.Definition TRatioPlot.cxx:104; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; h1TH1F * h1Definition legend1.C:5; f1TF1 * f1Definition legend1.C:11; ratioplot1Definition ratioplot1.py:1; . Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted function. The function is used to calculate the residual between the fit and the histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the difference between the histogram and the fit function at each point and divides it by the uncertainty. There are a few option to steer which error is used (as is the case for diffsig). The default is to use the statistical uncertainty from h1 using TH1::GetBinError. If the option string contains errasym, asymmetric errors will be used. The type of error can be steered by TH1::SetBinErrorOption. The corresponding error will be used, depending on if the function is below or above the bin content. The third option errfunc uses the square root of the function value as the error.; ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit h",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:4657,Availability,error,errors,4657,"ion TLegend.cxx:425; TRatioPlot::TRatioPlotTRatioPlot()TRatioPlot default constructor.Definition TRatioPlot.cxx:104; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; h1TH1F * h1Definition legend1.C:5; f1TF1 * f1Definition legend1.C:11; ratioplot1Definition ratioplot1.py:1; . Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted function. The function is used to calculate the residual between the fit and the histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the difference between the histogram and the fit function at each point and divides it by the uncertainty. There are a few option to steer which error is used (as is the case for diffsig). The default is to use the statistical uncertainty from h1 using TH1::GetBinError. If the option string contains errasym, asymmetric errors will be used. The type of error can be steered by TH1::SetBinErrorOption. The corresponding error will be used, depending on if the function is below or above the bin content. The third option errfunc uses the square root of the function value as the error.; ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:4690,Availability,error,error,4690,"default constructor.Definition TRatioPlot.cxx:104; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; h1TH1F * h1Definition legend1.C:5; f1TF1 * f1Definition legend1.C:11; ratioplot1Definition ratioplot1.py:1; . Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted function. The function is used to calculate the residual between the fit and the histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the difference between the histogram and the fit function at each point and divides it by the uncertainty. There are a few option to steer which error is used (as is the case for diffsig). The default is to use the statistical uncertainty from h1 using TH1::GetBinError. If the option string contains errasym, asymmetric errors will be used. The type of error can be steered by TH1::SetBinErrorOption. The corresponding error will be used, depending on if the function is below or above the bin content. The third option errfunc uses the square root of the function value as the error.; ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:4756,Availability,error,error,4756,"tat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; h1TH1F * h1Definition legend1.C:5; f1TF1 * f1Definition legend1.C:11; ratioplot1Definition ratioplot1.py:1; . Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted function. The function is used to calculate the residual between the fit and the histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the difference between the histogram and the fit function at each point and divides it by the uncertainty. There are a few option to steer which error is used (as is the case for diffsig). The default is to use the statistical uncertainty from h1 using TH1::GetBinError. If the option string contains errasym, asymmetric errors will be used. The type of error can be steered by TH1::SetBinErrorOption. The corresponding error will be used, depending on if the function is below or above the bin content. The third option errfunc uses the square root of the function value as the error.; ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit r",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:4915,Availability,error,error,4915,"cted via the parameter mod...Definition TStyle.cxx:1640; h1TH1F * h1Definition legend1.C:5; f1TF1 * f1Definition legend1.C:11; ratioplot1Definition ratioplot1.py:1; . Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted function. The function is used to calculate the residual between the fit and the histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the difference between the histogram and the fit function at each point and divides it by the uncertainty. There are a few option to steer which error is used (as is the case for diffsig). The default is to use the statistical uncertainty from h1 using TH1::GetBinError. If the option string contains errasym, asymmetric errors will be used. The type of error can be steered by TH1::SetBinErrorOption. The corresponding error will be used, depending on if the function is below or above the bin content. The third option errfunc uses the square root of the function value as the error.; ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:5961,Availability,error,errors,5961,"; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric error case uses the upper or lower error depending on the relative size of the bin contents, or the bin content and the function value. Access to internal parts; You can access the internal objects that are used to construct the plot via a series of methods. TRatioPlot::GetUpperPad and TRatioPlot::GetLowerPad can be used to draw additional elements on top of the existing ones. TRatioPlot::GetLowerRefGraph returns a reference to the lower pad's graph that is responsible for the range, which enables you to modify the range. Definition at line 43 of file TRatioPlot.h. Public Member Functions;  TRatioPlot ();  TRatioPlot default constructor. ;  ;  TRatioPlot (TH1 *h1, Option_t *option="""", TFitResult *fitres=nullptr);  Constructor for one histogram and a fit. ;  ;  TRatioPlot (TH1 *h1, TH1 *h2, Option_t *option=""pois"");  Constructo",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:6108,Availability,error,error,6108,"00);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric error case uses the upper or lower error depending on the relative size of the bin contents, or the bin content and the function value. Access to internal parts; You can access the internal objects that are used to construct the plot via a series of methods. TRatioPlot::GetUpperPad and TRatioPlot::GetLowerPad can be used to draw additional elements on top of the existing ones. TRatioPlot::GetLowerRefGraph returns a reference to the lower pad's graph that is responsible for the range, which enables you to modify the range. Definition at line 43 of file TRatioPlot.h. Public Member Functions;  TRatioPlot ();  TRatioPlot default constructor. ;  ;  TRatioPlot (TH1 *h1, Option_t *option="""", TFitResult *fitres=nullptr);  Constructor for one histogram and a fit. ;  ;  TRatioPlot (TH1 *h1, TH1 *h2, Option_t *option=""pois"");  Constructor for two histograms. ;  ;  TRatioPlot (TH1 *h1, THStack *st, Option_t *option=""pois"");  Constructor which accepts a THStac",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:6131,Availability,error,error,6131,"Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric error case uses the upper or lower error depending on the relative size of the bin contents, or the bin content and the function value. Access to internal parts; You can access the internal objects that are used to construct the plot via a series of methods. TRatioPlot::GetUpperPad and TRatioPlot::GetLowerPad can be used to draw additional elements on top of the existing ones. TRatioPlot::GetLowerRefGraph returns a reference to the lower pad's graph that is responsible for the range, which enables you to modify the range. Definition at line 43 of file TRatioPlot.h. Public Member Functions;  TRatioPlot ();  TRatioPlot default constructor. ;  ;  TRatioPlot (TH1 *h1, Option_t *option="""", TFitResult *fitres=nullptr);  Constructor for one histogram and a fit. ;  ;  TRatioPlot (TH1 *h1, TH1 *h2, Option_t *option=""pois"");  Constructor for two histograms. ;  ;  TRatioPlot (TH1 *h1, THStack *st, Option_t *option=""pois"");  Constructor which accepts a THStack and a histogram. ;  ;  TRatioPlot (THStack *st, TH1 *h2, Option_t *option=""pois"");  Constructor w",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:6166,Availability,error,error,6166,"Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric error case uses the upper or lower error depending on the relative size of the bin contents, or the bin content and the function value. Access to internal parts; You can access the internal objects that are used to construct the plot via a series of methods. TRatioPlot::GetUpperPad and TRatioPlot::GetLowerPad can be used to draw additional elements on top of the existing ones. TRatioPlot::GetLowerRefGraph returns a reference to the lower pad's graph that is responsible for the range, which enables you to modify the range. Definition at line 43 of file TRatioPlot.h. Public Member Functions;  TRatioPlot ();  TRatioPlot default constructor. ;  ;  TRatioPlot (TH1 *h1, Option_t *option="""", TFitResult *fitres=nullptr);  Constructor for one histogram and a fit. ;  ;  TRatioPlot (TH1 *h1, TH1 *h2, Option_t *option=""pois"");  Constructor for two histograms. ;  ;  TRatioPlot (TH1 *h1, THStack *st, Option_t *option=""pois"");  Constructor which accepts a THStack and a histogram. ;  ;  TRatioPlot (THStack *st, TH1 *h2, Option_t *option=""pois"");  Constructor w",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:12765,Availability,error,error,12765,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:12854,Availability,error,error,12854,"longs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:13009,Availability,error,error,13009,"y. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:13306,Availability,error,error,13306,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:17757,Availability,error,error,17757," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:21349,Availability,error,error,21349," ; virtual void UpdateVisualAxes ();  Update TGaxis attributes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1 = 1.;  Stores the scale factor for h1 (or THStack sum) ;  ; Double_t fC2 = 1.;  Stores the scale factor for h2. ;  ; Color_t fCi1Color = kYellow;  Stores the color for the 1 sigma band. ;  ; Color_t fCi2Color = kGreen;  Stores the color for the 2 sigma band. ;  ; Double_t fCl1 = 0.6827;  Stores the confidence level for the inner confidence interval band. ;  ; Double_t fCl2 = 0.9545;  Stores the confidence level for the outer confidence interval band. ;  ; TGraphErrors * fConfidenceInterval1 = nullptr;  Stores the graph for the 1 sigma band. ;  ; TGraphErrors * fConfidenceInterval2 = nullptr;  Stores the graph for the 2 sigma band. ;  ; Int_t fErrorMode = ErrorMode::kErrorSymmetric;  Stores the error mode, sym, asym or func. ;  ; TString fFitDrawOpt;  Stores draw option for the fit function in the fit residual case. ;  ; TFitResult * fFitResult = nullptr;  Stores the explicit fit result given in the fit residual case. Can be 0. ;  ; TString fGraphDrawOpt;  Stores draw option for the lower plot graph given in constructor. ;  ; std::vector< double > fGridlinePositions;  Stores the y positions for the gridlines. ;  ; std::vector< TLine * > fGridlines;  Keeps TLine objects for the gridlines. ;  ; TH1 * fH1 = nullptr;  Stores the primary histogram. ;  ; TString fH1DrawOpt;  Stores draw option for h1 given in constructor. ;  ; TH1 * fH2 = nullptr;  Stores the secondary histogram, if there is one. ;  ; TString fH2DrawOpt;  Stores draw option for h2 given in constructor. ;  ; Int_t fHideLabelMode = HideLabelMode::kHideLow;  Stores which label to hide if the margin is to narrow, if at all. ;  ; TObject * fHistDrawProxy = nullptr;  The object which is actually drawn, t",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:26560,Availability,error,error,26560,"; };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRatioPlot.h>. Inheritance diagram for TRatioPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CalculationMode. enum TRatioPlot::CalculationMode. private . EnumeratorkDivideHist Use TH1::Divide to create the ratio. . kDivideGraph Use TGraphAsymmErrors::Divide to create the ratio. . kDifference Calculate the difference between the histograms. . kFitResidual Calculate the fit residual between the histogram and a fit stored within it. . kDifferenceSign Calculate the difference divided by the error. . Definition at line 49 of file TRatioPlot.h. ◆ ErrorMode. enum TRatioPlot::ErrorMode. private . EnumeratorkErrorSymmetric Use the regular TH1::GetBinError as the error. . kErrorAsymmetric Use TH1::GetBinErrorUp and TH1::GetBinErrorLow for the error, depending on y values. . kErrorFunc Use the square root of the function value as the error. . Definition at line 57 of file TRatioPlot.h. ◆ HideLabelMode. enum TRatioPlot::HideLabelMode. private . EnumeratorkHideUp Hide the first label of the upper y axis when there is low space. . kHideLow Hide the last label of the lower y axis when there is low space. . kNoHide Do not hide labels when there is low space. . kForceHideUp Always hide the first label of the upper y axis. . kForceHideLow Always hide the last label of the lower y axis. . Definition at line 63 of file TRatioPlot.h. Constructor & Destructor Documentation. ◆ TRatioPlot() [1/6]. TRatioPlot::TRatioPlot ; (; const TRatioPlot & ; ). privatedelete . ◆ ",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:26730,Availability,error,error,26730," kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRatioPlot.h>. Inheritance diagram for TRatioPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CalculationMode. enum TRatioPlot::CalculationMode. private . EnumeratorkDivideHist Use TH1::Divide to create the ratio. . kDivideGraph Use TGraphAsymmErrors::Divide to create the ratio. . kDifference Calculate the difference between the histograms. . kFitResidual Calculate the fit residual between the histogram and a fit stored within it. . kDifferenceSign Calculate the difference divided by the error. . Definition at line 49 of file TRatioPlot.h. ◆ ErrorMode. enum TRatioPlot::ErrorMode. private . EnumeratorkErrorSymmetric Use the regular TH1::GetBinError as the error. . kErrorAsymmetric Use TH1::GetBinErrorUp and TH1::GetBinErrorLow for the error, depending on y values. . kErrorFunc Use the square root of the function value as the error. . Definition at line 57 of file TRatioPlot.h. ◆ HideLabelMode. enum TRatioPlot::HideLabelMode. private . EnumeratorkHideUp Hide the first label of the upper y axis when there is low space. . kHideLow Hide the last label of the lower y axis when there is low space. . kNoHide Do not hide labels when there is low space. . kForceHideUp Always hide the first label of the upper y axis. . kForceHideLow Always hide the last label of the lower y axis. . Definition at line 63 of file TRatioPlot.h. Constructor & Destructor Documentation. ◆ TRatioPlot() [1/6]. TRatioPlot::TRatioPlot ; (; const TRatioPlot & ; ). privatedelete . ◆ TRatioPlot() [2/6]. TRatioPlot::TRatioPlot ; (; ). TRatioPlot default constructor. ; Definition at line 104 of file TRatioPlot.cxx. ◆ ~TRatioPlot(). TRatioPlot::~TRa",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:26811,Availability,error,error,26811,"<< ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRatioPlot.h>. Inheritance diagram for TRatioPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CalculationMode. enum TRatioPlot::CalculationMode. private . EnumeratorkDivideHist Use TH1::Divide to create the ratio. . kDivideGraph Use TGraphAsymmErrors::Divide to create the ratio. . kDifference Calculate the difference between the histograms. . kFitResidual Calculate the fit residual between the histogram and a fit stored within it. . kDifferenceSign Calculate the difference divided by the error. . Definition at line 49 of file TRatioPlot.h. ◆ ErrorMode. enum TRatioPlot::ErrorMode. private . EnumeratorkErrorSymmetric Use the regular TH1::GetBinError as the error. . kErrorAsymmetric Use TH1::GetBinErrorUp and TH1::GetBinErrorLow for the error, depending on y values. . kErrorFunc Use the square root of the function value as the error. . Definition at line 57 of file TRatioPlot.h. ◆ HideLabelMode. enum TRatioPlot::HideLabelMode. private . EnumeratorkHideUp Hide the first label of the upper y axis when there is low space. . kHideLow Hide the last label of the lower y axis when there is low space. . kNoHide Do not hide labels when there is low space. . kForceHideUp Always hide the first label of the upper y axis. . kForceHideLow Always hide the last label of the lower y axis. . Definition at line 63 of file TRatioPlot.h. Constructor & Destructor Documentation. ◆ TRatioPlot() [1/6]. TRatioPlot::TRatioPlot ; (; const TRatioPlot & ; ). privatedelete . ◆ TRatioPlot() [2/6]. TRatioPlot::TRatioPlot ; (; ). TRatioPlot default constructor. ; Definition at line 104 of file TRatioPlot.cxx. ◆ ~TRatioPlot(). TRatioPlot::~TRatioPlot ; (; ). override . Destructor. ; Definition at line 109 of file TRatioPlot.cxx. ◆",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:26903,Availability,error,error,26903,"  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRatioPlot.h>. Inheritance diagram for TRatioPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CalculationMode. enum TRatioPlot::CalculationMode. private . EnumeratorkDivideHist Use TH1::Divide to create the ratio. . kDivideGraph Use TGraphAsymmErrors::Divide to create the ratio. . kDifference Calculate the difference between the histograms. . kFitResidual Calculate the fit residual between the histogram and a fit stored within it. . kDifferenceSign Calculate the difference divided by the error. . Definition at line 49 of file TRatioPlot.h. ◆ ErrorMode. enum TRatioPlot::ErrorMode. private . EnumeratorkErrorSymmetric Use the regular TH1::GetBinError as the error. . kErrorAsymmetric Use TH1::GetBinErrorUp and TH1::GetBinErrorLow for the error, depending on y values. . kErrorFunc Use the square root of the function value as the error. . Definition at line 57 of file TRatioPlot.h. ◆ HideLabelMode. enum TRatioPlot::HideLabelMode. private . EnumeratorkHideUp Hide the first label of the upper y axis when there is low space. . kHideLow Hide the last label of the lower y axis when there is low space. . kNoHide Do not hide labels when there is low space. . kForceHideUp Always hide the first label of the upper y axis. . kForceHideLow Always hide the last label of the lower y axis. . Definition at line 63 of file TRatioPlot.h. Constructor & Destructor Documentation. ◆ TRatioPlot() [1/6]. TRatioPlot::TRatioPlot ; (; const TRatioPlot & ; ). privatedelete . ◆ TRatioPlot() [2/6]. TRatioPlot::TRatioPlot ; (; ). TRatioPlot default constructor. ; Definition at line 104 of file TRatioPlot.cxx. ◆ ~TRatioPlot(). TRatioPlot::~TRatioPlot ; (; ). override . Destructor. ; Definition at line 109 of file TRatioPlot.cxx. ◆ TRatioPlot() [3/6]. TRatioPlot::TRatioPlot ; (; TH1 * ; h1, . TH1 * ; h2, . Option_t *",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:28004,Availability,error,error,28004,"Mode. private . EnumeratorkHideUp Hide the first label of the upper y axis when there is low space. . kHideLow Hide the last label of the lower y axis when there is low space. . kNoHide Do not hide labels when there is low space. . kForceHideUp Always hide the first label of the upper y axis. . kForceHideLow Always hide the last label of the lower y axis. . Definition at line 63 of file TRatioPlot.h. Constructor & Destructor Documentation. ◆ TRatioPlot() [1/6]. TRatioPlot::TRatioPlot ; (; const TRatioPlot & ; ). privatedelete . ◆ TRatioPlot() [2/6]. TRatioPlot::TRatioPlot ; (; ). TRatioPlot default constructor. ; Definition at line 104 of file TRatioPlot.cxx. ◆ ~TRatioPlot(). TRatioPlot::~TRatioPlot ; (; ). override . Destructor. ; Definition at line 109 of file TRatioPlot.cxx. ◆ TRatioPlot() [3/6]. TRatioPlot::TRatioPlot ; (; TH1 * ; h1, . TH1 * ; h2, . Option_t * ; option = ""pois"" . ). Constructor for two histograms. ; Parameters. h1First histogram ; h2Second histogram ; optionSteers the error calculation, as well as ratio / difference . Definition at line 186 of file TRatioPlot.cxx. ◆ TRatioPlot() [4/6]. TRatioPlot::TRatioPlot ; (; THStack * ; st, . TH1 * ; h2, . Option_t * ; option = ""pois"" . ). Constructor which accepts a THStack and a histogram. ; Converts the stack to a regular sum of its containing histograms for processing.; Parameters. stThe THStack object ; h2The other histogram ; optionSteers the calculation of the lower plot . Definition at line 215 of file TRatioPlot.cxx. ◆ TRatioPlot() [5/6]. TRatioPlot::TRatioPlot ; (; TH1 * ; h1, . THStack * ; st, . Option_t * ; option = ""pois"" . ). Constructor which accepts a THStack and a histogram. ; Converts the stack to a regular sum of its containing histograms for processing.; Parameters. h1The other histogram ; stThe THStack object ; optionSteers the calculation of the lower plot . Definition at line 251 of file TRatioPlot.cxx. ◆ TRatioPlot() [6/6]. TRatioPlot::TRatioPlot ; (; TH1 * ; h1, . Option_t * ; optio",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:29137,Availability,error,error,29137,"tack * ; st, . TH1 * ; h2, . Option_t * ; option = ""pois"" . ). Constructor which accepts a THStack and a histogram. ; Converts the stack to a regular sum of its containing histograms for processing.; Parameters. stThe THStack object ; h2The other histogram ; optionSteers the calculation of the lower plot . Definition at line 215 of file TRatioPlot.cxx. ◆ TRatioPlot() [5/6]. TRatioPlot::TRatioPlot ; (; TH1 * ; h1, . THStack * ; st, . Option_t * ; option = ""pois"" . ). Constructor which accepts a THStack and a histogram. ; Converts the stack to a regular sum of its containing histograms for processing.; Parameters. h1The other histogram ; stThe THStack object ; optionSteers the calculation of the lower plot . Definition at line 251 of file TRatioPlot.cxx. ◆ TRatioPlot() [6/6]. TRatioPlot::TRatioPlot ; (; TH1 * ; h1, . Option_t * ; option = """", . TFitResult * ; fitres = nullptr . ). Constructor for one histogram and a fit. ; Parameters. h1The histogram ; optionSteers the error calculation ; fitresExplicit fit result to be used for calculation. Uses last fit if left empty . Definition at line 286 of file TRatioPlot.cxx. Member Function Documentation. ◆ BuildLowerPlot(). Int_t TRatioPlot::BuildLowerPlot ; (; ). protected . Build the lower plot according to which constructor was called, and which options were passed. ; Definition at line 912 of file TRatioPlot.cxx. ◆ Class(). static TClass * TRatioPlot::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRatioPlot::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRatioPlot::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 249 of file TRatioPlot.h. ◆ ConnectPadsSignals(). void TRatioPlot::ConnectPadsSignals ; (; ). protectedvirtual . Connect some signals from the pads to handle them Allows correctly work also after reading ratioplot from the file. ; Definition at line 434 of file ",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:46092,Availability,error,error,46092," Definition at line 97 of file TRatioPlot.h. ◆ fCi2Color. Color_t TRatioPlot::fCi2Color = kGreen. protected . Stores the color for the 2 sigma band. ; Definition at line 98 of file TRatioPlot.h. ◆ fCl1. Double_t TRatioPlot::fCl1 = 0.6827. protected . Stores the confidence level for the inner confidence interval band. ; Definition at line 102 of file TRatioPlot.h. ◆ fCl2. Double_t TRatioPlot::fCl2 = 0.9545. protected . Stores the confidence level for the outer confidence interval band. ; Definition at line 103 of file TRatioPlot.h. ◆ fConfidenceInterval1. TGraphErrors* TRatioPlot::fConfidenceInterval1 = nullptr. protected . Stores the graph for the 1 sigma band. ; Definition at line 95 of file TRatioPlot.h. ◆ fConfidenceInterval2. TGraphErrors* TRatioPlot::fConfidenceInterval2 = nullptr. protected . Stores the graph for the 2 sigma band. ; Definition at line 96 of file TRatioPlot.h. ◆ fErrorMode. Int_t TRatioPlot::fErrorMode = ErrorMode::kErrorSymmetric. protected . Stores the error mode, sym, asym or func. ; Definition at line 85 of file TRatioPlot.h. ◆ fFitDrawOpt. TString TRatioPlot::fFitDrawOpt. protected . Stores draw option for the fit function in the fit residual case. ; Definition at line 90 of file TRatioPlot.h. ◆ fFitResult. TFitResult* TRatioPlot::fFitResult = nullptr. protected . Stores the explicit fit result given in the fit residual case. Can be 0. ; Definition at line 108 of file TRatioPlot.h. ◆ fGraphDrawOpt. TString TRatioPlot::fGraphDrawOpt. protected . Stores draw option for the lower plot graph given in constructor. ; Definition at line 89 of file TRatioPlot.h. ◆ fGridlinePositions. std::vector<double> TRatioPlot::fGridlinePositions. protected . Stores the y positions for the gridlines. ; Definition at line 124 of file TRatioPlot.h. ◆ fGridlines. std::vector<TLine*> TRatioPlot::fGridlines. protected . Keeps TLine objects for the gridlines. ; Definition at line 123 of file TRatioPlot.h. ◆ fH1. TH1* TRatioPlot::fH1 = nullptr. protected . Stores the",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:4776,Integrability,depend,depending,4776,"tat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; h1TH1F * h1Definition legend1.C:5; f1TF1 * f1Definition legend1.C:11; ratioplot1Definition ratioplot1.py:1; . Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted function. The function is used to calculate the residual between the fit and the histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the difference between the histogram and the fit function at each point and divides it by the uncertainty. There are a few option to steer which error is used (as is the case for diffsig). The default is to use the statistical uncertainty from h1 using TH1::GetBinError. If the option string contains errasym, asymmetric errors will be used. The type of error can be steered by TH1::SetBinErrorOption. The corresponding error will be used, depending on if the function is below or above the bin content. The third option errfunc uses the square root of the function value as the error.; ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit r",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:6172,Integrability,depend,depending,6172,"Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric error case uses the upper or lower error depending on the relative size of the bin contents, or the bin content and the function value. Access to internal parts; You can access the internal objects that are used to construct the plot via a series of methods. TRatioPlot::GetUpperPad and TRatioPlot::GetLowerPad can be used to draw additional elements on top of the existing ones. TRatioPlot::GetLowerRefGraph returns a reference to the lower pad's graph that is responsible for the range, which enables you to modify the range. Definition at line 43 of file TRatioPlot.h. Public Member Functions;  TRatioPlot ();  TRatioPlot default constructor. ;  ;  TRatioPlot (TH1 *h1, Option_t *option="""", TFitResult *fitres=nullptr);  Constructor for one histogram and a fit. ;  ;  TRatioPlot (TH1 *h1, TH1 *h2, Option_t *option=""pois"");  Constructor for two histograms. ;  ;  TRatioPlot (TH1 *h1, THStack *st, Option_t *option=""pois"");  Constructor which accepts a THStack and a histogram. ;  ;  TRatioPlot (THStack *st, TH1 *h2, Option_t *option=""pois"");  Constructor w",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:12771,Integrability,message,message,12771,". ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:13312,Integrability,message,message,13312,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:14514,Integrability,message,message,14514,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:17763,Integrability,message,message,17763," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:18136,Integrability,message,message,18136," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:26818,Integrability,depend,depending,26818,"<< ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRatioPlot.h>. Inheritance diagram for TRatioPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CalculationMode. enum TRatioPlot::CalculationMode. private . EnumeratorkDivideHist Use TH1::Divide to create the ratio. . kDivideGraph Use TGraphAsymmErrors::Divide to create the ratio. . kDifference Calculate the difference between the histograms. . kFitResidual Calculate the fit residual between the histogram and a fit stored within it. . kDifferenceSign Calculate the difference divided by the error. . Definition at line 49 of file TRatioPlot.h. ◆ ErrorMode. enum TRatioPlot::ErrorMode. private . EnumeratorkErrorSymmetric Use the regular TH1::GetBinError as the error. . kErrorAsymmetric Use TH1::GetBinErrorUp and TH1::GetBinErrorLow for the error, depending on y values. . kErrorFunc Use the square root of the function value as the error. . Definition at line 57 of file TRatioPlot.h. ◆ HideLabelMode. enum TRatioPlot::HideLabelMode. private . EnumeratorkHideUp Hide the first label of the upper y axis when there is low space. . kHideLow Hide the last label of the lower y axis when there is low space. . kNoHide Do not hide labels when there is low space. . kForceHideUp Always hide the first label of the upper y axis. . kForceHideLow Always hide the last label of the lower y axis. . Definition at line 63 of file TRatioPlot.h. Constructor & Destructor Documentation. ◆ TRatioPlot() [1/6]. TRatioPlot::TRatioPlot ; (; const TRatioPlot & ; ). privatedelete . ◆ TRatioPlot() [2/6]. TRatioPlot::TRatioPlot ; (; ). TRatioPlot default constructor. ; Definition at line 104 of file TRatioPlot.cxx. ◆ ~TRatioPlot(). TRatioPlot::~TRatioPlot ; (; ). override . Destructor. ; Definition at line 109 of file TRatioPlot.cxx. ◆",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:31816,Integrability,depend,depends,31816,"ntly active pad. ; Therefore it requires that a TCanvas has been created first.; It takes the following options. Option Description . grid / nogrid enable (default) or disable drawing of dashed lines on lower plot . hideup hides the first label of the upper axis if there is not enough space . fhideup always hides the first label of the upper axis . hidelow (default) hides the last label of the lower axis if there is not enough space . fhidelow always hides the last label of the lower axis . nohide does not hide a label if there is not enough space . noconfint does not draw the confidence interval bands in the fit residual case . confint draws the confidence interval bands in the fit residual case (default) . Reimplemented from TObject.; Definition at line 563 of file TRatioPlot.cxx. ◆ GetCalculationOutputGraph(). TGraph * TRatioPlot::GetCalculationOutputGraph ; (; ); const. inline . Get the output of the calculation in the form of a graph. ; The type of the return value depends on the input option that was given in the constructor. ; Definition at line 202 of file TRatioPlot.h. ◆ GetConfidenceInterval1(). TGraphErrors * TRatioPlot::GetConfidenceInterval1 ; (; ); const. inline . Returns the graph for the 1 sigma confidence interval in the fit residual case. ; Definition at line 207 of file TRatioPlot.h. ◆ GetConfidenceInterval2(). TGraphErrors * TRatioPlot::GetConfidenceInterval2 ; (; ); const. inline . Returns the graph for the 2 sigma confidence interval in the fit residual case. ; Definition at line 212 of file TRatioPlot.h. ◆ GetLowerPad(). TPad * TRatioPlot::GetLowerPad ; (; ); const. inline . Definition at line 215 of file TRatioPlot.h. ◆ GetLowerRefGraph(). TGraph * TRatioPlot::GetLowerRefGraph ; (; ); const. virtual . Returns the reference graph for the lower pad, which means the graph that is responsible for setting the coordinate system. ; It is the first graph added to the primitive list of the lower pad. This reference can be used to set the minimum and m",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:1123,Modifiability,variab,variable,1123,"ic Member Functions |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; List of all members ; TRatioPlot Class ReferenceGraphics » 2D Graphics » Graphics pad. ; Class for displaying ratios, differences and fit residuals. ; TRatioPlot has two constructors, one which accepts two histograms, and is responsible for setting up the calculation of ratios and differences. This calculation is in part delegated to TEfficiency. A single option can be given as a parameter, that is used to determine which procedure is chosen. The remaining option string is then passed through to the calculation, if applicable. The other constructor uses a fitted histogram to calculate the fit residual and plot it with the histogram and the fit function. Ratios and differences; The simplest case is passing two histograms without specifying any options. This defaults to using TGraphAsymmErrors::Divide. The option variable is passed through, as are the parameters c1 and c2, that you can set via TRatioPlot::SetC1 and TRatioPlot::SetC1. If you set the option to divsym the method TH1::Divide will be used instead, also receiving all the parameters.; Using the option diff or diffsig, both histograms will be subtracted, and in the case of diffsig, the difference will be divided by the uncertainty. c1 and c2 will only be used to scale the histograms using TH1::Scale prior to subtraction.; Available options are for option: . Option Description . divsym uses the histogram TH1::Divide method, yields symmetric errors . diff subtracts the histograms . diffsig subtracts the histograms and divides by the uncertainty . ; void ratioplot1() {; gStyle->SetOptStat(0);; auto C = new TCanvas(""C"", ""A ratio example"");; auto h1 = new TH1D(""h1"", ""TRatioPlot Example; x; y"", 50, 0, 10);; auto h2 = new TH1D(""h2"", ""h2"", 50, 0, 10);; auto f1 = new TF1(""f1"", ""exp(- x/[0] )"");; f1->SetParameter(0, 3);; h1->FillRandom(""f1"", 1900);; h2->FillRandom(""f1"", 2000);; h1->Sumw2();; h2->Sca",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:11088,Modifiability,inherit,inherited,11088,"margin of both pads. ;  ; void SetLowBottomMargin (Float_t margin);  Sets the bottom margin of the lower pad. ;  ; void SetLowTopMargin (Float_t margin);  Sets the top margin of the lower pad. ;  ; void SetRightMargin (Float_t margin);  Sets the right margin of both pads. ;  ; void SetSeparationMargin (Float_t);  Sets the margin that separates the two pads. ;  ; void SetSplitFraction (Float_t sf);  Set the fraction of the parent pad, at which the to sub pads should meet. ;  ; void SetUpBottomMargin (Float_t margin);  Sets the bottom margin of the upper pad. ;  ; void SetUpTopMargin (Float_t margin);  Sets the top margin of the upper pad. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SubPadResized ();  Slot that handles common resizing of upper and lower pad. ;  ; void UnZoomed ();  Slot for the UnZoomed signal that was introduced to TPad. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:12401,Modifiability,inherit,inheritance,12401," ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:14612,Modifiability,inherit,inherits,14612,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:14729,Modifiability,inherit,inherits,14729,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:18637,Modifiability,inherit,inherited,18637,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t BuildLowerPlot ();  Build the lower plot according to which constructor was called, and which options were passed. ;  ; virtual void ConnectPadsSignals ();  Connect some signals from the pads to handle them Allows correctly work also after reading ratioplot from the file. ;  ; void CreateGridlines ();  Create a grid lines. ;  ; virtual void CreateVisualAxes ();  Creates the TGaxis objects that are used for consistent display of the axes. ;  ; void ImportAxisAttributes (TGaxis *gaxis, TA",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:20428,Modifiability,inherit,inherited,20428,"irtual void CreateVisualAxes ();  Creates the TGaxis objects that are used for consistent display of the axes. ;  ; void ImportAxisAttributes (TGaxis *gaxis, TAxis *axis);  Internal method to import TAxis attributes to a TGaxis. ;  ; virtual void Init (TH1 *h1, TH1 *h2, Option_t *option="""");  Internal method that shares constructor logic. ;  ; void SetPadMargins ();  Sets the margins of all the pads to the value specified in class members. ;  ; virtual void SetupPads ();  Setup the pads. ;  ; virtual void SyncAxesRanges ();  Syncs the axes ranges from the shared ones to the actual ones. ;  ; virtual Bool_t SyncPadMargins ();  Figures out which pad margin has deviated from the stored ones, to figure out what the new nominal is and set the other pad to it subsequently. ;  ; void UpdateGridlines ();  Update positions of grid lines. ;  ; virtual void UpdateVisualAxes ();  Update TGaxis attributes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1 = 1.;  Stores the scale factor for h1 (or THStack sum) ;  ; Double_t fC2 = 1.;  Stores the scale factor for h2. ;  ; Color_t fCi1Color = kYellow;  Stores the color for the 1 sigma band. ;  ; Color_t fCi2Color = kGreen;  Stores the color for the 2 sigma band. ;  ; Double_t fCl1 = 0.6827;  Stores the confidence level for the inner confidence interval band. ;  ; Double_t fCl2 = 0.9545;  Stores the confidence level for the outer confidence interval band. ;  ; TGraphErrors * fConfidenceInterval1 = nullptr;  Stores the graph for the 1 sigma band. ;  ; TGraphErrors * fConfidenceInterval2 = nullptr;  Stores the graph for the 2 sigma band. ;  ; Int_t fErrorMode = ErrorMode::kErrorSymmetric;  Stores the error mode, sym, asym or func. ;  ; TString fFitDrawOpt;  Stores draw option for the fit function in the fit residual case. ;  ; TFitResult",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:25255,Modifiability,inherit,inherited,25255,"erGXaxisMirror = nullptr;  Upper mirror of the x axis. ;  ; TGaxis * fUpperGYaxis = nullptr;  Upper graphical y axis. ;  ; TGaxis * fUpperGYaxisMirror = nullptr;  Upper mirror of the y axis. ;  ; TPad * fUpperPad = nullptr;  The pad which contains the upper plot part. ;  ; Float_t fUpTopMargin = 0.1;  Stores the top margin of the upper pad. ;  ; TAxis * fUpYaxis = nullptr;  Clone of the upper y axis. ;  . Private Types; enum  CalculationMode { ;   kDivideHist = 1; , kDivideGraph = 2; , kDifference = 3; , kFitResidual = 4; , ;   kDifferenceSign = 5. };  ; enum  ErrorMode { kErrorSymmetric = 1; , kErrorAsymmetric = 2; , kErrorFunc = 3; };  ; enum  HideLabelMode { ;   kHideUp = 1; , kHideLow = 2; , kNoHide = 3; , kForceHideUp = 4; , ;   kForceHideLow = 5. };  . Private Member Functions;  TRatioPlot (const TRatioPlot &)=delete;  ; TRatioPlot & operator= (const TRatioPlot &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRatioPlot.h>. Inheritance diagram for TRatioPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CalculationMode. enum TRatioPlot::CalculationMode. private . EnumeratorkDivideHist Use TH1::Divide to create the ratio. . kDivideGraph Use TGraphAsymmErrors:",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:25896,Modifiability,inherit,inherited,25896,"kErrorAsymmetric = 2; , kErrorFunc = 3; };  ; enum  HideLabelMode { ;   kHideUp = 1; , kHideLow = 2; , kNoHide = 3; , kForceHideUp = 4; , ;   kForceHideLow = 5. };  . Private Member Functions;  TRatioPlot (const TRatioPlot &)=delete;  ; TRatioPlot & operator= (const TRatioPlot &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRatioPlot.h>. Inheritance diagram for TRatioPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CalculationMode. enum TRatioPlot::CalculationMode. private . EnumeratorkDivideHist Use TH1::Divide to create the ratio. . kDivideGraph Use TGraphAsymmErrors::Divide to create the ratio. . kDifference Calculate the difference between the histograms. . kFitResidual Calculate the fit residual between the histogram and a fit stored within it. . kDifferenceSign Calculate the difference divided by the error. . Definition at line 49 of file TRatioPlot.h. ◆ ErrorMode. enum TRatioPlot::ErrorMode. private . EnumeratorkErrorSymmetric Use the regular TH1::GetBinError as the error. . kErrorAsymmetric Use TH1::GetBinErrorUp and TH1::GetBinErrorLow for the error, depending on y values. . kErrorFunc Use the square root of the function value as the error. . Definit",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:23308,Performance,perform,performed,23308,"  The object which is actually drawn, this might be TH1 or THStack. ;  ; Bool_t fHistDrawProxyStack = kFALSE;  If stack was assigned as proxy. ;  ; Float_t fInsetWidth = 0.0025;  ; Bool_t fIsUpdating = kFALSE;  ! Keeps track of whether its currently updating to reject other calls until done ;  ; Float_t fLeftMargin = 0.1;  Stores the common left margin of both pads. ;  ; Float_t fLowBottomMargin = 0.3;  Stores the bottom margin of the lower pad. ;  ; TGaxis * fLowerGXaxis = nullptr;  Lower graphical x axis. ;  ; TGaxis * fLowerGXaxisMirror = nullptr;  Lower mirror of the x axis. ;  ; TGaxis * fLowerGYaxis = nullptr;  Lower graphical y axis. ;  ; TGaxis * fLowerGYaxisMirror = nullptr;  Lower mirror of the y axis. ;  ; TPad * fLowerPad = nullptr;  The pad which contains the calculated lower plot part. ;  ; Float_t fLowTopMargin = 0.05;  Stores the top margin of the lower pad. ;  ; TAxis * fLowYaxis = nullptr;  Clone of the lower y axis. ;  ; Int_t fMode = 0;  Stores which calculation is supposed to be performed as specified by user option. ;  ; TString fOption;  Stores the option which is given in the constructor as a string. ;  ; TVirtualPad * fParentPad = nullptr;  Stores the pad the ratio plot was created in. ;  ; TGraph * fRatioGraph = nullptr;  Stores the lower plot's graph. ;  ; Float_t fRightMargin = 0.1;  Stores the common right margin of both pads. ;  ; TAxis * fSharedXAxis = nullptr;  X axis that stores the range for both plots. ;  ; Bool_t fShowConfidenceIntervals = kTRUE;  Stores whether to show the confidence interval bands. From Draw option. ;  ; Bool_t fShowGridlines = kTRUE;  Stores whether to show the gridlines at all. ;  ; Float_t fSplitFraction = 0.3;  Stores the fraction at which the upper and lower pads meet. ;  ; TPad * fTopPad = nullptr;  The Pad that drawn on top on the others to have consistent coordinates. ;  ; Float_t fUpBottomMargin = 0.05;  Stores the bottom margin of the upper pad. ;  ; TGaxis * fUpperGXaxis = nullptr;  Upper graphical x a",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:49963,Performance,perform,performed,49963,sMirror. TGaxis* TRatioPlot::fLowerGXaxisMirror = nullptr. protected . Lower mirror of the x axis. ; Definition at line 116 of file TRatioPlot.h. ◆ fLowerGYaxis. TGaxis* TRatioPlot::fLowerGYaxis = nullptr. protected . Lower graphical y axis. ; Definition at line 114 of file TRatioPlot.h. ◆ fLowerGYaxisMirror. TGaxis* TRatioPlot::fLowerGYaxisMirror = nullptr. protected . Lower mirror of the y axis. ; Definition at line 118 of file TRatioPlot.h. ◆ fLowerPad. TPad* TRatioPlot::fLowerPad = nullptr. protected . The pad which contains the calculated lower plot part. ; Definition at line 76 of file TRatioPlot.h. ◆ fLowTopMargin. Float_t TRatioPlot::fLowTopMargin = 0.05. protected . Stores the top margin of the lower pad. ; Definition at line 132 of file TRatioPlot.h. ◆ fLowYaxis. TAxis* TRatioPlot::fLowYaxis = nullptr. protected . Clone of the lower y axis. ; Definition at line 121 of file TRatioPlot.h. ◆ fMode. Int_t TRatioPlot::fMode = 0. protected . Stores which calculation is supposed to be performed as specified by user option. ; Definition at line 84 of file TRatioPlot.h. ◆ fOption. TString TRatioPlot::fOption. protected . Stores the option which is given in the constructor as a string. ; Definition at line 86 of file TRatioPlot.h. ◆ fParentPad. TVirtualPad* TRatioPlot::fParentPad = nullptr. protected . Stores the pad the ratio plot was created in. ; Definition at line 74 of file TRatioPlot.h. ◆ fRatioGraph. TGraph* TRatioPlot::fRatioGraph = nullptr. protected . Stores the lower plot's graph. ; Definition at line 94 of file TRatioPlot.h. ◆ fRightMargin. Float_t TRatioPlot::fRightMargin = 0.1. protected . Stores the common right margin of both pads. ; Definition at line 136 of file TRatioPlot.h. ◆ fSharedXAxis. TAxis* TRatioPlot::fSharedXAxis = nullptr. protected . X axis that stores the range for both plots. ; Definition at line 110 of file TRatioPlot.h. ◆ fShowConfidenceIntervals. Bool_t TRatioPlot::fShowConfidenceIntervals = kTRUE. protected . Stores whether to sho,MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:6301,Security,access,access,6301,"finition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric error case uses the upper or lower error depending on the relative size of the bin contents, or the bin content and the function value. Access to internal parts; You can access the internal objects that are used to construct the plot via a series of methods. TRatioPlot::GetUpperPad and TRatioPlot::GetLowerPad can be used to draw additional elements on top of the existing ones. TRatioPlot::GetLowerRefGraph returns a reference to the lower pad's graph that is responsible for the range, which enables you to modify the range. Definition at line 43 of file TRatioPlot.h. Public Member Functions;  TRatioPlot ();  TRatioPlot default constructor. ;  ;  TRatioPlot (TH1 *h1, Option_t *option="""", TFitResult *fitres=nullptr);  Constructor for one histogram and a fit. ;  ;  TRatioPlot (TH1 *h1, TH1 *h2, Option_t *option=""pois"");  Constructor for two histograms. ;  ;  TRatioPlot (TH1 *h1, THStack *st, Option_t *option=""pois"");  Constructor which accepts a THStack and a histogram. ;  ;  TRatioPlot (THStack *st, TH1 *h2, Option_t *option=""pois"");  Constructor which accepts a THStack and a histogram. ;  ;  ~TRatioPlot () override;  Destructor. ;  ; void Draw (Option_t *chopt="""") override;  Draws ",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:14243,Security,hash,hash,14243," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:19822,Testability,log,logic,19822,"  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t BuildLowerPlot ();  Build the lower plot according to which constructor was called, and which options were passed. ;  ; virtual void ConnectPadsSignals ();  Connect some signals from the pads to handle them Allows correctly work also after reading ratioplot from the file. ;  ; void CreateGridlines ();  Create a grid lines. ;  ; virtual void CreateVisualAxes ();  Creates the TGaxis objects that are used for consistent display of the axes. ;  ; void ImportAxisAttributes (TGaxis *gaxis, TAxis *axis);  Internal method to import TAxis attributes to a TGaxis. ;  ; virtual void Init (TH1 *h1, TH1 *h2, Option_t *option="""");  Internal method that shares constructor logic. ;  ; void SetPadMargins ();  Sets the margins of all the pads to the value specified in class members. ;  ; virtual void SetupPads ();  Setup the pads. ;  ; virtual void SyncAxesRanges ();  Syncs the axes ranges from the shared ones to the actual ones. ;  ; virtual Bool_t SyncPadMargins ();  Figures out which pad margin has deviated from the stored ones, to figure out what the new nominal is and set the other pad to it subsequently. ;  ; void UpdateGridlines ();  Update positions of grid lines. ;  ; virtual void UpdateVisualAxes ();  Update TGaxis attributes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1 = 1.;  Stores the scale factor for h1 (or THStack sum) ;  ; Double_t fC2 = 1.;  Stores the scale factor for h2. ;  ; Color_t f",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:34690,Testability,test,test,34690,"); const. Gets the x axis of the lower ref graph. ; Shortcut for:; rp->GetLowerRefGraph()->GetXaxis();. Definition at line 798 of file TRatioPlot.cxx. ◆ GetLowerRefYaxis(). TAxis * TRatioPlot::GetLowerRefYaxis ; (; ); const. Gets the y axis of the lower ref graph. ; Shortcut for:; rp->GetLowerRefGraph()->GetYaxis();. Definition at line 812 of file TRatioPlot.cxx. ◆ GetLowYaxis(). TAxis * TRatioPlot::GetLowYaxis ; (; ); const. inline . Definition at line 188 of file TRatioPlot.h. ◆ GetSeparationMargin(). Float_t TRatioPlot::GetSeparationMargin ; (; ); const. Return the separation margin value. ; Definition at line 538 of file TRatioPlot.cxx. ◆ GetUpperPad(). TPad * TRatioPlot::GetUpperPad ; (; ); const. inline . Definition at line 214 of file TRatioPlot.h. ◆ GetUpperRefObject(). TObject * TRatioPlot::GetUpperRefObject ; (; ); const. virtual . Return the reference object. ; Its the first TH1 or THStack type object in the upper pads list of primitives. Note that it returns a TObject, so you need to test and cast it to use it. ; Definition at line 738 of file TRatioPlot.cxx. ◆ GetUpperRefXaxis(). TAxis * TRatioPlot::GetUpperRefXaxis ; (; ); const. Gets the x axis of the object returned by TRatioPlot::GetUpperRefObject. ; Definition at line 755 of file TRatioPlot.cxx. ◆ GetUpperRefYaxis(). TAxis * TRatioPlot::GetUpperRefYaxis ; (; ); const. Gets the y axis of the object returned by TRatioPlot::GetUpperRefObject. ; Definition at line 774 of file TRatioPlot.cxx. ◆ GetUpYaxis(). TAxis * TRatioPlot::GetUpYaxis ; (; ); const. inline . Definition at line 187 of file TRatioPlot.h. ◆ GetXaxis(). TAxis * TRatioPlot::GetXaxis ; (; ); const. inline . Definition at line 186 of file TRatioPlot.h. ◆ ImportAxisAttributes(). void TRatioPlot::ImportAxisAttributes ; (; TGaxis * ; gaxis, . TAxis * ; axis . ). protected . Internal method to import TAxis attributes to a TGaxis. ; Copied from TGaxis::ImportAxisAttributes ; Definition at line 1710 of file TRatioPlot.cxx. ◆ Init(). void TRatioPl",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:35811,Testability,log,logic,35811,"s * TRatioPlot::GetUpperRefXaxis ; (; ); const. Gets the x axis of the object returned by TRatioPlot::GetUpperRefObject. ; Definition at line 755 of file TRatioPlot.cxx. ◆ GetUpperRefYaxis(). TAxis * TRatioPlot::GetUpperRefYaxis ; (; ); const. Gets the y axis of the object returned by TRatioPlot::GetUpperRefObject. ; Definition at line 774 of file TRatioPlot.cxx. ◆ GetUpYaxis(). TAxis * TRatioPlot::GetUpYaxis ; (; ); const. inline . Definition at line 187 of file TRatioPlot.h. ◆ GetXaxis(). TAxis * TRatioPlot::GetXaxis ; (; ); const. inline . Definition at line 186 of file TRatioPlot.h. ◆ ImportAxisAttributes(). void TRatioPlot::ImportAxisAttributes ; (; TGaxis * ; gaxis, . TAxis * ; axis . ). protected . Internal method to import TAxis attributes to a TGaxis. ; Copied from TGaxis::ImportAxisAttributes ; Definition at line 1710 of file TRatioPlot.cxx. ◆ Init(). void TRatioPlot::Init ; (; TH1 * ; h1, . TH1 * ; h2, . Option_t * ; option = """" . ). protectedvirtual . Internal method that shares constructor logic. ; Definition at line 128 of file TRatioPlot.cxx. ◆ IsA(). TClass * TRatioPlot::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 249 of file TRatioPlot.h. ◆ operator=(). TRatioPlot & TRatioPlot::operator= ; (; const TRatioPlot & ; ). privatedelete . ◆ Paint(). void TRatioPlot::Paint ; (; Option_t * ; opt = """"). overridevirtual . Update the visual axes and grid lines when painting. ; Reimplemented from TObject.; Definition at line 875 of file TRatioPlot.cxx. ◆ RangeAxisChanged(). void TRatioPlot::RangeAxisChanged ; (; ). Slot that receives the RangeAxisChanged signal from any of the pads and reacts correspondingly. ; Definition at line 1479 of file TRatioPlot.cxx. ◆ SetC1(). void TRatioPlot::SetC1 ; (; Double_t ; c1). inline . Definition at line 246 of file TRatioPlot.h. ◆ SetC2(). void TRatioPlot::SetC2 ; (; Double_t ; c2). inline . Definition at line 247 of file TRatioPlot.h. ◆ S",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:990,Usability,simpl,simplest,990,"tioPlot Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; List of all members ; TRatioPlot Class ReferenceGraphics » 2D Graphics » Graphics pad. ; Class for displaying ratios, differences and fit residuals. ; TRatioPlot has two constructors, one which accepts two histograms, and is responsible for setting up the calculation of ratios and differences. This calculation is in part delegated to TEfficiency. A single option can be given as a parameter, that is used to determine which procedure is chosen. The remaining option string is then passed through to the calculation, if applicable. The other constructor uses a fitted histogram to calculate the fit residual and plot it with the histogram and the fit function. Ratios and differences; The simplest case is passing two histograms without specifying any options. This defaults to using TGraphAsymmErrors::Divide. The option variable is passed through, as are the parameters c1 and c2, that you can set via TRatioPlot::SetC1 and TRatioPlot::SetC1. If you set the option to divsym the method TH1::Divide will be used instead, also receiving all the parameters.; Using the option diff or diffsig, both histograms will be subtracted, and in the case of diffsig, the difference will be divided by the uncertainty. c1 and c2 will only be used to scale the histograms using TH1::Scale prior to subtraction.; Available options are for option: . Option Description . divsym uses the histogram TH1::Divide method, yields symmetric errors . diff subtracts the histograms . diffsig subtracts the histograms and divides by the uncertainty . ; void ratioplot1() {; gStyle->SetOptStat(0);; auto C = new TCanvas(""C"", ""A ratio example"");; auto h1 = new TH1D(""h1"", ""TRatioPlot Example; x; y"", 50, 0, 10);; auto h2 = new TH1D(""h2"",",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:5012,Usability,simpl,simple,5012," to have a fitted function. The function is used to calculate the residual between the fit and the histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the difference between the histogram and the fit function at each point and divides it by the uncertainty. There are a few option to steer which error is used (as is the case for diffsig). The default is to use the statistical uncertainty from h1 using TH1::GetBinError. If the option string contains errasym, asymmetric errors will be used. The type of error can be steered by TH1::SetBinErrorOption. The corresponding error will be used, depending on if the function is below or above the bin content. The third option errfunc uses the square root of the function value as the error.; ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric ",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:33046,Usability,simpl,simple,33046,"e interval in the fit residual case. ; Definition at line 207 of file TRatioPlot.h. ◆ GetConfidenceInterval2(). TGraphErrors * TRatioPlot::GetConfidenceInterval2 ; (; ); const. inline . Returns the graph for the 2 sigma confidence interval in the fit residual case. ; Definition at line 212 of file TRatioPlot.h. ◆ GetLowerPad(). TPad * TRatioPlot::GetLowerPad ; (; ); const. inline . Definition at line 215 of file TRatioPlot.h. ◆ GetLowerRefGraph(). TGraph * TRatioPlot::GetLowerRefGraph ; (; ); const. virtual . Returns the reference graph for the lower pad, which means the graph that is responsible for setting the coordinate system. ; It is the first graph added to the primitive list of the lower pad. This reference can be used to set the minimum and maximum of the lower pad. Note that TRatioPlot::Draw needs to have been called first, since the graphs are only created then.; ; void ratioplot3() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; c1->SetLogy();; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->SetMinimum(0.001);; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefGraph()->SetMinimum(-2);; rp1->GetLowerRefGraph()->SetMaximum(2);; }; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TH1::SetMinimumvirtual void SetMinimum(Double_t minimum=-1111)Definition TH1.h:405; ratioplot3Definition ratioplot3.py:1; . Definition at line 705 of file TRatioPlot.cxx. ◆ GetLowerRefXaxis(). TAxis * TRatioPlot::GetLowerRefXaxis ; (; ); const. Gets the x axis of the lower ref graph. ; Shortcut for:; rp->GetLowerRefGraph()->GetXaxis();. Definition at line 798 of file TRatioPlot.cxx. ◆ GetLowerRefYaxis(). TAxis * TRatioPlot::GetLowerRefYaxis ; (; ); const. Gets the y axis of the lower ref graph. ; Shortcut for:; rp->GetLowerRefGraph()->GetYaxis();. Definition at line 812 of file TRatioPlot.cxx. ◆ GetLowYaxis(). TAxis * TR",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:37196,Usability,simpl,simple,37196," from TObject.; Definition at line 875 of file TRatioPlot.cxx. ◆ RangeAxisChanged(). void TRatioPlot::RangeAxisChanged ; (; ). Slot that receives the RangeAxisChanged signal from any of the pads and reacts correspondingly. ; Definition at line 1479 of file TRatioPlot.cxx. ◆ SetC1(). void TRatioPlot::SetC1 ; (; Double_t ; c1). inline . Definition at line 246 of file TRatioPlot.h. ◆ SetC2(). void TRatioPlot::SetC2 ; (; Double_t ; c2). inline . Definition at line 247 of file TRatioPlot.h. ◆ SetConfidenceIntervalColors(). void TRatioPlot::SetConfidenceIntervalColors ; (; Color_t ; ci1 = kYellow, . Color_t ; ci2 = kGreen . ). Set the confidence interval colors. ; Parameters. ci1Color of the 1 sigma band ; ci2Color of the 2 sigma band Sets the color of the 1 and 2 sigma bands in the fit residual case. ; void ratioplot5() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"",""0"");; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1);; rp1->SetConfidenceIntervalColors(kBlue, kRed);; rp1->Draw();; }; kBlue@ kBlueDefinition Rtypes.h:66; ratioplot5Definition ratioplot5.py:1; . Definition at line 1700 of file TRatioPlot.cxx. ◆ SetConfidenceLevels(). void TRatioPlot::SetConfidenceLevels ; (; Double_t ; c1, . Double_t ; c2 . ). Sets the confidence levels used to calculate the bands in the fit residual case. ; Defaults to 1 and 2 sigma. ; Definition at line 1653 of file TRatioPlot.cxx. ◆ SetFitDrawOpt(). void TRatioPlot::SetFitDrawOpt ; (; Option_t * ; opt). Sets the drawing option for the fit in the fit residual case. ; Definition at line 381 of file TRatioPlot.cxx. ◆ SetFitResult(). void TRatioPlot::SetFitResult ; (; TFitResultPtr ; fitres). inline . Explicitly specify the fit result that is to be used for fit residual calculation. ; If it is not provided, the last fit registered in the global fitter is used. The fit result ",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:39430,Usability,simpl,simple,39430,"at line 373 of file TRatioPlot.cxx. ◆ SetGridlines() [1/2]. void TRatioPlot::SetGridlines ; (; Double_t * ; gridlines, . Int_t ; numGridlines . ). virtual . Set where horizontal, dashed lines are drawn on the lower pad. ; Can be used to override existing default lines (or disable them).; Parameters. gridlinesDouble_t array of y positions for the dashed lines ; numGridlinesLength of gridlines . Definition at line 1682 of file TRatioPlot.cxx. ◆ SetGridlines() [2/2]. void TRatioPlot::SetGridlines ; (; std::vector< double > ; gridlines). virtual . Set where horizontal, dashed lines are drawn on the lower pad. ; Can be used to override existing default lines (or disable them).; Parameters. gridlinesVector of y positions for the dashes lines. ; void ratioplot4() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1);; std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};; rp1->SetGridlines(lines);; rp1->Draw();; rp1->GetLowerRefGraph()->SetMinimum(-4);; rp1->GetLowerRefGraph()->SetMaximum(4);; }; ratioplot4Definition ratioplot4.py:1; . Definition at line 1670 of file TRatioPlot.cxx. ◆ SetH1DrawOpt(). void TRatioPlot::SetH1DrawOpt ; (; Option_t * ; opt). Sets the drawing option for h1. ; Definition at line 353 of file TRatioPlot.cxx. ◆ SetH2DrawOpt(). void TRatioPlot::SetH2DrawOpt ; (; Option_t * ; opt). Sets the drawing option for h2. ; Definition at line 361 of file TRatioPlot.cxx. ◆ SetInsetWidth(). void TRatioPlot::SetInsetWidth ; (; Double_t ; width). Set the inset on the outer sides of all the pads. ; It's used to make the outer pad draggable. ; Definition at line 1632 of file TRatioPlot.cxx. ◆ SetLeftMargin(). void TRatioPlot::SetLeftMargin ; (; Float_t ; margin). Sets the left margin of both pads. ; Parameters. marginThe new margin . Definition at line ",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRatioPlot.html:41808,Usability,simpl,simple,41808," the lower pad. ; Parameters. marginThe new margin . Definition at line 479 of file TRatioPlot.cxx. ◆ SetPadMargins(). void TRatioPlot::SetPadMargins ; (; ). protected . Sets the margins of all the pads to the value specified in class members. ; This one is called whenever those are changed, e.g. in setters ; Definition at line 1411 of file TRatioPlot.cxx. ◆ SetRightMargin(). void TRatioPlot::SetRightMargin ; (; Float_t ; margin). Sets the right margin of both pads. ; Parameters. marginThe new margin . Definition at line 511 of file TRatioPlot.cxx. ◆ SetSeparationMargin(). void TRatioPlot::SetSeparationMargin ; (; Float_t ; margin). Sets the margin that separates the two pads. ; The margin is split according to the relative sizes of the pads; Parameters. marginThe new margin. ; void ratioplot6() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; gPad->SetFrameFillStyle(0);; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 5000);; TFitResultPtr fitres = h1->Fit(""gaus"", ""S0"");; h1->Sumw2();; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1, ""errfunc"");; rp1->SetGraphDrawOpt(""L"");; rp1->SetSeparationMargin(0.0);; rp1->Draw();; rp1->GetLowerRefGraph()->SetMinimum(-2);; rp1->GetLowerRefGraph()->SetMaximum(2);; }; gPad#define gPadDefinition TVirtualPad.h:308; TFitResultPtrProvides an indirection to the TFitResult class and with a semantics identical to a TFitResult pointe...Definition TFitResultPtr.h:32; ratioplot6Definition ratioplot6.py:1; . Definition at line 527 of file TRatioPlot.cxx. ◆ SetSplitFraction(). void TRatioPlot::SetSplitFraction ; (; Float_t ; sf). Set the fraction of the parent pad, at which the to sub pads should meet. ; Definition at line 1606 of file TRatioPlot.cxx. ◆ SetUpBottomMargin(). void TRatioPlot::SetUpBottomMargin ; (; Float_t ; margin). Sets the bottom margin of the upper pad. ; Parameters. marginThe new margin . Definition at line 468 of file TRatioPlo",MatchSource.WIKI,doc/master/classTRatioPlot.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html
https://root.cern/doc/master/classTRealData.html:4128,Availability,error,error,4128,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:4217,Availability,error,error,4217,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:4372,Availability,error,error,4372,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:4669,Availability,error,error,4669,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:9164,Availability,error,error,9164," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetName (TString &output, TDataMember *dm);  Return the name of the data member as represented in the list of real data. ;  ;  Static Pu",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:4134,Integrability,message,message,4134,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:4675,Integrability,message,message,4675,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:5808,Integrability,message,message,5808,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:9170,Integrability,message,message,9170," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetName (TString &output, TDataMember *dm);  Return the name of the data member as represented in the list of real data. ;  ;  Static Pu",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:9543,Integrability,message,message,9543," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetName (TString &output, TDataMember *dm);  Return the name of the data member as represented in the list of real data. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:451,Modifiability,inherit,inherits,451,". ROOT: TRealData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TRealData Class Reference. ; The TRealData class manages the effective list of all data members for a given class. ; For example for an object of class TLine that inherits from TObject and TAttLine, the TRealData object for a line contains the complete list of all data members of the 3 classes.; The list of TRealData members in TClass is built when functions like object.Inspect or object.DrawClass are called. ; Definition at line 30 of file TRealData.h. Public Types; enum  EStatusBits { kTransient = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRealData ();  RealData default constructor. ;  ;  TRealData (const char *name, Long_t offset, TDataMember *datamember);  Constructor to define one persistent data member. ;  ; virtual ~TRealData ();  RealData default destructor. ;  ; void AdoptStreamer (TMemberStreamer *p);  ; TDataMember * GetDataMember () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TMemberStreamer * GetStreamer () const;  Return the associate streamer object. ;  ; Long_t GetThisOffset () const;  ; TClass * IsA",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:831,Modifiability,inherit,inherited,831,". ROOT: TRealData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TRealData Class Reference. ; The TRealData class manages the effective list of all data members for a given class. ; For example for an object of class TLine that inherits from TObject and TAttLine, the TRealData object for a line contains the complete list of all data members of the 3 classes.; The list of TRealData members in TClass is built when functions like object.Inspect or object.DrawClass are called. ; Definition at line 30 of file TRealData.h. Public Types; enum  EStatusBits { kTransient = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRealData ();  RealData default constructor. ;  ;  TRealData (const char *name, Long_t offset, TDataMember *datamember);  Constructor to define one persistent data member. ;  ; virtual ~TRealData ();  RealData default destructor. ;  ; void AdoptStreamer (TMemberStreamer *p);  ; TDataMember * GetDataMember () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TMemberStreamer * GetStreamer () const;  Return the associate streamer object. ;  ; Long_t GetThisOffset () const;  ; TClass * IsA",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:2367,Modifiability,inherit,inherited,2367,"oContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRealData ();  RealData default constructor. ;  ;  TRealData (const char *name, Long_t offset, TDataMember *datamember);  Constructor to define one persistent data member. ;  ; virtual ~TRealData ();  RealData default destructor. ;  ; void AdoptStreamer (TMemberStreamer *p);  ; TDataMember * GetDataMember () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TMemberStreamer * GetStreamer () const;  Return the associate streamer object. ;  ; Long_t GetThisOffset () const;  ; TClass * IsA () const override;  ; Bool_t IsObject () const;  ; void SetIsObject (Bool_t isObject);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteRealData (void *pointer, char *&buffer);  Write one persistent data member on output buffer. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:3764,Modifiability,inherit,inheritance,3764,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:5906,Modifiability,inherit,inherits,5906,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:6023,Modifiability,inherit,inherits,6023," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:10182,Modifiability,inherit,inherited,10182,"id UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetName (TString &output, TDataMember *dm);  Return the name of the data member as represented in the list of real data. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TRealData (const TRealData &rhs)=delete;  ; TRealData & operator= (const TRealData &rhs)=delete;  . Private Attributes; TDataMember * fDataMember;  ; Bool_t fIsObject;  ; TString fName;  ; TMemberStreamer * fStreamer;  ; Long_t fThisOffset;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRealD",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:10986,Modifiability,inherit,inherited,10986,"the data member as represented in the list of real data. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TRealData (const TRealData &rhs)=delete;  ; TRealData & operator= (const TRealData &rhs)=delete;  . Private Attributes; TDataMember * fDataMember;  ; Bool_t fIsObject;  ; TString fName;  ; TMemberStreamer * fStreamer;  ; Long_t fThisOffset;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRealData.h>. Inheritance diagram for TRealData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TRealData::EStatusBits. EnumeratorkTransient . Definition at line 43 of file TRealData.h. Constructor & Destructor Documentation. ◆ TRealData() [1/3]. TRealData::TRealData ; (; const TRealData & ; rhs). privatedelete . ◆ TRealData() [2/3]. TRealData::TRealData ; (; ). RealData default constructor. ; Definition at line 33 of file TRealData.cxx. ◆ TRealData() [3/3]. TRealData::TRealData ; (; const char * ; name, . Long_t ; offset, . TDataMember * ; datamember . ). Constructor to define one persistent data member. ; datamember is the pointer to the data member descriptor. ; Definition at line 43 of file TRe",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:11085,Modifiability,inherit,inherited,11085,"the data member as represented in the list of real data. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TRealData (const TRealData &rhs)=delete;  ; TRealData & operator= (const TRealData &rhs)=delete;  . Private Attributes; TDataMember * fDataMember;  ; Bool_t fIsObject;  ; TString fName;  ; TMemberStreamer * fStreamer;  ; Long_t fThisOffset;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRealData.h>. Inheritance diagram for TRealData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TRealData::EStatusBits. EnumeratorkTransient . Definition at line 43 of file TRealData.h. Constructor & Destructor Documentation. ◆ TRealData() [1/3]. TRealData::TRealData ; (; const TRealData & ; rhs). privatedelete . ◆ TRealData() [2/3]. TRealData::TRealData ; (; ). RealData default constructor. ; Definition at line 33 of file TRealData.cxx. ◆ TRealData() [3/3]. TRealData::TRealData ; (; const char * ; name, . Long_t ; offset, . TDataMember * ; datamember . ). Constructor to define one persistent data member. ; datamember is the pointer to the data member descriptor. ; Definition at line 43 of file TRe",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTRealData.html:5537,Security,hash,hash,5537,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRealData.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRealData.html
https://root.cern/doc/master/classTReaperTimer.html:4802,Availability,error,error,4802,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:4891,Availability,error,error,4891,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:5046,Availability,error,error,5046,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:5343,Availability,error,error,5343,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:9778,Availability,error,error,9778," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:4808,Integrability,message,message,4808,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:5349,Integrability,message,message,5349,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:6551,Integrability,message,message,6551,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:9784,Integrability,message,message,9784," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:10157,Integrability,message,message,10157," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:600,Modifiability,inherit,inherited,600,". ROOT: TReaperTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TReaperTimer Class Reference. . Definition at line 429 of file TProofServ.h. Public Member Functions;  TReaperTimer (Long_t frequency=1000);  ;  ~TReaperTimer () override;  Destructor. ;  ; void AddPid (Int_t pid);  Add an entry for 'pid' in the internal list. ;  ; Bool_t Notify () override;  Check if any of the registered children has changed its state. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to ",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:2573,Modifiability,inherit,inherited,2573,"Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:3041,Modifiability,inherit,inherited,3041,"(TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer ",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:4438,Modifiability,inherit,inheritance,4438,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:6649,Modifiability,inherit,inherits,6649,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:6766,Modifiability,inherit,inherits,6766,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:10464,Modifiability,inherit,inherited,10464," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:12493,Modifiability,inherit,inherited,12493,"_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TList * fChildren;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:13149,Modifiability,inherit,inherited,13149,"number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TList * fChildren;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:13533,Modifiability,inherit,inherited,13533,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:13751,Modifiability,inherit,inherited,13751,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:14269,Modifiability,inherit,inherited,14269,"ar * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:15429,Modifiability,inherit,inherited,15429,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:15528,Modifiability,inherit,inherited,15528,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:15739,Modifiability,inherit,inherited,15739,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:15852,Modifiability,inherit,inherited,15852,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:16701,Modifiability,inherit,inherited,16701,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TReaperTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TReaperTimer(). TReaperTimer::TReaperTimer ; (; Long_t ; frequency = 1000). inline . Definition at line 434 of file TProofServ.h. ◆ ~TReaperTimer(). TReaperTimer::~TReaperTimer ; (; ). override . Destructor. ; Definition at line 449 of file TProofServ.cxx. Member Function Documentation. ◆ AddPid(). void TReaperTimer::AddPid ; (; Int_t ; pid). Add an entry for 'pid' in the internal list. ; Definition at line 461 of file TProofServ.cxx. ◆ Notify(). Bool_t TReaperTimer::Notify ; (; ). overridevirtual . Check if any of",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:16904,Modifiability,inherit,inherited,16904,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TReaperTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TReaperTimer(). TReaperTimer::TReaperTimer ; (; Long_t ; frequency = 1000). inline . Definition at line 434 of file TProofServ.h. ◆ ~TReaperTimer(). TReaperTimer::~TReaperTimer ; (; ). override . Destructor. ; Definition at line 449 of file TProofServ.cxx. Member Function Documentation. ◆ AddPid(). void TReaperTimer::AddPid ; (; Int_t ; pid). Add an entry for 'pid' in the internal list. ; Definition at line 461 of file TProofServ.cxx. ◆ Notify(). Bool_t TReaperTimer::Notify ; (; ). overridevirtual . Check if any of",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:17117,Modifiability,inherit,inherited,17117,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TReaperTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TReaperTimer(). TReaperTimer::TReaperTimer ; (; Long_t ; frequency = 1000). inline . Definition at line 434 of file TProofServ.h. ◆ ~TReaperTimer(). TReaperTimer::~TReaperTimer ; (; ). override . Destructor. ; Definition at line 449 of file TProofServ.cxx. Member Function Documentation. ◆ AddPid(). void TReaperTimer::AddPid ; (; Int_t ; pid). Add an entry for 'pid' in the internal list. ; Definition at line 461 of file TProofServ.cxx. ◆ Notify(). Bool_t TReaperTimer::Notify ; (; ). overridevirtual . Check if any of",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:2201,Safety,timeout,timeout,2201,"r * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (co",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTReaperTimer.html:6280,Security,hash,hash,6280," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTReaperTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html
https://root.cern/doc/master/classTRecCmdEvent.html:2944,Availability,error,error,2944,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:3033,Availability,error,error,3033,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:3188,Availability,error,error,3188,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:3485,Availability,error,error,3485,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:8049,Availability,error,error,8049," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versio",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:2950,Integrability,message,message,2950,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:3491,Integrability,message,message,3491,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:4693,Integrability,message,message,4693,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:8055,Integrability,message,message,8055," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versio",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:8428,Integrability,message,message,8428," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:885,Modifiability,inherit,inherited,885,". ROOT: TRecCmdEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecCmdEvent Class ReferenceGUI » Events recorder. ; Class used for storing information about 1 commandline event. ; It means 1 command typed in by user in the commandline, e.g 'new TCanvas'. ; Definition at line 91 of file TRecorder.h. Public Member Functions;  TRecCmdEvent ();  ; const char * GetText () const;  ; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t) override;  ; void SetText (const char *text);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; TClass * IsA () const override;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:1183,Modifiability,inherit,inherited,1183,"s |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecCmdEvent Class ReferenceGUI » Events recorder. ; Class used for storing information about 1 commandline event. ; It means 1 command typed in by user in the commandline, e.g 'new TCanvas'. ; Definition at line 91 of file TRecorder.h. Public Member Functions;  TRecCmdEvent ();  ; const char * GetText () const;  ; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t) override;  ; void SetText (const char *text);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; TClass * IsA () const override;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:2580,Modifiability,inherit,inheritance,2580,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:4791,Modifiability,inherit,inherits,4791,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:4908,Modifiability,inherit,inherits,4908,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:8929,Modifiability,inherit,inherited,8929,"em error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite =",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:9142,Modifiability,inherit,inherited,9142,"em error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite =",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:9710,Modifiability,inherit,inherited,9710,"Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecCmdEvent:. This browser is not abl",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:9817,Modifiability,inherit,inherited,9817,"Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecCmdEvent:. This browser is not abl",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:10458,Modifiability,inherit,inherited,10458,"rn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecCmdEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecCmdEvent(). TRecCmdEvent::TRecCmdEvent ; (; ). inline . Definition at line 97 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecCmdEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecCmdEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecCmdEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 122 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecCmdEvent::DeclFileName ; (; ). inlinestatic . ReturnsName of the fi",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:10557,Modifiability,inherit,inherited,10557,"rn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecCmdEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecCmdEvent(). TRecCmdEvent::TRecCmdEvent ; (; ). inline . Definition at line 97 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecCmdEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecCmdEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecCmdEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 122 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecCmdEvent::DeclFileName ; (; ). inlinestatic . ReturnsName of the fi",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecCmdEvent.html:4422,Security,hash,hash,4422," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRecCmdEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html
https://root.cern/doc/master/classTRecEvent.html:3506,Availability,error,error,3506,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:3595,Availability,error,error,3595,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:3750,Availability,error,error,3750,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:4047,Availability,error,error,4047,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:8611,Availability,error,error,8611," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:346,Integrability,interface,interface,346,". ROOT: TRecEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecEvent Class ReferenceabstractGUI » Events recorder. ; Abstract class that defines interface for a class storing information about 1 ROOT event. ; Time of event is stored and this event can be replayed. Classes TRecCmdEvent and TRecGuiEvent implements this interface for command line and GUI events respectively. ; Definition at line 48 of file TRecorder.h. Public Types; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual TTime GetTime () const;  ; virtual ERecEventType GetType () const =0;  ; TClass * IsA () const override;  ; virtual void ReplayEvent (Bool_t showMouseCursor=kTRUE)=0;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abst",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:520,Integrability,interface,interface,520,". ROOT: TRecEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecEvent Class ReferenceabstractGUI » Events recorder. ; Abstract class that defines interface for a class storing information about 1 ROOT event. ; Time of event is stored and this event can be replayed. Classes TRecCmdEvent and TRecGuiEvent implements this interface for command line and GUI events respectively. ; Definition at line 48 of file TRecorder.h. Public Types; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual TTime GetTime () const;  ; virtual ERecEventType GetType () const =0;  ; TClass * IsA () const override;  ; virtual void ReplayEvent (Bool_t showMouseCursor=kTRUE)=0;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abst",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:3512,Integrability,message,message,3512,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:4053,Integrability,message,message,4053,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:5255,Integrability,message,message,5255,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:8617,Integrability,message,message,8617," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:8990,Integrability,message,message,8990," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:716,Modifiability,inherit,inherited,716,". ROOT: TRecEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecEvent Class ReferenceabstractGUI » Events recorder. ; Abstract class that defines interface for a class storing information about 1 ROOT event. ; Time of event is stored and this event can be replayed. Classes TRecCmdEvent and TRecGuiEvent implements this interface for command line and GUI events respectively. ; Definition at line 48 of file TRecorder.h. Public Types; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual TTime GetTime () const;  ; virtual ERecEventType GetType () const =0;  ; TClass * IsA () const override;  ; virtual void ReplayEvent (Bool_t showMouseCursor=kTRUE)=0;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abst",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:1745,Modifiability,inherit,inherited,1745,"from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual TTime GetTime () const;  ; virtual ERecEventType GetType () const =0;  ; TClass * IsA () const override;  ; virtual void ReplayEvent (Bool_t showMouseCursor=kTRUE)=0;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:3142,Modifiability,inherit,inheritance,3142,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:5353,Modifiability,inherit,inherits,5353,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:5470,Modifiability,inherit,inherits,5470,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:9491,Modifiability,inherit,inherited,9491,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TTime fEventTime;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend];",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:10065,Modifiability,inherit,inherited,10065,"*name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TTime fEventTime;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERecEventType. enum TRecEvent::ERecEventType. EnumeratorkCmdEvent ; kGuiEvent ; kExtraEvent . Definition at line 55 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 77 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecEvent::DeclFileName ; (; ). inlinestatic",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:10164,Modifiability,inherit,inherited,10164,"*name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TTime fEventTime;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERecEventType. enum TRecEvent::ERecEventType. EnumeratorkCmdEvent ; kGuiEvent ; kExtraEvent . Definition at line 55 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 77 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecEvent::DeclFileName ; (; ). inlinestatic",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecEvent.html:4984,Security,hash,hash,4984," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRecEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:2833,Availability,error,error,2833,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:2922,Availability,error,error,2922,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:3077,Availability,error,error,3077,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:3374,Availability,error,error,3374,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:7938,Availability,error,error,7938," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versio",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:2839,Integrability,message,message,2839,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:3380,Integrability,message,message,3380,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:4582,Integrability,message,message,4582,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:7944,Integrability,message,message,7944," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versio",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:8317,Integrability,message,message,8317," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:886,Modifiability,inherit,inherited,886,". ROOT: TRecExtraEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecExtraEvent Class ReferenceGUI » Events recorder. ; class TRecExtraEvent ; Class used for storing information about 1 extra event. It means 1 TPaveLabel or 1 TLatex event produced in the Canvas ; Definition at line 136 of file TRecorder.h. Public Member Functions;  TRecExtraEvent ();  ; TString GetText () const;  ; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t) override;  ; void SetText (TString text);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:1072,Modifiability,inherit,inherited,1072,". ROOT: TRecExtraEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecExtraEvent Class ReferenceGUI » Events recorder. ; class TRecExtraEvent ; Class used for storing information about 1 extra event. It means 1 TPaveLabel or 1 TLatex event produced in the Canvas ; Definition at line 136 of file TRecorder.h. Public Member Functions;  TRecExtraEvent ();  ; TString GetText () const;  ; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t) override;  ; void SetText (TString text);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:2469,Modifiability,inherit,inheritance,2469,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:4680,Modifiability,inherit,inherits,4680,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:4797,Modifiability,inherit,inherits,4797,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:8818,Modifiability,inherit,inherited,8818,"em error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite =",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:9031,Modifiability,inherit,inherited,9031,"em error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite =",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:9599,Modifiability,inherit,inherited,9599,"Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecExtraEvent:. This browser is not a",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:9706,Modifiability,inherit,inherited,9706,"Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecExtraEvent:. This browser is not a",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:10347,Modifiability,inherit,inherited,10347,"rn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecExtraEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecExtraEvent(). TRecExtraEvent::TRecExtraEvent ; (; ). inline . Definition at line 142 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecExtraEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecExtraEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecExtraEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 167 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecExtraEvent::DeclFileName ; (; ). inlinestatic . Retu",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:10446,Modifiability,inherit,inherited,10446,"rn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecExtraEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecExtraEvent(). TRecExtraEvent::TRecExtraEvent ; (; ). inline . Definition at line 142 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecExtraEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecExtraEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecExtraEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 167 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecExtraEvent::DeclFileName ; (; ). inlinestatic . Retu",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecExtraEvent.html:4311,Security,hash,hash,4311," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRecExtraEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:3754,Availability,error,error,3754,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:3843,Availability,error,error,3843,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:3998,Availability,error,error,3998,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:4295,Availability,error,error,4295,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:8859,Availability,error,error,8859," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Event_t * CreateEvent (TRecGuiEvent *ge);  Converts TRecGuiEvent type to Event_t type. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TR",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:3760,Integrability,message,message,3760,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:4301,Integrability,message,message,4301,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:5503,Integrability,message,message,5503,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:8865,Integrability,message,message,8865," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Event_t * CreateEvent (TRecGuiEvent *ge);  Converts TRecGuiEvent type to Event_t type. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TR",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:9238,Integrability,message,message,9238," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Event_t * CreateEvent (TRecGuiEvent *ge);  Converts TRecGuiEvent type to Event_t type. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; ",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:715,Modifiability,inherit,inherited,715,". ROOT: TRecGuiEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TRecGuiEvent Class ReferenceGUI » Events recorder. ; class TRecGuiEvent ; Class used for storing information about 1 GUI event in ROOT. For list of possible GUI events see EGEventType. ; Definition at line 180 of file TRecorder.h. Public Types; enum  EConfigureNotifyType { kCNMove = 0; , kCNResize = 1; , kCNMoveResize = 2; , kCNFilter = 3; };  ; enum  ERootAtoms { kWM_DELETE_WINDOW = 10001; , kROOT_MESSAGE = 10002; };  ;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t showMouseCursor=kTRUE) override;  Replays stored GUI event. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherite",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:822,Modifiability,inherit,inherited,822,". ROOT: TRecGuiEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TRecGuiEvent Class ReferenceGUI » Events recorder. ; class TRecGuiEvent ; Class used for storing information about 1 GUI event in ROOT. For list of possible GUI events see EGEventType. ; Definition at line 180 of file TRecorder.h. Public Types; enum  EConfigureNotifyType { kCNMove = 0; , kCNResize = 1; , kCNMoveResize = 2; , kCNFilter = 3; };  ; enum  ERootAtoms { kWM_DELETE_WINDOW = 10001; , kROOT_MESSAGE = 10002; };  ;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t showMouseCursor=kTRUE) override;  Replays stored GUI event. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherite",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:1807,Modifiability,inherit,inherited,1807," , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t showMouseCursor=kTRUE) override;  Replays stored GUI event. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clon",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:1993,Modifiability,inherit,inherited,1993," , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t showMouseCursor=kTRUE) override;  Replays stored GUI event. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clon",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:3390,Modifiability,inherit,inheritance,3390,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:5601,Modifiability,inherit,inherits,5601,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:5718,Modifiability,inherit,inherits,5718,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:9838,Modifiability,inherit,inherited,9838,"gs in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Event_t * CreateEvent (TRecGuiEvent *ge);  Converts TRecGuiEvent type to Event_t type. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fCode;  ; Int_t fCount;  ; Int_t fFormat;  ; Handle_t fHandle;  ; UInt_t fHeight;  ; Window_t fMasked;  ; Bool_t fSendEvent;  ; UInt_t fState;  ; Time_t fTime;  ; EGEventType fType;  ; Long_t fUser [5];  ; UInt_t fWidth;  ; Window_t fWindow;  ; Int_t fX;  ; Int_t fXRoot;  ; Int_t fY;  ; Int_t fYRoot;  . Friends; class TRecorderInactive;  ; class TRecorderPaused;  ; class TRecorderRecording;  ; class TRecorderReplaying;  . Additional Inherited Members;  Pro",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:10051,Modifiability,inherit,inherited,10051,"gs in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Event_t * CreateEvent (TRecGuiEvent *ge);  Converts TRecGuiEvent type to Event_t type. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRecEvent; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fCode;  ; Int_t fCount;  ; Int_t fFormat;  ; Handle_t fHandle;  ; UInt_t fHeight;  ; Window_t fMasked;  ; Bool_t fSendEvent;  ; UInt_t fState;  ; Time_t fTime;  ; EGEventType fType;  ; Long_t fUser [5];  ; UInt_t fWidth;  ; Window_t fWindow;  ; Int_t fX;  ; Int_t fXRoot;  ; Int_t fY;  ; Int_t fYRoot;  . Friends; class TRecorderInactive;  ; class TRecorderPaused;  ; class TRecorderRecording;  ; class TRecorderReplaying;  . Additional Inherited Members;  Pro",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:11039,Modifiability,inherit,inherited,11039," static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fCode;  ; Int_t fCount;  ; Int_t fFormat;  ; Handle_t fHandle;  ; UInt_t fHeight;  ; Window_t fMasked;  ; Bool_t fSendEvent;  ; UInt_t fState;  ; Time_t fTime;  ; EGEventType fType;  ; Long_t fUser [5];  ; UInt_t fWidth;  ; Window_t fWindow;  ; Int_t fX;  ; Int_t fXRoot;  ; Int_t fY;  ; Int_t fYRoot;  . Friends; class TRecorderInactive;  ; class TRecorderPaused;  ; class TRecorderRecording;  ; class TRecorderReplaying;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecGuiEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EConfigureNotifyType. enum TRecGuiEvent::EConfigureNotifyType. EnumeratorkCNMove ; kCNResize ; kCNMoveResize ; kCNFilter . Definition at line 211 of file TRecorder.h. ◆ ERootAtoms. enum TRecGuiEvent::ERootAtoms. EnumeratorkWM_DELETE_WINDOW ; kROOT_MESSAGE . Definition at line 218 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecGuiEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecGuiEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecGuiEvent::Class_Version ; (; ). inl",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:11138,Modifiability,inherit,inherited,11138," static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fCode;  ; Int_t fCount;  ; Int_t fFormat;  ; Handle_t fHandle;  ; UInt_t fHeight;  ; Window_t fMasked;  ; Bool_t fSendEvent;  ; UInt_t fState;  ; Time_t fTime;  ; EGEventType fType;  ; Long_t fUser [5];  ; UInt_t fWidth;  ; Window_t fWindow;  ; Int_t fX;  ; Int_t fXRoot;  ; Int_t fY;  ; Int_t fYRoot;  . Friends; class TRecorderInactive;  ; class TRecorderPaused;  ; class TRecorderRecording;  ; class TRecorderReplaying;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecGuiEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EConfigureNotifyType. enum TRecGuiEvent::EConfigureNotifyType. EnumeratorkCNMove ; kCNResize ; kCNMoveResize ; kCNFilter . Definition at line 211 of file TRecorder.h. ◆ ERootAtoms. enum TRecGuiEvent::ERootAtoms. EnumeratorkWM_DELETE_WINDOW ; kROOT_MESSAGE . Definition at line 218 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecGuiEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecGuiEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecGuiEvent::Class_Version ; (; ). inl",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecGuiEvent.html:5232,Security,hash,hash,5232," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRecGuiEvent.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html
https://root.cern/doc/master/classTRecorder.html:6154,Availability,error,error,6154,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:6243,Availability,error,error,6243,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:6398,Availability,error,error,6398,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:6695,Availability,error,error,6695,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:11259,Availability,error,error,11259," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:443,Integrability,interface,interface,443,". ROOT: TRecorder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TRecorder Class ReferenceGUI » Events recorder. ; Class provides direct recorder/replayer interface for a user. ; See 'ROOT EVENT RECORDING SYSTEM' for more information about usage.; Implementation uses C++ design pattern State. Functionality of recorder is divided into 4 classes according to the current state of recorder.; Internally, there is a pointer to TRecorderState object. This object changes whenever state of recorder is changed. States of recorder are the following:. INACTIVE Implemented in TRecorderInactive class. Default state after TRecorder object is created.; RECORDING Implemented in TRecorderRecording class.; REPLAYING Implemented in TRecorderReplaying class.; PAUSED Implemented in TRecorderPause class. Pause of replaying. Every command for TRecorder is just passed to TRecordeState object. Depending on the current state of recorder, this command is passed to some of the above mentioned classes and if valid, handled there.; Switching between states is not possible from outside. States are switched directly by state objects via:; ChangeState(TRecorderState* newstate, Bool_t deletePreviousState);; When recorder is switched to a new state, the old state object is typically deleted. The only exception is switching from REPLAYING state to PAUSED state. The previous state (REPLAYING) is not deleted in order to be used again after TRecorder::Resume call. STATE TRANSITIONS:. INACTIVE -> RECORDING via TRecorder::Start (Starts recording); RECORDING -> INACTIVE via TRecorder::Stop (Stops recording); INACTIVE -> REPLAYING via TRecorder::Replay (Starts replaying); REPLAYING -> INACTIVE via TRecorder::ReplayStop (Stops r",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:3233,Integrability,depend,depending,3233,"le TRecorder.h. Public Types; enum  ERecorderState { kInactive; , kRecording; , kPaused; , kReplaying; };  ; enum  EReplayModes { kRealtime; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRecorder ();  Creates initial INACTIVE state for the recorder. ;  ;  TRecorder (const char *filename, Option_t *option=""READ"");  Creates a recorder with filename to replay or to record, depending on option (NEW or RECREATE will start recording, READ will start replaying) ;  ;  ~TRecorder () override;  Destructor. ;  ; void Browse (TBrowser *) override;  Browse the recorder from a ROOT file. ;  ; virtual TRecorder::ERecorderState GetState () const;  Get current state of recorder. ;  ; TClass * IsA () const override;  ; void ListCmd (const char *filename);  Prints out recorded commandline events. ;  ; void ListGui (const char *filename);  Prints out recorded GUI events. ;  ; void Pause ();  Pauses replaying. ;  ; void PrevCanvases (const char *filename, Option_t *option);  Save previous canvases in a .root file. ;  ; void Replay ();  ; Bool_t Replay (const char *filename, Bool_t showMouseCursor=kTRUE, TRecorder::EReplayModes mode=kRealtime);  Replays events from 'filename'. ;  ; void ReplayStop ();  Cancels replaying. ;  ; void Resume ();  Resumes replaying. ;  ; void Start (const char *filename, Option_t *option=""RECREATE"", Window_t *w=nullptr, Int_t winCount=0);  Starts",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:6160,Integrability,message,message,6160,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:6701,Integrability,message,message,6701,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:7903,Integrability,message,message,7903,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:11265,Integrability,message,message,11265," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:11638,Integrability,message,message,11638," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:14476,Integrability,depend,depending,14476,"t; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRecorder.h>. Inheritance diagram for TRecorder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERecorderState. enum TRecorder::ERecorderState. EnumeratorkInactive ; kRecording ; kPaused ; kReplaying . Definition at line 292 of file TRecorder.h. ◆ EReplayModes. enum TRecorder::EReplayModes. EnumeratorkRealtime . Definition at line 287 of file TRecorder.h. Constructor & Destructor Documentation. ◆ TRecorder() [1/3]. TRecorder::TRecorder ; (; const TRecorder & ; ). private . Current state of recorder. . ◆ TRecorder() [2/3]. TRecorder::TRecorder ; (; ). Creates initial INACTIVE state for the recorder. ; Definition at line 179 of file TRecorder.cxx. ◆ TRecorder() [3/3]. TRecorder::TRecorder ; (; const char * ; filename, . Option_t * ; option = ""READ"" . ). Creates a recorder with filename to replay or to record, depending on option (NEW or RECREATE will start recording, READ will start replaying) ; Definition at line 190 of file TRecorder.cxx. ◆ ~TRecorder(). TRecorder::~TRecorder ; (; ). override . Destructor. ; Definition at line 204 of file TRecorder.cxx. Member Function Documentation. ◆ Browse(). void TRecorder::Browse ; (; TBrowser * ; ). overridevirtual . Browse the recorder from a ROOT file. ; This allows to replay a session from the browser. ; Reimplemented from TObject.; Definition at line 213 of file TRecorder.cxx. ◆ ChangeState(). void TRecorder::ChangeState ; (; TRecorderState * ; newstate, . Bool_t ; deletePreviousState = kTRUE . ). protected . Changes state from the current to the passed one (newstate) Deletes the old state if delPreviousState = KTRUE. ; Definition at line 288 of file TRecorder.cxx. ◆ Class(). static TClass * TRecorder::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecorder::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version()",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:2396,Modifiability,inherit,inherited,2396,"a:; ChangeState(TRecorderState* newstate, Bool_t deletePreviousState);; When recorder is switched to a new state, the old state object is typically deleted. The only exception is switching from REPLAYING state to PAUSED state. The previous state (REPLAYING) is not deleted in order to be used again after TRecorder::Resume call. STATE TRANSITIONS:. INACTIVE -> RECORDING via TRecorder::Start (Starts recording); RECORDING -> INACTIVE via TRecorder::Stop (Stops recording); INACTIVE -> REPLAYING via TRecorder::Replay (Starts replaying); REPLAYING -> INACTIVE via TRecorder::ReplayStop (Stops replaying); REPLAYING -> PAUSED via TRecorder::Pause (Pause replaying); PAUSED -> REPLAYING via TRecorder::Resume (Resumes replaying); PAUSED -> INACTIVE via TRecorder::ReplayStop (Stops paused replaying) . Definition at line 265 of file TRecorder.h. Public Types; enum  ERecorderState { kInactive; , kRecording; , kPaused; , kReplaying; };  ; enum  EReplayModes { kRealtime; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRecorder ();  Creates initial INACTIVE state for the recorder. ;  ;  TRecorder (const char *filename, Option_t *option=""READ"");  Creates a recorder with filename to replay or to record, depending on option (NEW or RECREATE will start recording, READ will start replaying) ;  ;  ~TRecorder () override;  Destructor. ;  ; void Browse (TBrowser *) override;  Brows",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:4495,Modifiability,inherit,inherited,4495,"ate GetState () const;  Get current state of recorder. ;  ; TClass * IsA () const override;  ; void ListCmd (const char *filename);  Prints out recorded commandline events. ;  ; void ListGui (const char *filename);  Prints out recorded GUI events. ;  ; void Pause ();  Pauses replaying. ;  ; void PrevCanvases (const char *filename, Option_t *option);  Save previous canvases in a .root file. ;  ; void Replay ();  ; Bool_t Replay (const char *filename, Bool_t showMouseCursor=kTRUE, TRecorder::EReplayModes mode=kRealtime);  Replays events from 'filename'. ;  ; void ReplayStop ();  Cancels replaying. ;  ; void Resume ();  Resumes replaying. ;  ; void Start (const char *filename, Option_t *option=""RECREATE"", Window_t *w=nullptr, Int_t winCount=0);  Starts recording events. ;  ; void Stop (Bool_t guiCommand=kFALSE);  Stopps recording events. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:5790,Modifiability,inherit,inheritance,5790,"urely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:8001,Modifiability,inherit,inherits,8001,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:8118,Modifiability,inherit,inherits,8118,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:12139,Modifiability,inherit,inherited,12139,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void ChangeState (TRecorderState *newstate, Bool_t deletePreviousState=kTRUE);  Changes state from the current to the passed one (newstate) Deletes the old state if delPreviousState = KTRUE. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFilename;  . Private Member Functions;  TRecorder (const TR",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:12877,Modifiability,inherit,inherited,12877,"ber Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void ChangeState (TRecorderState *newstate, Bool_t deletePreviousState=kTRUE);  Changes state from the current to the passed one (newstate) Deletes the old state if delPreviousState = KTRUE. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFilename;  . Private Member Functions;  TRecorder (const TRecorder &);  Current state of recorder. ;  ; TRecorder & operator= (const TRecorder &);  . Private Attributes; TRecorderState * fRecorderState;  . Friends; class TRecorderInactive;  ; class TRecorderPaused;  ; class TRecorderRecording;  ; class TRecorderReplaying;  ; class TRecorderState;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRecorder.h>. Inheritance diagram for TRecorder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERecorderState. enum TRecorder::ERecorderState. EnumeratorkInactive ; kRecording ; kPaused ; kReplaying . Definition at line 292 of file TRecorder.h. ◆ EReplayModes. enum TRecorder::ER",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:13490,Modifiability,inherit,inherited,13490,"tructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void ChangeState (TRecorderState *newstate, Bool_t deletePreviousState=kTRUE);  Changes state from the current to the passed one (newstate) Deletes the old state if delPreviousState = KTRUE. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFilename;  . Private Member Functions;  TRecorder (const TRecorder &);  Current state of recorder. ;  ; TRecorder & operator= (const TRecorder &);  . Private Attributes; TRecorderState * fRecorderState;  . Friends; class TRecorderInactive;  ; class TRecorderPaused;  ; class TRecorderRecording;  ; class TRecorderReplaying;  ; class TRecorderState;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRecorder.h>. Inheritance diagram for TRecorder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERecorderState. enum TRecorder::ERecorderState. EnumeratorkInactive ; kRecording ; kPaused ; kReplaying . Definition at line 292 of file TRecorder.h. ◆ EReplayModes. enum TRecorder::EReplayModes. EnumeratorkRealtime . Definition at line 287 of file TRecorder.h. Constructor & Destructor Documentation. ◆ TRecorder() [1/3]. TRecorder::TRecorder ; (; const TRecorder & ; ). private . Current state of recorder. . ◆ TRecorder() [2/3]. TRecorder::TRecorder ; (; ). Creates initial INACTIVE state for the recorder. ; Definition at line 179 of file TRecorder.cxx. ◆ TRecorder() [3/3]. TRecorder::TRecorder ; (; const char * ; filename, . Option_t * ; option = ""READ"" . ). Creates a recorder with filename to replay or to record, depending on option (NEW ",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:7632,Security,hash,hash,7632," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecorder.html:2187,Usability,pause,paused,2187,"s.; REPLAYING Implemented in TRecorderReplaying class.; PAUSED Implemented in TRecorderPause class. Pause of replaying. Every command for TRecorder is just passed to TRecordeState object. Depending on the current state of recorder, this command is passed to some of the above mentioned classes and if valid, handled there.; Switching between states is not possible from outside. States are switched directly by state objects via:; ChangeState(TRecorderState* newstate, Bool_t deletePreviousState);; When recorder is switched to a new state, the old state object is typically deleted. The only exception is switching from REPLAYING state to PAUSED state. The previous state (REPLAYING) is not deleted in order to be used again after TRecorder::Resume call. STATE TRANSITIONS:. INACTIVE -> RECORDING via TRecorder::Start (Starts recording); RECORDING -> INACTIVE via TRecorder::Stop (Stops recording); INACTIVE -> REPLAYING via TRecorder::Replay (Starts replaying); REPLAYING -> INACTIVE via TRecorder::ReplayStop (Stops replaying); REPLAYING -> PAUSED via TRecorder::Pause (Pause replaying); PAUSED -> REPLAYING via TRecorder::Resume (Resumes replaying); PAUSED -> INACTIVE via TRecorder::ReplayStop (Stops paused replaying) . Definition at line 265 of file TRecorder.h. Public Types; enum  ERecorderState { kInactive; , kRecording; , kPaused; , kReplaying; };  ; enum  EReplayModes { kRealtime; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kI",MatchSource.WIKI,doc/master/classTRecorder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecorder.html
https://root.cern/doc/master/classTRecWinPair.html:2712,Availability,error,error,2712,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:2801,Availability,error,error,2801,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:2956,Availability,error,error,2956,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:3253,Availability,error,error,3253,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:7817,Availability,error,error,7817," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:2718,Integrability,message,message,2718,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:3259,Integrability,message,message,3259,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:4461,Integrability,message,message,4461,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:7823,Integrability,message,message,7823," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:8196,Integrability,message,message,8196," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:951,Modifiability,inherit,inherited,951,". ROOT: TRecWinPair Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TRecWinPair Class ReferenceGUI » Events recorder. ; Class used for storing of window IDs mapping. ; Remapping of window IDs is needed for replaying events.; ID of original window is stored in fKey.; ID of a new window is stored in fValue. Whenever an event is replayed, its referenced window ID is changed from original to a new one according to the appropriate mapping. ; Definition at line 249 of file TRecorder.h. Public Member Functions;  TRecWinPair (Window_t key, Window_t value);  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &obje",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:2348,Modifiability,inherit,inheritance,2348,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:4559,Modifiability,inherit,inherits,4559,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:4676,Modifiability,inherit,inherits,4676,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:8697,Modifiability,inherit,inherited,8697,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Window_t fKey;  ; Window_t fValue;  . Friends; class TRecorderReplaying;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCan",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:9325,Modifiability,inherit,inherited,9325," Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Window_t fKey;  ; Window_t fValue;  . Friends; class TRecorderReplaying;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecWinPair:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera in",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:9966,Modifiability,inherit,inherited,9966," ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Window_t fKey;  ; Window_t fValue;  . Friends; class TRecorderReplaying;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecWinPair:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecWinPair(). TRecWinPair::TRecWinPair ; (; Window_t ; key, . Window_t ; value . ). inline . Definition at line 259 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecWinPair::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecWinPair::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecWinPair::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 261 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecWinPair::DeclFileName ; (; ). inline",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:10065,Modifiability,inherit,inherited,10065," ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Window_t fKey;  ; Window_t fValue;  . Friends; class TRecorderReplaying;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecWinPair:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecWinPair(). TRecWinPair::TRecWinPair ; (; Window_t ; key, . Window_t ; value . ). inline . Definition at line 259 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecWinPair::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecWinPair::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecWinPair::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 261 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecWinPair::DeclFileName ; (; ). inline",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRecWinPair.html:4190,Security,hash,hash,4190," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRecWinPair.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html
https://root.cern/doc/master/classTRef.html:13665,Availability,error,error,13665,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:13754,Availability,error,error,13754,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:13909,Availability,error,error,13909,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:14206,Availability,error,error,14206,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:18770,Availability,error,error,18770," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Int_t AddExec (const char *name);  If Exec with name does not exist in the list of Execs, it is created. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * GetListOfExe",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:1879,Deployability,update,updated,1879,".; However if the object event is split into several files or into several branches of one or more Trees, normal C++ pointers cannot be used because each I/O operation will write the referenced objects.; When a TRef is used to point to a TObject *robj, for example in a class with TRef fRef;; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32; one can do: fRef = robj; //to set the pointer; This TRef and robj can be written with two different I/O calls in the same or different files, in the same or different branches of a Tree.; If the TRef is read and the referenced object has not yet been read, the TRef will return a null pointer. As soon as the referenced object will be read, the TRef will point to it. If the referenced object is contained in a TTree it can be auto-loaded using the TBranchRef mechanism, which is set up by simply calling TTree::BranchRef().; TRef also supports the complex situation where a TFile is updated multiple times on the same machine or a different machine. How does it work; A TRef is itself a TObject with an additional transient pointer fPID. When the statement fRef = robj is executed, the following actions happen:. The pointer fPID is set to the current TProcessID.; The current ObjectNumber (see below) is incremented by one.; robj::fUniqueID is set to ObjectNumber.; In the fPID object, the element fObjects[ObjectNumber] is set to robj; ref::fUniqueID is also set to ObjectNumber. After having set fRef, one can immediately return the value of robj using fRef.GetObject(). This function returns directly fObjects[fUniqueID] from the fPID object.; When the TRef is written, the process id number pidf of fPID is written in addition to the TObject part of TRef (fBits,fUniqueID).; When the TRef is read, its pointer fPID is set to the value stored in the TObjArray of TFile::fProcessIDs (fProcessIDs[pidf]). The pidf is stored as a UShort_t limiting a file to 65535 distinct ProcessID ob",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:870,Integrability,depend,dependencies,870,". ROOT: TRef Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Friends |; List of all members ; TRef Class ReferenceCore ROOT classes » Base ROOT classes. ; Persistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject. ; This object can be used instead of normal C++ pointers in case. the referenced object R and the pointer P are not written to the same file; P is read before R; R and P are written to different Tree branches. When a top level object (eg Event *event) is a tree/graph of many objects, the normal ROOT Streaming mechanism ensures that only one copy of each object in the tree/graph is written to the output buffer to avoid circular dependencies.; However if the object event is split into several files or into several branches of one or more Trees, normal C++ pointers cannot be used because each I/O operation will write the referenced objects.; When a TRef is used to point to a TObject *robj, for example in a class with TRef fRef;; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32; one can do: fRef = robj; //to set the pointer; This TRef and robj can be written with two different I/O calls in the same or different files, in the same or different branches of a Tree.; If the TRef is read and the referenced object has not yet been read, the TRef will return a null pointer. As soon as the referenced object will be read, the TRef will point to it. If the referenced object is contained in a TTree it can be auto-loaded using the TBranchRef mechanism, which is set up by simply calling TTree::BranchRef().; TRef also supports the complex situation where a TFile is updated multiple times on the same machine or a different machine. How does it work; A TRef is itself a TObject with an ad",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:13671,Integrability,message,message,13671,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:14212,Integrability,message,message,14212,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:15414,Integrability,message,message,15414,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:18776,Integrability,message,message,18776," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Int_t AddExec (const char *name);  If Exec with name does not exist in the list of Execs, it is created. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * GetListOfExe",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:19149,Integrability,message,message,19149," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Int_t AddExec (const char *name);  If Exec with name does not exist in the list of Execs, it is created. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * GetListOfExecs ();  Return a pointer to the static TObjArray holding the list of Execs. ;  ; static TObject * GetStaticObject ();  Returns the static object. ;  ; static void SetObject (TObject *obj);  static Obsolete function kept for back compatibility. ;  ; static void SetStaticObject (TObject *obj);  Static function to set the object found on the Action on Demand function. ;  ;  S",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:11904,Modifiability,inherit,inherited,11904,"ys mytracks,pions and muons may be written separately. ; Definition at line 32 of file TRef.h. Public Member Functions;  TRef ();  ;  TRef (const TRef &ref);  TRef copy ctor. ;  ;  TRef (TObject *obj);  Create a ref to obj. ;  ; virtual ~TRef ();  ; TObject * GetObject () const;  Return a pointer to the referenced object. ;  ; TProcessID * GetPID () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const;  ; TRef & operator= (const TRef &ref);  TRef assignment operator. ;  ; void operator= (TObject *obj);  Assign object to reference. ;  ; virtual void SetAction (const char *name);  Store the exec number (in the ROOT list of Execs) into the fBits of this TRef. ;  ; virtual void SetAction (TObject *parent);  Find the action to be executed in the dictionary of the parent class and store the corresponding exec number into fBits. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TRef. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:13301,Modifiability,inherit,inheritance,13301,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:15512,Modifiability,inherit,inherits,15512,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:15629,Modifiability,inherit,inherits,15629,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:20171,Modifiability,inherit,inherited,20171,"rrent directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Int_t AddExec (const char *name);  If Exec with name does not exist in the list of Execs, it is created. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * GetListOfExecs ();  Return a pointer to the static TObjArray holding the list of Execs. ;  ; static TObject * GetStaticObject ();  Returns the static object. ;  ; static void SetObject (TObject *obj);  static Obsolete function kept for back compatibility. ;  ; static void SetStaticObject (TObject *obj);  Static function to set the object found on the Action on Demand function. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TProcessID * fPID;  . Static Protected Attributes; static TObjArray * fgExecs = nullptr;  Pointer to ProcessID when TRef was written. ;  ; static TObject * fgObject = nullptr;  . Friends; Bool_t operator!= (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 do not point to the same object. ;  ; Bool_t operator== (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 point to the same object. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x080",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:21138,Modifiability,inherit,inherited,21138,"c TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TProcessID * fPID;  . Static Protected Attributes; static TObjArray * fgExecs = nullptr;  Pointer to ProcessID when TRef was written. ;  ; static TObject * fgObject = nullptr;  . Friends; Bool_t operator!= (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 do not point to the same object. ;  ; Bool_t operator== (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 point to the same object. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRef.h>. Inheritance diagram for TRef:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [leg",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:21779,Modifiability,inherit,inherited,21779,"Ref &r1, const TRef &r2);  Return kTRUE if r1 and r2 do not point to the same object. ;  ; Bool_t operator== (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 point to the same object. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRef.h>. Inheritance diagram for TRef:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRef() [1/3]. TRef::TRef ; (; ). inline . Definition at line 42 of file TRef.h. ◆ TRef() [2/3]. TRef::TRef ; (; TObject * ; obj). Create a ref to obj. ; Definition at line 262 of file TRef.cxx. ◆ TRef() [3/3]. TRef::TRef ; (; const TRef & ; ref). TRef copy ctor. ; Definition at line 270 of file TRef.cxx. ◆ ~TRef(). virtual TRef::~TRef ; (; ). inlinevirtual . Definition at line 47 of file TRef.h. Member Function Documentation. ◆ AddExec(). Int_t TRef::AddExec ; (; const char * ; name). static . If Exec with name does not exist in the list of Execs, it is created. ; returns the index of the Exec in the list. ; Definition at line 339 of fil",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:21878,Modifiability,inherit,inherited,21878,"Ref &r1, const TRef &r2);  Return kTRUE if r1 and r2 do not point to the same object. ;  ; Bool_t operator== (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 point to the same object. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRef.h>. Inheritance diagram for TRef:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRef() [1/3]. TRef::TRef ; (; ). inline . Definition at line 42 of file TRef.h. ◆ TRef() [2/3]. TRef::TRef ; (; TObject * ; obj). Create a ref to obj. ; Definition at line 262 of file TRef.cxx. ◆ TRef() [3/3]. TRef::TRef ; (; const TRef & ; ref). TRef copy ctor. ; Definition at line 270 of file TRef.cxx. ◆ ~TRef(). virtual TRef::~TRef ; (; ). inlinevirtual . Definition at line 47 of file TRef.h. Member Function Documentation. ◆ AddExec(). Int_t TRef::AddExec ; (; const char * ; name). static . If Exec with name does not exist in the list of Execs, it is created. ; returns the index of the Exec in the list. ; Definition at line 339 of fil",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:1727,Performance,load,loaded,1727,"Streaming mechanism ensures that only one copy of each object in the tree/graph is written to the output buffer to avoid circular dependencies.; However if the object event is split into several files or into several branches of one or more Trees, normal C++ pointers cannot be used because each I/O operation will write the referenced objects.; When a TRef is used to point to a TObject *robj, for example in a class with TRef fRef;; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32; one can do: fRef = robj; //to set the pointer; This TRef and robj can be written with two different I/O calls in the same or different files, in the same or different branches of a Tree.; If the TRef is read and the referenced object has not yet been read, the TRef will return a null pointer. As soon as the referenced object will be read, the TRef will point to it. If the referenced object is contained in a TTree it can be auto-loaded using the TBranchRef mechanism, which is set up by simply calling TTree::BranchRef().; TRef also supports the complex situation where a TFile is updated multiple times on the same machine or a different machine. How does it work; A TRef is itself a TObject with an additional transient pointer fPID. When the statement fRef = robj is executed, the following actions happen:. The pointer fPID is set to the current TProcessID.; The current ObjectNumber (see below) is incremented by one.; robj::fUniqueID is set to ObjectNumber.; In the fPID object, the element fObjects[ObjectNumber] is set to robj; ref::fUniqueID is also set to ObjectNumber. After having set fRef, one can immediately return the value of robj using fRef.GetObject(). This function returns directly fObjects[fUniqueID] from the fPID object.; When the TRef is written, the process id number pidf of fPID is written in addition to the TObject part of TRef (fBits,fUniqueID).; When the TRef is read, its pointer fPID is set to the value store",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:6903,Performance,load,load,6903,"EXEC:"" in case a TExec with a same name does not already exist.; The action to be executed via this TExec can be specified with:. a call to the TExec constructor, if the constructor is called before opening the file.; a call to TExec::SetAction at any time. One can compute a pointer to an existing TExec with a name with: TExec *myExec = gROOT->GetExec(execName);; myExec->SetAction(actionCommand);; gROOT#define gROOTDefinition TROOT.h:406; TExecTExec is a utility class that can be used to execute a C++ command when some event happens in a pad.Definition TExec.h:26; TExec::SetActionvirtual void SetAction(const char *action)Definition TExec.h:37; where actionCommand is a string containing a C++ instruction. Examples: myExec->SetAction(""LoadHits()"");; myExec->SetAction("".x script.C"");. When a TRef is dereferenced via TRef::GetObject, its TExec will be automatically executed. In the function/script being executed, one or more of the following actions can be executed:. load a file containing the referenced object. This function typically looks in the file catalog (GRID).; compute a pointer to the referenced object and communicate this pointer back to the calling function TRef::GetObject via: TRef::SetStaticObject(object).; TRef::SetStaticObjectstatic void SetStaticObject(TObject *obj)Static function to set the object found on the Action on Demand function.Definition TRef.cxx:478; When the TExec is called, it has access to the dereferencing TRef by calling GetStaticObject() (TRef::GetObject() sets fgObject to ""this"" before the call to TExec). This can be useful for accessing the TRef's fUniqueID. As soon as an object is returned to GetObject, the fUniqueID of the TRef is set to the fUniqueID of the referenced object. At the next call to GetObject, the pointer stored in fPid:fObjects[fUniqueID] will be returned directly.; An example of action on demand is shown in $ROOTSYS/test/Event.h with the member: TRef fWebHistogram; //EXEC:GetWebHistogram; When calling fWebHistogram.G",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:855,Safety,avoid,avoid,855,". ROOT: TRef Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Friends |; List of all members ; TRef Class ReferenceCore ROOT classes » Base ROOT classes. ; Persistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject. ; This object can be used instead of normal C++ pointers in case. the referenced object R and the pointer P are not written to the same file; P is read before R; R and P are written to different Tree branches. When a top level object (eg Event *event) is a tree/graph of many objects, the normal ROOT Streaming mechanism ensures that only one copy of each object in the tree/graph is written to the output buffer to avoid circular dependencies.; However if the object event is split into several files or into several branches of one or more Trees, normal C++ pointers cannot be used because each I/O operation will write the referenced objects.; When a TRef is used to point to a TObject *robj, for example in a class with TRef fRef;; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32; one can do: fRef = robj; //to set the pointer; This TRef and robj can be written with two different I/O calls in the same or different files, in the same or different branches of a Tree.; If the TRef is read and the referenced object has not yet been read, the TRef will return a null pointer. As soon as the referenced object will be read, the TRef will point to it. If the referenced object is contained in a TTree it can be auto-loaded using the TBranchRef mechanism, which is set up by simply calling TTree::BranchRef().; TRef also supports the complex situation where a TFile is updated multiple times on the same machine or a different machine. How does it work; A TRef is itself a TObject with an ad",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:4469,Safety,avoid,avoid,4469,"is robj is read by TObject::Streamer, the pidf is read. At this point, robj is entered into the table of objects of the TProcessID corresponding to pidf. WARNING1:; If MyClass is the class of the referenced object, The TObject part of MyClass must be Streamed. One should not call MyClass::Class()->IgnoreTObjectStreamer(). WARNING2:; A TRef cannot point to another TRef. ObjectNumber; When an object is referenced (see TRef assignment operator or TRefArray::Add) a unique identifier is computed and stored in both the fUniqueID of the referenced and referencing object. This uniqueID is computed by incrementing by one the static global in TProcessID::fgNumber. fUniqueID is some sort of serial object number in the current session. One can retrieve at any time the current value of fgNumber by calling the static function TProcessID::GetObjectCount or set this number via TProcessID::SetObjectCount.; To avoid a growing table of fObjects in TProcessID, in case, for example, one processes many events in a loop, it might be necessary to reset the ObjectNumber at the end of processing of one event. See an example in $ROOTSYS/test/Event.cxx (look at function Build).; The value of ObjectNumber (say saveNumber=TProcessID::GetObjectCount()) may be saved at the beginning of one event and reset to this original value at the end of the event via TProcessID::SetObjectCount(saveNumber). These actions may be stacked. Action on Demand; The normal behaviour of a TRef has been described above. In addition, TRef supports also ""Actions on Demand"". It may happen that the object referenced is not yet in memory, on a separate file or not yet computed. In this case TRef is able to automatically execute an action:. call to a compiled function (static function of member function); call to an interpreted function; execution of a C++ script. How to select this option? In the definition of the TRef data member in the original class, do: TRef fRef; //EXEC:execName. points to something; When the special key",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:9643,Safety,detect,detected,9643,"etting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::SetDirectoryvirtual void SetDirectory(TDirectory *dir)By default, when a histogram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; In the above example, a call to fWebHistogram.GetObject() executes the script with the function GetWebHistogram. This script connects a file with histograms: pippa.root on the ROOT Web site and returns the object h6 to TRef::GetObject.; Note that if the definition of the TRef fWebHistogram had been: TRef fWebHistogram; //EXEC:GetWebHistogram(); then, the compiled or interpreted function GetWebHistogram() would have been called instead of the C++ script GetWebHistogram.C. Special case of a TRef pointing to an object with a TUUID; If the referenced object has a TUUID, its bit kHasUUID has been set. This case is detected by the TRef assignment operator. (For example, TFile and TDirectory have a TUUID) The TRef fPID points directly to the single object TProcessUUID (deriving from TProcessID) and managing the list of TUUIDs for a process. The TRef kHasUUID bit is set and its fUniqueID is set to the fUniqueID of the referenced object.; When the TRef is streamed to a buffer, the corresponding TUUID is also streamed with the TRef. When a TRef is read from a buffer, the corresponding TUUID is also read and entered into the global list of TUUIDs (if not already there). The TRef fUniqueID is set to the UUIDNumber. see TProcessUUID for more details. Array of TRef; The special class TRefArray should be used to store multiple references. A TRefArray has one single pointer fPID for all objects in the array. It has a dynamic compact table of fUniqueIDs. Use a TRefArray rather then a collection of TRefs if all TRefs stem from the same process.; Example:; Suppose a TObjArray *mytracks containing a list of Track objects Su",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:7355,Security,access,access,7355,"hat can be used to execute a C++ command when some event happens in a pad.Definition TExec.h:26; TExec::SetActionvirtual void SetAction(const char *action)Definition TExec.h:37; where actionCommand is a string containing a C++ instruction. Examples: myExec->SetAction(""LoadHits()"");; myExec->SetAction("".x script.C"");. When a TRef is dereferenced via TRef::GetObject, its TExec will be automatically executed. In the function/script being executed, one or more of the following actions can be executed:. load a file containing the referenced object. This function typically looks in the file catalog (GRID).; compute a pointer to the referenced object and communicate this pointer back to the calling function TRef::GetObject via: TRef::SetStaticObject(object).; TRef::SetStaticObjectstatic void SetStaticObject(TObject *obj)Static function to set the object found on the Action on Demand function.Definition TRef.cxx:478; When the TExec is called, it has access to the dereferencing TRef by calling GetStaticObject() (TRef::GetObject() sets fgObject to ""this"" before the call to TExec). This can be useful for accessing the TRef's fUniqueID. As soon as an object is returned to GetObject, the fUniqueID of the TRef is set to the fUniqueID of the referenced object. At the next call to GetObject, the pointer stored in fPid:fObjects[fUniqueID] will be returned directly.; An example of action on demand is shown in $ROOTSYS/test/Event.h with the member: TRef fWebHistogram; //EXEC:GetWebHistogram; When calling fWebHistogram.GetObject(), the function GetObject will automatically invoke a script GetWebHistogram.C via the interpreter.; An example of a GetWebHistogram.C script is shown below void GetWebHistogram() {; TFile *f= TFile::Open(""http://root.cern/files/pippa.root"");; f->cd(""DM/CJ"");; TH1 *h6 = (TH1*)gDirectory->Get(""h6"");; h6->SetDirectory(0);; delete f;; TRef::SetStaticObject(h6);; }; f#define f(i)Definition RSha256.hxx:104; gDirectory#define gDirectoryDefinition TDirectory.h:384; TFi",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:7510,Security,access,accessing,7510,"irtual void SetAction(const char *action)Definition TExec.h:37; where actionCommand is a string containing a C++ instruction. Examples: myExec->SetAction(""LoadHits()"");; myExec->SetAction("".x script.C"");. When a TRef is dereferenced via TRef::GetObject, its TExec will be automatically executed. In the function/script being executed, one or more of the following actions can be executed:. load a file containing the referenced object. This function typically looks in the file catalog (GRID).; compute a pointer to the referenced object and communicate this pointer back to the calling function TRef::GetObject via: TRef::SetStaticObject(object).; TRef::SetStaticObjectstatic void SetStaticObject(TObject *obj)Static function to set the object found on the Action on Demand function.Definition TRef.cxx:478; When the TExec is called, it has access to the dereferencing TRef by calling GetStaticObject() (TRef::GetObject() sets fgObject to ""this"" before the call to TExec). This can be useful for accessing the TRef's fUniqueID. As soon as an object is returned to GetObject, the fUniqueID of the TRef is set to the fUniqueID of the referenced object. At the next call to GetObject, the pointer stored in fPid:fObjects[fUniqueID] will be returned directly.; An example of action on demand is shown in $ROOTSYS/test/Event.h with the member: TRef fWebHistogram; //EXEC:GetWebHistogram; When calling fWebHistogram.GetObject(), the function GetObject will automatically invoke a script GetWebHistogram.C via the interpreter.; An example of a GetWebHistogram.C script is shown below void GetWebHistogram() {; TFile *f= TFile::Open(""http://root.cern/files/pippa.root"");; f->cd(""DM/CJ"");; TH1 *h6 = (TH1*)gDirectory->Get(""h6"");; h6->SetDirectory(0);; delete f;; TRef::SetStaticObject(h6);; }; f#define f(i)Definition RSha256.hxx:104; gDirectory#define gDirectoryDefinition TDirectory.h:384; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definiti",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:15143,Security,hash,hash,15143," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:25797,Security,access,access,25797,"ect * ; parent). virtual . Find the action to be executed in the dictionary of the parent class and store the corresponding exec number into fBits. ; This function searches a data member in the class of parent with an offset corresponding to this. If a comment ""TEXEC:"" is found in the comment field of the data member, the function stores the exec identifier of the exec statement following this keyword. ; Definition at line 449 of file TRef.cxx. ◆ SetObject(). void TRef::SetObject ; (; TObject * ; obj). static . static Obsolete function kept for back compatibility. ; In the near future will print a Warning, then will be deleted. ; Definition at line 466 of file TRef.cxx. ◆ SetStaticObject(). void TRef::SetStaticObject ; (; TObject * ; obj). static . Static function to set the object found on the Action on Demand function. ; This function may be called by the user in the function called when a ""EXEC:"" keyword is specified in the data member field of the TRef. The function can get access to the dereferencing TRef (i.e. this)using the static function GetStaticObject(). ; Definition at line 478 of file TRef.cxx. ◆ Streamer(). void TRef::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TRef. ; Reimplemented from TObject.; Definition at line 486 of file TRef.cxx. ◆ StreamerNVirtual(). void TRef::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 64 of file TRef.h. Friends And Related Symbol Documentation. ◆ operator!=. Bool_t operator!= ; (; const TRef & ; r1, . const TRef & ; r2 . ). friend . Return kTRUE if r1 and r2 do not point to the same object. ; Definition at line 329 of file TRef.cxx. ◆ operator==. Bool_t operator== ; (; const TRef & ; r1, . const TRef & ; r2 . ). friend . Return kTRUE if r1 and r2 point to the same object. ; Definition at line 320 of file TRef.cxx. Member Data Documentation. ◆ fgExecs. TObjArray * TRef::fgExecs = nullptr. staticprotected . Pointer to ProcessID when TRef was writ",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:4691,Testability,test,test,4691," TProcessID corresponding to pidf. WARNING1:; If MyClass is the class of the referenced object, The TObject part of MyClass must be Streamed. One should not call MyClass::Class()->IgnoreTObjectStreamer(). WARNING2:; A TRef cannot point to another TRef. ObjectNumber; When an object is referenced (see TRef assignment operator or TRefArray::Add) a unique identifier is computed and stored in both the fUniqueID of the referenced and referencing object. This uniqueID is computed by incrementing by one the static global in TProcessID::fgNumber. fUniqueID is some sort of serial object number in the current session. One can retrieve at any time the current value of fgNumber by calling the static function TProcessID::GetObjectCount or set this number via TProcessID::SetObjectCount.; To avoid a growing table of fObjects in TProcessID, in case, for example, one processes many events in a loop, it might be necessary to reset the ObjectNumber at the end of processing of one event. See an example in $ROOTSYS/test/Event.cxx (look at function Build).; The value of ObjectNumber (say saveNumber=TProcessID::GetObjectCount()) may be saved at the beginning of one event and reset to this original value at the end of the event via TProcessID::SetObjectCount(saveNumber). These actions may be stacked. Action on Demand; The normal behaviour of a TRef has been described above. In addition, TRef supports also ""Actions on Demand"". It may happen that the object referenced is not yet in memory, on a separate file or not yet computed. In this case TRef is able to automatically execute an action:. call to a compiled function (static function of member function); call to an interpreted function; execution of a C++ script. How to select this option? In the definition of the TRef data member in the original class, do: TRef fRef; //EXEC:execName. points to something; When the special keyword ""EXEC:"" is found in the comment field of the member, the next string is assumed to be the name of a TExec object. ",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:7823,Testability,test,test,7823,"ecuted. In the function/script being executed, one or more of the following actions can be executed:. load a file containing the referenced object. This function typically looks in the file catalog (GRID).; compute a pointer to the referenced object and communicate this pointer back to the calling function TRef::GetObject via: TRef::SetStaticObject(object).; TRef::SetStaticObjectstatic void SetStaticObject(TObject *obj)Static function to set the object found on the Action on Demand function.Definition TRef.cxx:478; When the TExec is called, it has access to the dereferencing TRef by calling GetStaticObject() (TRef::GetObject() sets fgObject to ""this"" before the call to TExec). This can be useful for accessing the TRef's fUniqueID. As soon as an object is returned to GetObject, the fUniqueID of the TRef is set to the fUniqueID of the referenced object. At the next call to GetObject, the pointer stored in fPid:fObjects[fUniqueID] will be returned directly.; An example of action on demand is shown in $ROOTSYS/test/Event.h with the member: TRef fWebHistogram; //EXEC:GetWebHistogram; When calling fWebHistogram.GetObject(), the function GetObject will automatically invoke a script GetWebHistogram.C via the interpreter.; An example of a GetWebHistogram.C script is shown below void GetWebHistogram() {; TFile *f= TFile::Open(""http://root.cern/files/pippa.root"");; f->cd(""DM/CJ"");; TH1 *h6 = (TH1*)gDirectory->Get(""h6"");; h6->SetDirectory(0);; delete f;; TRef::SetStaticObject(h6);; }; f#define f(i)Definition RSha256.hxx:104; gDirectory#define gDirectoryDefinition TDirectory.h:384; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH1TH1 is the base class of all histogram c",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRef.html:1785,Usability,simpl,simply,1785,"Streaming mechanism ensures that only one copy of each object in the tree/graph is written to the output buffer to avoid circular dependencies.; However if the object event is split into several files or into several branches of one or more Trees, normal C++ pointers cannot be used because each I/O operation will write the referenced objects.; When a TRef is used to point to a TObject *robj, for example in a class with TRef fRef;; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32; one can do: fRef = robj; //to set the pointer; This TRef and robj can be written with two different I/O calls in the same or different files, in the same or different branches of a Tree.; If the TRef is read and the referenced object has not yet been read, the TRef will return a null pointer. As soon as the referenced object will be read, the TRef will point to it. If the referenced object is contained in a TTree it can be auto-loaded using the TBranchRef mechanism, which is set up by simply calling TTree::BranchRef().; TRef also supports the complex situation where a TFile is updated multiple times on the same machine or a different machine. How does it work; A TRef is itself a TObject with an additional transient pointer fPID. When the statement fRef = robj is executed, the following actions happen:. The pointer fPID is set to the current TProcessID.; The current ObjectNumber (see below) is incremented by one.; robj::fUniqueID is set to ObjectNumber.; In the fPID object, the element fObjects[ObjectNumber] is set to robj; ref::fUniqueID is also set to ObjectNumber. After having set fRef, one can immediately return the value of robj using fRef.GetObject(). This function returns directly fObjects[fUniqueID] from the fPID object.; When the TRef is written, the process id number pidf of fPID is written in addition to the TObject part of TRef (fBits,fUniqueID).; When the TRef is read, its pointer fPID is set to the value store",MatchSource.WIKI,doc/master/classTRef.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRef.html
https://root.cern/doc/master/classTRefArray.html:1714,Availability,error,error,1714,"default the TRefArray 'points' to the current process and can only receive object that have been created in this process. To point the TRefArray to a different process do: TRefArray array( processId );; TRefArrayAn array of references to TObjects.Definition TRefArray.h:33; For example, if 'obj' is an instance that was created in the different process and you do: TRefArray array( TProcessID::GetProcessWithUID( obj ) );; TProcessID::GetProcessWithUIDstatic TProcessID * GetProcessWithUID(const TObject *obj)static function returning a pointer to TProcessID with its pid encoded in the highest byte of obj->Ge...Definition TProcessID.cxx:297; Then array.Add(obj);; is correct (obj comes from the process the array is pointed to while TObject *nobj = new TObject;; array.Add(nobj);; TObject::TObjectTObject()TObject constructor.Definition TObject.h:254; is incorrect since 'nobj' was created in a different process than the one the array is pointed to. In this case you will see error message: Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; xDouble_t x[n]Definition legend1.C:17; When a TRefArray is Streamed, only the pointer unique id is written, not the referenced object. TRefArray may be assigned to different branches of one Tree or several Trees. The branch containing the TRefArray can be read before or after the array (eg TClonesArray, STL vector,..) of the referenced objects.; See an example in $ROOTSYS/test/Event.h. RESTRICTIONS when using TRefArray. Elements in a TRefArray cannot point to a TFile or TDirectory.; All elements of a TRefArray must be set in the same process, In particular, one cannot modify some elements of the array in a different process. Use an array of TRef when one of the above restrictions is met.; The number of TRef handled by a singl",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:1959,Availability,error,error,1959,"references to TObjects.Definition TRefArray.h:33; For example, if 'obj' is an instance that was created in the different process and you do: TRefArray array( TProcessID::GetProcessWithUID( obj ) );; TProcessID::GetProcessWithUIDstatic TProcessID * GetProcessWithUID(const TObject *obj)static function returning a pointer to TProcessID with its pid encoded in the highest byte of obj->Ge...Definition TProcessID.cxx:297; Then array.Add(obj);; is correct (obj comes from the process the array is pointed to while TObject *nobj = new TObject;; array.Add(nobj);; TObject::TObjectTObject()TObject constructor.Definition TObject.h:254; is incorrect since 'nobj' was created in a different process than the one the array is pointed to. In this case you will see error message: Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; xDouble_t x[n]Definition legend1.C:17; When a TRefArray is Streamed, only the pointer unique id is written, not the referenced object. TRefArray may be assigned to different branches of one Tree or several Trees. The branch containing the TRefArray can be read before or after the array (eg TClonesArray, STL vector,..) of the referenced objects.; See an example in $ROOTSYS/test/Event.h. RESTRICTIONS when using TRefArray. Elements in a TRefArray cannot point to a TFile or TDirectory.; All elements of a TRefArray must be set in the same process, In particular, one cannot modify some elements of the array in a different process. Use an array of TRef when one of the above restrictions is met.; The number of TRef handled by a single process id is limited to 16777215 (see TRef for more detail). When the TProcessID is full (has seen 16777215 objects), we switch to new one TProcessID maximum 65535 including the TProcessIDs read from file). However TRefAr",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:4703,Availability,error,error,4703,"cts and the TRefArray already contains other objects.; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; pointsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148; When running out of TProcessIds, you will see:; Warning in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) is almost reached (one left). TRef will stop being functional when the limit is reached.; Fatal in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) has been reached. TRef are not longer functional.; whenOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void whenDefinition TGWin32VirtualXProxy.cxx:136; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TProcessIDA TProcessID identifies a ROOT job in a unique way in time and space.Definition TProcessID.h:74; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32. Definition at line 33 of file TRefArray.h. Public Types; typedef TRefArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;  ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:14964,Availability,error,error,14964,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:15053,Availability,error,error,15053,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:15208,Availability,error,error,15208," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:15505,Availability,error,error,15505,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:18982,Availability,error,error,18982," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:21862,Availability,error,error,21862,"blic Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check for validity of pid. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TRefArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUI",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:25372,Availability,error,error,25372,"). Create a copy of TRefArray a. ; Definition at line 158 of file TRefArray.cxx. ◆ ~TRefArray(). TRefArray::~TRefArray ; (; ). virtual . Usual destructor (The object pointed to by the array are never deleted). ; Definition at line 197 of file TRefArray.cxx. Member Function Documentation. ◆ Add(). void TRefArray::Add ; (; TObject * ; obj). inlineoverridevirtual . Implements TCollection.; Definition at line 74 of file TRefArray.h. ◆ AddAfter(). void TRefArray::AddAfter ; (; const TObject * ; after, . TObject * ; obj . ). overridevirtual . Add object in the slot after object after. ; If after=0 add object in the last empty slot. Note that this will overwrite any object that might have already been in this slot. For insertion semantics use either a TList or a TOrdCollection. ; Implements TSeqCollection.; Definition at line 319 of file TRefArray.cxx. ◆ AddAt(). void TRefArray::AddAt ; (; TObject * ; obj, . Int_t ; idx . ). overridevirtual . Add object at position ids. ; Give an error when idx is out of bounds (i.e. the array is not expanded). ; Implements TSeqCollection.; Definition at line 360 of file TRefArray.cxx. ◆ AddAtAndExpand(). void TRefArray::AddAtAndExpand ; (; TObject * ; obj, . Int_t ; idx . ). virtual . Add object at position idx. ; If idx is larger than the current size of the array, expand the array (double its size). ; Definition at line 337 of file TRefArray.cxx. ◆ AddAtFree(). Int_t TRefArray::AddAtFree ; (; TObject * ; obj). virtual . Return the position of the new object. ; Find the first empty cell or AddLast if there is no empty cell ; Definition at line 378 of file TRefArray.cxx. ◆ AddBefore(). void TRefArray::AddBefore ; (; const TObject * ; before, . TObject * ; obj . ). overridevirtual . Add object in the slot before object before. ; If before=0 add object in the first slot. Note that this will overwrite any object that might have already been in this slot. For insertion semantics use either a TList or a TOrdCollection. ; Implements TSeqCollect",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:33271,Availability,error,error,33271,"ion.; Definition at line 71 of file TRefArray.h. ◆ Last(). TObject * TRefArray::Last ; (; ); const. overridevirtual . Return the object in the last filled slot. Returns 0 if no entries. ; Implements TSeqCollection.; Definition at line 578 of file TRefArray.cxx. ◆ LowerBound(). Int_t TRefArray::LowerBound ; (; ); const. inline . Definition at line 91 of file TRefArray.h. ◆ MakeIterator(). TIterator * TRefArray::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Returns an array iterator. ; Implements TCollection.; Definition at line 709 of file TRefArray.cxx. ◆ operator=(). TRefArray & TRefArray::operator= ; (; const TRefArray & ; a). Assignment operator. ; Definition at line 175 of file TRefArray.cxx. ◆ operator[](). TObject * TRefArray::operator[] ; (; Int_t ; i); const. inlinevirtual . Definition at line 164 of file TRefArray.h. ◆ OutOfBoundsError(). Bool_t TRefArray::OutOfBoundsError ; (; const char * ; where, . Int_t ; i . ); const. protected . Generate an out-of-bounds error. Always returns false. ; Definition at line 717 of file TRefArray.cxx. ◆ Remove(). TObject * TRefArray::Remove ; (; TObject * ; obj). overridevirtual . Remove object from array. ; Implements TCollection.; Definition at line 751 of file TRefArray.cxx. ◆ RemoveAt(). TObject * TRefArray::RemoveAt ; (; Int_t ; idx). overridevirtual . Remove object at index idx. ; Reimplemented from TSeqCollection.; Definition at line 726 of file TRefArray.cxx. ◆ SetLast(). void TRefArray::SetLast ; (; Int_t ; last). Set index of last object in array, effectively truncating the array. ; Use carefully since whenever last position has to be recalculated, e.g. after a Remove() or Sort() it will be reset to the last non-empty slot. If last is -2 this will force the recalculation of the last used slot. ; Definition at line 777 of file TRefArray.cxx. ◆ Sort(). void TRefArray::Sort ; (; Int_t ; upto = kMaxInt). virtual . If objects in array are sortable (i.e. ; IsSortable() returns true for all obj",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:1720,Integrability,message,message,1720,"default the TRefArray 'points' to the current process and can only receive object that have been created in this process. To point the TRefArray to a different process do: TRefArray array( processId );; TRefArrayAn array of references to TObjects.Definition TRefArray.h:33; For example, if 'obj' is an instance that was created in the different process and you do: TRefArray array( TProcessID::GetProcessWithUID( obj ) );; TProcessID::GetProcessWithUIDstatic TProcessID * GetProcessWithUID(const TObject *obj)static function returning a pointer to TProcessID with its pid encoded in the highest byte of obj->Ge...Definition TProcessID.cxx:297; Then array.Add(obj);; is correct (obj comes from the process the array is pointed to while TObject *nobj = new TObject;; array.Add(nobj);; TObject::TObjectTObject()TObject constructor.Definition TObject.h:254; is incorrect since 'nobj' was created in a different process than the one the array is pointed to. In this case you will see error message: Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; xDouble_t x[n]Definition legend1.C:17; When a TRefArray is Streamed, only the pointer unique id is written, not the referenced object. TRefArray may be assigned to different branches of one Tree or several Trees. The branch containing the TRefArray can be read before or after the array (eg TClonesArray, STL vector,..) of the referenced objects.; See an example in $ROOTSYS/test/Event.h. RESTRICTIONS when using TRefArray. Elements in a TRefArray cannot point to a TFile or TDirectory.; All elements of a TRefArray must be set in the same process, In particular, one cannot modify some elements of the array in a different process. Use an array of TRef when one of the above restrictions is met.; The number of TRef handled by a singl",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:1965,Integrability,message,message,1965,"references to TObjects.Definition TRefArray.h:33; For example, if 'obj' is an instance that was created in the different process and you do: TRefArray array( TProcessID::GetProcessWithUID( obj ) );; TProcessID::GetProcessWithUIDstatic TProcessID * GetProcessWithUID(const TObject *obj)static function returning a pointer to TProcessID with its pid encoded in the highest byte of obj->Ge...Definition TProcessID.cxx:297; Then array.Add(obj);; is correct (obj comes from the process the array is pointed to while TObject *nobj = new TObject;; array.Add(nobj);; TObject::TObjectTObject()TObject constructor.Definition TObject.h:254; is incorrect since 'nobj' was created in a different process than the one the array is pointed to. In this case you will see error message: Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; xDouble_t x[n]Definition legend1.C:17; When a TRefArray is Streamed, only the pointer unique id is written, not the referenced object. TRefArray may be assigned to different branches of one Tree or several Trees. The branch containing the TRefArray can be read before or after the array (eg TClonesArray, STL vector,..) of the referenced objects.; See an example in $ROOTSYS/test/Event.h. RESTRICTIONS when using TRefArray. Elements in a TRefArray cannot point to a TFile or TDirectory.; All elements of a TRefArray must be set in the same process, In particular, one cannot modify some elements of the array in a different process. Use an array of TRef when one of the above restrictions is met.; The number of TRef handled by a single process id is limited to 16777215 (see TRef for more detail). When the TProcessID is full (has seen 16777215 objects), we switch to new one TProcessID maximum 65535 including the TProcessIDs read from file). However TRefAr",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:3406,Integrability,message,message,3406,"ONS when using TRefArray. Elements in a TRefArray cannot point to a TFile or TDirectory.; All elements of a TRefArray must be set in the same process, In particular, one cannot modify some elements of the array in a different process. Use an array of TRef when one of the above restrictions is met.; The number of TRef handled by a single process id is limited to 16777215 (see TRef for more detail). When the TProcessID is full (has seen 16777215 objects), we switch to new one TProcessID maximum 65535 including the TProcessIDs read from file). However TRefArray can not switch to new TProcessID if they already contain objects.; When the TProcessID has been switched due to overflow and an new object is added to an existing, empty TRefArray, you will see:; Warning in <TRefArray::AddAtAndExpand>: The ProcessID for the 0x5f83819e8 has been switched to ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef:4; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; If the TRefArray was not empty, you will see:; Error in <TRefArray::AddAtAndExpand>: The object at %p can not be registered in the process the TRefArray points to (pid = ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef) because the ProcessID has too many objects and the TRefArray already contains other objects.; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; pointsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148; When running out of TProcessIds, you will see:; Warning in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) is almost reached (one left). TRef will stop being functional when the limit is reached.; Fatal in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) has been reached. TRef are not longer functional",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:4709,Integrability,message,message,4709,"cts and the TRefArray already contains other objects.; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; pointsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148; When running out of TProcessIds, you will see:; Warning in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) is almost reached (one left). TRef will stop being functional when the limit is reached.; Fatal in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) has been reached. TRef are not longer functional.; whenOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void whenDefinition TGWin32VirtualXProxy.cxx:136; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TProcessIDA TProcessID identifies a ROOT job in a unique way in time and space.Definition TProcessID.h:74; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32. Definition at line 33 of file TRefArray.h. Public Types; typedef TRefArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;  ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:14970,Integrability,message,message,14970,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:15511,Integrability,message,message,15511,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:16372,Integrability,message,message,16372,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:18988,Integrability,message,message,18988," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:19361,Integrability,message,message,19361," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:5081,Modifiability,inherit,inherited,5081,") is almost reached (one left). TRef will stop being functional when the limit is reached.; Fatal in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) has been reached. TRef are not longer functional.; whenOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void whenDefinition TGWin32VirtualXProxy.cxx:136; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TProcessIDA TProcessID identifies a ROOT job in a unique way in time and space.Definition TProcessID.h:74; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32. Definition at line 33 of file TRefArray.h. Public Types; typedef TRefArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRefArray (const TRefArray &a);  Create a copy of TRefArray a. ;  ;  TRefArray (Int_t s, Int_t lowerBound=0, TProcessID *pid=nullptr);  Create an object array. ;  ;  TRefArray (Int_t s, TProcessID *pid);  Create an object array. ;  ;  TRefArray (TProcessID *pid=nullptr);  default constructor ;  ; virtual ~TRefArray ();  Usual destructor (The objec",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:5188,Modifiability,inherit,inherited,5188,") is almost reached (one left). TRef will stop being functional when the limit is reached.; Fatal in <TProcessID::AddProcessID>: Maximum number of TProcessID (65535) has been reached. TRef are not longer functional.; whenOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void whenDefinition TGWin32VirtualXProxy.cxx:136; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TProcessIDA TProcessID identifies a ROOT job in a unique way in time and space.Definition TProcessID.h:74; TRefPersistent Reference link to a TObject A TRef is a lightweight object pointing to any TObject.Definition TRef.h:32. Definition at line 33 of file TRefArray.h. Public Types; typedef TRefArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRefArray (const TRefArray &a);  Create a copy of TRefArray a. ;  ;  TRefArray (Int_t s, Int_t lowerBound=0, TProcessID *pid=nullptr);  Create an object array. ;  ;  TRefArray (Int_t s, TProcessID *pid);  Create an object array. ;  ;  TRefArray (TProcessID *pid=nullptr);  default constructor ;  ; virtual ~TRefArray ();  Usual destructor (The objec",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:9160,Modifiability,inherit,inherited,9160,"erride;  ; TObject * Last () const override;  Return the object in the last filled slot. Returns 0 if no entries. ;  ; Int_t LowerBound () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns an array iterator. ;  ; TRefArray & operator= (const TRefArray &a);  Assignment operator. ;  ; virtual TObject * operator[] (Int_t i) const;  ; TObject * Remove (TObject *obj) override;  Remove object from array. ;  ; TObject * RemoveAt (Int_t idx) override;  Remove object at index idx. ;  ; void SetLast (Int_t last);  Set index of last object in array, effectively truncating the array. ;  ; virtual void Sort (Int_t upto=kMaxInt);  If objects in array are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the array to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:9843,Modifiability,inherit,inherited,9843,"f last object in array, effectively truncating the array. ;  ; virtual void Sort (Int_t upto=kMaxInt);  If objects in array are sortable (i.e. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the array to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:10189,Modifiability,inherit,inherit,10189,"ons inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this collection using the object's IsEqual() member function. ;  ; const char * GetName () const override;  Return name of this",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:13764,Modifiability,inherit,inherited,13764," override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:14669,Modifiability,inherit,inheritance,14669," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:16470,Modifiability,inherit,inherits,16470,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:16587,Modifiability,inherit,inherits,16587,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:19594,Modifiability,inherit,inherited,19594,"nset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be c",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:20289,Modifiability,inherit,inherited,20289,"ing message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:20840,Modifiability,inherit,inherited,20840,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check for validity of pid. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TRefArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSe",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:21924,Modifiability,inherit,inherited,21924,"tatic Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check for validity of pid. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TRefArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection;",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:22034,Modifiability,inherit,inherited,22034,"tatic Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check for validity of pid. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TRefArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection;",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:22542,Modifiability,inherit,inherited,22542," &uid, TObject *obj, const char *methodname);  Private/static function, check for validity of pid. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TRefArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefArray.h>. Inheritance diagram for TRefArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TRefArrayIter TRefArray::Iterator_t. Definition at line 51 of file TRefArray.h. Constructor & Destructor Documentation. ◆ TRefAr",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:22848,Modifiability,inherit,inherited,22848,"of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefArray.h>. Inheritance diagram for TRefArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TRefArrayIter TRefArray::Iterator_t. Definition at line 51 of file TRefArray.h. Constructor & Destructor Documentation. ◆ TRefArray() [1/4]. TRefArray::TRefArray ; (; TProcessID * ; pid = nullptr). default constructor ; Definition at line 109 of file TRefArray.cxx. ◆ TRefArray() [2/4]. TRefArray::TRefArray ; (; Int_t ; s, . TProcessID * ; pid . ). Create an object array. ; Usi",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:22920,Modifiability,inherit,inherited,22920,"of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefArray.h>. Inheritance diagram for TRefArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TRefArrayIter TRefArray::Iterator_t. Definition at line 51 of file TRefArray.h. Constructor & Destructor Documentation. ◆ TRefArray() [1/4]. TRefArray::TRefArray ; (; TProcessID * ; pid = nullptr). default constructor ; Definition at line 109 of file TRefArray.cxx. ◆ TRefArray() [2/4]. TRefArray::TRefArray ; (; Int_t ; s, . TProcessID * ; pid . ). Create an object array. ; Usi",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:23062,Modifiability,inherit,inherited,23062,"ry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefArray.h>. Inheritance diagram for TRefArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TRefArrayIter TRefArray::Iterator_t. Definition at line 51 of file TRefArray.h. Constructor & Destructor Documentation. ◆ TRefArray() [1/4]. TRefArray::TRefArray ; (; TProcessID * ; pid = nullptr). default constructor ; Definition at line 109 of file TRefArray.cxx. ◆ TRefArray() [2/4]. TRefArray::TRefArray ; (; Int_t ; s, . TProcessID * ; pid . ). Create an object array. ; Using s one can set the array size and lowerBound can be used to set the array lowerbound index (default is 0). ; Definition at line 124 of file TRefArray.cxx. ◆ TRefArray() [3/4]. TRefArray::TRefArray ; (; Int_t ; s, . Int_t ; lowerBound = 0, . TProcessID * ; pid = nullptr . ). Create an ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:23195,Modifiability,inherit,inherited,23195,"ry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefArray.h>. Inheritance diagram for TRefArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TRefArrayIter TRefArray::Iterator_t. Definition at line 51 of file TRefArray.h. Constructor & Destructor Documentation. ◆ TRefArray() [1/4]. TRefArray::TRefArray ; (; TProcessID * ; pid = nullptr). default constructor ; Definition at line 109 of file TRefArray.cxx. ◆ TRefArray() [2/4]. TRefArray::TRefArray ; (; Int_t ; s, . TProcessID * ; pid . ). Create an object array. ; Using s one can set the array size and lowerBound can be used to set the array lowerbound index (default is 0). ; Definition at line 124 of file TRefArray.cxx. ◆ TRefArray() [3/4]. TRefArray::TRefArray ; (; Int_t ; s, . Int_t ; lowerBound = 0, . TProcessID * ; pid = nullptr . ). Create an ",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:22250,Performance,perform,perform,22250,"tatic Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check for validity of pid. ;  ; void Init (Int_t s, Int_t lowerBound);  Initialize a TRefArray. ;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection;",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:13470,Safety,safe,safe,13470,"rint (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:11396,Security,hash,hash,11396,"newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this collection using the object's IsEqual() member function. ;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (O",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:13105,Security,access,accessible,13105," object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:13445,Security,access,access,13445,"rint (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:20704,Security,access,accessible,20704,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Int_t GetAbsLast () const;  Return absolute index to last object in array. ;  ; TObject * GetFromTable (Int_t idx) const;  the reference may be in the TRefTable ;  ; Bool_t GetObjectUID (Int_t &uid, TObject *obj, const char *methodname);  Private/static function, check",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefArray.html:2376,Testability,test,test,2376,"ID.cxx:297; Then array.Add(obj);; is correct (obj comes from the process the array is pointed to while TObject *nobj = new TObject;; array.Add(nobj);; TObject::TObjectTObject()TObject constructor.Definition TObject.h:254; is incorrect since 'nobj' was created in a different process than the one the array is pointed to. In this case you will see error message: Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; xDouble_t x[n]Definition legend1.C:17; When a TRefArray is Streamed, only the pointer unique id is written, not the referenced object. TRefArray may be assigned to different branches of one Tree or several Trees. The branch containing the TRefArray can be read before or after the array (eg TClonesArray, STL vector,..) of the referenced objects.; See an example in $ROOTSYS/test/Event.h. RESTRICTIONS when using TRefArray. Elements in a TRefArray cannot point to a TFile or TDirectory.; All elements of a TRefArray must be set in the same process, In particular, one cannot modify some elements of the array in a different process. Use an array of TRef when one of the above restrictions is met.; The number of TRef handled by a single process id is limited to 16777215 (see TRef for more detail). When the TProcessID is full (has seen 16777215 objects), we switch to new one TProcessID maximum 65535 including the TProcessIDs read from file). However TRefArray can not switch to new TProcessID if they already contain objects.; When the TProcessID has been switched due to overflow and an new object is added to an existing, empty TRefArray, you will see:; Warning in <TRefArray::AddAtAndExpand>: The ProcessID for the 0x5f83819e8 has been switched to ProcessID4/6c89f37e-8259-11e2-9717-166ee183beef:4; TObject::Warningvirtual void Warning(const char *method, cons",MatchSource.WIKI,doc/master/classTRefArray.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefArray.html
https://root.cern/doc/master/classTRefTable.html:5824,Availability,error,error,5824,"t;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:5913,Availability,error,error,5913,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:6068,Availability,error,error,6068,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:6365,Availability,error,error,6365,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:10800,Availability,error,error,10800," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TRefTable * GetRefTable ();  Static function returning the current TRefTable. ;  ; static void SetRefTable (TRefTable *table);  Static functi",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:13481,Energy Efficiency,allocate,allocated,13481," fParentIDs to newsize for internel ProcessID index iid. ;  ; void ExpandPIDs (Int_t numpids);  Expand the arrays of managed PIDs. ;  ; Int_t FindPIDGUID (const char *guid) const;  Get fProcessGUIDs' index of the TProcessID with GUID guid. ;  ; Int_t GetInternalIdxForPID (Int_t pid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ; Int_t GetInternalIdxForPID (TProcessID *procid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fAllocSize;  number of known ProcessIDs ;  ; Int_t fDefaultSize;  current parent ID in fParents (latest call to SetParent) ;  ; std::vector< Int_t > fMapPIDtoInternal;  ; Int_t * fN;  [fNumPIDs] allocated size of array fParentIDs for each ProcessID ;  ; Int_t fNumPIDs;  ; TObject * fOwner;  ; Int_t fParentID;  [fNumPIDs][fAllocSize] array of Parent IDs ;  ; Int_t ** fParentIDs;  [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ;  ; TObjArray * fParents;  ; std::vector< std::string > fProcessGUIDs;  ; Int_t fSize;  TProcessID the current uid is referring to. ;  ; UInt_t fUID;  default size for a new PID array ;  ; TProcessID * fUIDContext;  Current uid (set by TRef::GetObject) ;  . Static Protected Attributes; static TRefTable * fgRefTable = nullptr;  cache of pid to index in fProcessGUIDs ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefTable.h>. Inheritance diagram for TRefTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TRefTable::EStatusBits. EnumeratorkHaveWarnedReadingOld . Definition at line 62 of file TRefTable.h. Constructor & Des",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:21788,Energy Efficiency,allocate,allocated,21788,TBuffer & ; R__b). overridevirtual . Stream an object of class TRefTable. ; Reimplemented from TObject.; Definition at line 391 of file TRefTable.cxx. ◆ StreamerNVirtual(). void TRefTable::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 93 of file TRefTable.h. Member Data Documentation. ◆ fAllocSize. Int_t* TRefTable::fAllocSize. protected . number of known ProcessIDs ; Definition at line 39 of file TRefTable.h. ◆ fDefaultSize. Int_t TRefTable::fDefaultSize. protected . current parent ID in fParents (latest call to SetParent) ; Definition at line 43 of file TRefTable.h. ◆ fgRefTable. TRefTable * TRefTable::fgRefTable = nullptr. staticprotected . cache of pid to index in fProcessGUIDs ; Definition at line 51 of file TRefTable.h. ◆ fMapPIDtoInternal. std::vector<Int_t> TRefTable::fMapPIDtoInternal. protected . Definition at line 50 of file TRefTable.h. ◆ fN. Int_t* TRefTable::fN. protected . [fNumPIDs] allocated size of array fParentIDs for each ProcessID ; Definition at line 40 of file TRefTable.h. ◆ fNumPIDs. Int_t TRefTable::fNumPIDs. protected . Definition at line 38 of file TRefTable.h. ◆ fOwner. TObject* TRefTable::fOwner. protected . Definition at line 48 of file TRefTable.h. ◆ fParentID. Int_t TRefTable::fParentID. protected . [fNumPIDs][fAllocSize] array of Parent IDs ; Definition at line 42 of file TRefTable.h. ◆ fParentIDs. Int_t** TRefTable::fParentIDs. protected . [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ; Definition at line 41 of file TRefTable.h. ◆ fParents. TObjArray* TRefTable::fParents. protected . Definition at line 47 of file TRefTable.h. ◆ fProcessGUIDs. std::vector<std::string> TRefTable::fProcessGUIDs. protected . Definition at line 49 of file TRefTable.h. ◆ fSize. Int_t TRefTable::fSize. protected . TProcessID the current uid is referring to. ; Definition at line 46 of file TRefTable.h. ◆ fUID. UInt_t TRefTable::fUID. protected . default size for a new PID array ,MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:5830,Integrability,message,message,5830,"t;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:6371,Integrability,message,message,6371,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:7573,Integrability,message,message,7573,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:10806,Integrability,message,message,10806," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TRefTable * GetRefTable ();  Static function returning the current TRefTable. ;  ; static void SetRefTable (TRefTable *table);  Static functi",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:11179,Integrability,message,message,11179," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TRefTable * GetRefTable ();  Static function returning the current TRefTable. ;  ; static void SetRefTable (TRefTable *table);  Static function setting the current TRefTable. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object sta",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:1772,Modifiability,inherit,inherited,1772," entry specific information is stored (read) by FillBuffer (ReadBuffer). For each referenced object the object's fUniqueID and the referencing TRef::fPID is stored (to allow the TRefTable to autoload references created by different processes).; non-entry specific, i.e. global information is stored (read) by the Streamer function. This comprises all members marked as persistent. As TObject::fUniqueID is only unique for a given TProcessID, a table of unique IDs is kept for each used TProcessID. There is no natural order of TProcessIDs, so TRefTable stores a vector of the TGUID of all known TProcessIDs in fProcessGUIDs; the index of a TProcessID in this vector defines the index of the auto-loading info in fParentIDs for that TProcessID. The mapping of TProcessID* to index is cached for quick non-persistent lookup. ; Definition at line 35 of file TRefTable.h. Public Types; enum  EStatusBits { kHaveWarnedReadingOld = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRefTable ();  Default constructor for I/O. ;  ;  TRefTable (const TRefTable &)=delete;  ;  TRefTable (TObject *owner, Int_t size);  Create a TRefTable with initial size. ;  ; virtual ~TRefTable ();  Destructor. ;  ; virtual Int_t Add (Int_t uid, TProcessID *context=nullptr);  Add a new uid to the table. ;  ; void Clear (Option_t *="""") override;  Clear all entries in the table. ;  ; v",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:4102,Modifiability,inherit,inherited,4102,"wner () const;  ; TObject * GetParent (Int_t uid, TProcessID *context=nullptr) const;  Return object corresponding to uid. ;  ; TObjArray * GetParents () const;  ; Int_t GetSize (Int_t pid) const;  ; UInt_t GetUID () const;  ; TProcessID * GetUIDContext () const;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This function is called by TRef::Streamer or TStreamerInfo::ReadBuffer when reading a reference. ;  ; TRefTable & operator= (const TRefTable &)=delete;  ; virtual void ReadBuffer (TBuffer &b);  Fill buffer b with the fN elements in fParentdIDs. ;  ; virtual void Reset (Option_t *="""");  Clear all entries in the table. ;  ; virtual Int_t SetParent (const TObject *parent, Int_t branchID);  – Set current parent object, typically a branch of a tree. ;  ; virtual void SetUID (UInt_t uid, TProcessID *context=nullptr);  ; void Streamer (TBuffer &) override;  Stream an object of class TRefTable. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; vi",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:5460,Modifiability,inherit,inheritance,5460,""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:7671,Modifiability,inherit,inherits,7671,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:7788,Modifiability,inherit,inherits,7788,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:11867,Modifiability,inherit,inherited,11867,"s in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TRefTable * GetRefTable ();  Static function returning the current TRefTable. ;  ; static void SetRefTable (TRefTable *table);  Static function setting the current TRefTable. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t AddInternalIdxForPID (TProcessID *procid);  Add the internal index for fProcessIDs, fAllocSize, etc given a PID. ;  ; virtual Int_t ExpandForIID (Int_t iid, Int_t newsize);  Expand fParentIDs to newsize for internel ProcessID index iid. ;  ; void ExpandPIDs (Int_t numpids);  Expand the arrays of managed PIDs. ;  ; Int_t FindPIDGUID (const char *guid) const;  Get fProcessGUIDs' index of the TProcessID with GUID guid. ;  ; Int_t GetInternalIdxForPID (Int_t pid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ; Int_t GetInternalIdxForPID (TProcessID *proci",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:13073,Modifiability,inherit,inherited,13073,"jectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t AddInternalIdxForPID (TProcessID *procid);  Add the internal index for fProcessIDs, fAllocSize, etc given a PID. ;  ; virtual Int_t ExpandForIID (Int_t iid, Int_t newsize);  Expand fParentIDs to newsize for internel ProcessID index iid. ;  ; void ExpandPIDs (Int_t numpids);  Expand the arrays of managed PIDs. ;  ; Int_t FindPIDGUID (const char *guid) const;  Get fProcessGUIDs' index of the TProcessID with GUID guid. ;  ; Int_t GetInternalIdxForPID (Int_t pid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ; Int_t GetInternalIdxForPID (TProcessID *procid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fAllocSize;  number of known ProcessIDs ;  ; Int_t fDefaultSize;  current parent ID in fParents (latest call to SetParent) ;  ; std::vector< Int_t > fMapPIDtoInternal;  ; Int_t * fN;  [fNumPIDs] allocated size of array fParentIDs for each ProcessID ;  ; Int_t fNumPIDs;  ; TObject * fOwner;  ; Int_t fParentID;  [fNumPIDs][fAllocSize] array of Parent IDs ;  ; Int_t ** fParentIDs;  [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ;  ; TObjArray * fParents;  ; std::vector< std::string > fProcessGUIDs;  ; Int_t fSize;  TProcessID the current uid is referring to. ;  ; UInt_t fUID;  default size for a new PID array ;  ; TProcessID * fUIDContext;  Current uid (set by TRef::GetObject) ;  . Static Protected Attributes; static TRefTable * fgRefTable = nullptr;  cache of pid to index in fProcessGUIDs ;  . Additional ",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:14169,Modifiability,inherit,inherited,14169," const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fAllocSize;  number of known ProcessIDs ;  ; Int_t fDefaultSize;  current parent ID in fParents (latest call to SetParent) ;  ; std::vector< Int_t > fMapPIDtoInternal;  ; Int_t * fN;  [fNumPIDs] allocated size of array fParentIDs for each ProcessID ;  ; Int_t fNumPIDs;  ; TObject * fOwner;  ; Int_t fParentID;  [fNumPIDs][fAllocSize] array of Parent IDs ;  ; Int_t ** fParentIDs;  [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ;  ; TObjArray * fParents;  ; std::vector< std::string > fProcessGUIDs;  ; Int_t fSize;  TProcessID the current uid is referring to. ;  ; UInt_t fUID;  default size for a new PID array ;  ; TProcessID * fUIDContext;  Current uid (set by TRef::GetObject) ;  . Static Protected Attributes; static TRefTable * fgRefTable = nullptr;  cache of pid to index in fProcessGUIDs ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefTable.h>. Inheritance diagram for TRefTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TRefTable::EStatusBits. EnumeratorkHaveWarnedReadingOld . Definition at line 62 of file TRefTable.h. Constructor & Destructor Documentation. ◆ TRefTable() [1/3]. TRefTable::TRefTable ; (; ). Default constructor for I/O. ; Definition at line 52 of file TRefTable.cxx. ◆ TRefTable() [2/3]. TRefTable::TRefTable ; (; TObject * ; owner, . Int_t ; size . ). Create a TRefTable with initial size. ; Definition at line 61 of file TRefTable.cxx. ◆ ~TRefTable(). TRefTable::~TRefTable ; (; ). virtual . Destructor. ; Definition at line 71 of file TRefTable.cxx. ◆ TRefTable() [3/3]. TRefTable::TRefTable ; (; const TRefTable & ; ). delete . Member Function Documentation. ◆ Add(). Int_t TRefTable::Add ; (; Int_t ; uid, . TProcessID * ; co",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:715,Performance,load,loaded,715,". ROOT: TRefTable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TRefTable Class ReferenceCore ROOT classes » Containers. ; A TRefTable maintains the association between a referenced object and the parent object supporting this referenced object. ; The parent object is typically a branch of a TTree. For each object referenced in a TTree entry, the corresponding entry in the TTree's TBranchRef::fRefTable contains the index of the branch that needs to be loaded to bring the object into memory.; Persistency of a TRefTable is split into two parts:; entry specific information is stored (read) by FillBuffer (ReadBuffer). For each referenced object the object's fUniqueID and the referencing TRef::fPID is stored (to allow the TRefTable to autoload references created by different processes).; non-entry specific, i.e. global information is stored (read) by the Streamer function. This comprises all members marked as persistent. As TObject::fUniqueID is only unique for a given TProcessID, a table of unique IDs is kept for each used TProcessID. There is no natural order of TProcessIDs, so TRefTable stores a vector of the TGUID of all known TProcessIDs in fProcessGUIDs; the index of a TProcessID in this vector defines the index of the auto-loading info in fParentIDs for that TProcessID. The mapping of TProcessID* to index is cached for quick non-persistent lookup. ; Definition at line 35 of file TRefTable.h. Public Types; enum  EStatusBits { kHaveWarnedReadingOld = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite =",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:1504,Performance,load,loading,1504,"a referenced object and the parent object supporting this referenced object. ; The parent object is typically a branch of a TTree. For each object referenced in a TTree entry, the corresponding entry in the TTree's TBranchRef::fRefTable contains the index of the branch that needs to be loaded to bring the object into memory.; Persistency of a TRefTable is split into two parts:; entry specific information is stored (read) by FillBuffer (ReadBuffer). For each referenced object the object's fUniqueID and the referencing TRef::fPID is stored (to allow the TRefTable to autoload references created by different processes).; non-entry specific, i.e. global information is stored (read) by the Streamer function. This comprises all members marked as persistent. As TObject::fUniqueID is only unique for a given TProcessID, a table of unique IDs is kept for each used TProcessID. There is no natural order of TProcessIDs, so TRefTable stores a vector of the TGUID of all known TProcessIDs in fProcessGUIDs; the index of a TProcessID in this vector defines the index of the auto-loading info in fParentIDs for that TProcessID. The mapping of TProcessID* to index is cached for quick non-persistent lookup. ; Definition at line 35 of file TRefTable.h. Public Types; enum  EStatusBits { kHaveWarnedReadingOld = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRefTa",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:1591,Performance,cache,cached,1591," TTree entry, the corresponding entry in the TTree's TBranchRef::fRefTable contains the index of the branch that needs to be loaded to bring the object into memory.; Persistency of a TRefTable is split into two parts:; entry specific information is stored (read) by FillBuffer (ReadBuffer). For each referenced object the object's fUniqueID and the referencing TRef::fPID is stored (to allow the TRefTable to autoload references created by different processes).; non-entry specific, i.e. global information is stored (read) by the Streamer function. This comprises all members marked as persistent. As TObject::fUniqueID is only unique for a given TProcessID, a table of unique IDs is kept for each used TProcessID. There is no natural order of TProcessIDs, so TRefTable stores a vector of the TGUID of all known TProcessIDs in fProcessGUIDs; the index of a TProcessID in this vector defines the index of the auto-loading info in fParentIDs for that TProcessID. The mapping of TProcessID* to index is cached for quick non-persistent lookup. ; Definition at line 35 of file TRefTable.h. Public Types; enum  EStatusBits { kHaveWarnedReadingOld = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRefTable ();  Default constructor for I/O. ;  ;  TRefTable (const TRefTable &)=delete;  ;  TRefTable (TObject *owner, Int_t size);  Create a TRefTable with initial size",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:14078,Performance,cache,cache,14078,"Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fAllocSize;  number of known ProcessIDs ;  ; Int_t fDefaultSize;  current parent ID in fParents (latest call to SetParent) ;  ; std::vector< Int_t > fMapPIDtoInternal;  ; Int_t * fN;  [fNumPIDs] allocated size of array fParentIDs for each ProcessID ;  ; Int_t fNumPIDs;  ; TObject * fOwner;  ; Int_t fParentID;  [fNumPIDs][fAllocSize] array of Parent IDs ;  ; Int_t ** fParentIDs;  [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ;  ; TObjArray * fParents;  ; std::vector< std::string > fProcessGUIDs;  ; Int_t fSize;  TProcessID the current uid is referring to. ;  ; UInt_t fUID;  default size for a new PID array ;  ; TProcessID * fUIDContext;  Current uid (set by TRef::GetObject) ;  . Static Protected Attributes; static TRefTable * fgRefTable = nullptr;  cache of pid to index in fProcessGUIDs ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefTable.h>. Inheritance diagram for TRefTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TRefTable::EStatusBits. EnumeratorkHaveWarnedReadingOld . Definition at line 62 of file TRefTable.h. Constructor & Destructor Documentation. ◆ TRefTable() [1/3]. TRefTable::TRefTable ; (; ). Default constructor for I/O. ; Definition at line 52 of file TRefTable.cxx. ◆ TRefTable() [2/3]. TRefTable::TRefTable ; (; TObject * ; owner, . Int_t ; size . ). Create a TRefTable with initial size. ; Definition at line 61 of file TRefTable.cxx. ◆ ~TRefTable(). TRefTable::~TRefTable ; (; ). virtual . Destructor. ; Definition at line 71 of file TRefTable.cxx. ◆ TRefTable() [3/3]. TRefTable::TRefTable ; (; const TRefTabl",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:21528,Performance,cache,cache,21528,"efTable. ; Definition at line 383 of file TRefTable.cxx. ◆ SetUID(). virtual void TRefTable::SetUID ; (; UInt_t ; uid, . TProcessID * ; context = nullptr . ). inlinevirtual . Definition at line 91 of file TRefTable.h. ◆ Streamer(). void TRefTable::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TRefTable. ; Reimplemented from TObject.; Definition at line 391 of file TRefTable.cxx. ◆ StreamerNVirtual(). void TRefTable::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 93 of file TRefTable.h. Member Data Documentation. ◆ fAllocSize. Int_t* TRefTable::fAllocSize. protected . number of known ProcessIDs ; Definition at line 39 of file TRefTable.h. ◆ fDefaultSize. Int_t TRefTable::fDefaultSize. protected . current parent ID in fParents (latest call to SetParent) ; Definition at line 43 of file TRefTable.h. ◆ fgRefTable. TRefTable * TRefTable::fgRefTable = nullptr. staticprotected . cache of pid to index in fProcessGUIDs ; Definition at line 51 of file TRefTable.h. ◆ fMapPIDtoInternal. std::vector<Int_t> TRefTable::fMapPIDtoInternal. protected . Definition at line 50 of file TRefTable.h. ◆ fN. Int_t* TRefTable::fN. protected . [fNumPIDs] allocated size of array fParentIDs for each ProcessID ; Definition at line 40 of file TRefTable.h. ◆ fNumPIDs. Int_t TRefTable::fNumPIDs. protected . Definition at line 38 of file TRefTable.h. ◆ fOwner. TObject* TRefTable::fOwner. protected . Definition at line 48 of file TRefTable.h. ◆ fParentID. Int_t TRefTable::fParentID. protected . [fNumPIDs][fAllocSize] array of Parent IDs ; Definition at line 42 of file TRefTable.h. ◆ fParentIDs. Int_t** TRefTable::fParentIDs. protected . [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ; Definition at line 41 of file TRefTable.h. ◆ fParents. TObjArray* TRefTable::fParents. protected . Definition at line 47 of file TRefTable.h. ◆ fProcessGUIDs. std::vector<std::string> TRefTable::fProcessGUIDs. prot",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:7302,Security,hash,hash,7302," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:12734,Usability,guid,guid,12734,"etRefTable (TRefTable *table);  Static function setting the current TRefTable. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t AddInternalIdxForPID (TProcessID *procid);  Add the internal index for fProcessIDs, fAllocSize, etc given a PID. ;  ; virtual Int_t ExpandForIID (Int_t iid, Int_t newsize);  Expand fParentIDs to newsize for internel ProcessID index iid. ;  ; void ExpandPIDs (Int_t numpids);  Expand the arrays of managed PIDs. ;  ; Int_t FindPIDGUID (const char *guid) const;  Get fProcessGUIDs' index of the TProcessID with GUID guid. ;  ; Int_t GetInternalIdxForPID (Int_t pid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ; Int_t GetInternalIdxForPID (TProcessID *procid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fAllocSize;  number of known ProcessIDs ;  ; Int_t fDefaultSize;  current parent ID in fParents (latest call to SetParent) ;  ; std::vector< Int_t > fMapPIDtoInternal;  ; Int_t * fN;  [fNumPIDs] allocated size of array fParentIDs for each ProcessID ;  ; Int_t fNumPIDs;  ; TObject * fOwner;  ; Int_t fParentID;  [fNumPIDs][fAllocSize] array of Parent IDs ;  ; Int_t ** fParentIDs;  [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ;  ;",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:12801,Usability,guid,guid,12801,"etRefTable (TRefTable *table);  Static function setting the current TRefTable. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t AddInternalIdxForPID (TProcessID *procid);  Add the internal index for fProcessIDs, fAllocSize, etc given a PID. ;  ; virtual Int_t ExpandForIID (Int_t iid, Int_t newsize);  Expand fParentIDs to newsize for internel ProcessID index iid. ;  ; void ExpandPIDs (Int_t numpids);  Expand the arrays of managed PIDs. ;  ; Int_t FindPIDGUID (const char *guid) const;  Get fProcessGUIDs' index of the TProcessID with GUID guid. ;  ; Int_t GetInternalIdxForPID (Int_t pid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ; Int_t GetInternalIdxForPID (TProcessID *procid) const;  Get the index for fProcessIDs, fAllocSize, etc given a PID. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fAllocSize;  number of known ProcessIDs ;  ; Int_t fDefaultSize;  current parent ID in fParents (latest call to SetParent) ;  ; std::vector< Int_t > fMapPIDtoInternal;  ; Int_t * fN;  [fNumPIDs] allocated size of array fParentIDs for each ProcessID ;  ; Int_t fNumPIDs;  ; TObject * fOwner;  ; Int_t fParentID;  [fNumPIDs][fAllocSize] array of Parent IDs ;  ; Int_t ** fParentIDs;  [fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID ;  ;",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:17234,Usability,guid,guid,17234,"c const char * TRefTable::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 93 of file TRefTable.h. ◆ Expand(). Int_t TRefTable::Expand ; (; Int_t ; pid, . Int_t ; newsize . ). virtual . Expand fParentIDs to newsize for ProcessID pid. ; Definition at line 157 of file TRefTable.cxx. ◆ ExpandForIID(). Int_t TRefTable::ExpandForIID ; (; Int_t ; iid, . Int_t ; newsize . ). protectedvirtual . Expand fParentIDs to newsize for internel ProcessID index iid. ; Definition at line 167 of file TRefTable.cxx. ◆ ExpandPIDs(). void TRefTable::ExpandPIDs ; (; Int_t ; numpids). protected . Expand the arrays of managed PIDs. ; Definition at line 193 of file TRefTable.cxx. ◆ FillBuffer(). void TRefTable::FillBuffer ; (; TBuffer & ; b). virtual . Fill buffer b with the fN elements in fParentdIDs. ; This function is called by TBranchRef::FillLeaves. ; Definition at line 225 of file TRefTable.cxx. ◆ FindPIDGUID(). Int_t TRefTable::FindPIDGUID ; (; const char * ; guid); const. protected . Get fProcessGUIDs' index of the TProcessID with GUID guid. ; Definition at line 238 of file TRefTable.cxx. ◆ GetInternalIdxForPID() [1/2]. Int_t TRefTable::GetInternalIdxForPID ; (; Int_t ; pid); const. protected . Get the index for fProcessIDs, fAllocSize, etc given a PID. ; Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID ; Definition at line 278 of file TRefTable.cxx. ◆ GetInternalIdxForPID() [2/2]. Int_t TRefTable::GetInternalIdxForPID ; (; TProcessID * ; procid); const. protected . Get the index for fProcessIDs, fAllocSize, etc given a PID. ; Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID ; Definition at line 269 of file TRefTable.cxx. ◆ GetN(). Int_t TRefTable::GetN ; (; Int_t ; pid); const. inline . Definition at line 80 of file TRefTable.h. ◆ GetNumPIDs(). Int_t TRefTable::GetNumPIDs ; (; ); const. inline . Definition at line 78 of file TRefTable.h. ◆ GetOwner(). TObject * TRefTable::GetOwner ; (; ); const. inline . ",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRefTable.html:17313,Usability,guid,guid,17313," of the file containing the class declaration ; Definition at line 93 of file TRefTable.h. ◆ Expand(). Int_t TRefTable::Expand ; (; Int_t ; pid, . Int_t ; newsize . ). virtual . Expand fParentIDs to newsize for ProcessID pid. ; Definition at line 157 of file TRefTable.cxx. ◆ ExpandForIID(). Int_t TRefTable::ExpandForIID ; (; Int_t ; iid, . Int_t ; newsize . ). protectedvirtual . Expand fParentIDs to newsize for internel ProcessID index iid. ; Definition at line 167 of file TRefTable.cxx. ◆ ExpandPIDs(). void TRefTable::ExpandPIDs ; (; Int_t ; numpids). protected . Expand the arrays of managed PIDs. ; Definition at line 193 of file TRefTable.cxx. ◆ FillBuffer(). void TRefTable::FillBuffer ; (; TBuffer & ; b). virtual . Fill buffer b with the fN elements in fParentdIDs. ; This function is called by TBranchRef::FillLeaves. ; Definition at line 225 of file TRefTable.cxx. ◆ FindPIDGUID(). Int_t TRefTable::FindPIDGUID ; (; const char * ; guid); const. protected . Get fProcessGUIDs' index of the TProcessID with GUID guid. ; Definition at line 238 of file TRefTable.cxx. ◆ GetInternalIdxForPID() [1/2]. Int_t TRefTable::GetInternalIdxForPID ; (; Int_t ; pid); const. protected . Get the index for fProcessIDs, fAllocSize, etc given a PID. ; Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID ; Definition at line 278 of file TRefTable.cxx. ◆ GetInternalIdxForPID() [2/2]. Int_t TRefTable::GetInternalIdxForPID ; (; TProcessID * ; procid); const. protected . Get the index for fProcessIDs, fAllocSize, etc given a PID. ; Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID ; Definition at line 269 of file TRefTable.cxx. ◆ GetN(). Int_t TRefTable::GetN ; (; Int_t ; pid); const. inline . Definition at line 80 of file TRefTable.h. ◆ GetNumPIDs(). Int_t TRefTable::GetNumPIDs ; (; ); const. inline . Definition at line 78 of file TRefTable.h. ◆ GetOwner(). TObject * TRefTable::GetOwner ; (; ); const. inline . Definition at line 81 of file TRefTable.h. ◆ GetParent(). TObject * TRefT",MatchSource.WIKI,doc/master/classTRefTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRefTable.html
https://root.cern/doc/master/classTRegexp.html:2543,Integrability,rout,routine,2543,"irst occurrence of the regexp in string and return the position, or -1 if there is no match. ;  ; virtual TClass * IsA () const;  ; TRegexp & operator= (const char *re);  Assignment operator taking a char* and assigning it to a regexp. ;  ; TRegexp & operator= (const TRegexp &re);  Assignment operator. ;  ; TRegexp & operator= (const TString &re);  Assignment operator taking a TString. ;  ; EStatVal Status ();  Check status of regexp. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; void CopyPattern (const TRegexp &re);  Copy the regular expression pattern. ;  ; void GenPattern (const char *re);  Generate the regular expression pattern. ;  ; const char * MakeWildcard (const char *re);  This routine transforms a wildcarding regular expression into a general regular expression used for pattern matching. ;  . Private Attributes; Pattern_t * fPattern;  ; EStatVal fStat;  . Static Private Attributes; static const unsigned fgMaxpat = 2048;  . #include <TRegexp.h>; Member Enumeration Documentation. ◆ EStatVal. enum TRegexp::EStatVal. EnumeratorkOK ; kIllegal ; kNomem ; kToolong . Definition at line 34 of file TRegexp.h. Constructor & Destructor Documentation. ◆ TRegexp() [1/3]. TRegexp::TRegexp ; (; const char * ; re, . Bool_t ; wildcard = kFALSE . ). Create a regular expression from the input string. ; If wildcard is true then the input string will first be interpreted as a wildcard expression by MakeWildcard(), and the result then interpreted as a regular expression. ; Definition at line 54 of file TRegexp.cxx. ◆ TRegexp() [2/3]. TRegexp::TRegexp ; (; const TString & ; re). Create a regular expression from a TString. ; Definition at line 65 of file TRegexp.cxx. ◆ TRegexp() [3/3]. TRegexp::TRegexp ; (; co",MatchSource.WIKI,doc/master/classTRegexp.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRegexp.html
https://root.cern/doc/master/classTRegexp.html:5325,Integrability,rout,routine,5325,"me ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 57 of file TRegexp.h. ◆ GenPattern(). void TRegexp::GenPattern ; (; const char * ; re). private . Generate the regular expression pattern. ; Definition at line 121 of file TRegexp.cxx. ◆ Index(). Ssiz_t TRegexp::Index ; (; const TString & ; string, . Ssiz_t * ; len, . Ssiz_t ; i = 0 . ); const. Find the first occurrence of the regexp in string and return the position, or -1 if there is no match. ; Len is length of the matched string and i is the offset at which the matching should start. Please, see the Warning in the class documentation above. ; Definition at line 213 of file TRegexp.cxx. ◆ IsA(). virtual TClass * TRegexp::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 57 of file TRegexp.h. ◆ MakeWildcard(). const char * TRegexp::MakeWildcard ; (; const char * ; re). private . This routine transforms a wildcarding regular expression into a general regular expression used for pattern matching. ; When using wildcards the regular expression is assumed to be preceded by a ""^"" (BOL) and terminated by a ""$"" (EOL). Also, all ""*""'s and ""?""'s (closures) are assumed to be preceded by a ""."" (i.e. any character, except ""/""'s) and all .'s are escaped (so *.ps is different from *.eps). The special treatment of ""/"" allows the easy matching of pathnames, e.g. ""*.root"" will match ""aap.root"", but not ""pipo/aap.root"". ; Definition at line 148 of file TRegexp.cxx. ◆ operator=() [1/3]. TRegexp & TRegexp::operator= ; (; const char * ; re). Assignment operator taking a char* and assigning it to a regexp. ; Definition at line 101 of file TRegexp.cxx. ◆ operator=() [2/3]. TRegexp & TRegexp::operator= ; (; const TRegexp & ; re). Assignment operator. ; Definition at line 89 of file TRegexp.cxx. ◆ operator=() [3/3]. TRegexp & TRegexp::operator= ; (; const TString & ; re). Assignment operator taking a TString. ; Definition at line 111 of file ",MatchSource.WIKI,doc/master/classTRegexp.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRegexp.html
https://root.cern/doc/master/classTRemoteObject.html:4770,Availability,error,error,4770,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:4859,Availability,error,error,4859,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:5014,Availability,error,error,5014,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:5311,Availability,error,error,5311,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:9254,Availability,error,error,9254,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:353,Integrability,protocol,protocol,353,". ROOT: TRemoteObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TRemoteObject Class ReferenceCore ROOT classes » Base ROOT classes. ; The TRemoteObject class provides protocol for browsing ROOT objects from a remote ROOT session. ; It contains information on the real remote object as:. Object Properties (i.e. file stat if the object is a TSystemFile); Object Name; Class Name; TKey Object Name (if the remote object is a TKey); TKey Class Name (if the remote object is a TKey); Remote object address . Definition at line 34 of file TRemoteObject.h. Public Member Functions;  TRemoteObject ();  Create a remote object. ;  ;  TRemoteObject (const char *name, const char *title, const char *classname);  Create a remote object. ;  ; virtual ~TRemoteObject ();  Delete remote object. ;  ; TList * Browse ();  Browse OS system directories. ;  ; void Browse (TBrowser *b) override;  Browse remote object. ;  ; const char * GetClassName () const;  ; Bool_t GetFileStat (FileStat_t *sbuf);  Get remote file status. ;  ; const char * GetKeyClassName () const;  ; const char * GetKeyObjectName () const;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void SetFolder (Bool_t isFolder);  ; void SetKeyClassName (const char *name);  ; void SetKeyObjectName (const char *name);  ; void SetRemoteAddress (Longptr_t addr);  ; void Streamer (TBuffer &) override;  Remote object streamer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:4776,Integrability,message,message,4776,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:5317,Integrability,message,message,5317,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:6307,Integrability,message,message,6307,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:9260,Integrability,message,message,9260,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:9633,Integrability,message,message,9633," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:1787,Modifiability,inherit,inherited,1787,"  ;  TRemoteObject (const char *name, const char *title, const char *classname);  Create a remote object. ;  ; virtual ~TRemoteObject ();  Delete remote object. ;  ; TList * Browse ();  Browse OS system directories. ;  ; void Browse (TBrowser *b) override;  Browse remote object. ;  ; const char * GetClassName () const;  ; Bool_t GetFileStat (FileStat_t *sbuf);  Get remote file status. ;  ; const char * GetKeyClassName () const;  ; const char * GetKeyObjectName () const;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void SetFolder (Bool_t isFolder);  ; void SetKeyClassName (const char *name);  ; void SetKeyObjectName (const char *name);  ; void SetRemoteAddress (Longptr_t addr);  ; void Streamer (TBuffer &) override;  Remote object streamer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:3415,Modifiability,inherit,inherited,3415,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:4406,Modifiability,inherit,inheritance,4406,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:6405,Modifiability,inherit,inherits,6405,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:6522,Modifiability,inherit,inherits,6522,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:10134,Modifiability,inherit,inherited,10134,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fClassName;  ; FileStat_t fFileStat;  ; Bool_t fIsFolder;  ; TString fKeyClassName;  ; TString fKeyObjectName;  ; Long64_t fRemoteAddress;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsi",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:10344,Modifiability,inherit,inherited,10344,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fClassName;  ; FileStat_t fFileStat;  ; Bool_t fIsFolder;  ; TString fKeyClassName;  ; TString fKeyObjectName;  ; Long64_t fRemoteAddress;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsi",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:11024,Modifiability,inherit,inherited,11024,"lass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fClassName;  ; FileStat_t fFileStat;  ; Bool_t fIsFolder;  ; TString fKeyClassName;  ; TString fKeyObjectName;  ; Long64_t fRemoteAddress;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const cha",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:11128,Modifiability,inherit,inherited,11128,"ic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fClassName;  ; FileStat_t fFileStat;  ; Bool_t fIsFolder;  ; TString fKeyClassName;  ; TString fKeyObjectName;  ; Long64_t fRemoteAddress;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRemoteObject.h>. Inheritance diagram for TRemoteObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:11769,Modifiability,inherit,inherited,11769,"_t fFileStat;  ; Bool_t fIsFolder;  ; TString fKeyClassName;  ; TString fKeyObjectName;  ; Long64_t fRemoteAddress;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRemoteObject.h>. Inheritance diagram for TRemoteObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRemoteObject() [1/2]. TRemoteObject::TRemoteObject ; (; ). Create a remote object. ; Definition at line 42 of file TRemoteObject.cxx. ◆ TRemoteObject() [2/2]. TRemoteObject::TRemoteObject ; (; const char * ; name, . const char * ; title, . const char * ; classname . ). Create a remote object. ; Definition at line 51 of file TRemoteObject.cxx. ◆ ~TRemoteObject(). TRemoteObject::~TRemoteObject ; (; ). virtual . Delete remote object. ; Definition at line 70 of file TRemoteObject.cxx. Member Function Documentation. ◆ Browse() [1/2]. TList * TRemoteObject::Browse ; (; ). Browse OS system directories. ; Definition at line 13",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:11868,Modifiability,inherit,inherited,11868,"_t fFileStat;  ; Bool_t fIsFolder;  ; TString fKeyClassName;  ; TString fKeyObjectName;  ; Long64_t fRemoteAddress;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRemoteObject.h>. Inheritance diagram for TRemoteObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRemoteObject() [1/2]. TRemoteObject::TRemoteObject ; (; ). Create a remote object. ; Definition at line 42 of file TRemoteObject.cxx. ◆ TRemoteObject() [2/2]. TRemoteObject::TRemoteObject ; (; const char * ; name, . const char * ; title, . const char * ; classname . ). Create a remote object. ; Definition at line 51 of file TRemoteObject.cxx. ◆ ~TRemoteObject(). TRemoteObject::~TRemoteObject ; (; ). virtual . Delete remote object. ; Definition at line 70 of file TRemoteObject.cxx. Member Function Documentation. ◆ Browse() [1/2]. TList * TRemoteObject::Browse ; (; ). Browse OS system directories. ; Definition at line 13",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRemoteObject.html:2655,Security,hash,hash,2655,"(TBuffer &) override;  Remote object streamer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTRemoteObject.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRemoteObject.html
https://root.cern/doc/master/classTRepeatTimer.html:4688,Availability,error,error,4688,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:4777,Availability,error,error,4777,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:4932,Availability,error,error,4932,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:5229,Availability,error,error,5229,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:9664,Availability,error,error,9664," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:4694,Integrability,message,message,4694,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:5235,Integrability,message,message,5235,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:6437,Integrability,message,message,6437,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:9670,Integrability,message,message,9670," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:10043,Integrability,message,message,10043," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:486,Modifiability,inherit,inherited,486,". ROOT: TRepeatTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TRepeatTimer Class Reference. . Definition at line 1866 of file TGNumberEntry.cxx. Public Member Functions;  TRepeatTimer (TGRepeatFireButton *button, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void St",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:2459,Modifiability,inherit,inherited,2459,"Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:2927,Modifiability,inherit,inherited,2927,"(TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer ",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:4324,Modifiability,inherit,inheritance,4324,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:6535,Modifiability,inherit,inherits,6535,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:6652,Modifiability,inherit,inherits,6652,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:10350,Modifiability,inherit,inherited,10350," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:12390,Modifiability,inherit,inherited,12390," &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TGRepeatFireButton * fButton;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:13046,Modifiability,inherit,inherited,13046,"ignals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TGRepeatFireButton * fButton;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:13430,Modifiability,inherit,inherited,13430,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:13648,Modifiability,inherit,inherited,13648,"WriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Thi",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:14166,Modifiability,inherit,inherited,14166,"ar * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:15326,Modifiability,inherit,inherited,15326,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:15425,Modifiability,inherit,inherited,15425,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:15636,Modifiability,inherit,inherited,15636,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:15749,Modifiability,inherit,inherited,15749,", const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:16598,Modifiability,inherit,inherited,16598,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TRepeatTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRepeatTimer(). TRepeatTimer::TRepeatTimer ; (; TGRepeatFireButton * ; button, . Long_t ; ms . ). inline . Definition at line 1871 of file TGNumberEntry.cxx. Member Function Documentation. ◆ Notify(). Bool_t TRepeatTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Implements TSysEvtHandler.; Definition at line 1996 of file TGNumberEntry.cxx. Member Data Documentation. ◆ fButton. TGRepeatFireButton* TRepeatTimer::fButton. private . Definition at line 1868 of file TGNumberEntry.cxx. gui/gui/src/TGNumb",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:16801,Modifiability,inherit,inherited,16801,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TRepeatTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRepeatTimer(). TRepeatTimer::TRepeatTimer ; (; TGRepeatFireButton * ; button, . Long_t ; ms . ). inline . Definition at line 1871 of file TGNumberEntry.cxx. Member Function Documentation. ◆ Notify(). Bool_t TRepeatTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Implements TSysEvtHandler.; Definition at line 1996 of file TGNumberEntry.cxx. Member Data Documentation. ◆ fButton. TGRepeatFireButton* TRepeatTimer::fButton. private . Definition at line 1868 of file TGNumberEntry.cxx. gui/gui/src/TGNumb",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:17014,Modifiability,inherit,inherited,17014,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TRepeatTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRepeatTimer(). TRepeatTimer::TRepeatTimer ; (; TGRepeatFireButton * ; button, . Long_t ; ms . ). inline . Definition at line 1871 of file TGNumberEntry.cxx. Member Function Documentation. ◆ Notify(). Bool_t TRepeatTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Implements TSysEvtHandler.; Definition at line 1996 of file TGNumberEntry.cxx. Member Data Documentation. ◆ fButton. TGRepeatFireButton* TRepeatTimer::fButton. private . Definition at line 1868 of file TGNumberEntry.cxx. gui/gui/src/TGNumb",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:2087,Safety,timeout,timeout,2087,"r * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; virtual void Stop ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (co",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRepeatTimer.html:6166,Security,hash,hash,6166," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRepeatTimer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html
https://root.cern/doc/master/classTRint-members.html:3408,Availability,error,error,3408,"ic; Disconnected(const char *)TQObjectinlinevirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EExitOnException enum nameTApplication; EFileBits enum nameTApplication; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; EmitVA(const char *signal_name, Int_t, const T &... params)TQObjectinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTApplication; ExecLogon()TRintprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationstatic; ExitOnException(EExitOnException opt=kExit)TApplication; fAppImpTApplicationprivate; fAppRemoteTApplicationprotected; fArgcTApplicationprivate; fArgvTApplicationprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBackslashContinueTRintprivate; fBitsTObjectprivate; fCaughtSignalTRintprivate; fDefaultPromptTRintprivate; fExitOnExceptionTApplicationprivate; fFilesTApplicationprivate; fgAllSignalsBlockedTQObjectprotectedstatic; fgApplicationsTApplicationprotectedstatic; fgDtorOnlyTObjectprivatestatic; fgGraphInitTApplicationprivatestatic; fgGraphNeededTApplicationprivatestatic; fgObjectStatTObjectprivatestatic; fIdleCommandTApplicationprivate; fIdleTimerTApplicationprivate; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fInputHandlerTRintprivate; fInterruptTRintprivate; fIsRunningTApplicationprivate; fListOfConnectio",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint-members.html:3489,Availability,error,error,3489,"ic; Disconnected(const char *)TQObjectinlinevirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EExitOnException enum nameTApplication; EFileBits enum nameTApplication; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; EmitVA(const char *signal_name, Int_t, const T &... params)TQObjectinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTApplication; ExecLogon()TRintprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationstatic; ExitOnException(EExitOnException opt=kExit)TApplication; fAppImpTApplicationprivate; fAppRemoteTApplicationprotected; fArgcTApplicationprivate; fArgvTApplicationprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBackslashContinueTRintprivate; fBitsTObjectprivate; fCaughtSignalTRintprivate; fDefaultPromptTRintprivate; fExitOnExceptionTApplicationprivate; fFilesTApplicationprivate; fgAllSignalsBlockedTQObjectprotectedstatic; fgApplicationsTApplicationprotectedstatic; fgDtorOnlyTObjectprivatestatic; fgGraphInitTApplicationprivatestatic; fgGraphNeededTApplicationprivatestatic; fgObjectStatTObjectprivatestatic; fIdleCommandTApplicationprivate; fIdleTimerTApplicationprivate; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fInputHandlerTRintprivate; fInterruptTRintprivate; fIsRunningTApplicationprivate; fListOfConnectio",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint-members.html:3617,Availability,error,error,3617,"ic; Disconnected(const char *)TQObjectinlinevirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EExitOnException enum nameTApplication; EFileBits enum nameTApplication; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; EmitVA(const char *signal_name, Int_t, const T &... params)TQObjectinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTApplication; ExecLogon()TRintprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationstatic; ExitOnException(EExitOnException opt=kExit)TApplication; fAppImpTApplicationprivate; fAppRemoteTApplicationprotected; fArgcTApplicationprivate; fArgvTApplicationprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBackslashContinueTRintprivate; fBitsTObjectprivate; fCaughtSignalTRintprivate; fDefaultPromptTRintprivate; fExitOnExceptionTApplicationprivate; fFilesTApplicationprivate; fgAllSignalsBlockedTQObjectprotectedstatic; fgApplicationsTApplicationprotectedstatic; fgDtorOnlyTObjectprivatestatic; fgGraphInitTApplicationprivatestatic; fgGraphNeededTApplicationprivatestatic; fgObjectStatTObjectprivatestatic; fIdleCommandTApplicationprivate; fIdleTimerTApplicationprivate; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fInputHandlerTRintprivate; fInterruptTRintprivate; fIsRunningTApplicationprivate; fListOfConnectio",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint-members.html:9805,Availability,error,error,9805,"; Open()TApplicationinlinevirtual; OpenForumTopic(const TString &type)TApplication; OpenGitHubIssue(const TString &type)TApplication; OpenInBrowser(const TString &url)TApplication; OpenReferenceGuideFor(const TString &strippedClass)TApplication; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TRint &)=deleteTRintprivate; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; ParseRemoteLine(const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script)TApplicationprotectedstatic; Pop()TObjectvirtual; Print(Option_t *option="""") constTObjectvirtual; PrintLogo(Bool_t lite=kFALSE)TRintvirtual; ProcessFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationvirtual; ProcessLine(const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr)TApplicationvirtual; ProcessLineNr(const char *filestem, const char *line, Int_t *error=nullptr)TRintprivate; ProcessRemote(const char *line, Int_t *error=nullptr) overrideTRintprivatevirtual; QuitOpt() constTApplicationinline; Raise()TApplicationinlinevirtual; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RemoveIdleTimer()TApplicationvirtual; ResetBit(UInt_t f)TObjectinline; ReturnFromRun() constTApplicationinline; ReturnPressed(char *text)TApplicationvirtual; Run(Bool_t retrn=kFALSE) overrideTRintvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetEchoMode(Bool_t mode) over",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint-members.html:9917,Availability,error,error,9917,"g &type)TApplication; OpenInBrowser(const TString &url)TApplication; OpenReferenceGuideFor(const TString &strippedClass)TApplication; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TRint &)=deleteTRintprivate; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; ParseRemoteLine(const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script)TApplicationprotectedstatic; Pop()TObjectvirtual; Print(Option_t *option="""") constTObjectvirtual; PrintLogo(Bool_t lite=kFALSE)TRintvirtual; ProcessFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationvirtual; ProcessLine(const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr)TApplicationvirtual; ProcessLineNr(const char *filestem, const char *line, Int_t *error=nullptr)TRintprivate; ProcessRemote(const char *line, Int_t *error=nullptr) overrideTRintprivatevirtual; QuitOpt() constTApplicationinline; Raise()TApplicationinlinevirtual; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RemoveIdleTimer()TApplicationvirtual; ResetBit(UInt_t f)TObjectinline; ReturnFromRun() constTApplicationinline; ReturnPressed(char *text)TApplicationvirtual; Run(Bool_t retrn=kFALSE) overrideTRintvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetEchoMode(Bool_t mode) overrideTRintvirtual; SetIdleTimer(UInt_t idleTimeInSec, const char *command)TApplicationvirtual; SetObjectStat(Bool",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint-members.html:10013,Availability,error,error,10013," TString &strippedClass)TApplication; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TRint &)=deleteTRintprivate; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; ParseRemoteLine(const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script)TApplicationprotectedstatic; Pop()TObjectvirtual; Print(Option_t *option="""") constTObjectvirtual; PrintLogo(Bool_t lite=kFALSE)TRintvirtual; ProcessFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationvirtual; ProcessLine(const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr)TApplicationvirtual; ProcessLineNr(const char *filestem, const char *line, Int_t *error=nullptr)TRintprivate; ProcessRemote(const char *line, Int_t *error=nullptr) overrideTRintprivatevirtual; QuitOpt() constTApplicationinline; Raise()TApplicationinlinevirtual; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RemoveIdleTimer()TApplicationvirtual; ResetBit(UInt_t f)TObjectinline; ReturnFromRun() constTApplicationinline; ReturnPressed(char *text)TApplicationvirtual; Run(Bool_t retrn=kFALSE) overrideTRintvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetEchoMode(Bool_t mode) overrideTRintvirtual; SetIdleTimer(UInt_t idleTimeInSec, const char *command)TApplicationvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetPrompt(const char *newPrompt)TRintvirtual; SetReturnFromRun(Bool_t ret",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint-members.html:10080,Availability,error,error,10080,"ject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TRint &)=deleteTRintprivate; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; ParseRemoteLine(const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script)TApplicationprotectedstatic; Pop()TObjectvirtual; Print(Option_t *option="""") constTObjectvirtual; PrintLogo(Bool_t lite=kFALSE)TRintvirtual; ProcessFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationvirtual; ProcessLine(const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr)TApplicationvirtual; ProcessLineNr(const char *filestem, const char *line, Int_t *error=nullptr)TRintprivate; ProcessRemote(const char *line, Int_t *error=nullptr) overrideTRintprivatevirtual; QuitOpt() constTApplicationinline; Raise()TApplicationinlinevirtual; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RemoveIdleTimer()TApplicationvirtual; ResetBit(UInt_t f)TObjectinline; ReturnFromRun() constTApplicationinline; ReturnPressed(char *text)TApplicationvirtual; Run(Bool_t retrn=kFALSE) overrideTRintvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetEchoMode(Bool_t mode) overrideTRintvirtual; SetIdleTimer(UInt_t idleTimeInSec, const char *command)TApplicationvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetPrompt(const char *newPrompt)TRintvirtual; SetReturnFromRun(Bool_t ret)TApplicationinline; SetSignalHandler(TSignalHandler *sh)TApplicati",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint-members.html:183,Modifiability,inherit,inherited,183,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRint Member List. This is the complete list of members for TRint, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplicationName() constTApplicationinlinevirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; Argc() constTApplicationinline; Argv() constTApplicationinline; Argv(Int_t index) constTApplication; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TRintstatic; Class_Name()TRintstatic; Class_Version()TRintinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearInputFiles()TApplication; Clone(const char *newname="""") constTObjectvirtual; Close(TApplication *app)TApplicationprotectedstatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *rec",MatchSource.WIKI,doc/master/classTRint-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint-members.html
https://root.cern/doc/master/classTRint.html:3285,Availability,avail,available,3285,"tOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; virtual void GetOptions (Int_t *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single comm",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:4058,Availability,error,error,4058,"l when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const char * WorkingDi",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:4215,Availability,error,error,4215,"; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:6872,Availability,error,error,6872,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:6961,Availability,error,error,6961,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:7116,Availability,error,error,7116,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:7413,Availability,error,error,7413,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:11869,Availability,error,error,11869," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:15062,Availability,error,error,15062,"y (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns t",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:15231,Availability,avail,available,15231," ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; s",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:17232,Availability,error,error,17232,"t (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions;  TRint (const TRint &)=delete;  ; void ExecLogon ();  Execute logon macro's. ;  ; TRint & operator= (const TRint &)=delete;  ; Longptr_t ProcessLineNr (const char *filestem, const char *line, Int_t *error=nullptr);  Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ;  ; Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr) override;  Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ;  . Private Attributes; Bool_t fBackslashContinue {};  ; Int_t fCaughtSignal;  ; TString fDefaultPrompt;  ; TFileHandler * fInputHandler;  ; Bool_t fInterrupt;  ; Int_t fNcmd;  ; TString fNonContinuePrompt;  ; char fPrompt [64];  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; ",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:17393,Availability,error,error,17393,"me class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions;  TRint (const TRint &)=delete;  ; void ExecLogon ();  Execute logon macro's. ;  ; TRint & operator= (const TRint &)=delete;  ; Longptr_t ProcessLineNr (const char *filestem, const char *line, Int_t *error=nullptr);  Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ;  ; Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr) override;  Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ;  . Private Attributes; Bool_t fBackslashContinue {};  ; Int_t fCaughtSignal;  ; TString fDefaultPrompt;  ; TFileHandler * fInputHandler;  ; Bool_t fInterrupt;  ; Int_t fNcmd;  ; TString fNonContinuePrompt;  ; char fPrompt [64];  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:25354,Availability,error,error,25354,") trapped in TSystem. ; Specific TApplication implementations may want something different here. ; Reimplemented from TApplication.; Definition at line 704 of file TRint.cxx. ◆ HandleTermInput(). Bool_t TRint::HandleTermInput ; (; ). overridevirtual . Handle input coming from terminal. ; Reimplemented from TApplication.; Definition at line 611 of file TRint.cxx. ◆ Interrupt(). void TRint::Interrupt ; (; ). inline . Definition at line 62 of file TRint.h. ◆ IsA(). TClass * TRint::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TApplication.; Definition at line 67 of file TRint.h. ◆ operator=(). TRint & TRint::operator= ; (; const TRint & ; ). privatedelete . ◆ PrintLogo(). void TRint::PrintLogo ; (; Bool_t ; lite = kFALSE). virtual . Print the ROOT logo on standard output. ; Definition at line 512 of file TRint.cxx. ◆ ProcessLineNr(). Longptr_t TRint::ProcessLineNr ; (; const char * ; filestem, . const char * ; line, . Int_t * ; error = nullptr . ). private . Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ; The user is responsible for incrementing fNcmd, where appropriate, after a call to this function. ; Definition at line 791 of file TRint.cxx. ◆ ProcessRemote(). Longptr_t TRint::ProcessRemote ; (; const char * ; line, . Int_t * ; error = nullptr . ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main ap",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:25706,Availability,error,error,25706,"e TRint.cxx. ◆ Interrupt(). void TRint::Interrupt ; (; ). inline . Definition at line 62 of file TRint.h. ◆ IsA(). TClass * TRint::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TApplication.; Definition at line 67 of file TRint.h. ◆ operator=(). TRint & TRint::operator= ; (; const TRint & ; ). privatedelete . ◆ PrintLogo(). void TRint::PrintLogo ; (; Bool_t ; lite = kFALSE). virtual . Print the ROOT logo on standard output. ; Definition at line 512 of file TRint.cxx. ◆ ProcessLineNr(). Longptr_t TRint::ProcessLineNr ; (; const char * ; filestem, . const char * ; line, . Int_t * ; error = nullptr . ). private . Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ; The user is responsible for incrementing fNcmd, where appropriate, after a call to this function. ; Definition at line 791 of file TRint.cxx. ◆ ProcessRemote(). Longptr_t TRint::ProcessRemote ; (; const char * ; line, . Int_t * ; error = nullptr . ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an er",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:26707,Availability,error,error,26707," ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an error code equal to either the ProcessLine error (if any) or the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 384 of file TRint.cxx. ◆ SetEchoMode(). void TRint::SetEchoMode ; (; Bool_t ; mode). overridevirtual . Set console mode: ; mode = kTRUE - echo input symbols mode = kFALSE - noecho input symbols ; Reimplemented from TApplication.; Definition at line 752 of file TRint.cxx. ◆ SetPrompt(). const char * TRint::SetPrompt ; (; const char * ; newPrompt). virtual . Set a new default prompt. ; It returns the previous prompt. The prompt may contain a d which will be replaced by the commend number. The default prompt is ""root [%d] "". The maximum length of the prompt is 55 characters. To set the prompt in an interactive session do: root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> "") aap> ; Definition at line 595 of file TRint.cxx. ◆ Streamer(). void TRint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject.",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:26750,Availability,error,error,26750," ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an error code equal to either the ProcessLine error (if any) or the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 384 of file TRint.cxx. ◆ SetEchoMode(). void TRint::SetEchoMode ; (; Bool_t ; mode). overridevirtual . Set console mode: ; mode = kTRUE - echo input symbols mode = kFALSE - noecho input symbols ; Reimplemented from TApplication.; Definition at line 752 of file TRint.cxx. ◆ SetPrompt(). const char * TRint::SetPrompt ; (; const char * ; newPrompt). virtual . Set a new default prompt. ; It returns the previous prompt. The prompt may contain a d which will be replaced by the commend number. The default prompt is ""root [%d] "". The maximum length of the prompt is 55 characters. To set the prompt in an interactive session do: root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> "") aap> ; Definition at line 595 of file TRint.cxx. ◆ Streamer(). void TRint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject.",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:27011,Availability,echo,echo,27011," 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an error code equal to either the ProcessLine error (if any) or the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 384 of file TRint.cxx. ◆ SetEchoMode(). void TRint::SetEchoMode ; (; Bool_t ; mode). overridevirtual . Set console mode: ; mode = kTRUE - echo input symbols mode = kFALSE - noecho input symbols ; Reimplemented from TApplication.; Definition at line 752 of file TRint.cxx. ◆ SetPrompt(). const char * TRint::SetPrompt ; (; const char * ; newPrompt). virtual . Set a new default prompt. ; It returns the previous prompt. The prompt may contain a d which will be replaced by the commend number. The default prompt is ""root [%d] "". The maximum length of the prompt is 55 characters. To set the prompt in an interactive session do: root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> "") aap> ; Definition at line 595 of file TRint.cxx. ◆ Streamer(). void TRint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TApplication. ◆ StreamerNVirtual(). void TRint::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 67 of file TRint.h. ◆ TabCompletionHook(). Int_t TRint::TabCompletionHook ; (; char * ; buf, . int * ; pLoc, . std::ostream & ; out . ). overridevirtual ",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:2602,Deployability,install,installation,2602,"tion request to our TTabCom::Hook(). ;  ; virtual void Terminate (int status) override;  Terminate the application. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; virtual void GetOptions (Int_t *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web brows",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:6878,Integrability,message,message,6878,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:7419,Integrability,message,message,7419,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:8621,Integrability,message,message,8621,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle again",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:11875,Integrability,message,message,11875," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:12248,Integrability,message,message,12248," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:22471,Integrability,interface,interface,22471,"ist of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.roo",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:1740,Modifiability,inherit,inherited,1740,"tationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; Bool_t HandleTermInput () override;  Handle input coming from terminal. ;  ; void Interrupt ();  ; TClass * IsA () const override;  ; virtual void PrintLogo (Bool_t lite=kFALSE);  Print the ROOT logo on standard output. ;  ; void Run (Bool_t retrn=kFALSE) override;  Main application eventloop. ;  ; void SetEchoMode (Bool_t mode) override;  Set console mode: ;  ; virtual const char * SetPrompt (const char *newPrompt);  Set a new default prompt. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out) override;  Forward tab completion request to our TTabCom::Hook(). ;  ; virtual void Terminate (int status) override;  Terminate the application. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; virtual void GetOptions (Int_t *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void I",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:5111,Modifiability,inherit,inherited,5111,"r, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:6508,Modifiability,inherit,inheritance,6508,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:8719,Modifiability,inherit,inherits,8719,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality th",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:8836,Modifiability,inherit,inherits,8836,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:12555,Modifiability,inherit,inherited,12555," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:14717,Modifiability,inherit,inherited,14717,"List * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ; ",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:15346,Modifiability,inherit,inherited,15346,"Virtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:15864,Modifiability,inherit,inherited,15864,"tatic function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:17555,Modifiability,variab,variable,17555,"t char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions;  TRint (const TRint &)=delete;  ; void ExecLogon ();  Execute logon macro's. ;  ; TRint & operator= (const TRint &)=delete;  ; Longptr_t ProcessLineNr (const char *filestem, const char *line, Int_t *error=nullptr);  Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ;  ; Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr) override;  Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ;  . Private Attributes; Bool_t fBackslashContinue {};  ; Int_t fCaughtSignal;  ; TString fDefaultPrompt;  ; TFileHandler * fInputHandler;  ; Bool_t fInterrupt;  ; Int_t fNcmd;  ; TString fNonContinuePrompt;  ; char fPrompt [64];  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   k",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:17898,Modifiability,inherit,inherited,17898,"e logon macro's. ;  ; TRint & operator= (const TRint &)=delete;  ; Longptr_t ProcessLineNr (const char *filestem, const char *line, Int_t *error=nullptr);  Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ;  ; Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr) override;  Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ;  . Private Attributes; Bool_t fBackslashContinue {};  ; Int_t fCaughtSignal;  ; TString fDefaultPrompt;  ; TFileHandler * fInputHandler;  ; Bool_t fInterrupt;  ; Int_t fNcmd;  ; TString fNonContinuePrompt;  ; char fPrompt [64];  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") s",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:18163,Modifiability,inherit,inherited,18163,"e logon macro's. ;  ; TRint & operator= (const TRint &)=delete;  ; Longptr_t ProcessLineNr (const char *filestem, const char *line, Int_t *error=nullptr);  Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ;  ; Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr) override;  Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ;  . Private Attributes; Bool_t fBackslashContinue {};  ; Int_t fCaughtSignal;  ; TString fDefaultPrompt;  ; TFileHandler * fInputHandler;  ; Bool_t fInterrupt;  ; Int_t fNcmd;  ; TString fNonContinuePrompt;  ; char fPrompt [64];  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") s",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:18804,Modifiability,inherit,inherited,18804,"ed Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Memb",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:18903,Modifiability,inherit,inherited,18903,"ed Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Memb",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:19674,Modifiability,inherit,inherited,19674,"kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *s",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:19885,Modifiability,inherit,inherited,19885,"eriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t Connect",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:20030,Modifiability,inherit,inherited,20030,"eriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t Connect",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:20558,Modifiability,inherit,inherited,20558,"rotected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connecti",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:21407,Modifiability,inherit,inherited,21407,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:21488,Modifiability,inherit,inherited,21488,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:21701,Modifiability,inherit,inherited,21701,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:21803,Modifiability,inherit,inherited,21803,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:22531,Modifiability,inherit,inheritance,22531,"ist of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.roo",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:25888,Modifiability,variab,variable,25888,"rtual . ReturnsTClass describing current object ; Reimplemented from TApplication.; Definition at line 67 of file TRint.h. ◆ operator=(). TRint & TRint::operator= ; (; const TRint & ; ). privatedelete . ◆ PrintLogo(). void TRint::PrintLogo ; (; Bool_t ; lite = kFALSE). virtual . Print the ROOT logo on standard output. ; Definition at line 512 of file TRint.cxx. ◆ ProcessLineNr(). Longptr_t TRint::ProcessLineNr ; (; const char * ; filestem, . const char * ; line, . Int_t * ; error = nullptr . ). private . Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ; The user is responsible for incrementing fNcmd, where appropriate, after a call to this function. ; Definition at line 791 of file TRint.cxx. ◆ ProcessRemote(). Longptr_t TRint::ProcessRemote ; (; const char * ; line, . Int_t * ; error = nullptr . ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an error code equal to either the ProcessLine error (if any) or the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 384",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:28371,Modifiability,variab,variable,28371,"he default prompt is ""root [%d] "". The maximum length of the prompt is 55 characters. To set the prompt in an interactive session do: root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> "") aap> ; Definition at line 595 of file TRint.cxx. ◆ Streamer(). void TRint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TApplication. ◆ StreamerNVirtual(). void TRint::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 67 of file TRint.h. ◆ TabCompletionHook(). Int_t TRint::TabCompletionHook ; (; char * ; buf, . int * ; pLoc, . std::ostream & ; out . ). overridevirtual . Forward tab completion request to our TTabCom::Hook(). ; Reimplemented from TApplication.; Definition at line 827 of file TRint.cxx. ◆ Terminate(). void TRint::Terminate ; (; int ; status). overridevirtual . Terminate the application. ; Reset the terminal to sane mode and call the logoff macro defined via Rint.Logoff environment variable. NoteThe function does not return, unless the class has been told to return from Run(), by a call to SetReturnFromRun(). ; Reimplemented from TApplication.; Definition at line 722 of file TRint.cxx. Member Data Documentation. ◆ fBackslashContinue. Bool_t TRint::fBackslashContinue {}. private . Definition at line 41 of file TRint.h. ◆ fCaughtSignal. Int_t TRint::fCaughtSignal. private . Definition at line 39 of file TRint.h. ◆ fDefaultPrompt. TString TRint::fDefaultPrompt. private . Definition at line 35 of file TRint.h. ◆ fInputHandler. TFileHandler* TRint::fInputHandler. private . Definition at line 40 of file TRint.h. ◆ fInterrupt. Bool_t TRint::fInterrupt. private . Definition at line 38 of file TRint.h. ◆ fNcmd. Int_t TRint::fNcmd. private . Definition at line 34 of file TRint.h. ◆ fNonContinuePrompt. TString TRint::fNonContinuePrompt. private . Definition at line 36 of file TRint.h. ◆ fPrompt. char TRint::fPrompt[64]. private . Definition at line 37 of file TRint.h. ",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:3725,Performance,load,loads,3725,"void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the comma",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:2731,Safety,timeout,timeout,2731,"rminate the application. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; virtual void GetOptions (Int_t *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:8350,Security,hash,hash,8350," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:22596,Security,access,access,22596,"ist of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRint.h>. Inheritance diagram for TRint:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRint() [1/2]. TRint::TRint ; (; const TRint & ; ). privatedelete . ◆ TRint() [2/2]. TRint::TRint ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0, . Bool_t ; noLogo = kFALSE, . Bool_t ; exitOnUnknownArgs = kFALSE . ). Create an application environment. ; The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.roo",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:1099,Testability,log,logo,1099,". Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TRint Class Reference. . Definition at line 31 of file TRint.h. Public Member Functions;  TRint (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0, Bool_t noLogo=kFALSE, Bool_t exitOnUnknownArgs=kFALSE);  Create an application environment. ;  ; virtual ~TRint ();  Destructor. ;  ; TFileHandler * GetInputHandler ();  ; virtual char * GetPrompt ();  Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". ;  ; void HandleException (Int_t sig) override;  Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; Bool_t HandleTermInput () override;  Handle input coming from terminal. ;  ; void Interrupt ();  ; TClass * IsA () const override;  ; virtual void PrintLogo (Bool_t lite=kFALSE);  Print the ROOT logo on standard output. ;  ; void Run (Bool_t retrn=kFALSE) override;  Main application eventloop. ;  ; void SetEchoMode (Bool_t mode) override;  Set console mode: ;  ; virtual const char * SetPrompt (const char *newPrompt);  Set a new default prompt. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out) override;  Forward tab completion request to our TTabCom::Hook(). ;  ; virtual void Terminate (int status) override;  Terminate the application. ;  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; cha",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:17095,Testability,log,logon,17095,"he previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions;  TRint (const TRint &)=delete;  ; void ExecLogon ();  Execute logon macro's. ;  ; TRint & operator= (const TRint &)=delete;  ; Longptr_t ProcessLineNr (const char *filestem, const char *line, Int_t *error=nullptr);  Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ;  ; Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr) override;  Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ;  . Private Attributes; Bool_t fBackslashContinue {};  ; Int_t fCaughtSignal;  ; TString fDefaultPrompt;  ; TFileHandler * fInputHandler;  ; Bool_t fInterrupt;  ; Int_t fNcmd;  ; TString fNonContinuePrompt;  ; char fPrompt [64];  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusB",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:23434,Testability,log,logon,23434," The TRint environment provides an interface to the WM manager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.rootlogon.C, the global user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward compatibility also the logon macro as specified by the Rint.Logon environment setting, by default ./rootlogon.C, will be executed. No logon macros will be executed when the system is started with the -n option. ; Definition at line 341 of file TRint.cxx. ◆ GetInputHandler(). TFileHandler * TRint::GetInputHandler ; (; ). inline . Definition at line 65 of file TRint.h. ◆ GetPrompt(). char * TRint::GetPrompt ; (; ). virtual . Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". ; Definition at line 575 of file TRint.cxx. ◆ HandleException(). void TRint::HandleException ; (; Int_t ; sig). overridevirtual . Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ; Specific TApplication implementations may want something",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:23477,Testability,log,logon,23477,"ager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.rootlogon.C, the global user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward compatibility also the logon macro as specified by the Rint.Logon environment setting, by default ./rootlogon.C, will be executed. No logon macros will be executed when the system is started with the -n option. ; Definition at line 341 of file TRint.cxx. ◆ GetInputHandler(). TFileHandler * TRint::GetInputHandler ; (; ). inline . Definition at line 65 of file TRint.h. ◆ GetPrompt(). char * TRint::GetPrompt ; (; ). virtual . Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". ; Definition at line 575 of file TRint.cxx. ◆ HandleException(). void TRint::HandleException ; (; Int_t ; sig). overridevirtual . Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ; Specific TApplication implementations may want something different here. ; Reimplemented from TApplication.; Defin",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:23524,Testability,log,logon,23524,"ager functionality and eventloop via inheritance of TApplication and in addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.rootlogon.C, the global user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward compatibility also the logon macro as specified by the Rint.Logon environment setting, by default ./rootlogon.C, will be executed. No logon macros will be executed when the system is started with the -n option. ; Definition at line 341 of file TRint.cxx. ◆ GetInputHandler(). TFileHandler * TRint::GetInputHandler ; (; ). inline . Definition at line 65 of file TRint.h. ◆ GetPrompt(). char * TRint::GetPrompt ; (; ). virtual . Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". ; Definition at line 575 of file TRint.cxx. ◆ HandleException(). void TRint::HandleException ; (; Int_t ; sig). overridevirtual . Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ; Specific TApplication implementations may want something different here. ; Reimplemented from TApplication.; Defin",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:23570,Testability,log,logon,23570," addition provides interactive access to the Cling C++ interpreter via the command line. ; Definition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.rootlogon.C, the global user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward compatibility also the logon macro as specified by the Rint.Logon environment setting, by default ./rootlogon.C, will be executed. No logon macros will be executed when the system is started with the -n option. ; Definition at line 341 of file TRint.cxx. ◆ GetInputHandler(). TFileHandler * TRint::GetInputHandler ; (; ). inline . Definition at line 65 of file TRint.h. ◆ GetPrompt(). char * TRint::GetPrompt ; (; ). virtual . Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". ; Definition at line 575 of file TRint.cxx. ◆ HandleException(). void TRint::HandleException ; (; Int_t ; sig). overridevirtual . Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ; Specific TApplication implementations may want something different here. ; Reimplemented from TApplication.; Definition at line 704 of file TRint.cxx. ◆ HandleTermInput(). Bool_t TRint",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:23657,Testability,log,logon,23657,"efinition at line 171 of file TRint.cxx. ◆ ~TRint(). TRint::~TRint ; (; ). virtual . Destructor. ; Definition at line 316 of file TRint.cxx. Member Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.rootlogon.C, the global user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward compatibility also the logon macro as specified by the Rint.Logon environment setting, by default ./rootlogon.C, will be executed. No logon macros will be executed when the system is started with the -n option. ; Definition at line 341 of file TRint.cxx. ◆ GetInputHandler(). TFileHandler * TRint::GetInputHandler ; (; ). inline . Definition at line 65 of file TRint.h. ◆ GetPrompt(). char * TRint::GetPrompt ; (; ). virtual . Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". ; Definition at line 575 of file TRint.cxx. ◆ HandleException(). void TRint::HandleException ; (; Int_t ; sig). overridevirtual . Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ; Specific TApplication implementations may want something different here. ; Reimplemented from TApplication.; Definition at line 704 of file TRint.cxx. ◆ HandleTermInput(). Bool_t TRint::HandleTermInput ; (; ). overridevirtual . Handle input coming from terminal. ; Reimplement",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:23768,Testability,log,logon,23768," Function Documentation. ◆ Class(). static TClass * TRint::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRint::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRint::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TRint.h. ◆ DeclFileName(). static const char * TRint::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 67 of file TRint.h. ◆ ExecLogon(). void TRint::ExecLogon ; (; ). private . Execute logon macro's. ; There are three levels of logon macros that will be executed: the system logon etc/system.rootlogon.C, the global user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward compatibility also the logon macro as specified by the Rint.Logon environment setting, by default ./rootlogon.C, will be executed. No logon macros will be executed when the system is started with the -n option. ; Definition at line 341 of file TRint.cxx. ◆ GetInputHandler(). TFileHandler * TRint::GetInputHandler ; (; ). inline . Definition at line 65 of file TRint.h. ◆ GetPrompt(). char * TRint::GetPrompt ; (; ). virtual . Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". ; Definition at line 575 of file TRint.cxx. ◆ HandleException(). void TRint::HandleException ; (; Int_t ; sig). overridevirtual . Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ; Specific TApplication implementations may want something different here. ; Reimplemented from TApplication.; Definition at line 704 of file TRint.cxx. ◆ HandleTermInput(). Bool_t TRint::HandleTermInput ; (; ). overridevirtual . Handle input coming from terminal. ; Reimplemented from TApplication.; Definition at line 611 of file TRint.cxx. ◆ Interrupt(). void TRint::Interrupt ; (; ). inline . Definition at line 62 of fil",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:25170,Testability,log,logo,25170,"andleException(). void TRint::HandleException ; (; Int_t ; sig). overridevirtual . Handle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ; Specific TApplication implementations may want something different here. ; Reimplemented from TApplication.; Definition at line 704 of file TRint.cxx. ◆ HandleTermInput(). Bool_t TRint::HandleTermInput ; (; ). overridevirtual . Handle input coming from terminal. ; Reimplemented from TApplication.; Definition at line 611 of file TRint.cxx. ◆ Interrupt(). void TRint::Interrupt ; (; ). inline . Definition at line 62 of file TRint.h. ◆ IsA(). TClass * TRint::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TApplication.; Definition at line 67 of file TRint.h. ◆ operator=(). TRint & TRint::operator= ; (; const TRint & ; ). privatedelete . ◆ PrintLogo(). void TRint::PrintLogo ; (; Bool_t ; lite = kFALSE). virtual . Print the ROOT logo on standard output. ; Definition at line 512 of file TRint.cxx. ◆ ProcessLineNr(). Longptr_t TRint::ProcessLineNr ; (; const char * ; filestem, . const char * ; line, . Int_t * ; error = nullptr . ). private . Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ; The user is responsible for incrementing fNcmd, where appropriate, after a call to this function. ; Definition at line 791 of file TRint.cxx. ◆ ProcessRemote(). Longptr_t TRint::ProcessRemote ; (; const char * ; line, . Int_t * ; error = nullptr . ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely ",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:28322,Testability,log,logoff,28322,"n a d which will be replaced by the commend number. The default prompt is ""root [%d] "". The maximum length of the prompt is 55 characters. To set the prompt in an interactive session do: root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> "") aap> ; Definition at line 595 of file TRint.cxx. ◆ Streamer(). void TRint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TApplication. ◆ StreamerNVirtual(). void TRint::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 67 of file TRint.h. ◆ TabCompletionHook(). Int_t TRint::TabCompletionHook ; (; char * ; buf, . int * ; pLoc, . std::ostream & ; out . ). overridevirtual . Forward tab completion request to our TTabCom::Hook(). ; Reimplemented from TApplication.; Definition at line 827 of file TRint.cxx. ◆ Terminate(). void TRint::Terminate ; (; int ; status). overridevirtual . Terminate the application. ; Reset the terminal to sane mode and call the logoff macro defined via Rint.Logoff environment variable. NoteThe function does not return, unless the class has been told to return from Run(), by a call to SetReturnFromRun(). ; Reimplemented from TApplication.; Definition at line 722 of file TRint.cxx. Member Data Documentation. ◆ fBackslashContinue. Bool_t TRint::fBackslashContinue {}. private . Definition at line 41 of file TRint.h. ◆ fCaughtSignal. Int_t TRint::fCaughtSignal. private . Definition at line 39 of file TRint.h. ◆ fDefaultPrompt. TString TRint::fDefaultPrompt. private . Definition at line 35 of file TRint.h. ◆ fInputHandler. TFileHandler* TRint::fInputHandler. private . Definition at line 40 of file TRint.h. ◆ fInterrupt. Bool_t TRint::fInterrupt. private . Definition at line 38 of file TRint.h. ◆ fNcmd. Int_t TRint::fNcmd. private . Definition at line 34 of file TRint.h. ◆ fNonContinuePrompt. TString TRint::fNonContinuePrompt. private . Definition at line 36 of file TRint.h. ◆ fPrompt. char TRint::fPrompt[6",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:3856,Usability,guid,guide,3856,"ialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called wh",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRint.html:19386,Usability,guid,guide,19386,"rwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdi",MatchSource.WIKI,doc/master/classTRint.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRint.html
https://root.cern/doc/master/classTRobustEstimator.html:685,Availability,robust,robust,685,". ROOT: TRobustEstimator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TRobustEstimator Class ReferenceMath » Legacy Physics Classes. ; NoteDespite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; Minimum Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:750,Availability,robust,robustness,750,". ROOT: TRobustEstimator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TRobustEstimator Class ReferenceMath » Legacy Physics Classes. ; NoteDespite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; Minimum Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:786,Availability,robust,robust,786,". ROOT: TRobustEstimator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TRobustEstimator Class ReferenceMath » Legacy Physics Classes. ; NoteDespite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; Minimum Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:1122,Availability,robust,robust,1122,"f all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TRobustEstimator Class ReferenceMath » Legacy Physics Classes. ; NoteDespite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; Minimum Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:1198,Availability,error,errors,1198," members ; TRobustEstimator Class ReferenceMath » Legacy Physics Classes. ; NoteDespite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; Minimum Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:1302,Availability,reliab,reliably,1302," members ; TRobustEstimator Class ReferenceMath » Legacy Physics Classes. ; NoteDespite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; Minimum Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:1489,Availability,robust,robust,1489,"um Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or more observations lie on a hyperplane. Then the algorithm still yields the MCD location T and scatter matrix S, the latter being singular as it should be. From (T,S) the program then computes the equation of the hype",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:1586,Availability,robust,robust,1586,"or the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or more observations lie on a hyperplane. Then the algorithm still yields the MCD location T and scatter matrix S, the latter being singular as it should be. From (T,S) the program then computes the equation of the hyperplane.; How can this algorithm be used? In any case, when contamination of data is suspected, that might influence the classical",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:1645,Availability,robust,robust,1645,"1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or more observations lie on a hyperplane. Then the algorithm still yields the MCD location T and scatter matrix S, the latter being singular as it should be. From (T,S) the program then computes the equation of the hyperplane.; How can this algorithm be used? In any case, when contamination of data is suspected, that might influence the classical estimates. Also, robust estimation of location and scatter is a tool to",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:2603,Availability,robust,robust,2603,". Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or more observations lie on a hyperplane. Then the algorithm still yields the MCD location T and scatter matrix S, the latter being singular as it should be. From (T,S) the program then computes the equation of the hyperplane.; How can this algorithm be used? In any case, when contamination of data is suspected, that might influence the classical estimates. Also, robust estimation of location and scatter is a tool to robustify other multivariate techniques such as, for example, principal-component analysis and discriminant analysis.; Technical details of the algorithm:. The default h = (n+nvariables+1)/2, but the user may choose any integer h with (n+nvariables+1)/2<=h<=n. The program then reports the MCD's breakdown value (n-h+1)/n. If you are sure that the dataset contains less than 25% contamination which is usually the case, a good compromise between breakdown value and efficiency is obtained by putting h=[.75*n].; If h=n,the MCD location estimate is the average of the whole dataset, and the MCD scatter estimate is its covariance matrix. Report this and stop; If nvariables=1 (univariate data), compute the MCD estimate by the exact algorithm of Rousseeuw and Leroy (1987, pp.171-172) in O(nlogn)time and stop; From here on, h<n and nvariables>=2.; If n is small:; repeat (say) 500 times:; construct an initial h-subset, starting from a random (nvar+1)-subset; carry out 2 C-steps (described in the comments of CStep function). f",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:2658,Availability,robust,robustify,2658,". Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or more observations lie on a hyperplane. Then the algorithm still yields the MCD location T and scatter matrix S, the latter being singular as it should be. From (T,S) the program then computes the equation of the hyperplane.; How can this algorithm be used? In any case, when contamination of data is suspected, that might influence the classical estimates. Also, robust estimation of location and scatter is a tool to robustify other multivariate techniques such as, for example, principal-component analysis and discriminant analysis.; Technical details of the algorithm:. The default h = (n+nvariables+1)/2, but the user may choose any integer h with (n+nvariables+1)/2<=h<=n. The program then reports the MCD's breakdown value (n-h+1)/n. If you are sure that the dataset contains less than 25% contamination which is usually the case, a good compromise between breakdown value and efficiency is obtained by putting h=[.75*n].; If h=n,the MCD location estimate is the average of the whole dataset, and the MCD scatter estimate is its covariance matrix. Report this and stop; If nvariables=1 (univariate data), compute the MCD estimate by the exact algorithm of Rousseeuw and Leroy (1987, pp.171-172) in O(nlogn)time and stop; From here on, h<n and nvariables>=2.; If n is small:; repeat (say) 500 times:; construct an initial h-subset, starting from a random (nvar+1)-subset; carry out 2 C-steps (described in the comments of CStep function). f",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:4687,Availability,robust,robust,4687,"nitial h-subset, starting from a random (nvar+1)-subset; carry out 2 C-steps (described in the comments of CStep function). for the 10 results with lowest det(S):; carry out C-steps until convergence. report the solution (T, S) with the lowest det(S). If n is larger (say, n>600), then; construct up to 5 disjoint random subsets of size nsub (say, nsub=300); inside each subset repeat 500/5 times:; construct an initial subset of size hsub=[nsub*h/n]; carry out 2 C-steps; keep the best 10 results (Tsub, Ssub). pool the subsets, yielding the merged set (say, of size nmerged=1500); in the merged set, repeat for each of the 50 solutions (Tsub, Ssub); carry out 2 C-steps; keep the 10 best results. in the full dataset, repeat for those best results:; take several C-steps, using n and h; report the best final result (T, S). To obtain consistency when the data comes from a multivariate normal distribution, covariance matrix is multiplied by a correction factor; Robust distances for all elements, using the final (T, S) are calculated Then the very final mean and covariance estimates are calculated only for values, whose robust distances are less than a cutoff value (0.975 quantile of chi2 distribution with nvariables degrees of freedom) . Definition at line 23 of file TRobustEstimator.h. Public Member Functions;  TRobustEstimator ();  this constructor should be used in a univariate case: first call this constructor, then - the EvaluateUni(..) function ;  ;  TRobustEstimator (Int_t nvectors, Int_t nvariables, Int_t hh=0);  constructor ;  ;  ~TRobustEstimator () override;  ; void AddColumn (Double_t *col);  adds a column to the data matrix it is assumed that the column has size fN variable fVarTemp keeps the number of columns l already added ;  ; void AddRow (Double_t *row);  adds a vector to the data matrix it is supposed that the vector is of size fNvar ;  ; void Evaluate ();  Finds the estimate of multivariate mean and variance. ;  ; void EvaluateUni (Int_t nvectors, Double_t ",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:6945,Availability,robust,robust,6945,"f columns l already added ;  ; void AddRow (Double_t *row);  adds a vector to the data matrix it is supposed that the vector is of size fNvar ;  ; void Evaluate ();  Finds the estimate of multivariate mean and variance. ;  ; void EvaluateUni (Int_t nvectors, Double_t *data, Double_t &mean, Double_t &sigma, Int_t hh=0);  for the univariate case estimates of location and scatter are returned in mean and sigma parameters the algorithm works on the same principle as in multivariate case - it finds a subset of size hh with smallest sigma, and then returns mean and sigma of this subset ;  ; Int_t GetBDPoint ();  returns the breakdown point of the algorithm ;  ; Double_t GetChiQuant (Int_t i) const;  returns the chi2 quantiles ;  ; const TMatrixDSym * GetCorrelation () const;  ; void GetCorrelation (TMatrixDSym &matr);  returns the correlation matrix ;  ; const TMatrixDSym * GetCovariance () const;  ; void GetCovariance (TMatrixDSym &matr);  returns the covariance matrix ;  ; const TMatrixD & GetData ();  returns a reference to the data matrix ;  ; const TVectorD * GetHyperplane () const;  if the points are on a hyperplane, returns this hyperplane ;  ; void GetHyperplane (TVectorD &vec);  if the points are on a hyperplane, returns this hyperplane ;  ; const TVectorD * GetMean () const;  ; void GetMean (TVectorD &means);  return the estimate of the mean ;  ; Int_t GetNHyp ();  ; Int_t GetNOut ();  returns the number of outliers ;  ; Int_t GetNumberObservations () const;  ; Int_t GetNvar () const;  ; const TArrayI * GetOuliers () const;  ; const TVectorD * GetRDistances () const;  ; void GetRDistances (TVectorD &rdist);  returns the robust distances (helps to find outliers) ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:8778,Availability,error,error,8778,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:8867,Availability,error,error,8867,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:9022,Availability,error,error,9022,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:9319,Availability,error,error,9319,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:13993,Availability,error,error,13993,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void AddToSscp (TMatrixD &sscp, TVectorD &vec);  update the sscp matrix with vector vec ;  ; void Classic ();  called when h=n. ;  ; void ClearSscp (TMatrixD &sscp);  clear the sscp matrix, used for covariance and mean calculation ;  ; void Correl ();  transforms covariance matrix into correlation matrix ;",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:17074,Availability,robust,robust,17074,"trix determinant!=0, distances of all ntotal elements are calculated, using formula d_i=Sqrt((x_i-M)*S_inv*(x_i-M)), where M is mean and S_inv is the inverse of the covariance matrix htotal points with smallest distances are included in the returned subset. ;  ; Double_t CStep (Int_t ntotal, Int_t htotal, Int_t *index, TMatrixD &data, TMatrixD &sscp, Double_t *ndist);  from the input htotal-subset constructs another htotal subset with lower determinant ;  ; Int_t Exact (Double_t *ndist);  for the exact fit situations returns number of observations on the hyperplane ;  ; Int_t Exact2 (TMatrixD &mstockbig, TMatrixD &cstockbig, TMatrixD &hyperplane, Double_t *deti, Int_t nbest, Int_t kgroup, TMatrixD &sscp, Double_t *ndist);  This function is called if determinant of the covariance matrix of a subset=0. ;  ; Double_t KOrdStat (Int_t ntotal, Double_t *arr, Int_t k, Int_t *work);  because I need an Int_t work array ;  ; Int_t Partition (Int_t nmini, Int_t *indsubdat);  divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ;  ; Int_t RDist (TMatrixD &sscp);  Calculates robust distances.Then the samples with robust distances greater than a cutoff value (0.975 quantile of chi2 distribution with fNvar degrees of freedom, multiplied by a correction factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of outliers. ;  ; void RDraw (Int_t *subdat, Int_t ngroup, Int_t *indsubdat);  Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixDSym fCorrelation;  ; TMatrixDSym fCovariance;  ; TMat",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:17113,Availability,robust,robust,17113,"included in the returned subset. ;  ; Double_t CStep (Int_t ntotal, Int_t htotal, Int_t *index, TMatrixD &data, TMatrixD &sscp, Double_t *ndist);  from the input htotal-subset constructs another htotal subset with lower determinant ;  ; Int_t Exact (Double_t *ndist);  for the exact fit situations returns number of observations on the hyperplane ;  ; Int_t Exact2 (TMatrixD &mstockbig, TMatrixD &cstockbig, TMatrixD &hyperplane, Double_t *deti, Int_t nbest, Int_t kgroup, TMatrixD &sscp, Double_t *ndist);  This function is called if determinant of the covariance matrix of a subset=0. ;  ; Double_t KOrdStat (Int_t ntotal, Double_t *arr, Int_t k, Int_t *work);  because I need an Int_t work array ;  ; Int_t Partition (Int_t nmini, Int_t *indsubdat);  divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ;  ; Int_t RDist (TMatrixD &sscp);  Calculates robust distances.Then the samples with robust distances greater than a cutoff value (0.975 quantile of chi2 distribution with fNvar degrees of freedom, multiplied by a correction factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of outliers. ;  ; void RDraw (Int_t *subdat, Int_t ngroup, Int_t *indsubdat);  Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixDSym fCorrelation;  ; TMatrixDSym fCovariance;  ; TMatrixD fData;  ; Int_t fExact;  ; Int_t fH;  ; TVectorD fHyperplane;  ; TMatrixDSym fInvcovariance;  ; TVectorD fMean;  ; Int_t fN;  ; Int_t fNvar;  ; TArrayI fOut;  ; TVectorD fRd;  ; TVectorD fSd;  ; Int_t fVarTemp;  ; Int_t",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:27949,Availability,robust,robust,27949,"n ; Definition at line 747 of file TRobustEstimator.cxx. ◆ GetNHyp(). Int_t TRobustEstimator::GetNHyp ; (; ). inline . Definition at line 97 of file TRobustEstimator.h. ◆ GetNOut(). Int_t TRobustEstimator::GetNOut ; (; ). returns the number of outliers ; Definition at line 771 of file TRobustEstimator.cxx. ◆ GetNumberObservations(). Int_t TRobustEstimator::GetNumberObservations ; (; ); const. inline . Definition at line 102 of file TRobustEstimator.h. ◆ GetNvar(). Int_t TRobustEstimator::GetNvar ; (; ); const. inline . Definition at line 103 of file TRobustEstimator.h. ◆ GetOuliers(). const TArrayI * TRobustEstimator::GetOuliers ; (; ); const. inline . Definition at line 104 of file TRobustEstimator.h. ◆ GetRDistances() [1/2]. const TVectorD * TRobustEstimator::GetRDistances ; (; ); const. inline . Definition at line 101 of file TRobustEstimator.h. ◆ GetRDistances() [2/2]. void TRobustEstimator::GetRDistances ; (; TVectorD & ; rdist). returns the robust distances (helps to find outliers) ; Definition at line 759 of file TRobustEstimator.cxx. ◆ KOrdStat(). Double_t TRobustEstimator::KOrdStat ; (; Int_t ; ntotal, . Double_t * ; arr, . Int_t ; k, . Int_t * ; work . ). protected . because I need an Int_t work array ; Definition at line 1267 of file TRobustEstimator.cxx. ◆ Partition(). Int_t TRobustEstimator::Partition ; (; Int_t ; nmini, . Int_t * ; indsubdat . ). protected . divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ; Definition at line 1118 of file TRobustEstimator.cxx. ◆ RDist(). Int_t TRobustEstimator::RDist ; (; TMatrixD & ; sscp). protected . Calculates robust distances.Then the samples with robust distances greater than a cutoff value (0.975 quantile of chi2 distribution with fNvar degrees of freedom, multiplied by a correction factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of out",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:28675,Availability,robust,robust,28675,"le TRobustEstimator.h. ◆ GetRDistances() [1/2]. const TVectorD * TRobustEstimator::GetRDistances ; (; ); const. inline . Definition at line 101 of file TRobustEstimator.h. ◆ GetRDistances() [2/2]. void TRobustEstimator::GetRDistances ; (; TVectorD & ; rdist). returns the robust distances (helps to find outliers) ; Definition at line 759 of file TRobustEstimator.cxx. ◆ KOrdStat(). Double_t TRobustEstimator::KOrdStat ; (; Int_t ; ntotal, . Double_t * ; arr, . Int_t ; k, . Int_t * ; work . ). protected . because I need an Int_t work array ; Definition at line 1267 of file TRobustEstimator.cxx. ◆ Partition(). Int_t TRobustEstimator::Partition ; (; Int_t ; nmini, . Int_t * ; indsubdat . ). protected . divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ; Definition at line 1118 of file TRobustEstimator.cxx. ◆ RDist(). Int_t TRobustEstimator::RDist ; (; TMatrixD & ; sscp). protected . Calculates robust distances.Then the samples with robust distances greater than a cutoff value (0.975 quantile of chi2 distribution with fNvar degrees of freedom, multiplied by a correction factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of outliers. ; Definition at line 1172 of file TRobustEstimator.cxx. ◆ RDraw(). void TRobustEstimator::RDraw ; (; Int_t * ; subdat, . Int_t ; ngroup, . Int_t * ; indsubdat . ). protected . Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ; Definition at line 1235 of file TRobustEstimator.cxx. Member Data Documentation. ◆ fCorrelation. TMatrixDSym TRobustEstimator::fCorrelation. protected . Definition at line 39 of file TRobustEstimator.h. ◆ fCovariance. TMatrixDSym TRobustEstimator::fCovariance. protected . Definition at line 37 of file TRobustEstimator.h. ◆ fData. TMatrixD TRobustEstimator::fDa",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:28714,Availability,robust,robust,28714,"nst TVectorD * TRobustEstimator::GetRDistances ; (; ); const. inline . Definition at line 101 of file TRobustEstimator.h. ◆ GetRDistances() [2/2]. void TRobustEstimator::GetRDistances ; (; TVectorD & ; rdist). returns the robust distances (helps to find outliers) ; Definition at line 759 of file TRobustEstimator.cxx. ◆ KOrdStat(). Double_t TRobustEstimator::KOrdStat ; (; Int_t ; ntotal, . Double_t * ; arr, . Int_t ; k, . Int_t * ; work . ). protected . because I need an Int_t work array ; Definition at line 1267 of file TRobustEstimator.cxx. ◆ Partition(). Int_t TRobustEstimator::Partition ; (; Int_t ; nmini, . Int_t * ; indsubdat . ). protected . divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ; Definition at line 1118 of file TRobustEstimator.cxx. ◆ RDist(). Int_t TRobustEstimator::RDist ; (; TMatrixD & ; sscp). protected . Calculates robust distances.Then the samples with robust distances greater than a cutoff value (0.975 quantile of chi2 distribution with fNvar degrees of freedom, multiplied by a correction factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of outliers. ; Definition at line 1172 of file TRobustEstimator.cxx. ◆ RDraw(). void TRobustEstimator::RDraw ; (; Int_t * ; subdat, . Int_t ; ngroup, . Int_t * ; indsubdat . ). protected . Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ; Definition at line 1235 of file TRobustEstimator.cxx. Member Data Documentation. ◆ fCorrelation. TMatrixDSym TRobustEstimator::fCorrelation. protected . Definition at line 39 of file TRobustEstimator.h. ◆ fCovariance. TMatrixDSym TRobustEstimator::fCovariance. protected . Definition at line 37 of file TRobustEstimator.h. ◆ fData. TMatrixD TRobustEstimator::fData. protected . Definition at line 46 of file TRo",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:14731,Deployability,update,update,14731,"  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void AddToSscp (TMatrixD &sscp, TVectorD &vec);  update the sscp matrix with vector vec ;  ; void Classic ();  called when h=n. ;  ; void ClearSscp (TMatrixD &sscp);  clear the sscp matrix, used for covariance and mean calculation ;  ; void Correl ();  transforms covariance matrix into correlation matrix ;  ; void Covar (TMatrixD &sscp, TVectorD &m, TMatrixDSym &cov, TVectorD &sd, Int_t nvec);  calculates mean and covariance ;  ; void CreateOrtSubset (TMatrixD &dat, Int_t *index, Int_t hmerged, Int_t nmerged, TMatrixD &sscp, Double_t *ndist);  creates a subset of hmerged vectors with smallest orthogonal distances to the hyperplane hyp[1]*(x1-mean[1])+...+hyp[nvar]*(xnvar-mean[nvar])=0 This function is called in case when less than fH samples lie on a hyperplane. ;  ; void CreateSubset (Int_t ntotal, Int_t htotal, Int_t p, Int_t *index, TMatrixD &data, TMatrixD &sscp, Double_t *ndist);  creates a subset of htotal elements from ntotal elements first, p+1 elements are drawn randomly(without repetitions) if their covariance matrix is sin",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:20805,Deployability,update,update,20805,"obustEstimator.cxx. ◆ TRobustEstimator() [2/2]. TRobustEstimator::TRobustEstimator ; (; Int_t ; nvectors, . Int_t ; nvariables, . Int_t ; hh = 0 . ). constructor ; Definition at line 131 of file TRobustEstimator.cxx. ◆ ~TRobustEstimator(). TRobustEstimator::~TRobustEstimator ; (; ). inlineoverride . Definition at line 78 of file TRobustEstimator.h. Member Function Documentation. ◆ AddColumn(). void TRobustEstimator::AddColumn ; (; Double_t * ; col). adds a column to the data matrix it is assumed that the column has size fN variable fVarTemp keeps the number of columns l already added ; Definition at line 171 of file TRobustEstimator.cxx. ◆ AddRow(). void TRobustEstimator::AddRow ; (; Double_t * ; row). adds a vector to the data matrix it is supposed that the vector is of size fNvar ; Definition at line 192 of file TRobustEstimator.cxx. ◆ AddToSscp(). void TRobustEstimator::AddToSscp ; (; TMatrixD & ; sscp, . TVectorD & ; vec . ). protected . update the sscp matrix with vector vec ; Definition at line 779 of file TRobustEstimator.cxx. ◆ Classic(). void TRobustEstimator::Classic ; (; ). protected . called when h=n. ; Returns classic covariance matrix and mean ; Definition at line 809 of file TRobustEstimator.cxx. ◆ ClearSscp(). void TRobustEstimator::ClearSscp ; (; TMatrixD & ; sscp). protected . clear the sscp matrix, used for covariance and mean calculation ; Definition at line 796 of file TRobustEstimator.cxx. ◆ Correl(). void TRobustEstimator::Correl ; (; ). protected . transforms covariance matrix into correlation matrix ; Definition at line 850 of file TRobustEstimator.cxx. ◆ Covar(). void TRobustEstimator::Covar ; (; TMatrixD & ; sscp, . TVectorD & ; m, . TMatrixDSym & ; cov, . TVectorD & ; sd, . Int_t ; nvec . ). protected . calculates mean and covariance ; Definition at line 827 of file TRobustEstimator.cxx. ◆ CreateOrtSubset(). void TRobustEstimator::CreateOrtSubset ; (; TMatrixD & ; dat, . Int_t * ; index, . Int_t ; hmerged, . Int_t ; nmerged, . TMatrixD & ",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:8784,Integrability,message,message,8784,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:9325,Integrability,message,message,9325,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:10527,Integrability,message,message,10527,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const ch",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:13999,Integrability,message,message,13999,"ead (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void AddToSscp (TMatrixD &sscp, TVectorD &vec);  update the sscp matrix with vector vec ;  ; void Classic ();  called when h=n. ;  ; void ClearSscp (TMatrixD &sscp);  clear the sscp matrix, used for covariance and mean calculation ;  ; void Correl ();  transforms covariance matrix into correlation matrix ;",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:14372,Integrability,message,message,14372,"rimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void AddToSscp (TMatrixD &sscp, TVectorD &vec);  update the sscp matrix with vector vec ;  ; void Classic ();  called when h=n. ;  ; void ClearSscp (TMatrixD &sscp);  clear the sscp matrix, used for covariance and mean calculation ;  ; void Correl ();  transforms covariance matrix into correlation matrix ;  ; void Covar (TMatrixD &sscp, TVectorD &m, TMatrixDSym &cov, TVectorD &sd, Int_t nvec);  calculates mean and covariance ;  ; void CreateOrtSubset (TMatrixD &dat, Int_t *index, Int_t hmerged, Int_t nmerged, TMatrixD &sscp, Double_t *ndist);  creates a subset of hmerged vectors with smallest orthogonal distances to the hyperplane hyp[1]*(x1-mean[1])+...+hyp[nvar]*(xnvar-me",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:2144,Modifiability,variab,variables,2144,"duly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or more observations lie on a hyperplane. Then the algorithm still yields the MCD location T and scatter matrix S, the latter being singular as it should be. From (T,S) the program then computes the equation of the hyperplane.; How can this algorithm be used? In any case, when contamination of data is suspected, that might influence the classical estimates. Also, robust estimation of location and scatter is a tool to robustify other multivariate techniques such as, for example, principal-component analysis and discriminant analysis.; Technical details of the algorithm:. The default h = (n+nvariables+1)/2, but the user may choose any integer h with (n+nvariables+1)/2<=h<=n. The program then reports the MCD's breakdown value (n-h+1)/n. If you are sure that the dataset contains less than 25% contamination which is usually the case, a good compromise betwee",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:5257,Modifiability,variab,variable,5257,"the full dataset, repeat for those best results:; take several C-steps, using n and h; report the best final result (T, S). To obtain consistency when the data comes from a multivariate normal distribution, covariance matrix is multiplied by a correction factor; Robust distances for all elements, using the final (T, S) are calculated Then the very final mean and covariance estimates are calculated only for values, whose robust distances are less than a cutoff value (0.975 quantile of chi2 distribution with nvariables degrees of freedom) . Definition at line 23 of file TRobustEstimator.h. Public Member Functions;  TRobustEstimator ();  this constructor should be used in a univariate case: first call this constructor, then - the EvaluateUni(..) function ;  ;  TRobustEstimator (Int_t nvectors, Int_t nvariables, Int_t hh=0);  constructor ;  ;  ~TRobustEstimator () override;  ; void AddColumn (Double_t *col);  adds a column to the data matrix it is assumed that the column has size fN variable fVarTemp keeps the number of columns l already added ;  ; void AddRow (Double_t *row);  adds a vector to the data matrix it is supposed that the vector is of size fNvar ;  ; void Evaluate ();  Finds the estimate of multivariate mean and variance. ;  ; void EvaluateUni (Int_t nvectors, Double_t *data, Double_t &mean, Double_t &sigma, Int_t hh=0);  for the univariate case estimates of location and scatter are returned in mean and sigma parameters the algorithm works on the same principle as in multivariate case - it finds a subset of size hh with smallest sigma, and then returns mean and sigma of this subset ;  ; Int_t GetBDPoint ();  returns the breakdown point of the algorithm ;  ; Double_t GetChiQuant (Int_t i) const;  returns the chi2 quantiles ;  ; const TMatrixDSym * GetCorrelation () const;  ; void GetCorrelation (TMatrixDSym &matr);  returns the correlation matrix ;  ; const TMatrixDSym * GetCovariance () const;  ; void GetCovariance (TMatrixDSym &matr);  returns the covarianc",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:7017,Modifiability,inherit,inherited,7017,"f columns l already added ;  ; void AddRow (Double_t *row);  adds a vector to the data matrix it is supposed that the vector is of size fNvar ;  ; void Evaluate ();  Finds the estimate of multivariate mean and variance. ;  ; void EvaluateUni (Int_t nvectors, Double_t *data, Double_t &mean, Double_t &sigma, Int_t hh=0);  for the univariate case estimates of location and scatter are returned in mean and sigma parameters the algorithm works on the same principle as in multivariate case - it finds a subset of size hh with smallest sigma, and then returns mean and sigma of this subset ;  ; Int_t GetBDPoint ();  returns the breakdown point of the algorithm ;  ; Double_t GetChiQuant (Int_t i) const;  returns the chi2 quantiles ;  ; const TMatrixDSym * GetCorrelation () const;  ; void GetCorrelation (TMatrixDSym &matr);  returns the correlation matrix ;  ; const TMatrixDSym * GetCovariance () const;  ; void GetCovariance (TMatrixDSym &matr);  returns the covariance matrix ;  ; const TMatrixD & GetData ();  returns a reference to the data matrix ;  ; const TVectorD * GetHyperplane () const;  if the points are on a hyperplane, returns this hyperplane ;  ; void GetHyperplane (TVectorD &vec);  if the points are on a hyperplane, returns this hyperplane ;  ; const TVectorD * GetMean () const;  ; void GetMean (TVectorD &means);  return the estimate of the mean ;  ; Int_t GetNHyp ();  ; Int_t GetNOut ();  returns the number of outliers ;  ; Int_t GetNumberObservations () const;  ; Int_t GetNvar () const;  ; const TArrayI * GetOuliers () const;  ; const TVectorD * GetRDistances () const;  ; void GetRDistances (TVectorD &rdist);  returns the robust distances (helps to find outliers) ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:8414,Modifiability,inherit,inheritance,8414,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:10625,Modifiability,inherit,inherits,10625,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:10742,Modifiability,inherit,inherits,10742,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:17636,Modifiability,inherit,inherited,17636,"x of a subset=0. ;  ; Double_t KOrdStat (Int_t ntotal, Double_t *arr, Int_t k, Int_t *work);  because I need an Int_t work array ;  ; Int_t Partition (Int_t nmini, Int_t *indsubdat);  divides the elements into approximately equal subgroups number of elements in each subgroup is stored in indsubdat number of subgroups is returned ;  ; Int_t RDist (TMatrixD &sscp);  Calculates robust distances.Then the samples with robust distances greater than a cutoff value (0.975 quantile of chi2 distribution with fNvar degrees of freedom, multiplied by a correction factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of outliers. ;  ; void RDraw (Int_t *subdat, Int_t ngroup, Int_t *indsubdat);  Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixDSym fCorrelation;  ; TMatrixDSym fCovariance;  ; TMatrixD fData;  ; Int_t fExact;  ; Int_t fH;  ; TVectorD fHyperplane;  ; TMatrixDSym fInvcovariance;  ; TVectorD fMean;  ; Int_t fN;  ; Int_t fNvar;  ; TArrayI fOut;  ; TVectorD fRd;  ; TVectorD fSd;  ; Int_t fVarTemp;  ; Int_t fVecTemp;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ; ",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:18184,Modifiability,inherit,inherited,18184,"ection factor), are given weiht=0, and new, reweighted estimates of location and scatter are calculated The function returns the number of outliers. ;  ; void RDraw (Int_t *subdat, Int_t ngroup, Int_t *indsubdat);  Draws ngroup nonoverlapping subdatasets out of a dataset of size n such that the selected case numbers are uniformly distributed from 1 to n. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixDSym fCorrelation;  ; TMatrixDSym fCovariance;  ; TMatrixD fData;  ; Int_t fExact;  ; Int_t fH;  ; TVectorD fHyperplane;  ; TMatrixDSym fInvcovariance;  ; TVectorD fMean;  ; Int_t fN;  ; Int_t fNvar;  ; TArrayI fOut;  ; TVectorD fRd;  ; TVectorD fSd;  ; Int_t fVarTemp;  ; Int_t fVecTemp;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:18840,Modifiability,inherit,inherited,18840,"H;  ; TVectorD fHyperplane;  ; TMatrixDSym fInvcovariance;  ; TVectorD fMean;  ; Int_t fN;  ; Int_t fNvar;  ; TArrayI fOut;  ; TVectorD fRd;  ; TVectorD fSd;  ; Int_t fVarTemp;  ; Int_t fVecTemp;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRobustEstimator.h>. Inheritance diagram for TRobustEstimator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRobustEstimator() [1/2]. TRobustEstimator::TRobustEstimator ; (; ). this constructor should be used in a univariate case: first call this constructor, then - the EvaluateUni(..) function ; Definition at line 125 of file TRobustEstimator.cxx. ◆ TRobustEstimator() [2/2]. TRobustEstimator::TRobustEstimator ; (; Int_",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:19343,Modifiability,inherit,inherited,19343," { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRobustEstimator.h>. Inheritance diagram for TRobustEstimator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRobustEstimator() [1/2]. TRobustEstimator::TRobustEstimator ; (; ). this constructor should be used in a univariate case: first call this constructor, then - the EvaluateUni(..) function ; Definition at line 125 of file TRobustEstimator.cxx. ◆ TRobustEstimator() [2/2]. TRobustEstimator::TRobustEstimator ; (; Int_t ; nvectors, . Int_t ; nvariables, . Int_t ; hh = 0 . ). constructor ; Definition at line 131 of file TRobustEstimator.cxx. ◆ ~TRobustEstimator(). TRobustEstimator::~TRobustEstimator ; (; ). inlineoverride . Definition at line 78 of file TRobustEstimator.h. Member Function Documentation. ◆ AddColumn(). void TRobustEstimator::AddColumn ; (; Double_t * ; col). adds a column to the data matrix it is assumed that the column h",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:20378,Modifiability,variab,variable,20378," << ( 3 )); };  . #include <TRobustEstimator.h>. Inheritance diagram for TRobustEstimator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRobustEstimator() [1/2]. TRobustEstimator::TRobustEstimator ; (; ). this constructor should be used in a univariate case: first call this constructor, then - the EvaluateUni(..) function ; Definition at line 125 of file TRobustEstimator.cxx. ◆ TRobustEstimator() [2/2]. TRobustEstimator::TRobustEstimator ; (; Int_t ; nvectors, . Int_t ; nvariables, . Int_t ; hh = 0 . ). constructor ; Definition at line 131 of file TRobustEstimator.cxx. ◆ ~TRobustEstimator(). TRobustEstimator::~TRobustEstimator ; (; ). inlineoverride . Definition at line 78 of file TRobustEstimator.h. Member Function Documentation. ◆ AddColumn(). void TRobustEstimator::AddColumn ; (; Double_t * ; col). adds a column to the data matrix it is assumed that the column has size fN variable fVarTemp keeps the number of columns l already added ; Definition at line 171 of file TRobustEstimator.cxx. ◆ AddRow(). void TRobustEstimator::AddRow ; (; Double_t * ; row). adds a vector to the data matrix it is supposed that the vector is of size fNvar ; Definition at line 192 of file TRobustEstimator.cxx. ◆ AddToSscp(). void TRobustEstimator::AddToSscp ; (; TMatrixD & ; sscp, . TVectorD & ; vec . ). protected . update the sscp matrix with vector vec ; Definition at line 779 of file TRobustEstimator.cxx. ◆ Classic(). void TRobustEstimator::Classic ; (; ). protected . called when h=n. ; Returns classic covariance matrix and mean ; Definition at line 809 of file TRobustEstimator.cxx. ◆ ClearSscp(). void TRobustEstimator::ClearSscp ; (; TMatrixD & ; sscp). protected . clear the sscp matrix, used for covariance and mean calculation ; Definition at line 796 of file TRobustEstimator.cxx. ◆ Correl(). void TRobustEstimator::Correl ; (; ). protected . transforms covariance matrix into correlation matr",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:1314,Safety,detect,detected,1314," members ; TRobustEstimator Class ReferenceMath » Legacy Physics Classes. ; NoteDespite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; Minimum Covariance Determinant Estimator - a Fast Algorithm invented by Peter J.Rousseeuw and Katrien Van Dreissen ""A Fast Algorithm for the Minimum covariance Determinant Estimator"" Technometrics, August 1999, Vol.41, NO.3; What are robust estimators? ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected."" R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz ""Data Analysis Techniques for High-Energy Physics"", 2nd edition; What does this algorithm do? It computes a highly robust estimator of multivariate location and scatter. Then, it takes those estimates to compute robust distances of all the data vectors. Those with large robust distances are considered outliers. Robust distances can then be plotted for better visualization of the data.; How does this algorithm do it? The MCD objective is to find h observations(out of n) whose classical covariance matrix has the lowest determinant. The MCD estimator of location is then the average of those h points and the MCD estimate of scatter is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2 so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers. The algorithm also allows for exact fit situations - that is, when h or",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:10256,Security,hash,hash,10256," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other obje",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:14849,Usability,clear,clear,14849,"tBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void AddToSscp (TMatrixD &sscp, TVectorD &vec);  update the sscp matrix with vector vec ;  ; void Classic ();  called when h=n. ;  ; void ClearSscp (TMatrixD &sscp);  clear the sscp matrix, used for covariance and mean calculation ;  ; void Correl ();  transforms covariance matrix into correlation matrix ;  ; void Covar (TMatrixD &sscp, TVectorD &m, TMatrixDSym &cov, TVectorD &sd, Int_t nvec);  calculates mean and covariance ;  ; void CreateOrtSubset (TMatrixD &dat, Int_t *index, Int_t hmerged, Int_t nmerged, TMatrixD &sscp, Double_t *ndist);  creates a subset of hmerged vectors with smallest orthogonal distances to the hyperplane hyp[1]*(x1-mean[1])+...+hyp[nvar]*(xnvar-mean[nvar])=0 This function is called in case when less than fH samples lie on a hyperplane. ;  ; void CreateSubset (Int_t ntotal, Int_t htotal, Int_t p, Int_t *index, TMatrixD &data, TMatrixD &sscp, Double_t *ndist);  creates a subset of htotal elements from ntotal elements first, p+1 elements are drawn randomly(without repetitions) if their covariance matrix is singular, more elements are added one by one, until their covariance matrix becomes regular or it becomes clear that htotal observations lie on a hyperplane If covariance matrix determinant!=0, distances of all ntotal elements are calculated, using formula d_i=Sqrt((x_i-M)*S_inv*(x_i-M)), where M is mean and S_inv is the inverse of the covariance",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:15834,Usability,clear,clear,15834,"=n. ;  ; void ClearSscp (TMatrixD &sscp);  clear the sscp matrix, used for covariance and mean calculation ;  ; void Correl ();  transforms covariance matrix into correlation matrix ;  ; void Covar (TMatrixD &sscp, TVectorD &m, TMatrixDSym &cov, TVectorD &sd, Int_t nvec);  calculates mean and covariance ;  ; void CreateOrtSubset (TMatrixD &dat, Int_t *index, Int_t hmerged, Int_t nmerged, TMatrixD &sscp, Double_t *ndist);  creates a subset of hmerged vectors with smallest orthogonal distances to the hyperplane hyp[1]*(x1-mean[1])+...+hyp[nvar]*(xnvar-mean[nvar])=0 This function is called in case when less than fH samples lie on a hyperplane. ;  ; void CreateSubset (Int_t ntotal, Int_t htotal, Int_t p, Int_t *index, TMatrixD &data, TMatrixD &sscp, Double_t *ndist);  creates a subset of htotal elements from ntotal elements first, p+1 elements are drawn randomly(without repetitions) if their covariance matrix is singular, more elements are added one by one, until their covariance matrix becomes regular or it becomes clear that htotal observations lie on a hyperplane If covariance matrix determinant!=0, distances of all ntotal elements are calculated, using formula d_i=Sqrt((x_i-M)*S_inv*(x_i-M)), where M is mean and S_inv is the inverse of the covariance matrix htotal points with smallest distances are included in the returned subset. ;  ; Double_t CStep (Int_t ntotal, Int_t htotal, Int_t *index, TMatrixD &data, TMatrixD &sscp, Double_t *ndist);  from the input htotal-subset constructs another htotal subset with lower determinant ;  ; Int_t Exact (Double_t *ndist);  for the exact fit situations returns number of observations on the hyperplane ;  ; Int_t Exact2 (TMatrixD &mstockbig, TMatrixD &cstockbig, TMatrixD &hyperplane, Double_t *deti, Int_t nbest, Int_t kgroup, TMatrixD &sscp, Double_t *ndist);  This function is called if determinant of the covariance matrix of a subset=0. ;  ; Double_t KOrdStat (Int_t ntotal, Double_t *arr, Int_t k, Int_t *work);  because I need a",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:21165,Usability,clear,clear,21165,"entation. ◆ AddColumn(). void TRobustEstimator::AddColumn ; (; Double_t * ; col). adds a column to the data matrix it is assumed that the column has size fN variable fVarTemp keeps the number of columns l already added ; Definition at line 171 of file TRobustEstimator.cxx. ◆ AddRow(). void TRobustEstimator::AddRow ; (; Double_t * ; row). adds a vector to the data matrix it is supposed that the vector is of size fNvar ; Definition at line 192 of file TRobustEstimator.cxx. ◆ AddToSscp(). void TRobustEstimator::AddToSscp ; (; TMatrixD & ; sscp, . TVectorD & ; vec . ). protected . update the sscp matrix with vector vec ; Definition at line 779 of file TRobustEstimator.cxx. ◆ Classic(). void TRobustEstimator::Classic ; (; ). protected . called when h=n. ; Returns classic covariance matrix and mean ; Definition at line 809 of file TRobustEstimator.cxx. ◆ ClearSscp(). void TRobustEstimator::ClearSscp ; (; TMatrixD & ; sscp). protected . clear the sscp matrix, used for covariance and mean calculation ; Definition at line 796 of file TRobustEstimator.cxx. ◆ Correl(). void TRobustEstimator::Correl ; (; ). protected . transforms covariance matrix into correlation matrix ; Definition at line 850 of file TRobustEstimator.cxx. ◆ Covar(). void TRobustEstimator::Covar ; (; TMatrixD & ; sscp, . TVectorD & ; m, . TMatrixDSym & ; cov, . TVectorD & ; sd, . Int_t ; nvec . ). protected . calculates mean and covariance ; Definition at line 827 of file TRobustEstimator.cxx. ◆ CreateOrtSubset(). void TRobustEstimator::CreateOrtSubset ; (; TMatrixD & ; dat, . Int_t * ; index, . Int_t ; hmerged, . Int_t ; nmerged, . TMatrixD & ; sscp, . Double_t * ; ndist . ). protected . creates a subset of hmerged vectors with smallest orthogonal distances to the hyperplane hyp[1]*(x1-mean[1])+...+hyp[nvar]*(xnvar-mean[nvar])=0 This function is called in case when less than fH samples lie on a hyperplane. ; Definition at line 968 of file TRobustEstimator.cxx. ◆ CreateSubset(). void TRobustEstimator::CreateSu",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRobustEstimator.html:22631,Usability,clear,clear,22631,"of file TRobustEstimator.cxx. ◆ CreateOrtSubset(). void TRobustEstimator::CreateOrtSubset ; (; TMatrixD & ; dat, . Int_t * ; index, . Int_t ; hmerged, . Int_t ; nmerged, . TMatrixD & ; sscp, . Double_t * ; ndist . ). protected . creates a subset of hmerged vectors with smallest orthogonal distances to the hyperplane hyp[1]*(x1-mean[1])+...+hyp[nvar]*(xnvar-mean[nvar])=0 This function is called in case when less than fH samples lie on a hyperplane. ; Definition at line 968 of file TRobustEstimator.cxx. ◆ CreateSubset(). void TRobustEstimator::CreateSubset ; (; Int_t ; ntotal, . Int_t ; htotal, . Int_t ; p, . Int_t * ; index, . TMatrixD & ; data, . TMatrixD & ; sscp, . Double_t * ; ndist . ). protected . creates a subset of htotal elements from ntotal elements first, p+1 elements are drawn randomly(without repetitions) if their covariance matrix is singular, more elements are added one by one, until their covariance matrix becomes regular or it becomes clear that htotal observations lie on a hyperplane If covariance matrix determinant!=0, distances of all ntotal elements are calculated, using formula d_i=Sqrt((x_i-M)*S_inv*(x_i-M)), where M is mean and S_inv is the inverse of the covariance matrix htotal points with smallest distances are included in the returned subset. ; Definition at line 878 of file TRobustEstimator.cxx. ◆ CStep(). Double_t TRobustEstimator::CStep ; (; Int_t ; ntotal, . Int_t ; htotal, . Int_t * ; index, . TMatrixD & ; data, . TMatrixD & ; sscp, . Double_t * ; ndist . ). protected . from the input htotal-subset constructs another htotal subset with lower determinant ; As proven by Peter J.Rousseeuw and Katrien Van Driessen, if distances for all elements are calculated, using the formula:d_i=Sqrt((x_i-M)*S_inv*(x_i-M)), where M is the mean of the input htotal-subset, and S_inv - the inverse of its covariance matrix, then htotal elements with smallest distances will have covariance matrix with determinant less or equal to the determinant of the inpu",MatchSource.WIKI,doc/master/classTRobustEstimator.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRobustEstimator.html
https://root.cern/doc/master/classTRolke.html:6351,Availability,error,error,6351,"e reference above that it has good coverage properties for most cases, and can be used where FeldmannCousins can't.; What are the advantages of TRolke over TLimit? TRolke is fully frequentist. TLimit treats nuisance parameters Bayesian. For a coverage study of a Bayesian method refer to physics/0408039 (Tegenfeldt & J.C). However, this note studies the coverage of Feldman&Cousins with Bayesian treatment of nuisance parameters. To make a long story short: using the Bayesian method you might introduce a small amount of over-coverage (though I haven't shown it for TLimit). On the other hand, coverage of course is a not so interesting when you consider yourself a Bayesian. . Definition at line 33 of file TRolke.h. Public Member Functions;  TRolke (Double_t CL=0.9, Option_t *option="""");  Constructor with optional Confidence Level argument. ;  ;  ~TRolke () override;  Destructor. ;  ; Double_t CalculateInterval (Int_t x, Int_t y, Int_t z, Double_t bm, Double_t em, Double_t e, Int_t mid, Double_t sde, Double_t sdb, Double_t tau, Double_t b, Int_t m);  Deprecated and error prone model selection interface. ;  ; bool GetBounding () const;  ; Double_t GetCL () const;  ; bool GetCriticalNumber (Int_t &ncrit, Int_t maxtry=-1);  get the value of x corresponding to rejection of the null hypothesis. ;  ; bool GetLimits (Double_t &low, Double_t &high);  Calculate and get the upper and lower limits for the pre-specified model. ;  ; bool GetLimitsML (Double_t &low, Double_t &high, Int_t &out_x);  get the upper and lower limits for the most likely outcome. ;  ; bool GetLimitsQuantile (Double_t &low, Double_t &high, Int_t &out_x, Double_t integral=0.5);  get the upper and lower limits for the outcome corresponding to a given quantile. ;  ; Double_t GetLowerLimit ();  Calculate and get lower limit for the pre-specified model. ;  ; bool GetSensitivity (Double_t &low, Double_t &high, Double_t pPrecision=0.00001);  get the upper and lower average limits based on the specified model. ;  ; Do",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:10598,Availability,error,error,10598,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:10687,Availability,error,error,10687,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:10842,Availability,error,error,10842,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:11139,Availability,error,error,11139,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:15582,Availability,error,error,15582,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:23366,Availability,error,error,23366,"tions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRolke.h>. Inheritance diagram for TRolke:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRolke(). TRolke::TRolke ; (; Double_t ; CL = 0.9, . Option_t * ; option = """" . ). Constructor with optional Confidence Level argument. ; 'option' is not used. ; Definition at line 176 of file TRolke.cxx. ◆ ~TRolke(). TRolke::~TRolke ; (; ). override . Destructor. ; Definition at line 190 of file TRolke.cxx. Member Function Documentation. ◆ CalculateInterval(). Double_t TRolke::CalculateInterval ; (; Int_t ; x, . Int_t ; y, . Int_t ; z, . Double_t ; bm, . Double_t ; em, . Double_t ; e, . Int_t ; mid, . Double_t ; sde, . Double_t ; sdb, . Double_t ; tau, . Double_t ; b, . Int_t ; m . ). Deprecated and error prone model selection interface. ; It's use is trongly discouraged. 'mid' is the model ID (1 to 7). This method is provided for backwards compatibility/developer use only. *‍/; x : number of observed events in the experiment; y : number of observed events in background region; z : number of MC events observed; bm : estimate of the background; em : estimate of the efficiency; e : true efficiency (considered known); mid : internal model id (really, you should not use this method at all); sde : efficiency estimate's standard deviation; sdb : background estimate's standard deviation; tau : ratio parameter (read TRolke.cxx for details); b : background expectation value (considered known); m : number of MC events generated . Definition at line 638 of file TRolke.cxx. ◆ Class(). static TClass * TRolke::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRolke::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr V",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:390,Integrability,interface,interface,390,". ROOT: TRolke Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; TRolke Class ReferenceMath » Legacy Physics Classes. ; Legacy Code TRolke is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TRolke might still be a valid solution. Consider switching to RooStats.; This class computes confidence intervals for the rate of a Poisson process in the presence of uncertain background and/or efficiency. ; The treatment and the resulting limits are fully frequentist. The limit calculations make use of the profile likelihood method.; AuthorJan Conrad (CERN) 2004, Updated: Johan Lundberg (CERN) 2009; For a full list of methods and their syntax, and build instructions, consult the header file TRolke.h.; Examples/tutorials are found in the separate file Rolke.C. TRolke implements the following Models; The signal is always assumed to be Poisson, with the following combinations of models of background and detection efficiency:; If unsure, first consider model 3, 4 or 5.; 1: SetPoissonBkgBinomEff(x,y,z,tau,m) Background: Poisson; Efficiency: Binomial; when the background is simultaneously measured from sidebands (or MC), and the signal efficiency was determined from Monte Carlo; 2: SetPoissonBkgGaussEff(x,y,em,tau,sde) Background: Poisson; Efficiency: Gaussian; when the background is simultaneously measured from sidebands (or MC), and the efficiency is modeled as Gaussian; 3: SetGaussBkgGaussEff(x,bm,em,sde,sdb) Background: Gaussian; Efficiency: Gaussian; when background and efficiency can both be modeled as Gaussian.; 4: SetPoissonBkgKnownEff(x,y,tau,e) Background: Poisson; Efficiency: Known; when the background is si",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:531,Integrability,depend,depending,531,". ROOT: TRolke Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; TRolke Class ReferenceMath » Legacy Physics Classes. ; Legacy Code TRolke is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TRolke might still be a valid solution. Consider switching to RooStats.; This class computes confidence intervals for the rate of a Poisson process in the presence of uncertain background and/or efficiency. ; The treatment and the resulting limits are fully frequentist. The limit calculations make use of the profile likelihood method.; AuthorJan Conrad (CERN) 2004, Updated: Johan Lundberg (CERN) 2009; For a full list of methods and their syntax, and build instructions, consult the header file TRolke.h.; Examples/tutorials are found in the separate file Rolke.C. TRolke implements the following Models; The signal is always assumed to be Poisson, with the following combinations of models of background and detection efficiency:; If unsure, first consider model 3, 4 or 5.; 1: SetPoissonBkgBinomEff(x,y,z,tau,m) Background: Poisson; Efficiency: Binomial; when the background is simultaneously measured from sidebands (or MC), and the signal efficiency was determined from Monte Carlo; 2: SetPoissonBkgGaussEff(x,y,em,tau,sde) Background: Poisson; Efficiency: Gaussian; when the background is simultaneously measured from sidebands (or MC), and the efficiency is modeled as Gaussian; 3: SetGaussBkgGaussEff(x,bm,em,sde,sdb) Background: Gaussian; Efficiency: Gaussian; when background and efficiency can both be modeled as Gaussian.; 4: SetPoissonBkgKnownEff(x,y,tau,e) Background: Poisson; Efficiency: Known; when the background is si",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:6379,Integrability,interface,interface,6379,"e reference above that it has good coverage properties for most cases, and can be used where FeldmannCousins can't.; What are the advantages of TRolke over TLimit? TRolke is fully frequentist. TLimit treats nuisance parameters Bayesian. For a coverage study of a Bayesian method refer to physics/0408039 (Tegenfeldt & J.C). However, this note studies the coverage of Feldman&Cousins with Bayesian treatment of nuisance parameters. To make a long story short: using the Bayesian method you might introduce a small amount of over-coverage (though I haven't shown it for TLimit). On the other hand, coverage of course is a not so interesting when you consider yourself a Bayesian. . Definition at line 33 of file TRolke.h. Public Member Functions;  TRolke (Double_t CL=0.9, Option_t *option="""");  Constructor with optional Confidence Level argument. ;  ;  ~TRolke () override;  Destructor. ;  ; Double_t CalculateInterval (Int_t x, Int_t y, Int_t z, Double_t bm, Double_t em, Double_t e, Int_t mid, Double_t sde, Double_t sdb, Double_t tau, Double_t b, Int_t m);  Deprecated and error prone model selection interface. ;  ; bool GetBounding () const;  ; Double_t GetCL () const;  ; bool GetCriticalNumber (Int_t &ncrit, Int_t maxtry=-1);  get the value of x corresponding to rejection of the null hypothesis. ;  ; bool GetLimits (Double_t &low, Double_t &high);  Calculate and get the upper and lower limits for the pre-specified model. ;  ; bool GetLimitsML (Double_t &low, Double_t &high, Int_t &out_x);  get the upper and lower limits for the most likely outcome. ;  ; bool GetLimitsQuantile (Double_t &low, Double_t &high, Int_t &out_x, Double_t integral=0.5);  get the upper and lower limits for the outcome corresponding to a given quantile. ;  ; Double_t GetLowerLimit ();  Calculate and get lower limit for the pre-specified model. ;  ; bool GetSensitivity (Double_t &low, Double_t &high, Double_t pPrecision=0.00001);  get the upper and lower average limits based on the specified model. ;  ; Do",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:10604,Integrability,message,message,10604,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:11145,Integrability,message,message,11145,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:12347,Integrability,message,message,12347,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:15588,Integrability,message,message,15588,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:15961,Integrability,message,message,15961," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:23394,Integrability,interface,interface,23394,"tions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRolke.h>. Inheritance diagram for TRolke:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRolke(). TRolke::TRolke ; (; Double_t ; CL = 0.9, . Option_t * ; option = """" . ). Constructor with optional Confidence Level argument. ; 'option' is not used. ; Definition at line 176 of file TRolke.cxx. ◆ ~TRolke(). TRolke::~TRolke ; (; ). override . Destructor. ; Definition at line 190 of file TRolke.cxx. Member Function Documentation. ◆ CalculateInterval(). Double_t TRolke::CalculateInterval ; (; Int_t ; x, . Int_t ; y, . Int_t ; z, . Double_t ; bm, . Double_t ; em, . Double_t ; e, . Int_t ; mid, . Double_t ; sde, . Double_t ; sdb, . Double_t ; tau, . Double_t ; b, . Int_t ; m . ). Deprecated and error prone model selection interface. ; It's use is trongly discouraged. 'mid' is the model ID (1 to 7). This method is provided for backwards compatibility/developer use only. *‍/; x : number of observed events in the experiment; y : number of observed events in background region; z : number of MC events observed; bm : estimate of the background; em : estimate of the efficiency; e : true efficiency (considered known); mid : internal model id (really, you should not use this method at all); sde : efficiency estimate's standard deviation; sdb : background estimate's standard deviation; tau : ratio parameter (read TRolke.cxx for details); b : background expectation value (considered known); m : number of MC events generated . Definition at line 638 of file TRolke.cxx. ◆ Class(). static TClass * TRolke::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRolke::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr V",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:8837,Modifiability,inherit,inherited,8837,"ble_t e);  Model 5: Background - Gaussian, Efficiency - known (x,bm,sdb,e. ;  ; void SetKnownBkgBinomEff (Int_t x, Int_t z, Int_t m, Double_t b);  Model 6: Background - known, Efficiency - Binomial (x,z,m,b) ;  ; void SetKnownBkgGaussEff (Int_t x, Double_t em, Double_t sde, Double_t b);  Model 7: Background - known, Efficiency - Gaussian (x,em,sde,b) ;  ; void SetPoissonBkgBinomEff (Int_t x, Int_t y, Int_t z, Double_t tau, Int_t m);  Model 1: Background - Poisson, Efficiency - Binomial. ;  ; void SetPoissonBkgGaussEff (Int_t x, Int_t y, Double_t em, Double_t tau, Double_t sde);  Model 2: Background - Poisson, Efficiency - Gaussian. ;  ; void SetPoissonBkgKnownEff (Int_t x, Int_t y, Double_t tau, Double_t e);  Model 4: Background - Poisson, Efficiency - known (x,y,tau,e) ;  ; void SetSwitch (bool bnd);  Deprecated name for SetBounding. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:10234,Modifiability,inherit,inheritance,10234,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:12445,Modifiability,inherit,inherits,12445,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:12562,Modifiability,inherit,inherits,12562,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:16462,Modifiability,inherit,inherited,16462,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; Double_t ComputeInterval (Int_t x, Int_t y, Int_t z, Double_t bm, Double_t em, Double_t e, Int_t mid, Double_t sde, Double_t sdb, Double_t tau, Double_t b, Int_t m);  ComputeInterval, the internals. ;  ; Double_t EvalLikeMod1 (Double_t mu, Int_t x, Int_t y, Int_t z, Double_t tau, Int_t m, Int_t what);  Calculates the Profile Likelihood for MODEL 1: Poisson background/ Binomial Efficiency. ;  ; Double_t EvalLikeMod2 (Double_t mu, Int_t x, Int_t y, Double_t em, Double_t sde, Double_t tau, Int_t w",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:21643,Modifiability,inherit,inherited,21643," m);  Helper for calculation of estimates of efficiency and background for model 1. ;  ; void SetModelParameters ();  ; void SetModelParameters (Int_t x, Int_t y, Int_t z, Double_t bm, Double_t em, Double_t e, Int_t mid, Double_t sde, Double_t sdb, Double_t tau, Double_t b, Int_t m);  . Static Private Member Functions; static Double_t EvalMonomial (Double_t x, const Int_t coef[], Int_t N);  Evaluate mononomial. ;  ; static Double_t EvalPolynomial (Double_t x, const Int_t coef[], Int_t N);  Evaluate polynomial. ;  . Private Attributes; Double_t f_b;  ; Double_t f_bm;  ; Double_t f_e;  ; Double_t f_em;  ; Int_t f_m;  ; Int_t f_mid;  ; Double_t f_sdb;  ; Double_t f_sde;  ; Double_t f_tau;  ; Int_t f_x;  ; Int_t f_y;  ; Int_t f_z;  ; bool fBounding;  ; Double_t fCL;  ; Double_t fLowerLimit;  ; Int_t fNumWarningsDeprecated1;  ; Int_t fNumWarningsDeprecated2;  ; Double_t fUpperLimit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRolke.h>. Inheritance diagram for TRolke:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; ",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:22284,Modifiability,inherit,inherited,22284,";  ; Int_t f_x;  ; Int_t f_y;  ; Int_t f_z;  ; bool fBounding;  ; Double_t fCL;  ; Double_t fLowerLimit;  ; Int_t fNumWarningsDeprecated1;  ; Int_t fNumWarningsDeprecated2;  ; Double_t fUpperLimit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRolke.h>. Inheritance diagram for TRolke:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRolke(). TRolke::TRolke ; (; Double_t ; CL = 0.9, . Option_t * ; option = """" . ). Constructor with optional Confidence Level argument. ; 'option' is not used. ; Definition at line 176 of file TRolke.cxx. ◆ ~TRolke(). TRolke::~TRolke ; (; ). override . Destructor. ; Definition at line 190 of file TRolke.cxx. Member Function Documentation. ◆ CalculateInterval(). Double_t TRolke::CalculateInterval ; (; Int_t ; x, . Int_t ; y, . Int_t ; z, . Double_t ; bm, . Double_t ; em, . Double_t ; e, . Int_t ; mid, . Double_t ; sde, . Double_t ; sdb, . Double_t ; tau, . Double_t ; b, . Int_t ; m . ). Deprecated and error prone model selection inter",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:22383,Modifiability,inherit,inherited,22383,";  ; Int_t f_x;  ; Int_t f_y;  ; Int_t f_z;  ; bool fBounding;  ; Double_t fCL;  ; Double_t fLowerLimit;  ; Int_t fNumWarningsDeprecated1;  ; Int_t fNumWarningsDeprecated2;  ; Double_t fUpperLimit;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRolke.h>. Inheritance diagram for TRolke:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRolke(). TRolke::TRolke ; (; Double_t ; CL = 0.9, . Option_t * ; option = """" . ). Constructor with optional Confidence Level argument. ; 'option' is not used. ; Definition at line 176 of file TRolke.cxx. ◆ ~TRolke(). TRolke::~TRolke ; (; ). override . Destructor. ; Definition at line 190 of file TRolke.cxx. Member Function Documentation. ◆ CalculateInterval(). Double_t TRolke::CalculateInterval ; (; Int_t ; x, . Int_t ; y, . Int_t ; z, . Double_t ; bm, . Double_t ; em, . Double_t ; e, . Int_t ; mid, . Double_t ; sde, . Double_t ; sdb, . Double_t ; tau, . Double_t ; b, . Int_t ; m . ). Deprecated and error prone model selection inter",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:1275,Safety,detect,detection,1275,"vate Member Functions |; Private Attributes |; List of all members ; TRolke Class ReferenceMath » Legacy Physics Classes. ; Legacy Code TRolke is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TRolke might still be a valid solution. Consider switching to RooStats.; This class computes confidence intervals for the rate of a Poisson process in the presence of uncertain background and/or efficiency. ; The treatment and the resulting limits are fully frequentist. The limit calculations make use of the profile likelihood method.; AuthorJan Conrad (CERN) 2004, Updated: Johan Lundberg (CERN) 2009; For a full list of methods and their syntax, and build instructions, consult the header file TRolke.h.; Examples/tutorials are found in the separate file Rolke.C. TRolke implements the following Models; The signal is always assumed to be Poisson, with the following combinations of models of background and detection efficiency:; If unsure, first consider model 3, 4 or 5.; 1: SetPoissonBkgBinomEff(x,y,z,tau,m) Background: Poisson; Efficiency: Binomial; when the background is simultaneously measured from sidebands (or MC), and the signal efficiency was determined from Monte Carlo; 2: SetPoissonBkgGaussEff(x,y,em,tau,sde) Background: Poisson; Efficiency: Gaussian; when the background is simultaneously measured from sidebands (or MC), and the efficiency is modeled as Gaussian; 3: SetGaussBkgGaussEff(x,bm,em,sde,sdb) Background: Gaussian; Efficiency: Gaussian; when background and efficiency can both be modeled as Gaussian.; 4: SetPoissonBkgKnownEff(x,y,tau,e) Background: Poisson; Efficiency: Known; when the background is simultaneously measured from sidebands (or MC).; 5: SetGaussBkgKnownEff(x,bm,sdb,e) Background: Gaussian; Efficiency: Known; when background is Gaussian; 6: SetKnownBkgBinomEff(x,z,b,m) Background: Known; Efficiency: Binomial; when sign",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:2577,Safety,detect,detection,2577,"f(x,y,em,tau,sde) Background: Poisson; Efficiency: Gaussian; when the background is simultaneously measured from sidebands (or MC), and the efficiency is modeled as Gaussian; 3: SetGaussBkgGaussEff(x,bm,em,sde,sdb) Background: Gaussian; Efficiency: Gaussian; when background and efficiency can both be modeled as Gaussian.; 4: SetPoissonBkgKnownEff(x,y,tau,e) Background: Poisson; Efficiency: Known; when the background is simultaneously measured from sidebands (or MC).; 5: SetGaussBkgKnownEff(x,bm,sdb,e) Background: Gaussian; Efficiency: Known; when background is Gaussian; 6: SetKnownBkgBinomEff(x,z,b,m) Background: Known; Efficiency: Binomial; when signal efficiency was determined from Monte Carlo; 7: SetKnownBkgGaussEff(x,em,sde,b) Background: Known; Efficiency: Gaussian; when background is known and efficiency Gaussian. Parameters and further explanation; For all models:; x = number of observed events in the experiment; xDouble_t x[n]Definition legend1.C:17; Efficiency (e or em) is the detection probability for signal. A low efficiency hence generally means weaker limits. If the efficiency of an experiment (with analysis cuts) is dealt with elsewhere, em or e can be set to one.; For Poisson background measurements (sideband or MC):; y = number of observed events in background region; tau =; Either: the ratio between signal and background region; in case background is observed.; Or: the ratio between observed and simulated live-time; in case background is determined from MC.; yDouble_t y[n]Definition legend1.C:17; For Gaussian efficiency or background:; bm = estimate of the background; sdb = corresponding standard deviation; ; em = estimate of the efficiency; sde = corresponding standard deviation; If the efficiency scale of dealt with elsewhere, set em to 1 and sde to the relative uncertainty.; For Binomial signal efficiency:; m = number of MC events generated; z = number of MC events observed; mTMarker mDefinition textangle.C:8; For the case of known background expe",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:12076,Security,hash,hash,12076," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:20545,Testability,log,logGamma,20545,"3 (Double_t mu, Double_t b, Double_t e, Int_t x, Double_t bm, Double_t em, Double_t u, Double_t v);  Profile Likelihood function for MODEL 3: Gauss background/Gauss Efficiency. ;  ; Double_t LikeMod4 (Double_t mu, Double_t b, Int_t x, Int_t y, Double_t tau);  Profile Likelihood function for MODEL 4: Poiss background/Efficiency known. ;  ; Double_t LikeMod5 (Double_t mu, Double_t b, Int_t x, Double_t bm, Double_t u);  Profile Likelihood function for MODEL 5: Gauss background/Efficiency known. ;  ; Double_t LikeMod6 (Double_t mu, Double_t b, Double_t e, Int_t x, Int_t z, Int_t m);  Profile Likelihood function for MODEL 6: background known/ Efficiency binomial. ;  ; Double_t LikeMod7 (Double_t mu, Double_t b, Double_t e, Int_t x, Double_t em, Double_t v);  Profile Likelihood function for MODEL 6: background known/ Efficiency gaussian. ;  ; Double_t LogFactorial (Int_t n);  LogFactorial function (use the logGamma function via the relation Gamma(n+1) = n! ;  ; void ProfLikeMod1 (Double_t mu, Double_t &b, Double_t &e, Int_t x, Int_t y, Int_t z, Double_t tau, Int_t m);  Helper for calculation of estimates of efficiency and background for model 1. ;  ; void SetModelParameters ();  ; void SetModelParameters (Int_t x, Int_t y, Int_t z, Double_t bm, Double_t em, Double_t e, Int_t mid, Double_t sde, Double_t sdb, Double_t tau, Double_t b, Int_t m);  . Static Private Member Functions; static Double_t EvalMonomial (Double_t x, const Int_t coef[], Int_t N);  Evaluate mononomial. ;  ; static Double_t EvalPolynomial (Double_t x, const Int_t coef[], Int_t N);  Evaluate polynomial. ;  . Private Attributes; Double_t f_b;  ; Double_t f_bm;  ; Double_t f_e;  ; Double_t f_em;  ; Int_t f_m;  ; Int_t f_mid;  ; Double_t f_sdb;  ; Double_t f_sde;  ; Double_t f_tau;  ; Int_t f_x;  ; Int_t f_y;  ; Int_t f_z;  ; bool fBounding;  ; Double_t fCL;  ; Double_t fLowerLimit;  ; Int_t fNumWarningsDeprecated1;  ; Int_t fNumWarningsDeprecated2;  ; Double_t fUpperLimit;  . Additional Inherited Members;  P",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:36138,Testability,log,logGamma,36138,"ncy known. ; Definition at line 1243 of file TRolke.cxx. ◆ LikeMod5(). Double_t TRolke::LikeMod5 ; (; Double_t ; mu, . Double_t ; b, . Int_t ; x, . Double_t ; bm, . Double_t ; u . ). private . Profile Likelihood function for MODEL 5: Gauss background/Efficiency known. ; Definition at line 1288 of file TRolke.cxx. ◆ LikeMod6(). Double_t TRolke::LikeMod6 ; (; Double_t ; mu, . Double_t ; b, . Double_t ; e, . Int_t ; x, . Int_t ; z, . Int_t ; m . ). private . Profile Likelihood function for MODEL 6: background known/ Efficiency binomial. ; Definition at line 1343 of file TRolke.cxx. ◆ LikeMod7(). Double_t TRolke::LikeMod7 ; (; Double_t ; mu, . Double_t ; b, . Double_t ; e, . Int_t ; x, . Double_t ; em, . Double_t ; v . ). private . Profile Likelihood function for MODEL 6: background known/ Efficiency gaussian. ; Definition at line 1398 of file TRolke.cxx. ◆ LogFactorial(). Double_t TRolke::LogFactorial ; (; Int_t ; n). private . LogFactorial function (use the logGamma function via the relation Gamma(n+1) = n! ; Definition at line 1449 of file TRolke.cxx. ◆ Print(). void TRolke::Print ; (; Option_t * ; ); const. overridevirtual . Dump internals. Print members. ; Reimplemented from TObject.; Definition at line 594 of file TRolke.cxx. ◆ ProfLikeMod1(). void TRolke::ProfLikeMod1 ; (; Double_t ; mu, . Double_t & ; b, . Double_t & ; e, . Int_t ; x, . Int_t ; y, . Int_t ; z, . Double_t ; tau, . Int_t ; m . ). private . Helper for calculation of estimates of efficiency and background for model 1. ; Definition at line 1030 of file TRolke.cxx. ◆ SetBounding(). void TRolke::SetBounding ; (; const bool ; bnd). inline . Definition at line 184 of file TRolke.h. ◆ SetCL(). void TRolke::SetCL ; (; Double_t ; CL). inline . Definition at line 124 of file TRolke.h. ◆ SetCLSigmas(). void TRolke::SetCLSigmas ; (; Double_t ; CLsigmas). inline . Definition at line 129 of file TRolke.h. ◆ SetGaussBkgGaussEff(). void TRolke::SetGaussBkgGaussEff ; (; Int_t ; x, . Double_t ; bm, . Double_t ; em, ",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:18514,Usability,simpl,simple,18514,"oisson background/ Gauss Efficiency. ;  ; Double_t EvalLikeMod3 (Double_t mu, Int_t x, Double_t bm, Double_t em, Double_t sde, Double_t sdb, Int_t what);  Calculates the Profile Likelihood for MODEL 3: Gauss background/ Gauss Efficiency. ;  ; Double_t EvalLikeMod4 (Double_t mu, Int_t x, Int_t y, Double_t tau, Int_t what);  Calculates the Profile Likelihood for MODEL 4: Poiss background/Efficiency known. ;  ; Double_t EvalLikeMod5 (Double_t mu, Int_t x, Double_t bm, Double_t sdb, Int_t what);  Calculates the Profile Likelihood for MODEL 5: Gauss background/Efficiency known. ;  ; Double_t EvalLikeMod6 (Double_t mu, Int_t x, Int_t z, Double_t b, Int_t m, Int_t what);  Calculates the Profile Likelihood for MODEL 6: Background known/Efficiency binomial. ;  ; Double_t EvalLikeMod7 (Double_t mu, Int_t x, Double_t em, Double_t sde, Double_t b, Int_t what);  Calculates the Profile Likelihood for MODEL 7: background known/Efficiency Gauss. ;  ; Double_t GetBackground ();  Return a simple background value (estimate/truth) given the pre-specified model. ;  ; Double_t Interval (Int_t x, Int_t y, Int_t z, Double_t bm, Double_t em, Double_t e, Int_t mid, Double_t sde, Double_t sdb, Double_t tau, Double_t b, Int_t m);  Internal helper function 'Interval'. ;  ; Double_t LikeGradMod1 (Double_t e, Double_t mu, Int_t x, Int_t y, Int_t z, Double_t tau, Int_t m);  Gradient model likelihood. ;  ; Double_t Likelihood (Double_t mu, Int_t x, Int_t y, Int_t z, Double_t bm, Double_t em, Int_t mid, Double_t sde, Double_t sdb, Double_t tau, Double_t b, Int_t m, Int_t what);  Internal helper function Chooses between the different profile likelihood functions to use for the different models. ;  ; Double_t LikeMod1 (Double_t mu, Double_t b, Double_t e, Int_t x, Int_t y, Int_t z, Double_t tau, Int_t m);  Profile Likelihood function for MODEL 1: Poisson background/ Binomial Efficiency. ;  ; Double_t LikeMod2 (Double_t mu, Double_t b, Double_t e, Int_t x, Int_t y, Double_t em, Double_t tau, Double_t v",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTRolke.html:29845,Usability,simpl,simple,29845,"EvalLikeMod7 ; (; Double_t ; mu, . Int_t ; x, . Double_t ; em, . Double_t ; sde, . Double_t ; b, . Int_t ; what . ). private . Calculates the Profile Likelihood for MODEL 7: background known/Efficiency Gauss. . what = 1: Maximum likelihood estimate is returned; what = 2: Profile Likelihood of Maximum Likelihood estimate is returned.; what = 3: Profile Likelihood of Test hypothesis is returned otherwise parameters as described in the beginning of the class) . Definition at line 1366 of file TRolke.cxx. ◆ EvalMonomial(). Double_t TRolke::EvalMonomial ; (; Double_t ; x, . const Int_t ; coef[], . Int_t ; N . ). staticprivate . Evaluate mononomial. ; Definition at line 1430 of file TRolke.cxx. ◆ EvalPolynomial(). Double_t TRolke::EvalPolynomial ; (; Double_t ; x, . const Int_t ; coef[], . Int_t ; N . ). staticprivate . Evaluate polynomial. ; Definition at line 1413 of file TRolke.cxx. ◆ GetBackground(). Double_t TRolke::GetBackground ; (; ). private . Return a simple background value (estimate/truth) given the pre-specified model. ; Definition at line 418 of file TRolke.cxx. ◆ GetBounding(). bool TRolke::GetBounding ; (; ); const. inline . Definition at line 178 of file TRolke.h. ◆ GetCL(). Double_t TRolke::GetCL ; (; ); const. inline . Definition at line 121 of file TRolke.h. ◆ GetCriticalNumber(). bool TRolke::GetCriticalNumber ; (; Int_t & ; ncrit, . Int_t ; maxtry = -1 . ). get the value of x corresponding to rejection of the null hypothesis. ; This means a lower limit >0 with the pre-specified Confidence Level. Optionally give maxtry; the maximum value of x to try. Of not, or if maxtry<0 an automatic mode is used. ; Definition at line 547 of file TRolke.cxx. ◆ GetLimits(). bool TRolke::GetLimits ; (; Double_t & ; low, . Double_t & ; high . ). Calculate and get the upper and lower limits for the pre-specified model. ; Definition at line 374 of file TRolke.cxx. ◆ GetLimitsML(). bool TRolke::GetLimitsML ; (; Double_t & ; low, . Double_t & ; high, . Int_t & ; out_x . ). ",MatchSource.WIKI,doc/master/classTRolke.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTRolke.html
https://root.cern/doc/master/classTROOT-members.html:2755,Availability,error,error,2755,"ROOTstatic; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TROOTinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; DecreaseDirLevel()TROOTstatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTDirectoryvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EndOfProcessCleanups()TROOT; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fApplicationTROOTprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBatchTROOTprotected; fBitsTObjectprivate; fBrowsablesTROOTprotected; fBrowsersTROOTprotected; fBuiltDateTROOTprotected; fBuiltTimeTROOTprotected; fCanvasesTROOTprotected; fClassesTROOTprotected; fClassGeneratorsTROOTprotected; fCleanupsTROOTprotected; fClipboardTROOTprotected; fClosedObjectsTROOTprotected; fColorsTROOTprotected; fConfigFeaturesTROOTprotected; fConfigOptionsTROOTprotected; fContextTDirectoryprotected; fContextPegTDirectoryprotected; fCutClassNameTROOTprotected; fDataSetsTROOTprotected; fDefCanvasNameTROOTprotected; fEditHistogramsTROOTprotected; fEditorModeTROOTprotected; fEnumsTROOTprotected; fEscapeTROOTprotected; fExecutingMacroTROOTprotected; fFilesTROOTprotected; fForceStyleTROOTprotected; fFromPopUpTROOTprotected; fFuncTemplateTROOTprotected; fFunctionsTROOTprotect",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:2836,Availability,error,error,2836,"ROOTstatic; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TROOTinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; DecreaseDirLevel()TROOTstatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTDirectoryvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EndOfProcessCleanups()TROOT; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fApplicationTROOTprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBatchTROOTprotected; fBitsTObjectprivate; fBrowsablesTROOTprotected; fBrowsersTROOTprotected; fBuiltDateTROOTprotected; fBuiltTimeTROOTprotected; fCanvasesTROOTprotected; fClassesTROOTprotected; fClassGeneratorsTROOTprotected; fCleanupsTROOTprotected; fClipboardTROOTprotected; fClosedObjectsTROOTprotected; fColorsTROOTprotected; fConfigFeaturesTROOTprotected; fConfigOptionsTROOTprotected; fContextTDirectoryprotected; fContextPegTDirectoryprotected; fCutClassNameTROOTprotected; fDataSetsTROOTprotected; fDefCanvasNameTROOTprotected; fEditHistogramsTROOTprotected; fEditorModeTROOTprotected; fEnumsTROOTprotected; fEscapeTROOTprotected; fExecutingMacroTROOTprotected; fFilesTROOTprotected; fForceStyleTROOTprotected; fFromPopUpTROOTprotected; fFuncTemplateTROOTprotected; fFunctionsTROOTprotect",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:12914,Availability,error,error,12914,"tinline; IsProofServ() constTROOTinline; IsRootFile(const char *filename) constTROOT; IsSortable() const overrideTNamedinlinevirtual; IsWebDisplay() constTROOTinline; IsWebDisplayBatch() constTROOTinline; IsWritable() constTDirectoryinlinevirtual; IsZombie() constTObjectinline; kBitMask enum valueTObject; kCanDelete enum valueTObject; kCannotPick enum valueTObject; kHasUUID enum valueTObject; kInconsistent enum valueTObject; kInvalidObject enum valueTObject; kIsOnHeap enum valueTObject; kIsReferenced enum valueTObject; kMustCleanup enum valueTObject; kNoContextMenu enum valueTObject; kNotDeleted enum valueTObject; kObjInCanvas enum valueTObject; kOnlyPrepStep enum valueTObjectprotected; kOverwrite enum valueTObject; kSingleKey enum valueTObject; kWriteDelete enum valueTObject; kZombie enum valueTObject; LoadClass(const char *classname, const char *libname, Bool_t check=kFALSE)TROOT; LoadClass(const char *name, Bool_t silent=kFALSE) constTROOT; LoadMacro(const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE)TROOT; ls(Option_t *option="""") const overrideTROOTvirtual; Macro(const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE)TROOT; MakeDefCanvas() constTROOT; MakeZombie()TObjectinlineprotected; MayNotUse(const char *method) constTObject; Message(Int_t id, const TObject *obj)TROOT; mkdir(const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE)TDirectoryvirtual; MustClean() constTROOTinline; Notify()TObjectvirtual; Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) constTObject; OpenFile(const char *, Option_t *="""", const char *="""", Int_t=1, Int_t=0)TDirectoryinlinevirtual; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t l)TROOTinlineprotected; operator new(size_t l, void *ptr)TROOTinlineprotected; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, ",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:13043,Availability,error,error,13043,"ual; IsWebDisplay() constTROOTinline; IsWebDisplayBatch() constTROOTinline; IsWritable() constTDirectoryinlinevirtual; IsZombie() constTObjectinline; kBitMask enum valueTObject; kCanDelete enum valueTObject; kCannotPick enum valueTObject; kHasUUID enum valueTObject; kInconsistent enum valueTObject; kInvalidObject enum valueTObject; kIsOnHeap enum valueTObject; kIsReferenced enum valueTObject; kMustCleanup enum valueTObject; kNoContextMenu enum valueTObject; kNotDeleted enum valueTObject; kObjInCanvas enum valueTObject; kOnlyPrepStep enum valueTObjectprotected; kOverwrite enum valueTObject; kSingleKey enum valueTObject; kWriteDelete enum valueTObject; kZombie enum valueTObject; LoadClass(const char *classname, const char *libname, Bool_t check=kFALSE)TROOT; LoadClass(const char *name, Bool_t silent=kFALSE) constTROOT; LoadMacro(const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE)TROOT; ls(Option_t *option="""") const overrideTROOTvirtual; Macro(const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE)TROOT; MakeDefCanvas() constTROOT; MakeZombie()TObjectinlineprotected; MayNotUse(const char *method) constTObject; Message(Int_t id, const TObject *obj)TROOT; mkdir(const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE)TDirectoryvirtual; MustClean() constTROOTinline; Notify()TObjectvirtual; Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) constTObject; OpenFile(const char *, Option_t *="""", const char *="""", Int_t=1, Int_t=0)TDirectoryinlinevirtual; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t l)TROOTinlineprotected; operator new(size_t l, void *ptr)TROOTinlineprotected; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TROOT &)=deleteTROOTprivate; TDirectory::operator=(const TDirectory &)=deleteTDirectorypr",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:14324,Availability,error,error,14324,"rectoryvirtual; MustClean() constTROOTinline; Notify()TObjectvirtual; Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) constTObject; OpenFile(const char *, Option_t *="""", const char *="""", Int_t=1, Int_t=0)TDirectoryinlinevirtual; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t l)TROOTinlineprotected; operator new(size_t l, void *ptr)TROOTinlineprotected; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TROOT &)=deleteTROOTprivate; TDirectory::operator=(const TDirectory &)=deleteTDirectoryprotected; TNamed::operator=(const TNamed &rhs)TNamed; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""") overrideTDirectoryvirtual; Pop()TObjectvirtual; Print(Option_t *option="""") const overrideTDirectoryvirtual; ProcessLine(const char *line, Int_t *error=nullptr)TROOT; ProcessLineFast(const char *line, Int_t *error=nullptr)TROOT; ProcessLineSync(const char *line, Int_t *error=nullptr)TROOT; Purge(Short_t=1)TDirectoryinlinevirtual; pwd() constTDirectoryvirtual; Read(const char *name)TObjectvirtual; ReadAll(Option_t *="""")TDirectoryinlinevirtual; ReadGitInfo()TROOTprotected; ReadingObject() constTROOT; ReadKeys(Bool_t=kTRUE)TDirectoryinlinevirtual; ReadTObject(TObject *, const char *)TDirectoryinlinevirtual; RecursiveRemove(TObject *obj) overrideTROOTvirtual; RefreshBrowsers()TROOT; RegisterContext(TContext *ctxt)TDirectoryprotected; RegisterGDirectory(SharedGDirectory_t &ptr)TDirectoryprotected; RegisterModule(const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false)TROOTstatic; Remove(TObject *) overrideTROOTvirtual; RemoveClass(TClass *)TR",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:14386,Availability,error,error,14386,"irtual; Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) constTObject; OpenFile(const char *, Option_t *="""", const char *="""", Int_t=1, Int_t=0)TDirectoryinlinevirtual; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t l)TROOTinlineprotected; operator new(size_t l, void *ptr)TROOTinlineprotected; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TROOT &)=deleteTROOTprivate; TDirectory::operator=(const TDirectory &)=deleteTDirectoryprotected; TNamed::operator=(const TNamed &rhs)TNamed; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""") overrideTDirectoryvirtual; Pop()TObjectvirtual; Print(Option_t *option="""") const overrideTDirectoryvirtual; ProcessLine(const char *line, Int_t *error=nullptr)TROOT; ProcessLineFast(const char *line, Int_t *error=nullptr)TROOT; ProcessLineSync(const char *line, Int_t *error=nullptr)TROOT; Purge(Short_t=1)TDirectoryinlinevirtual; pwd() constTDirectoryvirtual; Read(const char *name)TObjectvirtual; ReadAll(Option_t *="""")TDirectoryinlinevirtual; ReadGitInfo()TROOTprotected; ReadingObject() constTROOT; ReadKeys(Bool_t=kTRUE)TDirectoryinlinevirtual; ReadTObject(TObject *, const char *)TDirectoryinlinevirtual; RecursiveRemove(TObject *obj) overrideTROOTvirtual; RefreshBrowsers()TROOT; RegisterContext(TContext *ctxt)TDirectoryprotected; RegisterGDirectory(SharedGDirectory_t &ptr)TDirectoryprotected; RegisterModule(const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false)TROOTstatic; Remove(TObject *) overrideTROOTvirtual; RemoveClass(TClass *)TROOT; Reset(Option_t *option="""")TROOT; ResetBit(UInt_t f)TObjec",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:14448,Availability,error,error,14448,"st char *removedFromVers) constTObject; OpenFile(const char *, Option_t *="""", const char *="""", Int_t=1, Int_t=0)TDirectoryinlinevirtual; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t l)TROOTinlineprotected; operator new(size_t l, void *ptr)TROOTinlineprotected; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TROOT &)=deleteTROOTprivate; TDirectory::operator=(const TDirectory &)=deleteTDirectoryprotected; TNamed::operator=(const TNamed &rhs)TNamed; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""") overrideTDirectoryvirtual; Pop()TObjectvirtual; Print(Option_t *option="""") const overrideTDirectoryvirtual; ProcessLine(const char *line, Int_t *error=nullptr)TROOT; ProcessLineFast(const char *line, Int_t *error=nullptr)TROOT; ProcessLineSync(const char *line, Int_t *error=nullptr)TROOT; Purge(Short_t=1)TDirectoryinlinevirtual; pwd() constTDirectoryvirtual; Read(const char *name)TObjectvirtual; ReadAll(Option_t *="""")TDirectoryinlinevirtual; ReadGitInfo()TROOTprotected; ReadingObject() constTROOT; ReadKeys(Bool_t=kTRUE)TDirectoryinlinevirtual; ReadTObject(TObject *, const char *)TDirectoryinlinevirtual; RecursiveRemove(TObject *obj) overrideTROOTvirtual; RefreshBrowsers()TROOT; RegisterContext(TContext *ctxt)TDirectoryprotected; RegisterGDirectory(SharedGDirectory_t &ptr)TDirectoryprotected; RegisterModule(const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false)TROOTstatic; Remove(TObject *) overrideTROOTvirtual; RemoveClass(TClass *)TROOT; Reset(Option_t *option="""")TROOT; ResetBit(UInt_t f)TObjectinline; ResetClassSaved()TROOT; rmdir(const char *name)TDirec",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:183,Modifiability,inherit,inherited,183,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TROOT Member List. This is the complete list of members for TROOT, including all inherited members. ::ROOT::Internal::TROOTAllocatorTROOTfriend; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE)TDirectoryinlinevirtual; AddClass(TClass *cl)TROOT; AddClassGenerator(TClassGenerator *gen)TROOT; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddExtraInterpreterArgs(const std::vector< std::string > &args)TROOTstatic; AddToTObjectTable(TObject *)TObjectprivatestatic; AListOfEnums_t typedefTROOTprotected; Append(TObject *obj, Bool_t replace=kFALSE) overrideTROOTvirtual; AppendKey(TKey *)TDirectoryinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTROOTvirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr)TDirectoryinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; cd()TDirectoryvirtual; cd(const char *path)TDirectoryvirtual; Cd(const char *path)TDirectorystatic; cd1(const char *path)TDirectoryprotected; Cd1(const char *path)TDirectoryprotectedstatic; CheckedHash()TObjectinline; Class()TROOTstatic; Class_Name()TROOTstatic; Class_Version()TROOTinlinestatic; ClassName() constTObjectvirtual; ClassSaved(TClass *cl)TROOT; CleanTargets()TDirectoryprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE)TDirectoryvirtual; Close(Option_t *option="""")TDirectoryvirtual; CloseFiles()TROOT; Compare(const TObject *obj) const overrideTNamedvirtual; ConvertVersionCode2Int(Int_t code)TROOTstatic; ConvertVersionInt2Code(Int_t v)TROOTstatic; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TROOTinlinestatic; DecodeNameCycle(const char *namecycle, ch",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:4823,Performance,load,load,4823,"d; fgAddDirectoryTDirectoryprotectedstatic; fGDirectoriesTDirectoryprotected; fgDirLevelTROOTprivatestatic; fgDtorOnlyTObjectprivatestatic; fGeometriesTROOTprotected; fGitBranchTROOTprotected; fGitCommitTROOTprotected; fGitDateTROOTprotected; fGlobalFunctionsTROOTprotected; fGlobalsTROOTprotected; fgObjectStatTObjectprivatestatic; fgRootInitTROOTprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FillFullPath(TString &buf) constTDirectoryprotected; FindKey(const char *) constTDirectoryinlinevirtual; FindKeyAny(const char *) constTDirectoryinlinevirtual; FindObject(const char *name) const overrideTROOTvirtual; FindObject(const TObject *obj) const overrideTROOTvirtual; FindObjectAny(const char *name) const overrideTROOTvirtual; FindObjectAnyFile(const char *name) const overrideTROOTvirtual; FindObjectClassName(const char *name) constTROOT; FindObjectPathName(const TObject *obj) constTROOT; FindSpecialObject(const char *name, void *&where)TROOT; FindSTLClass(const char *name, Bool_t load, Bool_t silent=kFALSE) constTROOT; fInterpreterTROOTprotected; fInterruptTROOTprotected; fIsWebDisplayTROOTprotected; fIsWebDisplayBatchTROOTprotected; fLineIsProcessingTROOTprivate; fListTDirectoryprotected; fMappedFilesTROOTprotected; fMessageHandlersTROOTprotected; fMotherTDirectoryprotected; fMustCleanTROOTprotected; fNameTNamedprotected; ForceStyle(Bool_t force=kTRUE)TROOTinline; fPathBufferTDirectorymutableprotected; fPluginManagerTROOTprotected; fPrimitiveTROOTprotected; fProofsTROOTprotected; FromPopUp() constTROOTinline; fRootFolderTROOTprotected; fSecContextsTROOTprotected; fSelectPadTROOTprotected; fSocketsTROOTprotected; fSpecialsTROOTprotected; fSpinLockTDirectorymutableprotected; fStreamerInfoTROOTprotected; fStylesTROOTprotected; fTasksTROOTprotected; fTimerTROOTprotected; fTitleTNamedprotected; fTypesTROOTprotected; fUniqueIDTObjectprivate; fUUIDTDirectoryprotected; fUUIDsTROOTprotected; fVersionTROOTprotected; fVersionCodeTROOTprotected; fVersionDateTROOTprotected; f",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:6245,Performance,load,load,6245,"tected; fPluginManagerTROOTprotected; fPrimitiveTROOTprotected; fProofsTROOTprotected; FromPopUp() constTROOTinline; fRootFolderTROOTprotected; fSecContextsTROOTprotected; fSelectPadTROOTprotected; fSocketsTROOTprotected; fSpecialsTROOTprotected; fSpinLockTDirectorymutableprotected; fStreamerInfoTROOTprotected; fStylesTROOTprotected; fTasksTROOTprotected; fTimerTROOTprotected; fTitleTNamedprotected; fTypesTROOTprotected; fUniqueIDTObjectprivate; fUUIDTDirectoryprotected; fUUIDsTROOTprotected; fVersionTROOTprotected; fVersionCodeTROOTprotected; fVersionDateTROOTprotected; fVersionIntTROOTprotected; fVersionTimeTROOTprotected; FwdDeclArgsToKeepCollection_t typedefTROOT; fWebDisplayTROOTprotected; Get(const char *namecycle)TDirectoryvirtual; Get(const char *namecycle)TDirectoryinline; GetApplication() constTROOTinline; GetBinDir()TROOTstatic; GetBufferSize() constTDirectoryinlinevirtual; GetBuiltDate() constTROOTinline; GetBuiltTime() constTROOTinline; GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE) constTROOT; GetClass(const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE) constTROOT; GetClipboard() constTROOTinline; GetColor(Int_t color) constTROOT; GetConfigFeatures() constTROOTinline; GetConfigOptions() constTROOTinline; GetCutClassName() constTROOTinline; GetDataDir()TROOTstatic; GetDefCanvasName() constTROOTinline; GetDirectory(const char *namecycle, Bool_t printError=false, const char *funcname=""GetDirectory"")TDirectoryvirtual; GetDirLevel()TROOTstatic; GetDocDir()TROOTstatic; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEditHistograms() constTROOTinline; GetEditorMode() constTROOTinline; GetEtcDir()TROOTstatic; GetExtraInterpreterArgs()TROOTstatic; GetFile() const overrideTROOTinlinevirtual; GetFile(const char *name) constTROOT; GetForceStyle() constTROOTinline; GetFunction(const char *name) constTROOT; GetFunctionTemplate(const char *name)TROOT; GetGeometry(const char *name) constTROOT; GetGitBranch()",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:6339,Performance,load,load,6339,"Up() constTROOTinline; fRootFolderTROOTprotected; fSecContextsTROOTprotected; fSelectPadTROOTprotected; fSocketsTROOTprotected; fSpecialsTROOTprotected; fSpinLockTDirectorymutableprotected; fStreamerInfoTROOTprotected; fStylesTROOTprotected; fTasksTROOTprotected; fTimerTROOTprotected; fTitleTNamedprotected; fTypesTROOTprotected; fUniqueIDTObjectprivate; fUUIDTDirectoryprotected; fUUIDsTROOTprotected; fVersionTROOTprotected; fVersionCodeTROOTprotected; fVersionDateTROOTprotected; fVersionIntTROOTprotected; fVersionTimeTROOTprotected; FwdDeclArgsToKeepCollection_t typedefTROOT; fWebDisplayTROOTprotected; Get(const char *namecycle)TDirectoryvirtual; Get(const char *namecycle)TDirectoryinline; GetApplication() constTROOTinline; GetBinDir()TROOTstatic; GetBufferSize() constTDirectoryinlinevirtual; GetBuiltDate() constTROOTinline; GetBuiltTime() constTROOTinline; GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE) constTROOT; GetClass(const std::type_info &typeinfo, Bool_t load=kTRUE, Bool_t silent=kFALSE) constTROOT; GetClipboard() constTROOTinline; GetColor(Int_t color) constTROOT; GetConfigFeatures() constTROOTinline; GetConfigOptions() constTROOTinline; GetCutClassName() constTROOTinline; GetDataDir()TROOTstatic; GetDefCanvasName() constTROOTinline; GetDirectory(const char *namecycle, Bool_t printError=false, const char *funcname=""GetDirectory"")TDirectoryvirtual; GetDirLevel()TROOTstatic; GetDocDir()TROOTstatic; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEditHistograms() constTROOTinline; GetEditorMode() constTROOTinline; GetEtcDir()TROOTstatic; GetExtraInterpreterArgs()TROOTstatic; GetFile() const overrideTROOTinlinevirtual; GetFile(const char *name) constTROOT; GetForceStyle() constTROOTinline; GetFunction(const char *name) constTROOT; GetFunctionTemplate(const char *name)TROOT; GetGeometry(const char *name) constTROOT; GetGitBranch() constTROOTinline; GetGitCommit() constTROOTinline; GetGitDate()TROOT; GetGlobal(const char *n",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:7354,Performance,load,load,7354,"t silent=kFALSE) constTROOT; GetClipboard() constTROOTinline; GetColor(Int_t color) constTROOT; GetConfigFeatures() constTROOTinline; GetConfigOptions() constTROOTinline; GetCutClassName() constTROOTinline; GetDataDir()TROOTstatic; GetDefCanvasName() constTROOTinline; GetDirectory(const char *namecycle, Bool_t printError=false, const char *funcname=""GetDirectory"")TDirectoryvirtual; GetDirLevel()TROOTstatic; GetDocDir()TROOTstatic; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEditHistograms() constTROOTinline; GetEditorMode() constTROOTinline; GetEtcDir()TROOTstatic; GetExtraInterpreterArgs()TROOTstatic; GetFile() const overrideTROOTinlinevirtual; GetFile(const char *name) constTROOT; GetForceStyle() constTROOTinline; GetFunction(const char *name) constTROOT; GetFunctionTemplate(const char *name)TROOT; GetGeometry(const char *name) constTROOT; GetGitBranch() constTROOTinline; GetGitCommit() constTROOTinline; GetGitDate()TROOT; GetGlobal(const char *name, Bool_t load=kFALSE) constTROOT; GetGlobal(const TObject *obj, Bool_t load=kFALSE) constTROOT; GetGlobalFunction(const char *name, const char *params=nullptr, Bool_t load=kFALSE)TROOT; GetGlobalFunctions()TROOTprotected; GetGlobalFunctionWithPrototype(const char *name, const char *proto=nullptr, Bool_t load=kFALSE)TROOT; GetIconName() constTObjectvirtual; GetIconPath()TROOTstatic; GetIncludeDir()TROOTstatic; GetInterpreter() constTROOTinline; GetKey(const char *, Short_t=9999) constTDirectoryinlinevirtual; GetLibDir()TROOTstatic; GetList() constTDirectoryinlinevirtual; GetListOfBrowsables() constTROOTinline; GetListOfBrowsers() constTROOTinline; GetListOfCanvases() constTROOTinline; GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetLis",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:7416,Performance,load,load,7416,"GetColor(Int_t color) constTROOT; GetConfigFeatures() constTROOTinline; GetConfigOptions() constTROOTinline; GetCutClassName() constTROOTinline; GetDataDir()TROOTstatic; GetDefCanvasName() constTROOTinline; GetDirectory(const char *namecycle, Bool_t printError=false, const char *funcname=""GetDirectory"")TDirectoryvirtual; GetDirLevel()TROOTstatic; GetDocDir()TROOTstatic; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEditHistograms() constTROOTinline; GetEditorMode() constTROOTinline; GetEtcDir()TROOTstatic; GetExtraInterpreterArgs()TROOTstatic; GetFile() const overrideTROOTinlinevirtual; GetFile(const char *name) constTROOT; GetForceStyle() constTROOTinline; GetFunction(const char *name) constTROOT; GetFunctionTemplate(const char *name)TROOT; GetGeometry(const char *name) constTROOT; GetGitBranch() constTROOTinline; GetGitCommit() constTROOTinline; GetGitDate()TROOT; GetGlobal(const char *name, Bool_t load=kFALSE) constTROOT; GetGlobal(const TObject *obj, Bool_t load=kFALSE) constTROOT; GetGlobalFunction(const char *name, const char *params=nullptr, Bool_t load=kFALSE)TROOT; GetGlobalFunctions()TROOTprotected; GetGlobalFunctionWithPrototype(const char *name, const char *proto=nullptr, Bool_t load=kFALSE)TROOT; GetIconName() constTObjectvirtual; GetIconPath()TROOTstatic; GetIncludeDir()TROOTstatic; GetInterpreter() constTROOTinline; GetKey(const char *, Short_t=9999) constTDirectoryinlinevirtual; GetLibDir()TROOTstatic; GetList() constTDirectoryinlinevirtual; GetListOfBrowsables() constTROOTinline; GetListOfBrowsers() constTROOTinline; GetListOfCanvases() constTROOTinline; GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetListOfFunctionOverloads(const char *name) constTROOT; GetListOfFu",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:7512,Performance,load,load,7512,"TROOTinline; GetCutClassName() constTROOTinline; GetDataDir()TROOTstatic; GetDefCanvasName() constTROOTinline; GetDirectory(const char *namecycle, Bool_t printError=false, const char *funcname=""GetDirectory"")TDirectoryvirtual; GetDirLevel()TROOTstatic; GetDocDir()TROOTstatic; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEditHistograms() constTROOTinline; GetEditorMode() constTROOTinline; GetEtcDir()TROOTstatic; GetExtraInterpreterArgs()TROOTstatic; GetFile() const overrideTROOTinlinevirtual; GetFile(const char *name) constTROOT; GetForceStyle() constTROOTinline; GetFunction(const char *name) constTROOT; GetFunctionTemplate(const char *name)TROOT; GetGeometry(const char *name) constTROOT; GetGitBranch() constTROOTinline; GetGitCommit() constTROOTinline; GetGitDate()TROOT; GetGlobal(const char *name, Bool_t load=kFALSE) constTROOT; GetGlobal(const TObject *obj, Bool_t load=kFALSE) constTROOT; GetGlobalFunction(const char *name, const char *params=nullptr, Bool_t load=kFALSE)TROOT; GetGlobalFunctions()TROOTprotected; GetGlobalFunctionWithPrototype(const char *name, const char *proto=nullptr, Bool_t load=kFALSE)TROOT; GetIconName() constTObjectvirtual; GetIconPath()TROOTstatic; GetIncludeDir()TROOTstatic; GetInterpreter() constTROOTinline; GetKey(const char *, Short_t=9999) constTDirectoryinlinevirtual; GetLibDir()TROOTstatic; GetList() constTDirectoryinlinevirtual; GetListOfBrowsables() constTROOTinline; GetListOfBrowsers() constTROOTinline; GetListOfCanvases() constTROOTinline; GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetListOfFunctionOverloads(const char *name) constTROOT; GetListOfFunctions() constTROOTinline; GetListOfFunctionTemplates()TROOT; GetListOfGeometries() constTROOTi",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:7650,Performance,load,load,7650,"mecycle, Bool_t printError=false, const char *funcname=""GetDirectory"")TDirectoryvirtual; GetDirLevel()TROOTstatic; GetDocDir()TROOTstatic; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetEditHistograms() constTROOTinline; GetEditorMode() constTROOTinline; GetEtcDir()TROOTstatic; GetExtraInterpreterArgs()TROOTstatic; GetFile() const overrideTROOTinlinevirtual; GetFile(const char *name) constTROOT; GetForceStyle() constTROOTinline; GetFunction(const char *name) constTROOT; GetFunctionTemplate(const char *name)TROOT; GetGeometry(const char *name) constTROOT; GetGitBranch() constTROOTinline; GetGitCommit() constTROOTinline; GetGitDate()TROOT; GetGlobal(const char *name, Bool_t load=kFALSE) constTROOT; GetGlobal(const TObject *obj, Bool_t load=kFALSE) constTROOT; GetGlobalFunction(const char *name, const char *params=nullptr, Bool_t load=kFALSE)TROOT; GetGlobalFunctions()TROOTprotected; GetGlobalFunctionWithPrototype(const char *name, const char *proto=nullptr, Bool_t load=kFALSE)TROOT; GetIconName() constTObjectvirtual; GetIconPath()TROOTstatic; GetIncludeDir()TROOTstatic; GetInterpreter() constTROOTinline; GetKey(const char *, Short_t=9999) constTDirectoryinlinevirtual; GetLibDir()TROOTstatic; GetList() constTDirectoryinlinevirtual; GetListOfBrowsables() constTROOTinline; GetListOfBrowsers() constTROOTinline; GetListOfCanvases() constTROOTinline; GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetListOfFunctionOverloads(const char *name) constTROOT; GetListOfFunctions() constTROOTinline; GetListOfFunctionTemplates()TROOT; GetListOfGeometries() constTROOTinline; GetListOfGlobalFunctions(Bool_t load=kFALSE)TROOT; GetListOfGlobals(Bool_t load=kFALSE)TROOT; GetListOfKeys() constTDirectoryinline",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:8297,Performance,load,load,8297," GetGitDate()TROOT; GetGlobal(const char *name, Bool_t load=kFALSE) constTROOT; GetGlobal(const TObject *obj, Bool_t load=kFALSE) constTROOT; GetGlobalFunction(const char *name, const char *params=nullptr, Bool_t load=kFALSE)TROOT; GetGlobalFunctions()TROOTprotected; GetGlobalFunctionWithPrototype(const char *name, const char *proto=nullptr, Bool_t load=kFALSE)TROOT; GetIconName() constTObjectvirtual; GetIconPath()TROOTstatic; GetIncludeDir()TROOTstatic; GetInterpreter() constTROOTinline; GetKey(const char *, Short_t=9999) constTDirectoryinlinevirtual; GetLibDir()TROOTstatic; GetList() constTDirectoryinlinevirtual; GetListOfBrowsables() constTROOTinline; GetListOfBrowsers() constTROOTinline; GetListOfCanvases() constTROOTinline; GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetListOfFunctionOverloads(const char *name) constTROOT; GetListOfFunctions() constTROOTinline; GetListOfFunctionTemplates()TROOT; GetListOfGeometries() constTROOTinline; GetListOfGlobalFunctions(Bool_t load=kFALSE)TROOT; GetListOfGlobals(Bool_t load=kFALSE)TROOT; GetListOfKeys() constTDirectoryinlinevirtual; GetListOfMappedFiles() constTROOTinline; GetListOfMessageHandlers() constTROOTinline; GetListOfProofs() constTROOTinline; GetListOfSecContexts() constTROOTinline; GetListOfSockets() constTROOTinline; GetListOfSpecials() constTROOTinline; GetListOfStreamerInfo() constTROOTinline; GetListOfStyles() constTROOTinline; GetListOfTasks() constTROOTinline; GetListOfTypes(Bool_t load=kFALSE)TROOT; GetMacroDir()TROOTstatic; GetMacroPath()TROOTstatic; GetMother() constTDirectoryinline; GetMotherDir() constTDirectoryinline; GetName() const overrideTNamedinlinevirtual; GetNbytesKeys() constTDirectoryinlinevirtual; GetNclasses() constTROOT; Get",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:8554,Performance,load,load,8554,"protected; GetGlobalFunctionWithPrototype(const char *name, const char *proto=nullptr, Bool_t load=kFALSE)TROOT; GetIconName() constTObjectvirtual; GetIconPath()TROOTstatic; GetIncludeDir()TROOTstatic; GetInterpreter() constTROOTinline; GetKey(const char *, Short_t=9999) constTDirectoryinlinevirtual; GetLibDir()TROOTstatic; GetList() constTDirectoryinlinevirtual; GetListOfBrowsables() constTROOTinline; GetListOfBrowsers() constTROOTinline; GetListOfCanvases() constTROOTinline; GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetListOfFunctionOverloads(const char *name) constTROOT; GetListOfFunctions() constTROOTinline; GetListOfFunctionTemplates()TROOT; GetListOfGeometries() constTROOTinline; GetListOfGlobalFunctions(Bool_t load=kFALSE)TROOT; GetListOfGlobals(Bool_t load=kFALSE)TROOT; GetListOfKeys() constTDirectoryinlinevirtual; GetListOfMappedFiles() constTROOTinline; GetListOfMessageHandlers() constTROOTinline; GetListOfProofs() constTROOTinline; GetListOfSecContexts() constTROOTinline; GetListOfSockets() constTROOTinline; GetListOfSpecials() constTROOTinline; GetListOfStreamerInfo() constTROOTinline; GetListOfStyles() constTROOTinline; GetListOfTasks() constTROOTinline; GetListOfTypes(Bool_t load=kFALSE)TROOT; GetMacroDir()TROOTstatic; GetMacroPath()TROOTstatic; GetMother() constTDirectoryinline; GetMotherDir() constTDirectoryinline; GetName() const overrideTNamedinlinevirtual; GetNbytesKeys() constTDirectoryinlinevirtual; GetNclasses() constTROOT; GetNkeys() constTDirectoryinlinevirtual; GetNtypes() constTROOT; GetObject(const char *namecycle, T *&ptr)TDirectoryinline; GetObjectChecked(const char *namecycle, const char *classname)TDirectoryvirtual; GetObjectChecked(const char *namecycle, const TClass *c",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:8597,Performance,load,load,8597,"onst char *name, const char *proto=nullptr, Bool_t load=kFALSE)TROOT; GetIconName() constTObjectvirtual; GetIconPath()TROOTstatic; GetIncludeDir()TROOTstatic; GetInterpreter() constTROOTinline; GetKey(const char *, Short_t=9999) constTDirectoryinlinevirtual; GetLibDir()TROOTstatic; GetList() constTDirectoryinlinevirtual; GetListOfBrowsables() constTROOTinline; GetListOfBrowsers() constTROOTinline; GetListOfCanvases() constTROOTinline; GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetListOfFunctionOverloads(const char *name) constTROOT; GetListOfFunctions() constTROOTinline; GetListOfFunctionTemplates()TROOT; GetListOfGeometries() constTROOTinline; GetListOfGlobalFunctions(Bool_t load=kFALSE)TROOT; GetListOfGlobals(Bool_t load=kFALSE)TROOT; GetListOfKeys() constTDirectoryinlinevirtual; GetListOfMappedFiles() constTROOTinline; GetListOfMessageHandlers() constTROOTinline; GetListOfProofs() constTROOTinline; GetListOfSecContexts() constTROOTinline; GetListOfSockets() constTROOTinline; GetListOfSpecials() constTROOTinline; GetListOfStreamerInfo() constTROOTinline; GetListOfStyles() constTROOTinline; GetListOfTasks() constTROOTinline; GetListOfTypes(Bool_t load=kFALSE)TROOT; GetMacroDir()TROOTstatic; GetMacroPath()TROOTstatic; GetMother() constTDirectoryinline; GetMotherDir() constTDirectoryinline; GetName() const overrideTNamedinlinevirtual; GetNbytesKeys() constTDirectoryinlinevirtual; GetNclasses() constTROOT; GetNkeys() constTDirectoryinlinevirtual; GetNtypes() constTROOT; GetObject(const char *namecycle, T *&ptr)TDirectoryinline; GetObjectChecked(const char *namecycle, const char *classname)TDirectoryvirtual; GetObjectChecked(const char *namecycle, const TClass *cl)TDirectoryvirtual; GetObjectInfo(Int_t px",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:9035,Performance,load,load,9035," GetListOfClasses() constTROOTinline; GetListOfClassGenerators() constTROOTinline; GetListOfCleanups() constTROOTinline; GetListOfClosedObjects() constTROOTinline; GetListOfColors() constTROOTinline; GetListOfDataSets() constTROOTinline; GetListOfEnums(Bool_t load=kFALSE)TROOT; GetListOfFiles() constTROOTinline; GetListOfFunctionOverloads(const char *name) constTROOT; GetListOfFunctions() constTROOTinline; GetListOfFunctionTemplates()TROOT; GetListOfGeometries() constTROOTinline; GetListOfGlobalFunctions(Bool_t load=kFALSE)TROOT; GetListOfGlobals(Bool_t load=kFALSE)TROOT; GetListOfKeys() constTDirectoryinlinevirtual; GetListOfMappedFiles() constTROOTinline; GetListOfMessageHandlers() constTROOTinline; GetListOfProofs() constTROOTinline; GetListOfSecContexts() constTROOTinline; GetListOfSockets() constTROOTinline; GetListOfSpecials() constTROOTinline; GetListOfStreamerInfo() constTROOTinline; GetListOfStyles() constTROOTinline; GetListOfTasks() constTROOTinline; GetListOfTypes(Bool_t load=kFALSE)TROOT; GetMacroDir()TROOTstatic; GetMacroPath()TROOTstatic; GetMother() constTDirectoryinline; GetMotherDir() constTDirectoryinline; GetName() const overrideTNamedinlinevirtual; GetNbytesKeys() constTDirectoryinlinevirtual; GetNclasses() constTROOT; GetNkeys() constTDirectoryinlinevirtual; GetNtypes() constTROOT; GetObject(const char *namecycle, T *&ptr)TDirectoryinline; GetObjectChecked(const char *namecycle, const char *classname)TDirectoryvirtual; GetObjectChecked(const char *namecycle, const TClass *cl)TDirectoryvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetObjectUnchecked(const char *namecycle)TDirectoryvirtual; GetOption() constTObjectinlinevirtual; GetPath() constTDirectoryvirtual; GetPathStatic() constTDirectoryvirtual; GetPluginManager() constTROOTinline; GetRootFolder() constTROOTinline; GetRootSys()TROOTstatic; GetSeekDir() constTDirectoryinlinevirtual; GetSeekKeys() constTDirectoryinlinevirtual; GetSeekParent() con",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT-members.html:10462,Performance,load,load,10462,"etMotherDir() constTDirectoryinline; GetName() const overrideTNamedinlinevirtual; GetNbytesKeys() constTDirectoryinlinevirtual; GetNclasses() constTROOT; GetNkeys() constTDirectoryinlinevirtual; GetNtypes() constTROOT; GetObject(const char *namecycle, T *&ptr)TDirectoryinline; GetObjectChecked(const char *namecycle, const char *classname)TDirectoryvirtual; GetObjectChecked(const char *namecycle, const TClass *cl)TDirectoryvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetObjectUnchecked(const char *namecycle)TDirectoryvirtual; GetOption() constTObjectinlinevirtual; GetPath() constTDirectoryvirtual; GetPathStatic() constTDirectoryvirtual; GetPluginManager() constTROOTinline; GetRootFolder() constTROOTinline; GetRootSys()TROOTstatic; GetSeekDir() constTDirectoryinlinevirtual; GetSeekKeys() constTDirectoryinlinevirtual; GetSeekParent() constTDirectoryinlinevirtual; GetSelectedPad() constTROOTinline; GetSelectedPrimitive() constTROOTinline; GetSharedLibDir()TROOTstatic; GetSharedLocalCurrentDirectory()TDirectoryprotectedstatic; GetSourceDir()TROOTstatic; GetStyle(const char *name) constTROOT; GetTitle() const overrideTNamedinlinevirtual; GetTTFFontDir()TROOTstatic; GetTutorialDir()TROOTstatic; GetTutorialsDir()TROOTstatic; GetType(const char *name, Bool_t load=kFALSE) constTROOT; GetUniqueID() constTObjectvirtual; GetUUID() constTDirectoryinline; GetUUIDs() constTROOTinline; GetVersion() constTROOTinline; GetVersionCode() constTROOTinline; GetVersionDate() constTROOTinline; GetVersionInt() constTROOTinline; GetVersionTime() constTROOTinline; GetWebDisplay() constTROOTinline; HandleTimer(TTimer *timer)TObjectvirtual; Hash() const overrideTNamedinlinevirtual; HasInconsistentHash() constTObjectinline; Idle(UInt_t idleTimeInSec, const char *command=nullptr)TROOT; IgnoreInclude(const char *fname, const char *expandedfname)TROOT; IncreaseDirLevel()TROOTstatic; IndentLevel()TROOTstatic; Info(const char *method, const char *msgfmt,.",MatchSource.WIKI,doc/master/classTROOT-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT-members.html
https://root.cern/doc/master/classTROOT.html:10477,Availability,error,error,10477," a class that is known to ROOT, e.g. ;  ; TClass * IsA () const override;  ; Bool_t IsBatch () const;  ; Bool_t IsEscaped () const;  ; Bool_t IsExecutingMacro () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsInterrupted () const;  ; Bool_t IsLineProcessing () const;  ; Bool_t IsProofServ () const;  ; Bool_t IsRootFile (const char *filename) const;  Return true if the file is local and is (likely) to be a ROOT file. ;  ; Bool_t IsWebDisplay () const;  ; Bool_t IsWebDisplayBatch () const;  ; Int_t LoadClass (const char *classname, const char *libname, Bool_t check=kFALSE);  Check if class ""classname"" is known to the interpreter (in fact, this check is not needed anymore, so classname is ignored). ;  ; TClass * LoadClass (const char *name, Bool_t silent=kFALSE) const;  Helper function used by TClass::GetClass(). ;  ; Int_t LoadMacro (const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE);  Load a macro in the interpreter's memory. ;  ; void ls (Option_t *option="""") const override;  To list all objects of the application. ;  ; Longptr_t Macro (const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE);  Execute a macro in the interpreter. ;  ; TCanvas * MakeDefCanvas () const;  Return a default canvas. ;  ; void Message (Int_t id, const TObject *obj);  Process message id called by obj. ;  ; Bool_t MustClean () const;  ; Longptr_t ProcessLine (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Longptr_t ProcessLineFast (const char *line, Int_t *error=nullptr);  Process interpreter command directly via CINT interpreter. ;  ; Longptr_t ProcessLineSync (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Bool_t ReadingObject () const;  Deprecated (will be removed in next release). ;  ; void RecursiveRemove (TObject *obj) override;  ",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:10700,Availability,error,error,10700,"in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsInterrupted () const;  ; Bool_t IsLineProcessing () const;  ; Bool_t IsProofServ () const;  ; Bool_t IsRootFile (const char *filename) const;  Return true if the file is local and is (likely) to be a ROOT file. ;  ; Bool_t IsWebDisplay () const;  ; Bool_t IsWebDisplayBatch () const;  ; Int_t LoadClass (const char *classname, const char *libname, Bool_t check=kFALSE);  Check if class ""classname"" is known to the interpreter (in fact, this check is not needed anymore, so classname is ignored). ;  ; TClass * LoadClass (const char *name, Bool_t silent=kFALSE) const;  Helper function used by TClass::GetClass(). ;  ; Int_t LoadMacro (const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE);  Load a macro in the interpreter's memory. ;  ; void ls (Option_t *option="""") const override;  To list all objects of the application. ;  ; Longptr_t Macro (const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE);  Execute a macro in the interpreter. ;  ; TCanvas * MakeDefCanvas () const;  Return a default canvas. ;  ; void Message (Int_t id, const TObject *obj);  Process message id called by obj. ;  ; Bool_t MustClean () const;  ; Longptr_t ProcessLine (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Longptr_t ProcessLineFast (const char *line, Int_t *error=nullptr);  Process interpreter command directly via CINT interpreter. ;  ; Longptr_t ProcessLineSync (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Bool_t ReadingObject () const;  Deprecated (will be removed in next release). ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from the list of Cleanups. ;  ; void RefreshBrowsers ();  Refresh all browsers. ;  ; TObject * Remove (TObject *) override;  Remove an object from the in-memory list. ;  ; void RemoveClass (",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:11010,Availability,error,error,11010,"o be a ROOT file. ;  ; Bool_t IsWebDisplay () const;  ; Bool_t IsWebDisplayBatch () const;  ; Int_t LoadClass (const char *classname, const char *libname, Bool_t check=kFALSE);  Check if class ""classname"" is known to the interpreter (in fact, this check is not needed anymore, so classname is ignored). ;  ; TClass * LoadClass (const char *name, Bool_t silent=kFALSE) const;  Helper function used by TClass::GetClass(). ;  ; Int_t LoadMacro (const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE);  Load a macro in the interpreter's memory. ;  ; void ls (Option_t *option="""") const override;  To list all objects of the application. ;  ; Longptr_t Macro (const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE);  Execute a macro in the interpreter. ;  ; TCanvas * MakeDefCanvas () const;  Return a default canvas. ;  ; void Message (Int_t id, const TObject *obj);  Process message id called by obj. ;  ; Bool_t MustClean () const;  ; Longptr_t ProcessLine (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Longptr_t ProcessLineFast (const char *line, Int_t *error=nullptr);  Process interpreter command directly via CINT interpreter. ;  ; Longptr_t ProcessLineSync (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Bool_t ReadingObject () const;  Deprecated (will be removed in next release). ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from the list of Cleanups. ;  ; void RefreshBrowsers ();  Refresh all browsers. ;  ; TObject * Remove (TObject *) override;  Remove an object from the in-memory list. ;  ; void RemoveClass (TClass *);  Remove a class from the list and map of classes. ;  ; void Reset (Option_t *option="""");  Delete all global interpreter objects created since the last call to Reset. ;  ; void ResetClassSaved ();  Reset the ClassSaved status of all classes. ;  ; void SaveContext ();  Save the current",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:11145,Availability,error,error,11145,"ibname, Bool_t check=kFALSE);  Check if class ""classname"" is known to the interpreter (in fact, this check is not needed anymore, so classname is ignored). ;  ; TClass * LoadClass (const char *name, Bool_t silent=kFALSE) const;  Helper function used by TClass::GetClass(). ;  ; Int_t LoadMacro (const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE);  Load a macro in the interpreter's memory. ;  ; void ls (Option_t *option="""") const override;  To list all objects of the application. ;  ; Longptr_t Macro (const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE);  Execute a macro in the interpreter. ;  ; TCanvas * MakeDefCanvas () const;  Return a default canvas. ;  ; void Message (Int_t id, const TObject *obj);  Process message id called by obj. ;  ; Bool_t MustClean () const;  ; Longptr_t ProcessLine (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Longptr_t ProcessLineFast (const char *line, Int_t *error=nullptr);  Process interpreter command directly via CINT interpreter. ;  ; Longptr_t ProcessLineSync (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Bool_t ReadingObject () const;  Deprecated (will be removed in next release). ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from the list of Cleanups. ;  ; void RefreshBrowsers ();  Refresh all browsers. ;  ; TObject * Remove (TObject *) override;  Remove an object from the in-memory list. ;  ; void RemoveClass (TClass *);  Remove a class from the list and map of classes. ;  ; void Reset (Option_t *option="""");  Delete all global interpreter objects created since the last call to Reset. ;  ; void ResetClassSaved ();  Reset the ClassSaved status of all classes. ;  ; void SaveContext ();  Save the current interpreter context. ;  ; void SetApplication (TApplication *app);  ; void SetBatch (Bool_t batch=kTRUE);  Set batch mode for ROOT If the argument",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:11278,Availability,error,error,11278,"lassname is ignored). ;  ; TClass * LoadClass (const char *name, Bool_t silent=kFALSE) const;  Helper function used by TClass::GetClass(). ;  ; Int_t LoadMacro (const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE);  Load a macro in the interpreter's memory. ;  ; void ls (Option_t *option="""") const override;  To list all objects of the application. ;  ; Longptr_t Macro (const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE);  Execute a macro in the interpreter. ;  ; TCanvas * MakeDefCanvas () const;  Return a default canvas. ;  ; void Message (Int_t id, const TObject *obj);  Process message id called by obj. ;  ; Bool_t MustClean () const;  ; Longptr_t ProcessLine (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Longptr_t ProcessLineFast (const char *line, Int_t *error=nullptr);  Process interpreter command directly via CINT interpreter. ;  ; Longptr_t ProcessLineSync (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Bool_t ReadingObject () const;  Deprecated (will be removed in next release). ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from the list of Cleanups. ;  ; void RefreshBrowsers ();  Refresh all browsers. ;  ; TObject * Remove (TObject *) override;  Remove an object from the in-memory list. ;  ; void RemoveClass (TClass *);  Remove a class from the list and map of classes. ;  ; void Reset (Option_t *option="""");  Delete all global interpreter objects created since the last call to Reset. ;  ; void ResetClassSaved ();  Reset the ClassSaved status of all classes. ;  ; void SaveContext ();  Save the current interpreter context. ;  ; void SetApplication (TApplication *app);  ; void SetBatch (Bool_t batch=kTRUE);  Set batch mode for ROOT If the argument evaluates to true, the session does not use interactive graphics. ;  ; void SetCutClassName (const char *name=""TCutG"");  Set the defa",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:22169,Availability,error,error,22169," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:22258,Availability,error,error,22258,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out.",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:22413,Availability,error,error,22413,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ; ",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:22710,Availability,error,error,22710,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns k",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:26245,Availability,error,error,26245," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static const std::vector< std::string > & AddExtraInterpreterArgs (const std::vector< std::string > &args);  Provide command line arguments to the interpreter construction. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Int_t ConvertVersionCode2Int (Int_t code);  Convert version code to an integer, i.e. 331527 -> 51507. ;  ; static Int_t ConvertVersionInt2Code (Int_t v);  Convert version as an integer to version code as used in RVersion.h. ;  ; static const char * DeclFileName ();  ; st",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:30230,Availability,down,down,30230," in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to indent an object hierarchy. ;  ; static void Initialize ();  Initialize ROOT explicitly. ;  ; static Bool_t Initialized ();  Return kTRUE if the TROOT object has been initialized. ;  ; static void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false);  Called by static dictionary initialization to register clang modules for headers. ;  ; static Int_t RootVersionCode ();  Return ROOT version code as defined in RVersion.h. ;  ; static void SetDirLevel (Int_t level=0);  Return Indentation level for ls(). ;  ; static void SetMacroPath (const char *newpath);  Set or extend the macro search path. ;  ; static void ShutDown ();  Shut down ROOT. ;  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:66677,Availability,error,error,66677,"har * ; filename); const. Return true if the file is local and is (likely) to be a ROOT file. ; Definition at line 2230 of file TROOT.cxx. ◆ IsWebDisplay(). Bool_t TROOT::IsWebDisplay ; (; ); const. inline . Definition at line 287 of file TROOT.h. ◆ IsWebDisplayBatch(). Bool_t TROOT::IsWebDisplayBatch ; (; ); const. inline . Definition at line 288 of file TROOT.h. ◆ LoadClass() [1/2]. Int_t TROOT::LoadClass ; (; const char * ; classname, . const char * ; libname, . Bool_t ; check = kFALSE . ). Check if class ""classname"" is known to the interpreter (in fact, this check is not needed anymore, so classname is ignored). ; If not it will load library ""libname"". If the library couldn't be found with original libname and if the name was not prefixed with lib, try to prefix with ""lib"" and search again. If DynamicPathName still couldn't find the library, return -1. If check is true it will only check if libname exists and is readable. Returns 0 on successful loading, -1 in case libname does not exist or in case of error and -2 in case of version mismatch. ; Definition at line 2183 of file TROOT.cxx. ◆ LoadClass() [2/2]. TClass * TROOT::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent = kFALSE . ); const. Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is 'true', do not warn about missing dictionary for the class. (typically used for class that are used only for transient members); The 'requestedname' is expected to be already normalized. ; Definition at line 2167 of file TROOT.cxx. ◆ LoadMacro(). Int_t TROOT::LoadMacro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; check = kFALSE . ). Load a macro in the interpreter's memory. ; Equivalent to the command line command "".L filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:67377,Availability,error,error,67377,"if the name was not prefixed with lib, try to prefix with ""lib"" and search again. If DynamicPathName still couldn't find the library, return -1. If check is true it will only check if libname exists and is readable. Returns 0 on successful loading, -1 in case libname does not exist or in case of error and -2 in case of version mismatch. ; Definition at line 2183 of file TROOT.cxx. ◆ LoadClass() [2/2]. TClass * TROOT::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent = kFALSE . ); const. Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is 'true', do not warn about missing dictionary for the class. (typically used for class that are used only for transient members); The 'requestedname' is expected to be already normalized. ; Definition at line 2167 of file TROOT.cxx. ◆ LoadMacro(). Int_t TROOT::LoadMacro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; check = kFALSE . ). Load a macro in the interpreter's memory. ; Equivalent to the command line command "".L filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]]. The possible error codes are defined by TInterpreter::EErrorCode. If check is true it will only check if filename exists and is readable. Returns 0 on successful loading and -1 in case filename does not exist or in case of error. ; Definition at line 2268 of file TROOT.cxx. ◆ ls(). void TROOT::ls ; (; Option_t * ; option = """"); const. overridevirtual . To list all objects of the application. ; Loop on all objects created in the ROOT linked lists. Objects may be files and windows or any other object directly attached to the ROOT linked list. ; Reimplemented from TDirectory.; Definition at line 2250 of file TROOT.cxx. ◆ Macro(). Longptr_t TROOT::Macro ; (; const char * ; filename, . Int_t * ; error = nullptr, .",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:67676,Availability,error,error,67676,"se of version mismatch. ; Definition at line 2183 of file TROOT.cxx. ◆ LoadClass() [2/2]. TClass * TROOT::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent = kFALSE . ); const. Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is 'true', do not warn about missing dictionary for the class. (typically used for class that are used only for transient members); The 'requestedname' is expected to be already normalized. ; Definition at line 2167 of file TROOT.cxx. ◆ LoadMacro(). Int_t TROOT::LoadMacro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; check = kFALSE . ). Load a macro in the interpreter's memory. ; Equivalent to the command line command "".L filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]]. The possible error codes are defined by TInterpreter::EErrorCode. If check is true it will only check if filename exists and is readable. Returns 0 on successful loading and -1 in case filename does not exist or in case of error. ; Definition at line 2268 of file TROOT.cxx. ◆ ls(). void TROOT::ls ; (; Option_t * ; option = """"); const. overridevirtual . To list all objects of the application. ; Loop on all objects created in the ROOT linked lists. Objects may be files and windows or any other object directly attached to the ROOT linked list. ; Reimplemented from TDirectory.; Definition at line 2250 of file TROOT.cxx. ◆ Macro(). Longptr_t TROOT::Macro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; padUpdate = kTRUE . ). Execute a macro in the interpreter. ; Equivalent to the command line command "".x filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]][(args)]. The possible error codes are defined by T",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:67886,Availability,error,error,67886,". Bool_t ; silent = kFALSE . ); const. Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is 'true', do not warn about missing dictionary for the class. (typically used for class that are used only for transient members); The 'requestedname' is expected to be already normalized. ; Definition at line 2167 of file TROOT.cxx. ◆ LoadMacro(). Int_t TROOT::LoadMacro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; check = kFALSE . ). Load a macro in the interpreter's memory. ; Equivalent to the command line command "".L filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]]. The possible error codes are defined by TInterpreter::EErrorCode. If check is true it will only check if filename exists and is readable. Returns 0 on successful loading and -1 in case filename does not exist or in case of error. ; Definition at line 2268 of file TROOT.cxx. ◆ ls(). void TROOT::ls ; (; Option_t * ; option = """"); const. overridevirtual . To list all objects of the application. ; Loop on all objects created in the ROOT linked lists. Objects may be files and windows or any other object directly attached to the ROOT linked list. ; Reimplemented from TDirectory.; Definition at line 2250 of file TROOT.cxx. ◆ Macro(). Longptr_t TROOT::Macro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; padUpdate = kTRUE . ). Execute a macro in the interpreter. ; Equivalent to the command line command "".x filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]][(args)]. The possible error codes are defined by TInterpreter::EErrorCode. If padUpdate is true (default) update the current pad. Returns the macro return value. ; Definition at line 2316 of file TROOT",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:68363,Availability,error,error,68363," Int_t * ; error = nullptr, . Bool_t ; check = kFALSE . ). Load a macro in the interpreter's memory. ; Equivalent to the command line command "".L filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]]. The possible error codes are defined by TInterpreter::EErrorCode. If check is true it will only check if filename exists and is readable. Returns 0 on successful loading and -1 in case filename does not exist or in case of error. ; Definition at line 2268 of file TROOT.cxx. ◆ ls(). void TROOT::ls ; (; Option_t * ; option = """"); const. overridevirtual . To list all objects of the application. ; Loop on all objects created in the ROOT linked lists. Objects may be files and windows or any other object directly attached to the ROOT linked list. ; Reimplemented from TDirectory.; Definition at line 2250 of file TROOT.cxx. ◆ Macro(). Longptr_t TROOT::Macro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; padUpdate = kTRUE . ). Execute a macro in the interpreter. ; Equivalent to the command line command "".x filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]][(args)]. The possible error codes are defined by TInterpreter::EErrorCode. If padUpdate is true (default) update the current pad. Returns the macro return value. ; Definition at line 2316 of file TROOT.cxx. ◆ MakeDefCanvas(). TCanvas * TROOT::MakeDefCanvas ; (; ); const. Return a default canvas. ; Definition at line 1554 of file TROOT.cxx. ◆ Message(). void TROOT::Message ; (; Int_t ; id, . const TObject * ; obj . ). Process message id called by obj. ; Definition at line 2350 of file TROOT.cxx. ◆ MustClean(). Bool_t TROOT::MustClean ; (; ); const. inline . Definition at line 296 of file TROOT.h. ◆ operator new() [1/2]. void * TROOT::operator new ; (; size_t ; l). inlineprotected . Definition at line 178 of file T",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:68667,Availability,error,error,68667,"s are defined by TInterpreter::EErrorCode. If check is true it will only check if filename exists and is readable. Returns 0 on successful loading and -1 in case filename does not exist or in case of error. ; Definition at line 2268 of file TROOT.cxx. ◆ ls(). void TROOT::ls ; (; Option_t * ; option = """"); const. overridevirtual . To list all objects of the application. ; Loop on all objects created in the ROOT linked lists. Objects may be files and windows or any other object directly attached to the ROOT linked list. ; Reimplemented from TDirectory.; Definition at line 2250 of file TROOT.cxx. ◆ Macro(). Longptr_t TROOT::Macro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; padUpdate = kTRUE . ). Execute a macro in the interpreter. ; Equivalent to the command line command "".x filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]][(args)]. The possible error codes are defined by TInterpreter::EErrorCode. If padUpdate is true (default) update the current pad. Returns the macro return value. ; Definition at line 2316 of file TROOT.cxx. ◆ MakeDefCanvas(). TCanvas * TROOT::MakeDefCanvas ; (; ); const. Return a default canvas. ; Definition at line 1554 of file TROOT.cxx. ◆ Message(). void TROOT::Message ; (; Int_t ; id, . const TObject * ; obj . ). Process message id called by obj. ; Definition at line 2350 of file TROOT.cxx. ◆ MustClean(). Bool_t TROOT::MustClean ; (; ); const. inline . Definition at line 296 of file TROOT.h. ◆ operator new() [1/2]. void * TROOT::operator new ; (; size_t ; l). inlineprotected . Definition at line 178 of file TROOT.h. ◆ operator new() [2/2]. void * TROOT::operator new ; (; size_t ; l, . void * ; ptr . ). inlineprotected . Definition at line 179 of file TROOT.h. ◆ operator=(). TROOT & TROOT::operator= ; (; const TROOT & ; ). privatedelete . ◆ ProcessLine(). Longptr_t TROOT::ProcessLine ; (; const char * ; line, . Int_t * ; e",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:69685,Availability,error,error,69685,"ed by TInterpreter::EErrorCode. If padUpdate is true (default) update the current pad. Returns the macro return value. ; Definition at line 2316 of file TROOT.cxx. ◆ MakeDefCanvas(). TCanvas * TROOT::MakeDefCanvas ; (; ); const. Return a default canvas. ; Definition at line 1554 of file TROOT.cxx. ◆ Message(). void TROOT::Message ; (; Int_t ; id, . const TObject * ; obj . ). Process message id called by obj. ; Definition at line 2350 of file TROOT.cxx. ◆ MustClean(). Bool_t TROOT::MustClean ; (; ); const. inline . Definition at line 296 of file TROOT.h. ◆ operator new() [1/2]. void * TROOT::operator new ; (; size_t ; l). inlineprotected . Definition at line 178 of file TROOT.h. ◆ operator new() [2/2]. void * TROOT::operator new ; (; size_t ; l, . void * ; ptr . ). inlineprotected . Definition at line 179 of file TROOT.h. ◆ operator=(). TROOT & TROOT::operator= ; (; const TROOT & ; ). privatedelete . ◆ ProcessLine(). Longptr_t TROOT::ProcessLine ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed asynchronously by sending it to the CINT interpreter thread. For explicit synchronous processing use ProcessLineSync(). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. In particular, error will equal to TInterpreter::kProcessing until the CINT interpreted thread has finished executing the line. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2370 of file TROOT.cxx. ◆ ProcessLineFast(). Longptr_t TROOT::ProcessLineFast ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command directly via CINT interpreter. ; Only executable statements are allowed (no variable declarations), In all other cases use TROOT::ProcessLine(). The possible error codes are defined by TInterpreter::EErrorCode. ; Definition at line 2407",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:70029,Availability,error,error,70029,"ject * ; obj . ). Process message id called by obj. ; Definition at line 2350 of file TROOT.cxx. ◆ MustClean(). Bool_t TROOT::MustClean ; (; ); const. inline . Definition at line 296 of file TROOT.h. ◆ operator new() [1/2]. void * TROOT::operator new ; (; size_t ; l). inlineprotected . Definition at line 178 of file TROOT.h. ◆ operator new() [2/2]. void * TROOT::operator new ; (; size_t ; l, . void * ; ptr . ). inlineprotected . Definition at line 179 of file TROOT.h. ◆ operator=(). TROOT & TROOT::operator= ; (; const TROOT & ; ). privatedelete . ◆ ProcessLine(). Longptr_t TROOT::ProcessLine ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed asynchronously by sending it to the CINT interpreter thread. For explicit synchronous processing use ProcessLineSync(). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. In particular, error will equal to TInterpreter::kProcessing until the CINT interpreted thread has finished executing the line. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2370 of file TROOT.cxx. ◆ ProcessLineFast(). Longptr_t TROOT::ProcessLineFast ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command directly via CINT interpreter. ; Only executable statements are allowed (no variable declarations), In all other cases use TROOT::ProcessLine(). The possible error codes are defined by TInterpreter::EErrorCode. ; Definition at line 2407 of file TROOT.cxx. ◆ ProcessLineSync(). Longptr_t TROOT::ProcessLineSync ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed synchronously (i.e. it will only return when the CINT interpreter thread has finished executing the line). On non-Win32 platform",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:70097,Availability,error,error,70097,"◆ MustClean(). Bool_t TROOT::MustClean ; (; ); const. inline . Definition at line 296 of file TROOT.h. ◆ operator new() [1/2]. void * TROOT::operator new ; (; size_t ; l). inlineprotected . Definition at line 178 of file TROOT.h. ◆ operator new() [2/2]. void * TROOT::operator new ; (; size_t ; l, . void * ; ptr . ). inlineprotected . Definition at line 179 of file TROOT.h. ◆ operator=(). TROOT & TROOT::operator= ; (; const TROOT & ; ). privatedelete . ◆ ProcessLine(). Longptr_t TROOT::ProcessLine ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed asynchronously by sending it to the CINT interpreter thread. For explicit synchronous processing use ProcessLineSync(). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. In particular, error will equal to TInterpreter::kProcessing until the CINT interpreted thread has finished executing the line. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2370 of file TROOT.cxx. ◆ ProcessLineFast(). Longptr_t TROOT::ProcessLineFast ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command directly via CINT interpreter. ; Only executable statements are allowed (no variable declarations), In all other cases use TROOT::ProcessLine(). The possible error codes are defined by TInterpreter::EErrorCode. ; Definition at line 2407 of file TROOT.cxx. ◆ ProcessLineSync(). Longptr_t TROOT::ProcessLineSync ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed synchronously (i.e. it will only return when the CINT interpreter thread has finished executing the line). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes ar",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:70403,Availability,error,error,70403,"TROOT::operator new ; (; size_t ; l, . void * ; ptr . ). inlineprotected . Definition at line 179 of file TROOT.h. ◆ operator=(). TROOT & TROOT::operator= ; (; const TROOT & ; ). privatedelete . ◆ ProcessLine(). Longptr_t TROOT::ProcessLine ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed asynchronously by sending it to the CINT interpreter thread. For explicit synchronous processing use ProcessLineSync(). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. In particular, error will equal to TInterpreter::kProcessing until the CINT interpreted thread has finished executing the line. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2370 of file TROOT.cxx. ◆ ProcessLineFast(). Longptr_t TROOT::ProcessLineFast ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command directly via CINT interpreter. ; Only executable statements are allowed (no variable declarations), In all other cases use TROOT::ProcessLine(). The possible error codes are defined by TInterpreter::EErrorCode. ; Definition at line 2407 of file TROOT.cxx. ◆ ProcessLineSync(). Longptr_t TROOT::ProcessLineSync ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed synchronously (i.e. it will only return when the CINT interpreter thread has finished executing the line). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2390 of file TROOT.cxx. ◆ ReadGitInfo(). void TROOT::ReadGitInfo ; (; ). protected . Read Git commit SHA1 and branch name. ; Read Git commit info",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:70610,Availability,error,error,70610,"ROOT::ProcessLine ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed asynchronously by sending it to the CINT interpreter thread. For explicit synchronous processing use ProcessLineSync(). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. In particular, error will equal to TInterpreter::kProcessing until the CINT interpreted thread has finished executing the line. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2370 of file TROOT.cxx. ◆ ProcessLineFast(). Longptr_t TROOT::ProcessLineFast ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command directly via CINT interpreter. ; Only executable statements are allowed (no variable declarations), In all other cases use TROOT::ProcessLine(). The possible error codes are defined by TInterpreter::EErrorCode. ; Definition at line 2407 of file TROOT.cxx. ◆ ProcessLineSync(). Longptr_t TROOT::ProcessLineSync ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed synchronously (i.e. it will only return when the CINT interpreter thread has finished executing the line). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2390 of file TROOT.cxx. ◆ ReadGitInfo(). void TROOT::ReadGitInfo ; (; ). protected . Read Git commit SHA1 and branch name. ; Read Git commit information and branch name from the etc/gitinfo.txt file. ; Definition at line 2429 of file TROOT.cxx. ◆ ReadingObject(). Bool_t TROOT::ReadingObject ; (; ); const. Deprecated (will be removed in next release). ; Definition at",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:70800,Availability,error,error,70800,"d asynchronously by sending it to the CINT interpreter thread. For explicit synchronous processing use ProcessLineSync(). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. In particular, error will equal to TInterpreter::kProcessing until the CINT interpreted thread has finished executing the line. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2370 of file TROOT.cxx. ◆ ProcessLineFast(). Longptr_t TROOT::ProcessLineFast ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command directly via CINT interpreter. ; Only executable statements are allowed (no variable declarations), In all other cases use TROOT::ProcessLine(). The possible error codes are defined by TInterpreter::EErrorCode. ; Definition at line 2407 of file TROOT.cxx. ◆ ProcessLineSync(). Longptr_t TROOT::ProcessLineSync ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed synchronously (i.e. it will only return when the CINT interpreter thread has finished executing the line). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2390 of file TROOT.cxx. ◆ ReadGitInfo(). void TROOT::ReadGitInfo ; (; ). protected . Read Git commit SHA1 and branch name. ; Read Git commit information and branch name from the etc/gitinfo.txt file. ; Definition at line 2429 of file TROOT.cxx. ◆ ReadingObject(). Bool_t TROOT::ReadingObject ; (; ); const. Deprecated (will be removed in next release). ; Definition at line 2460 of file TROOT.cxx. ◆ RecursiveRemove(). void TROOT::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Recursively remove this object from the list of Cleanu",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:71131,Availability,error,error,71131,"he CINT interpreted thread has finished executing the line. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2370 of file TROOT.cxx. ◆ ProcessLineFast(). Longptr_t TROOT::ProcessLineFast ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command directly via CINT interpreter. ; Only executable statements are allowed (no variable declarations), In all other cases use TROOT::ProcessLine(). The possible error codes are defined by TInterpreter::EErrorCode. ; Definition at line 2407 of file TROOT.cxx. ◆ ProcessLineSync(). Longptr_t TROOT::ProcessLineSync ; (; const char * ; line, . Int_t * ; error = nullptr . ). Process interpreter command via TApplication::ProcessLine(). ; On Win32 the line will be processed synchronously (i.e. it will only return when the CINT interpreter thread has finished executing the line). On non-Win32 platforms there is no difference between ProcessLine() and ProcessLineSync(). The possible error codes are defined by TInterpreter::EErrorCode. Returns the result of the command, cast to a Longptr_t. ; Definition at line 2390 of file TROOT.cxx. ◆ ReadGitInfo(). void TROOT::ReadGitInfo ; (; ). protected . Read Git commit SHA1 and branch name. ; Read Git commit information and branch name from the etc/gitinfo.txt file. ; Definition at line 2429 of file TROOT.cxx. ◆ ReadingObject(). Bool_t TROOT::ReadingObject ; (; ); const. Deprecated (will be removed in next release). ; Definition at line 2460 of file TROOT.cxx. ◆ RecursiveRemove(). void TROOT::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Recursively remove this object from the list of Cleanups. ; Typically RecursiveRemove is implemented by classes that can contain mulitple references to a same object or shared ownership of the object with others. ; Reimplemented from TDirectory.; Definition at line 2498 of file TROOT.cxx. ◆ RefreshBrowsers(). void TROOT::RefreshBrowsers ; (; ). Refresh all browsers. ; Call this method when some com",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:75131,Availability,avail,available,75131,"set from within an interpreted function will lead to the unloading of the dictionary and source file, including the one defining the function being executed. ; Definition at line 2651 of file TROOT.cxx. ◆ ResetClassSaved(). void TROOT::ResetClassSaved ; (; ). Reset the ClassSaved status of all classes. ; Definition at line 1096 of file TROOT.cxx. ◆ RootVersionCode(). Int_t TROOT::RootVersionCode ; (; ). static . Return ROOT version code as defined in RVersion.h. ; Definition at line 2945 of file TROOT.cxx. ◆ SaveContext(). void TROOT::SaveContext ; (; ). Save the current interpreter context. ; Definition at line 2671 of file TROOT.cxx. ◆ SetApplication(). void TROOT::SetApplication ; (; TApplication * ; app). inline . Definition at line 317 of file TROOT.h. ◆ SetBatch(). void TROOT::SetBatch ; (; Bool_t ; batch = kTRUE). Set batch mode for ROOT If the argument evaluates to true, the session does not use interactive graphics. ; If web graphics runs in server mode, the web widgets are still available via URL ; Definition at line 2803 of file TROOT.cxx. ◆ SetCutClassName(). void TROOT::SetCutClassName ; (; const char * ; name = ""TCutG""). Set the default graphical cut class name for the graphics editor By default the graphics editor creates an instance of a class TCutG. ; This function may be called to specify a different class that MUST derive from TCutG ; Definition at line 2683 of file TROOT.cxx. ◆ SetDefCanvasName(). void TROOT::SetDefCanvasName ; (; const char * ; name = ""c1""). inline . Definition at line 321 of file TROOT.h. ◆ SetDirLevel(). void TROOT::SetDirLevel ; (; Int_t ; level = 0). static . Return Indentation level for ls(). ; Definition at line 2918 of file TROOT.cxx. ◆ SetEditHistograms(). void TROOT::SetEditHistograms ; (; Bool_t ; flag = kTRUE). inline . Definition at line 322 of file TROOT.h. ◆ SetEditorMode(). void TROOT::SetEditorMode ; (; const char * ; mode = """"). Set editor mode. ; Definition at line 2704 of file TROOT.cxx. ◆ SetEscape(). void TR",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:78659,Availability,avail,available,78659,"OT::SetSelectedPrimitive ; (; const TObject * ; obj). inline . Definition at line 332 of file TROOT.h. ◆ SetStyle(). void TROOT::SetStyle ; (; const char * ; stylename = ""Default""). Change current style to style with name stylename. ; Definition at line 2730 of file TROOT.cxx. ◆ SetWebDisplay(). void TROOT::SetWebDisplay ; (; const char * ; webdisplay = """"). Specify where web graphics shall be rendered. ; The input parameter webdisplay defines where web graphics is rendered. webdisplay parameter may contain:. ""firefox"": select Mozilla Firefox browser for interactive web display; ""chrome"": select Google Chrome browser for interactive web display; ""edge"": select Microsoft Edge browser for interactive web display; ""native"": select one of the natively-supported web browsers firefox/chrome/edge for interactive web display; ""qt5"": uses QWebEngine from Qt5, no real http server started (requires qt5web component build for ROOT); ""qt6"": uses QWebEngine from Qt6, no real http server started (requires qt6web component build for ROOT); ""cef"": uses Chromium Embeded Framework, no real http server started (requires cefweb component build for ROOT); ""local"": select on of available local (without http server) engines like qt5/qt6/cef; ""default"": system default web browser, invoked with xdg-open on Linux, start on Mac or open on Windows; ""on"": try ""local"", then ""native"", then ""default"" option; ""off"": turns off the web display and comes back to normal graphics in interactive mode.; ""server:port"": turns the web display into server mode with specified port. Web widgets will not be displayed, only text message with window URL will be printed on standard output . Definition at line 2831 of file TROOT.cxx. ◆ ShutDown(). void TROOT::ShutDown ; (; ). static . Shut down ROOT. ; Definition at line 3140 of file TROOT.cxx. ◆ Streamer(). void TROOT::Streamer ; (; TBuffer & ; R__b). overridevirtual . TDirectory Streamer. ; Reimplemented from TDirectory. ◆ StreamerNVirtual(). void TROOT::StreamerNV",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:79254,Availability,down,down,79254," browsers firefox/chrome/edge for interactive web display; ""qt5"": uses QWebEngine from Qt5, no real http server started (requires qt5web component build for ROOT); ""qt6"": uses QWebEngine from Qt6, no real http server started (requires qt6web component build for ROOT); ""cef"": uses Chromium Embeded Framework, no real http server started (requires cefweb component build for ROOT); ""local"": select on of available local (without http server) engines like qt5/qt6/cef; ""default"": system default web browser, invoked with xdg-open on Linux, start on Mac or open on Windows; ""on"": try ""local"", then ""native"", then ""default"" option; ""off"": turns off the web display and comes back to normal graphics in interactive mode.; ""server:port"": turns the web display into server mode with specified port. Web widgets will not be displayed, only text message with window URL will be printed on standard output . Definition at line 2831 of file TROOT.cxx. ◆ ShutDown(). void TROOT::ShutDown ; (; ). static . Shut down ROOT. ; Definition at line 3140 of file TROOT.cxx. ◆ Streamer(). void TROOT::Streamer ; (; TBuffer & ; R__b). overridevirtual . TDirectory Streamer. ; Reimplemented from TDirectory. ◆ StreamerNVirtual(). void TROOT::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 372 of file TROOT.h. ◆ Time(). void TROOT::Time ; (; Int_t ; casetime = 1). inline . Definition at line 335 of file TROOT.h. ◆ Timer(). Int_t TROOT::Timer ; (; ); const. inline . Definition at line 336 of file TROOT.h. Friends And Related Symbol Documentation. ◆ ::ROOT::Internal::TROOTAllocator. friend class ::ROOT::Internal::TROOTAllocator. friend . Definition at line 181 of file TROOT.h. ◆ ROOT::Internal::GetROOT2. TROOT * ROOT::Internal::GetROOT2 ; (; ). friend . ◆ TCling. friend class TCling. friend . Definition at line 96 of file TROOT.h. Member Data Documentation. ◆ fApplication. std::atomic<TApplication*> TROOT::fApplication. protected . Pointer to current application. ; De",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:11429,Deployability,release,release,11429,"n used by TClass::GetClass(). ;  ; Int_t LoadMacro (const char *filename, Int_t *error=nullptr, Bool_t check=kFALSE);  Load a macro in the interpreter's memory. ;  ; void ls (Option_t *option="""") const override;  To list all objects of the application. ;  ; Longptr_t Macro (const char *filename, Int_t *error=nullptr, Bool_t padUpdate=kTRUE);  Execute a macro in the interpreter. ;  ; TCanvas * MakeDefCanvas () const;  Return a default canvas. ;  ; void Message (Int_t id, const TObject *obj);  Process message id called by obj. ;  ; Bool_t MustClean () const;  ; Longptr_t ProcessLine (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Longptr_t ProcessLineFast (const char *line, Int_t *error=nullptr);  Process interpreter command directly via CINT interpreter. ;  ; Longptr_t ProcessLineSync (const char *line, Int_t *error=nullptr);  Process interpreter command via TApplication::ProcessLine(). ;  ; Bool_t ReadingObject () const;  Deprecated (will be removed in next release). ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from the list of Cleanups. ;  ; void RefreshBrowsers ();  Refresh all browsers. ;  ; TObject * Remove (TObject *) override;  Remove an object from the in-memory list. ;  ; void RemoveClass (TClass *);  Remove a class from the list and map of classes. ;  ; void Reset (Option_t *option="""");  Delete all global interpreter objects created since the last call to Reset. ;  ; void ResetClassSaved ();  Reset the ClassSaved status of all classes. ;  ; void SaveContext ();  Save the current interpreter context. ;  ; void SetApplication (TApplication *app);  ; void SetBatch (Bool_t batch=kTRUE);  Set batch mode for ROOT If the argument evaluates to true, the session does not use interactive graphics. ;  ; void SetCutClassName (const char *name=""TCutG"");  Set the default graphical cut class name for the graphics editor By default the graphics editor creates an instance of a ",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:27390,Deployability,install,installation,27390,"ual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static const std::vector< std::string > & AddExtraInterpreterArgs (const std::vector< std::string > &args);  Provide command line arguments to the interpreter construction. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Int_t ConvertVersionCode2Int (Int_t code);  Convert version code to an integer, i.e. 331527 -> 51507. ;  ; static Int_t ConvertVersionInt2Code (Int_t v);  Convert version as an integer to version code as used in RVersion.h. ;  ; static const char * DeclFileName ();  ; static Int_t DecreaseDirLevel ();  Decrease the indentation level for ls(). ;  ; static const TString & GetBinDir ();  Get the binary directory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TStrin",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:27503,Deployability,install,installation,27503,"s::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static const std::vector< std::string > & AddExtraInterpreterArgs (const std::vector< std::string > &args);  Provide command line arguments to the interpreter construction. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Int_t ConvertVersionCode2Int (Int_t code);  Convert version code to an integer, i.e. 331527 -> 51507. ;  ; static Int_t ConvertVersionInt2Code (Int_t v);  Convert version as an integer to version code as used in RVersion.h. ;  ; static const char * DeclFileName ();  ; static Int_t DecreaseDirLevel ();  Decrease the indentation level for ls(). ;  ; static const TString & GetBinDir ();  Get the binary directory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:27682,Deployability,install,installation,27682,"rning message. ;  . Static Public Member Functions; static const std::vector< std::string > & AddExtraInterpreterArgs (const std::vector< std::string > &args);  Provide command line arguments to the interpreter construction. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Int_t ConvertVersionCode2Int (Int_t code);  Convert version code to an integer, i.e. 331527 -> 51507. ;  ; static Int_t ConvertVersionInt2Code (Int_t v);  Convert version as an integer to version code as used in RVersion.h. ;  ; static const char * DeclFileName ();  ; static Int_t DecreaseDirLevel ();  Decrease the indentation level for ls(). ;  ; static const TString & GetBinDir ();  Get the binary directory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the ",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:27799,Deployability,install,installation,27799,"g > &args);  Provide command line arguments to the interpreter construction. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Int_t ConvertVersionCode2Int (Int_t code);  Convert version code to an integer, i.e. 331527 -> 51507. ;  ; static Int_t ConvertVersionInt2Code (Int_t v);  Convert version as an integer to version code as used in RVersion.h. ;  ; static const char * DeclFileName ();  ; static Int_t DecreaseDirLevel ();  Decrease the indentation level for ls(). ;  ; static const TString & GetBinDir ();  Get the binary directory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Stat",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28062,Deployability,install,installation,28062,"e to an integer, i.e. 331527 -> 51507. ;  ; static Int_t ConvertVersionInt2Code (Int_t v);  Convert version as an integer to version code as used in RVersion.h. ;  ; static const char * DeclFileName ();  ; static Int_t DecreaseDirLevel ();  Decrease the indentation level for ls(). ;  ; static const TString & GetBinDir ();  Get the binary directory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static ",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28181,Deployability,install,installation,28181,integer to version code as used in RVersion.h. ;  ; static const char * DeclFileName ();  ; static Int_t DecreaseDirLevel ();  Decrease the indentation level for ls(). ;  ; static const TString & GetBinDir ();  Get the binary directory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ;,MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28296,Deployability,install,installation,28296,evel ();  Decrease the indentation level for ls(). ;  ; static const TString & GetBinDir ();  Get the binary directory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t Increase,MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28411,Deployability,install,installation,28411,ory in the installation. Static utility function. ;  ; static const TString & GetDataDir ();  Get the data directory in the installation. Static utility function. ;  ; static Int_t GetDirLevel ();  return directory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to ,MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28618,Deployability,install,installation,28618,irectory level ;  ; static const TString & GetDocDir ();  Get the documentation directory in the installation. Static utility function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to indent an object hierarchy. ;  ; static void Initialize ();  Initialize ROOT explicitly. ;  ; static Bool_t Initialized ();  Return kTRUE if the TROOT object has been initialized. ;  ; static void RegisterMo,MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28748,Deployability,install,installation,28748,"ty function. ;  ; static const TString & GetEtcDir ();  Get the sysconfig directory in the installation. Static utility function. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to indent an object hierarchy. ;  ; static void Initialize ();  Initialize ROOT explicitly. ;  ; static Bool_t Initialized ();  Return kTRUE if the TROOT object has been initialized. ;  ; static void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDecl",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28865,Deployability,install,installation,28865,"tion. ;  ; static const char **& GetExtraInterpreterArgs ();  INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to indent an object hierarchy. ;  ; static void Initialize ();  Initialize ROOT explicitly. ;  ; static Bool_t Initialized ();  Return kTRUE if the TROOT object has been initialized. ;  ; static void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCx",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:28982,Deployability,install,installation,28982,"ter arguments through a C-interface layer. ;  ; static const TString & GetIconPath ();  Get the icon path in the installation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to indent an object hierarchy. ;  ; static void Initialize ();  Initialize ROOT explicitly. ;  ; static Bool_t Initialized ();  Return kTRUE if the TROOT object has been initialized. ;  ; static void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false);  Called by static dictionary initialization to register clang modules for headers. ;  ; static Int_t ",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:29104,Deployability,install,installation,29104,"lation. Static utility function. ;  ; static const TString & GetIncludeDir ();  Get the include directory in the installation. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to indent an object hierarchy. ;  ; static void Initialize ();  Initialize ROOT explicitly. ;  ; static Bool_t Initialized ();  Return kTRUE if the TROOT object has been initialized. ;  ; static void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false);  Called by static dictionary initialization to register clang modules for headers. ;  ; static Int_t RootVersionCode ();  Return ROOT version code as defined in RVersion.h. ;  ; static void SetDirLevel (Int_t level=0);  R",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:29224,Deployability,install,installation,29224,"tion. Static utility function. ;  ; static const TString & GetLibDir ();  Get the library directory in the installation. Static utility function. ;  ; static const TString & GetMacroDir ();  Get the macro directory in the installation. Static utility function. ;  ; static const char * GetMacroPath ();  Get macro search path. Static utility function. ;  ; static const TString & GetRootSys ();  Get the rootsys directory in the installation. Static utility function. ;  ; static const TString & GetSharedLibDir ();  Get the shared libraries directory in the installation. Static utility function. ;  ; static const TString & GetSourceDir ();  Get the source directory in the installation. Static utility function. ;  ; static const TString & GetTTFFontDir ();  Get the fonts directory in the installation. Static utility function. ;  ; static const TString & GetTutorialDir ();  Get the tutorials directory in the installation. Static utility function. ;  ; static const char * GetTutorialsDir ();  Get the tutorials directory in the installation. ;  ; static Int_t IncreaseDirLevel ();  Increase the indentation level for ls(). ;  ; static void IndentLevel ();  Functions used by ls() to indent an object hierarchy. ;  ; static void Initialize ();  Initialize ROOT explicitly. ;  ; static Bool_t Initialized ();  Return kTRUE if the TROOT object has been initialized. ;  ; static void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false);  Called by static dictionary initialization to register clang modules for headers. ;  ; static Int_t RootVersionCode ();  Return ROOT version code as defined in RVersion.h. ;  ; static void SetDirLevel (Int_t level=0);  Return Indentation level for ls(). ;  ; static void SetMacroPath (const char *newpath);  Set or extend the macro search pa",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:48210,Deployability,install,installation,48210,"t geometry; List of matrices in current geometry; List of Nodes in current geometry; Current Directory in memory; Current Directory on file . Definition at line 1367 of file TROOT.cxx. ◆ FindSTLClass(). TClass * TROOT::FindSTLClass ; (; const char * ; name, . Bool_t ; load, . Bool_t ; silent = kFALSE . ); const. return a TClass object corresponding to 'name' assuming it is an STL container. ; In particular we looking for possible alternative name (default template parameter, typedefs template arguments, typedefed name). ; Definition at line 1484 of file TROOT.cxx. ◆ ForceStyle(). void TROOT::ForceStyle ; (; Bool_t ; force = kTRUE). inline . Definition at line 206 of file TROOT.h. ◆ FromPopUp(). Bool_t TROOT::FromPopUp ; (; ); const. inline . Definition at line 207 of file TROOT.h. ◆ GetApplication(). TApplication * TROOT::GetApplication ; (; ); const. inline . Definition at line 209 of file TROOT.h. ◆ GetBinDir(). const TString & TROOT::GetBinDir ; (; ). static . Get the binary directory in the installation. Static utility function. ; Definition at line 2993 of file TROOT.cxx. ◆ GetBuiltDate(). Int_t TROOT::GetBuiltDate ; (; ); const. inline . Definition at line 221 of file TROOT.h. ◆ GetBuiltTime(). Int_t TROOT::GetBuiltTime ; (; ); const. inline . Definition at line 222 of file TROOT.h. ◆ GetClass() [1/2]. TClass * TROOT::GetClass ; (; const char * ; name, . Bool_t ; load = kTRUE, . Bool_t ; silent = kFALSE . ); const. Return pointer to class with name. Obsolete, use TClass::GetClass directly. ; Definition at line 1518 of file TROOT.cxx. ◆ GetClass() [2/2]. TClass * TROOT::GetClass ; (; const std::type_info & ; typeinfo, . Bool_t ; load = kTRUE, . Bool_t ; silent = kFALSE . ); const. Return pointer to class from its name. ; Obsolete, use TClass::GetClass directly See TClass::GetClass ; Definition at line 1528 of file TROOT.cxx. ◆ GetClipboard(). TSeqCollection * TROOT::GetClipboard ; (; ); const. inline . Definition at line 254 of file TROOT.h. ◆ GetColor(). TColo",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:49801,Deployability,install,installation,49801," * TROOT::GetClass ; (; const std::type_info & ; typeinfo, . Bool_t ; load = kTRUE, . Bool_t ; silent = kFALSE . ); const. Return pointer to class from its name. ; Obsolete, use TClass::GetClass directly See TClass::GetClass ; Definition at line 1528 of file TROOT.cxx. ◆ GetClipboard(). TSeqCollection * TROOT::GetClipboard ; (; ); const. inline . Definition at line 254 of file TROOT.h. ◆ GetColor(). TColor * TROOT::GetColor ; (; Int_t ; color); const. Return address of color with index color. ; Definition at line 1536 of file TROOT.cxx. ◆ GetConfigFeatures(). const char * TROOT::GetConfigFeatures ; (; ); const. inline . Definition at line 215 of file TROOT.h. ◆ GetConfigOptions(). const char * TROOT::GetConfigOptions ; (; ); const. inline . Definition at line 214 of file TROOT.h. ◆ GetCutClassName(). const char * TROOT::GetCutClassName ; (; ); const. inline . Definition at line 216 of file TROOT.h. ◆ GetDataDir(). const TString & TROOT::GetDataDir ; (; ). static . Get the data directory in the installation. Static utility function. ; Definition at line 3066 of file TROOT.cxx. ◆ GetDefCanvasName(). const char * TROOT::GetDefCanvasName ; (; ); const. inline . Definition at line 217 of file TROOT.h. ◆ GetDirLevel(). Int_t TROOT::GetDirLevel ; (; ). static . return directory level ; Definition at line 2754 of file TROOT.cxx. ◆ GetDocDir(). const TString & TROOT::GetDocDir ; (; ). static . Get the documentation directory in the installation. Static utility function. ; Definition at line 3082 of file TROOT.cxx. ◆ GetEditHistograms(). Bool_t TROOT::GetEditHistograms ; (; ); const. inline . Definition at line 218 of file TROOT.h. ◆ GetEditorMode(). Int_t TROOT::GetEditorMode ; (; ); const. inline . Definition at line 219 of file TROOT.h. ◆ GetEtcDir(). const TString & TROOT::GetEtcDir ; (; ). static . Get the sysconfig directory in the installation. Static utility function. ; Definition at line 3056 of file TROOT.cxx. ◆ GetExtraInterpreterArgs(). const char **& TROOT::GetEx",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:50239,Deployability,install,installation,50239,Int_t ; color); const. Return address of color with index color. ; Definition at line 1536 of file TROOT.cxx. ◆ GetConfigFeatures(). const char * TROOT::GetConfigFeatures ; (; ); const. inline . Definition at line 215 of file TROOT.h. ◆ GetConfigOptions(). const char * TROOT::GetConfigOptions ; (; ); const. inline . Definition at line 214 of file TROOT.h. ◆ GetCutClassName(). const char * TROOT::GetCutClassName ; (; ); const. inline . Definition at line 216 of file TROOT.h. ◆ GetDataDir(). const TString & TROOT::GetDataDir ; (; ). static . Get the data directory in the installation. Static utility function. ; Definition at line 3066 of file TROOT.cxx. ◆ GetDefCanvasName(). const char * TROOT::GetDefCanvasName ; (; ); const. inline . Definition at line 217 of file TROOT.h. ◆ GetDirLevel(). Int_t TROOT::GetDirLevel ; (; ). static . return directory level ; Definition at line 2754 of file TROOT.cxx. ◆ GetDocDir(). const TString & TROOT::GetDocDir ; (; ). static . Get the documentation directory in the installation. Static utility function. ; Definition at line 3082 of file TROOT.cxx. ◆ GetEditHistograms(). Bool_t TROOT::GetEditHistograms ; (; ); const. inline . Definition at line 218 of file TROOT.h. ◆ GetEditorMode(). Int_t TROOT::GetEditorMode ; (; ); const. inline . Definition at line 219 of file TROOT.h. ◆ GetEtcDir(). const TString & TROOT::GetEtcDir ; (; ). static . Get the sysconfig directory in the installation. Static utility function. ; Definition at line 3056 of file TROOT.cxx. ◆ GetExtraInterpreterArgs(). const char **& TROOT::GetExtraInterpreterArgs ; (; ). static . INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ; Definition at line 2966 of file TROOT.cxx. ◆ GetFile() [1/2]. TFile * TROOT::GetFile ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 260 of file TROOT.h. ◆ GetFile() [2/2]. TFile * TROOT::GetFile ; (; const char * ; name); const. Return pointer to file wit,MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:50652,Deployability,install,installation,50652,; (; ); const. inline . Definition at line 216 of file TROOT.h. ◆ GetDataDir(). const TString & TROOT::GetDataDir ; (; ). static . Get the data directory in the installation. Static utility function. ; Definition at line 3066 of file TROOT.cxx. ◆ GetDefCanvasName(). const char * TROOT::GetDefCanvasName ; (; ); const. inline . Definition at line 217 of file TROOT.h. ◆ GetDirLevel(). Int_t TROOT::GetDirLevel ; (; ). static . return directory level ; Definition at line 2754 of file TROOT.cxx. ◆ GetDocDir(). const TString & TROOT::GetDocDir ; (; ). static . Get the documentation directory in the installation. Static utility function. ; Definition at line 3082 of file TROOT.cxx. ◆ GetEditHistograms(). Bool_t TROOT::GetEditHistograms ; (; ); const. inline . Definition at line 218 of file TROOT.h. ◆ GetEditorMode(). Int_t TROOT::GetEditorMode ; (; ); const. inline . Definition at line 219 of file TROOT.h. ◆ GetEtcDir(). const TString & TROOT::GetEtcDir ; (; ). static . Get the sysconfig directory in the installation. Static utility function. ; Definition at line 3056 of file TROOT.cxx. ◆ GetExtraInterpreterArgs(). const char **& TROOT::GetExtraInterpreterArgs ; (; ). static . INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer. ; Definition at line 2966 of file TROOT.cxx. ◆ GetFile() [1/2]. TFile * TROOT::GetFile ; (; ); const. inlineoverridevirtual . Reimplemented from TDirectory.; Definition at line 260 of file TROOT.h. ◆ GetFile() [2/2]. TFile * TROOT::GetFile ; (; const char * ; name); const. Return pointer to file with name. ; Definition at line 1570 of file TROOT.cxx. ◆ GetForceStyle(). Bool_t TROOT::GetForceStyle ; (; ); const. inline . Definition at line 220 of file TROOT.h. ◆ GetFunction(). TObject * TROOT::GetFunction ; (; const char * ; name); const. Return pointer to function with name. ; Definition at line 1587 of file TROOT.cxx. ◆ GetFunctionTemplate(). TFunctionTemplate * TROOT::GetFunctionTemplate ; (; const char ,MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:54001,Deployability,install,installation,54001,"st name match. If params == 0 and load is true force reading of all currently defined global functions from Cling. The param string must be of the form: ""3189,\""aap\"",1.3"". ; Definition at line 1685 of file TROOT.cxx. ◆ GetGlobalFunctions(). TListOfFunctions * TROOT::GetGlobalFunctions ; (; ). protected . Internal routine returning, and creating if necessary, the list of global function. ; Definition at line 1663 of file TROOT.cxx. ◆ GetGlobalFunctionWithPrototype(). TFunction * TROOT::GetGlobalFunctionWithPrototype ; (; const char * ; function, . const char * ; proto = nullptr, . Bool_t ; load = kFALSE . ). Return pointer to global function by name. ; If proto != 0 it will also resolve overloading. If load is true force reading of all currently defined global functions from CINT (more expensive). The proto string must be of the form: ""int, char*, float"". ; Definition at line 1718 of file TROOT.cxx. ◆ GetIconPath(). const TString & TROOT::GetIconPath ; (; ). static . Get the icon path in the installation. Static utility function. ; Definition at line 3172 of file TROOT.cxx. ◆ GetIncludeDir(). const TString & TROOT::GetIncludeDir ; (; ). static . Get the include directory in the installation. Static utility function. ; Definition at line 3046 of file TROOT.cxx. ◆ GetInterpreter(). TInterpreter * TROOT::GetInterpreter ; (; ); const. inline . Definition at line 210 of file TROOT.h. ◆ GetLibDir(). const TString & TROOT::GetLibDir ; (; ). static . Get the library directory in the installation. Static utility function. ; Definition at line 3014 of file TROOT.cxx. ◆ GetListOfBrowsables(). TList * TROOT::GetListOfBrowsables ; (; ); const. inline . Definition at line 258 of file TROOT.h. ◆ GetListOfBrowsers(). TSeqCollection * TROOT::GetListOfBrowsers ; (; ); const. inline . Definition at line 245 of file TROOT.h. ◆ GetListOfCanvases(). TSeqCollection * TROOT::GetListOfCanvases ; (; ); const. inline . Definition at line 240 of file TROOT.h. ◆ GetListOfClasses(). TCollection *",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:54191,Deployability,install,installation,54191,"at line 1685 of file TROOT.cxx. ◆ GetGlobalFunctions(). TListOfFunctions * TROOT::GetGlobalFunctions ; (; ). protected . Internal routine returning, and creating if necessary, the list of global function. ; Definition at line 1663 of file TROOT.cxx. ◆ GetGlobalFunctionWithPrototype(). TFunction * TROOT::GetGlobalFunctionWithPrototype ; (; const char * ; function, . const char * ; proto = nullptr, . Bool_t ; load = kFALSE . ). Return pointer to global function by name. ; If proto != 0 it will also resolve overloading. If load is true force reading of all currently defined global functions from CINT (more expensive). The proto string must be of the form: ""int, char*, float"". ; Definition at line 1718 of file TROOT.cxx. ◆ GetIconPath(). const TString & TROOT::GetIconPath ; (; ). static . Get the icon path in the installation. Static utility function. ; Definition at line 3172 of file TROOT.cxx. ◆ GetIncludeDir(). const TString & TROOT::GetIncludeDir ; (; ). static . Get the include directory in the installation. Static utility function. ; Definition at line 3046 of file TROOT.cxx. ◆ GetInterpreter(). TInterpreter * TROOT::GetInterpreter ; (; ); const. inline . Definition at line 210 of file TROOT.h. ◆ GetLibDir(). const TString & TROOT::GetLibDir ; (; ). static . Get the library directory in the installation. Static utility function. ; Definition at line 3014 of file TROOT.cxx. ◆ GetListOfBrowsables(). TList * TROOT::GetListOfBrowsables ; (; ); const. inline . Definition at line 258 of file TROOT.h. ◆ GetListOfBrowsers(). TSeqCollection * TROOT::GetListOfBrowsers ; (; ); const. inline . Definition at line 245 of file TROOT.h. ◆ GetListOfCanvases(). TSeqCollection * TROOT::GetListOfCanvases ; (; ); const. inline . Definition at line 240 of file TROOT.h. ◆ GetListOfClasses(). TCollection * TROOT::GetListOfClasses ; (; ); const. inline . Definition at line 231 of file TROOT.h. ◆ GetListOfClassGenerators(). TCollection * TROOT::GetListOfClassGenerators ; (; ); const. inline",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:54494,Deployability,install,installation,54494,"::GetGlobalFunctionWithPrototype ; (; const char * ; function, . const char * ; proto = nullptr, . Bool_t ; load = kFALSE . ). Return pointer to global function by name. ; If proto != 0 it will also resolve overloading. If load is true force reading of all currently defined global functions from CINT (more expensive). The proto string must be of the form: ""int, char*, float"". ; Definition at line 1718 of file TROOT.cxx. ◆ GetIconPath(). const TString & TROOT::GetIconPath ; (; ). static . Get the icon path in the installation. Static utility function. ; Definition at line 3172 of file TROOT.cxx. ◆ GetIncludeDir(). const TString & TROOT::GetIncludeDir ; (; ). static . Get the include directory in the installation. Static utility function. ; Definition at line 3046 of file TROOT.cxx. ◆ GetInterpreter(). TInterpreter * TROOT::GetInterpreter ; (; ); const. inline . Definition at line 210 of file TROOT.h. ◆ GetLibDir(). const TString & TROOT::GetLibDir ; (; ). static . Get the library directory in the installation. Static utility function. ; Definition at line 3014 of file TROOT.cxx. ◆ GetListOfBrowsables(). TList * TROOT::GetListOfBrowsables ; (; ); const. inline . Definition at line 258 of file TROOT.h. ◆ GetListOfBrowsers(). TSeqCollection * TROOT::GetListOfBrowsers ; (; ); const. inline . Definition at line 245 of file TROOT.h. ◆ GetListOfCanvases(). TSeqCollection * TROOT::GetListOfCanvases ; (; ); const. inline . Definition at line 240 of file TROOT.h. ◆ GetListOfClasses(). TCollection * TROOT::GetListOfClasses ; (; ); const. inline . Definition at line 231 of file TROOT.h. ◆ GetListOfClassGenerators(). TCollection * TROOT::GetListOfClassGenerators ; (; ); const. inline . Definition at line 251 of file TROOT.h. ◆ GetListOfCleanups(). TSeqCollection * TROOT::GetListOfCleanups ; (; ); const. inline . Definition at line 248 of file TROOT.h. ◆ GetListOfClosedObjects(). TSeqCollection * TROOT::GetListOfClosedObjects ; (; ); const. inline . Definition at line 236 of file T",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:56847,Deployability,update,update,56847,"inition at line 1754 of file TROOT.cxx. ◆ GetListOfFiles(). TSeqCollection * TROOT::GetListOfFiles ; (; ); const. inline . Definition at line 237 of file TROOT.h. ◆ GetListOfFunctionOverloads(). TCollection * TROOT::GetListOfFunctionOverloads ; (; const char * ; name); const. Return the collection of functions named ""name"". ; Definition at line 1672 of file TROOT.cxx. ◆ GetListOfFunctions(). TCollection * TROOT::GetListOfFunctions ; (; ); const. inline . Definition at line 242 of file TROOT.h. ◆ GetListOfFunctionTemplates(). TCollection * TROOT::GetListOfFunctionTemplates ; (; ). Definition at line 1771 of file TROOT.cxx. ◆ GetListOfGeometries(). TSeqCollection * TROOT::GetListOfGeometries ; (; ); const. inline . Definition at line 244 of file TROOT.h. ◆ GetListOfGlobalFunctions(). TCollection * TROOT::GetListOfGlobalFunctions ; (; Bool_t ; load = kFALSE). Return list containing the TFunctions currently defined. ; Since functions are created and deleted during execution of the program, we need to update the list of functions every time we execute this method. However, when calling this function in a (tight) loop where no interpreter symbols will be created you can set load=kFALSE (default). ; Definition at line 1826 of file TROOT.cxx. ◆ GetListOfGlobals(). TCollection * TROOT::GetListOfGlobals ; (; Bool_t ; load = kFALSE). Return list containing the TGlobals currently defined. ; Since globals are created and deleted during execution of the program, we need to update the list of globals every time we execute this method. However, when calling this function in a (tight) loop where no interpreter symbols will be created you can set load=kFALSE (default). ; Definition at line 1788 of file TROOT.cxx. ◆ GetListOfMappedFiles(). TSeqCollection * TROOT::GetListOfMappedFiles ; (; ); const. inline . Definition at line 238 of file TROOT.h. ◆ GetListOfMessageHandlers(). TSeqCollection * TROOT::GetListOfMessageHandlers ; (; ); const. inline . Definition at line 250 of file TROOT.",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:57319,Deployability,update,update,57319," line 242 of file TROOT.h. ◆ GetListOfFunctionTemplates(). TCollection * TROOT::GetListOfFunctionTemplates ; (; ). Definition at line 1771 of file TROOT.cxx. ◆ GetListOfGeometries(). TSeqCollection * TROOT::GetListOfGeometries ; (; ); const. inline . Definition at line 244 of file TROOT.h. ◆ GetListOfGlobalFunctions(). TCollection * TROOT::GetListOfGlobalFunctions ; (; Bool_t ; load = kFALSE). Return list containing the TFunctions currently defined. ; Since functions are created and deleted during execution of the program, we need to update the list of functions every time we execute this method. However, when calling this function in a (tight) loop where no interpreter symbols will be created you can set load=kFALSE (default). ; Definition at line 1826 of file TROOT.cxx. ◆ GetListOfGlobals(). TCollection * TROOT::GetListOfGlobals ; (; Bool_t ; load = kFALSE). Return list containing the TGlobals currently defined. ; Since globals are created and deleted during execution of the program, we need to update the list of globals every time we execute this method. However, when calling this function in a (tight) loop where no interpreter symbols will be created you can set load=kFALSE (default). ; Definition at line 1788 of file TROOT.cxx. ◆ GetListOfMappedFiles(). TSeqCollection * TROOT::GetListOfMappedFiles ; (; ); const. inline . Definition at line 238 of file TROOT.h. ◆ GetListOfMessageHandlers(). TSeqCollection * TROOT::GetListOfMessageHandlers ; (; ); const. inline . Definition at line 250 of file TROOT.h. ◆ GetListOfProofs(). TSeqCollection * TROOT::GetListOfProofs ; (; ); const. inline . Definition at line 253 of file TROOT.h. ◆ GetListOfSecContexts(). TSeqCollection * TROOT::GetListOfSecContexts ; (; ); const. inline . Definition at line 252 of file TROOT.h. ◆ GetListOfSockets(). TSeqCollection * TROOT::GetListOfSockets ; (; ); const. inline . Definition at line 239 of file TROOT.h. ◆ GetListOfSpecials(). TSeqCollection * TROOT::GetListOfSpecials ; (; ); const. in",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:59492,Deployability,install,installation,59492,"TROOT.h. ◆ GetListOfStyles(). TSeqCollection * TROOT::GetListOfStyles ; (; ); const. inline . Definition at line 241 of file TROOT.h. ◆ GetListOfTasks(). TSeqCollection * TROOT::GetListOfTasks ; (; ); const. inline . Definition at line 247 of file TROOT.h. ◆ GetListOfTypes(). TCollection * TROOT::GetListOfTypes ; (; Bool_t ; load = kFALSE). Return a dynamic list giving access to all TDataTypes (typedefs) currently defined. ; The list is populated on demand. Calling gROOT->GetListOfTypes()->FindObject(nameoftype);; will return the TDataType corresponding to 'nameoftype'. If the TDataType is not already in the list itself and the type does exist, a new TDataType will be created and added to the list.; Calling gROOT->GetListOfTypes()->ls(); // or Print(); list only the typedefs that have been previously accessed through the list (plus the builtins types). ; Definition at line 1865 of file TROOT.cxx. ◆ GetMacroDir(). const TString & TROOT::GetMacroDir ; (; ). static . Get the macro directory in the installation. Static utility function. ; Definition at line 3098 of file TROOT.cxx. ◆ GetMacroPath(). const char * TROOT::GetMacroPath ; (; ). static . Get macro search path. Static utility function. ; Definition at line 2762 of file TROOT.cxx. ◆ GetNclasses(). Int_t TROOT::GetNclasses ; (; ); const. Get number of classes. ; Definition at line 1876 of file TROOT.cxx. ◆ GetNtypes(). Int_t TROOT::GetNtypes ; (; ); const. Get number of types. ; Definition at line 1884 of file TROOT.cxx. ◆ GetPluginManager(). TPluginManager * TROOT::GetPluginManager ; (; ); const. inline . Definition at line 208 of file TROOT.h. ◆ GetRootFolder(). TFolder * TROOT::GetRootFolder ; (; ); const. inline . Definition at line 274 of file TROOT.h. ◆ GetRootSys(). const TString & TROOT::GetRootSys ; (; ). static . Get the rootsys directory in the installation. Static utility function. ; Definition at line 2983 of file TROOT.cxx. ◆ GetSelectedPad(). TVirtualPad * TROOT::GetSelectedPad ; (; ); const. inline",MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
https://root.cern/doc/master/classTROOT.html:60322,Deployability,install,installation,60322,the list (plus the builtins types). ; Definition at line 1865 of file TROOT.cxx. ◆ GetMacroDir(). const TString & TROOT::GetMacroDir ; (; ). static . Get the macro directory in the installation. Static utility function. ; Definition at line 3098 of file TROOT.cxx. ◆ GetMacroPath(). const char * TROOT::GetMacroPath ; (; ). static . Get macro search path. Static utility function. ; Definition at line 2762 of file TROOT.cxx. ◆ GetNclasses(). Int_t TROOT::GetNclasses ; (; ); const. Get number of classes. ; Definition at line 1876 of file TROOT.cxx. ◆ GetNtypes(). Int_t TROOT::GetNtypes ; (; ); const. Get number of types. ; Definition at line 1884 of file TROOT.cxx. ◆ GetPluginManager(). TPluginManager * TROOT::GetPluginManager ; (; ); const. inline . Definition at line 208 of file TROOT.h. ◆ GetRootFolder(). TFolder * TROOT::GetRootFolder ; (; ); const. inline . Definition at line 274 of file TROOT.h. ◆ GetRootSys(). const TString & TROOT::GetRootSys ; (; ). static . Get the rootsys directory in the installation. Static utility function. ; Definition at line 2983 of file TROOT.cxx. ◆ GetSelectedPad(). TVirtualPad * TROOT::GetSelectedPad ; (; ); const. inline . Definition at line 271 of file TROOT.h. ◆ GetSelectedPrimitive(). const TObject * TROOT::GetSelectedPrimitive ; (; ); const. inline . Definition at line 270 of file TROOT.h. ◆ GetSharedLibDir(). const TString & TROOT::GetSharedLibDir ; (; ). static . Get the shared libraries directory in the installation. Static utility function. ; Definition at line 3035 of file TROOT.cxx. ◆ GetSourceDir(). const TString & TROOT::GetSourceDir ; (; ). static . Get the source directory in the installation. Static utility function. ; Definition at line 3151 of file TROOT.cxx. ◆ GetStyle(). TStyle * TROOT::GetStyle ; (; const char * ; name); const. Return pointer to style with name. ; Definition at line 1579 of file TROOT.cxx. ◆ GetTTFFontDir(). const TString & TROOT::GetTTFFontDir ; (; ). static . Get the fonts directory in the insta,MatchSource.WIKI,doc/master/classTROOT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTROOT.html
