id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/qupath/qupath/issues/179#issuecomment-399201573:244,Safety,risk,risk,244,"If you zoom in more, by default the brush will be effectively smaller and so it's easier to select a region without changing the shape. Of you change just switch to the *Move* tool to select another region by double-clicking on it, without any risk of changing its shape. You can toggle between tools by just pressing `M` and `B`. In general, you might find 'locking' annotations helpful - that helps avoid changing them accidentally, and also allows you to draw _new_ regions inside an existing annotation with the brush. To do so, select the annotation and then right-click on it, and choose *Annotations &rarr; Lock*. Finally, if you are doing a lot of painstaking annotations be sure to save regularly (*Ctrl + S*)... or consider trying the beta/pre-release version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). Installation is a bit more awkward, but it does provide (limited) undo support along with many other improvements - so may be worth it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399201573
https://github.com/qupath/qupath/issues/179#issuecomment-399201573:401,Safety,avoid,avoid,401,"If you zoom in more, by default the brush will be effectively smaller and so it's easier to select a region without changing the shape. Of you change just switch to the *Move* tool to select another region by double-clicking on it, without any risk of changing its shape. You can toggle between tools by just pressing `M` and `B`. In general, you might find 'locking' annotations helpful - that helps avoid changing them accidentally, and also allows you to draw _new_ regions inside an existing annotation with the brush. To do so, select the annotation and then right-click on it, and choose *Annotations &rarr; Lock*. Finally, if you are doing a lot of painstaking annotations be sure to save regularly (*Ctrl + S*)... or consider trying the beta/pre-release version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). Installation is a bit more awkward, but it does provide (limited) undo support along with many other improvements - so may be worth it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399201573
https://github.com/qupath/qupath/issues/179#issuecomment-399201573:914,Usability,undo,undo,914,"If you zoom in more, by default the brush will be effectively smaller and so it's easier to select a region without changing the shape. Of you change just switch to the *Move* tool to select another region by double-clicking on it, without any risk of changing its shape. You can toggle between tools by just pressing `M` and `B`. In general, you might find 'locking' annotations helpful - that helps avoid changing them accidentally, and also allows you to draw _new_ regions inside an existing annotation with the brush. To do so, select the annotation and then right-click on it, and choose *Annotations &rarr; Lock*. Finally, if you are doing a lot of painstaking annotations be sure to save regularly (*Ctrl + S*)... or consider trying the beta/pre-release version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). Installation is a bit more awkward, but it does provide (limited) undo support along with many other improvements - so may be worth it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399201573
https://github.com/qupath/qupath/issues/179#issuecomment-2046510611:162,Availability,down,down,162,"First, draw a rectangle. Then select the area you want within the rectangle with the “Wand” tool (it will go out of the rectangle). Next, zoom in the image, hold down the ""Alt"" key and use the ""Brush"" tool to erase the area outside the rectangle",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-2046510611
https://github.com/qupath/qupath/issues/181#issuecomment-400041117:156,Safety,detect,detections,156,"Not entirely sure what you are looking at or want to accomplish, but maybe these will help:; https://github.com/qupath/qupath/issues/126; Using subcellular detections, and expanding on the current classification setup:; https://github.com/qupath/qupath/issues/146. In general, it sounds like you will want to use some sort of subcellular detection, and then classify based on the number or total intensity of subcellular objects?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-400041117
https://github.com/qupath/qupath/issues/181#issuecomment-400041117:338,Safety,detect,detection,338,"Not entirely sure what you are looking at or want to accomplish, but maybe these will help:; https://github.com/qupath/qupath/issues/126; Using subcellular detections, and expanding on the current classification setup:; https://github.com/qupath/qupath/issues/146. In general, it sounds like you will want to use some sort of subcellular detection, and then classify based on the number or total intensity of subcellular objects?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-400041117
https://github.com/qupath/qupath/issues/181#issuecomment-400134063:883,Integrability,depend,depending,883,"Oh. I think I see... though I am not certain of how easy that will be. One thing to look into is smoothed measurements. _Analyze->Calculate features->Add smoothed features_. As long as your hotspots are roughly the same size, you should be able to get a smoothed measurement that peaks in small subsets of cells at the ""center"" of your hotspot. Unfortunately, I am not sure how to proceed from there without some kind of data. I am thinking you could perform a cluster analysis in R based on the XY coordinates.. or maybe a classifier. I am pretty sure there is no built in way for QuPath to handle this, but it sounds like the sort of thing that could definitely be done with scripting. Without scripting, you could do the _Add smoothed features_, and then _Measure->Show measurement maps_ and select one of your smoothed features (you may be able to do this without the smoothing, depending on your data/images). You should be able to visually find the hotspots, and could then use the ""Points tool"" to mark the center of each hot spot manually. Adding a different classification of spot for each type of marker would get you a set of points of various classifications, which you could then use to compare distances. If your images are fluorescent, and you can split the channels, you might be able to run simple tissue detection on each individual channel to get centroid coordinates for hotspots (sufficient gaussian blur). Also, if you were to simplify the question to ""how many immune cells are within X um of my hotspot"" you could generate the annotation, import it, then _Objects->Expand Annotations_ and count how many immune cells are within that expanded annotation (which could all be automated). It would no doubt be a bit trickier than that if you are dealing with overlapping hotspots. There may be other ways as well, but that's be best first stab going in blind.; If you are able to open a thread on the forum or share an image I might be able to be more specific.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-400134063
https://github.com/qupath/qupath/issues/181#issuecomment-400134063:451,Performance,perform,perform,451,"Oh. I think I see... though I am not certain of how easy that will be. One thing to look into is smoothed measurements. _Analyze->Calculate features->Add smoothed features_. As long as your hotspots are roughly the same size, you should be able to get a smoothed measurement that peaks in small subsets of cells at the ""center"" of your hotspot. Unfortunately, I am not sure how to proceed from there without some kind of data. I am thinking you could perform a cluster analysis in R based on the XY coordinates.. or maybe a classifier. I am pretty sure there is no built in way for QuPath to handle this, but it sounds like the sort of thing that could definitely be done with scripting. Without scripting, you could do the _Add smoothed features_, and then _Measure->Show measurement maps_ and select one of your smoothed features (you may be able to do this without the smoothing, depending on your data/images). You should be able to visually find the hotspots, and could then use the ""Points tool"" to mark the center of each hot spot manually. Adding a different classification of spot for each type of marker would get you a set of points of various classifications, which you could then use to compare distances. If your images are fluorescent, and you can split the channels, you might be able to run simple tissue detection on each individual channel to get centroid coordinates for hotspots (sufficient gaussian blur). Also, if you were to simplify the question to ""how many immune cells are within X um of my hotspot"" you could generate the annotation, import it, then _Objects->Expand Annotations_ and count how many immune cells are within that expanded annotation (which could all be automated). It would no doubt be a bit trickier than that if you are dealing with overlapping hotspots. There may be other ways as well, but that's be best first stab going in blind.; If you are able to open a thread on the forum or share an image I might be able to be more specific.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-400134063
https://github.com/qupath/qupath/issues/181#issuecomment-400134063:1322,Safety,detect,detection,1322,"Oh. I think I see... though I am not certain of how easy that will be. One thing to look into is smoothed measurements. _Analyze->Calculate features->Add smoothed features_. As long as your hotspots are roughly the same size, you should be able to get a smoothed measurement that peaks in small subsets of cells at the ""center"" of your hotspot. Unfortunately, I am not sure how to proceed from there without some kind of data. I am thinking you could perform a cluster analysis in R based on the XY coordinates.. or maybe a classifier. I am pretty sure there is no built in way for QuPath to handle this, but it sounds like the sort of thing that could definitely be done with scripting. Without scripting, you could do the _Add smoothed features_, and then _Measure->Show measurement maps_ and select one of your smoothed features (you may be able to do this without the smoothing, depending on your data/images). You should be able to visually find the hotspots, and could then use the ""Points tool"" to mark the center of each hot spot manually. Adding a different classification of spot for each type of marker would get you a set of points of various classifications, which you could then use to compare distances. If your images are fluorescent, and you can split the channels, you might be able to run simple tissue detection on each individual channel to get centroid coordinates for hotspots (sufficient gaussian blur). Also, if you were to simplify the question to ""how many immune cells are within X um of my hotspot"" you could generate the annotation, import it, then _Objects->Expand Annotations_ and count how many immune cells are within that expanded annotation (which could all be automated). It would no doubt be a bit trickier than that if you are dealing with overlapping hotspots. There may be other ways as well, but that's be best first stab going in blind.; If you are able to open a thread on the forum or share an image I might be able to be more specific.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-400134063
https://github.com/qupath/qupath/issues/181#issuecomment-400134063:1308,Usability,simpl,simple,1308,"Oh. I think I see... though I am not certain of how easy that will be. One thing to look into is smoothed measurements. _Analyze->Calculate features->Add smoothed features_. As long as your hotspots are roughly the same size, you should be able to get a smoothed measurement that peaks in small subsets of cells at the ""center"" of your hotspot. Unfortunately, I am not sure how to proceed from there without some kind of data. I am thinking you could perform a cluster analysis in R based on the XY coordinates.. or maybe a classifier. I am pretty sure there is no built in way for QuPath to handle this, but it sounds like the sort of thing that could definitely be done with scripting. Without scripting, you could do the _Add smoothed features_, and then _Measure->Show measurement maps_ and select one of your smoothed features (you may be able to do this without the smoothing, depending on your data/images). You should be able to visually find the hotspots, and could then use the ""Points tool"" to mark the center of each hot spot manually. Adding a different classification of spot for each type of marker would get you a set of points of various classifications, which you could then use to compare distances. If your images are fluorescent, and you can split the channels, you might be able to run simple tissue detection on each individual channel to get centroid coordinates for hotspots (sufficient gaussian blur). Also, if you were to simplify the question to ""how many immune cells are within X um of my hotspot"" you could generate the annotation, import it, then _Objects->Expand Annotations_ and count how many immune cells are within that expanded annotation (which could all be automated). It would no doubt be a bit trickier than that if you are dealing with overlapping hotspots. There may be other ways as well, but that's be best first stab going in blind.; If you are able to open a thread on the forum or share an image I might be able to be more specific.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-400134063
https://github.com/qupath/qupath/issues/181#issuecomment-400134063:1449,Usability,simpl,simplify,1449,"Oh. I think I see... though I am not certain of how easy that will be. One thing to look into is smoothed measurements. _Analyze->Calculate features->Add smoothed features_. As long as your hotspots are roughly the same size, you should be able to get a smoothed measurement that peaks in small subsets of cells at the ""center"" of your hotspot. Unfortunately, I am not sure how to proceed from there without some kind of data. I am thinking you could perform a cluster analysis in R based on the XY coordinates.. or maybe a classifier. I am pretty sure there is no built in way for QuPath to handle this, but it sounds like the sort of thing that could definitely be done with scripting. Without scripting, you could do the _Add smoothed features_, and then _Measure->Show measurement maps_ and select one of your smoothed features (you may be able to do this without the smoothing, depending on your data/images). You should be able to visually find the hotspots, and could then use the ""Points tool"" to mark the center of each hot spot manually. Adding a different classification of spot for each type of marker would get you a set of points of various classifications, which you could then use to compare distances. If your images are fluorescent, and you can split the channels, you might be able to run simple tissue detection on each individual channel to get centroid coordinates for hotspots (sufficient gaussian blur). Also, if you were to simplify the question to ""how many immune cells are within X um of my hotspot"" you could generate the annotation, import it, then _Objects->Expand Annotations_ and count how many immune cells are within that expanded annotation (which could all be automated). It would no doubt be a bit trickier than that if you are dealing with overlapping hotspots. There may be other ways as well, but that's be best first stab going in blind.; If you are able to open a thread on the forum or share an image I might be able to be more specific.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-400134063
https://github.com/qupath/qupath/issues/181#issuecomment-405348162:533,Performance,perform,perform,533,"I had forgotten about this, but someone [recently brought up](https://github.com/qupath/qupath/issues/185) something that could be used for hot spot analysis. . QuPath does actually have a built in way of detecting what I think you are looking for, assuming you have cells that are classified. If you are still working on this, you might be able to use the Delaunay clustering (with both boxes checked), to identify areas where you have clusters of cells that are the same class. You could then use the ""Cluster size"" measurement to perform further classification and identify the hotspot, possibly by creating a list of all of the cell XY coordinates, and then taking the four outermost coordinates to form a ""box"" around your cluster. That box would have a centroid of it's own which could be used for comparison with other hot spots, either further clustering of hot spots or distance analysis... etc. ![cluster analysis](https://user-images.githubusercontent.com/23145209/42777909-4a01c2ac-88f0-11e8-97ed-3b7176dcfef0.JPG). Just a thought.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-405348162
https://github.com/qupath/qupath/issues/181#issuecomment-405348162:205,Safety,detect,detecting,205,"I had forgotten about this, but someone [recently brought up](https://github.com/qupath/qupath/issues/185) something that could be used for hot spot analysis. . QuPath does actually have a built in way of detecting what I think you are looking for, assuming you have cells that are classified. If you are still working on this, you might be able to use the Delaunay clustering (with both boxes checked), to identify areas where you have clusters of cells that are the same class. You could then use the ""Cluster size"" measurement to perform further classification and identify the hotspot, possibly by creating a list of all of the cell XY coordinates, and then taking the four outermost coordinates to form a ""box"" around your cluster. That box would have a centroid of it's own which could be used for comparison with other hot spots, either further clustering of hot spots or distance analysis... etc. ![cluster analysis](https://user-images.githubusercontent.com/23145209/42777909-4a01c2ac-88f0-11e8-97ed-3b7176dcfef0.JPG). Just a thought.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/181#issuecomment-405348162
https://github.com/qupath/qupath/issues/182#issuecomment-401535786:1305,Energy Efficiency,reduce,reduce,1305,"Potentially, but since ImageJ couldn't read any corresponding whole slide image (at least not at full resolution, in one go) then in general the ROIs would need to be scaled/translated to be useful. If that happens, then you would most likely either require the pixels as well (similarly scaled/cropped), or at least the information regarding scaling/translation so that they could be requested in the future. This all happens for you when send the region to ImageJ. Once there, you can save the image as a TIFF from within ImageJ (which will preserve any active ROIs/Overlays). You can also save an active ROI as a .roi file (_File &rarr; Save as &rarr; Selection..._), and use _Image &rarr; Overlay &rarr; To ROI Manager_ to send an overlay to the ImageJ ROI Manager - from which you can save individual ROIs, or all ROIs in a single zip file. Furthermore, the image that QuPath sends to ImageJ has everything set under _Image &rarr; Properties..._ that is required to determine its original origin in the whole slide image - therefore it gives the pixels if you want them. Therefore I think the functionality you need is already there (e.g. save the image QuPath sends as a TIFF, open it in any ImageJ/Fiji externally). Potentially if you have a very well-defined export need that could be scripted to reduce the manual steps. [My blog](https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html) has some information about linking QuPath and ImageJ by scripting. Does that answer your question, or do you have something else in mind? If so, can you describe in more detail your preferred workflow?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401535786
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:1481,Deployability,integrat,integrated,1481,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:1481,Integrability,integrat,integrated,1481,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:667,Modifiability,Plugin,Plugins,667,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:303,Performance,perform,perform,303,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:568,Performance,perform,perform,568,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:316,Safety,detect,detection,316,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:423,Safety,detect,detections,423,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401542503:1025,Usability,simpl,simple,1025,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:1910,Availability,avail,available,1910,"ed in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https://petebankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that th",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:3032,Deployability,integrat,integrated,3032,"ankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. I hope the above comments explain why this is the case. The possibilities with Groovy are pretty limitless - sometimes all it takes is to ask. But the software is being used by hundreds of groups across the world for very different applications (if you see the [Citing QuPath](https://github.com/qupath/qupath/wiki/Citing-QuPath) page you will observe that others _do_ manage to use it in 'practical workflows'), and from what you describe you aren't working with whole slide images. Adding the functionality you want to the core software would potentially not benefit anyone else using it... which is why the ability to script things is so essential. I wish the software could do everything already, but it's a process. Bu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:3032,Integrability,integrat,integrated,3032,"ankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. I hope the above comments explain why this is the case. The possibilities with Groovy are pretty limitless - sometimes all it takes is to ask. But the software is being used by hundreds of groups across the world for very different applications (if you see the [Citing QuPath](https://github.com/qupath/qupath/wiki/Citing-QuPath) page you will observe that others _do_ manage to use it in 'practical workflows'), and from what you describe you aren't working with whole slide images. Adding the functionality you want to the core software would potentially not benefit anyone else using it... which is why the ability to script things is so essential. I wish the software could do everything already, but it's a process. Bu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:1759,Modifiability,plugin,plugins,1759,"that a `.roi` file contains a single region; as far as I'm aware, a `.zip` file is needed for all the QuPath objects to be represented in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https://petebankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:314,Performance,perform,perform,314,"> Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:; > ; > I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma; > In Qupath:; > For every image of the folder:; > 2) In QuPath - perform cell detection; > 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); > 4) Export detections with annotation into .roi file. Ok, you don't describe your images being whole slide images - so I assume they can be read into ImageJ fully and without problems. In that case, you might try this QuPath script:; https://gist.github.com/petebankhead/8d541effc8898d6a07edd4ed95b6929c. Keep in mind that a `.roi` file contains a single region; as far as I'm aware, a `.zip` file is needed for all the QuPath objects to be represented in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:327,Safety,detect,detection,327,"> Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:; > ; > I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma; > In Qupath:; > For every image of the folder:; > 2) In QuPath - perform cell detection; > 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); > 4) Export detections with annotation into .roi file. Ok, you don't describe your images being whole slide images - so I assume they can be read into ImageJ fully and without problems. In that case, you might try this QuPath script:; https://gist.github.com/petebankhead/8d541effc8898d6a07edd4ed95b6929c. Keep in mind that a `.roi` file contains a single region; as far as I'm aware, a `.zip` file is needed for all the QuPath objects to be represented in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:438,Safety,detect,detections,438,"> Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:; > ; > I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma; > In Qupath:; > For every image of the folder:; > 2) In QuPath - perform cell detection; > 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); > 4) Export detections with annotation into .roi file. Ok, you don't describe your images being whole slide images - so I assume they can be read into ImageJ fully and without problems. In that case, you might try this QuPath script:; https://gist.github.com/petebankhead/8d541effc8898d6a07edd4ed95b6929c. Keep in mind that a `.roi` file contains a single region; as far as I'm aware, a `.zip` file is needed for all the QuPath objects to be represented in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:900,Security,access,access,900,"> Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:; > ; > I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma; > In Qupath:; > For every image of the folder:; > 2) In QuPath - perform cell detection; > 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); > 4) Export detections with annotation into .roi file. Ok, you don't describe your images being whole slide images - so I assume they can be read into ImageJ fully and without problems. In that case, you might try this QuPath script:; https://gist.github.com/petebankhead/8d541effc8898d6a07edd4ed95b6929c. Keep in mind that a `.roi` file contains a single region; as far as I'm aware, a `.zip` file is needed for all the QuPath objects to be represented in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:2265,Security,access,access,2265,"hem there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https://petebankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very intere",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:1259,Usability,simpl,simple,1259," of the folder:; > 2) In QuPath - perform cell detection; > 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); > 4) Export detections with annotation into .roi file. Ok, you don't describe your images being whole slide images - so I assume they can be read into ImageJ fully and without problems. In that case, you might try this QuPath script:; https://gist.github.com/petebankhead/8d541effc8898d6a07edd4ed95b6929c. Keep in mind that a `.roi` file contains a single region; as far as I'm aware, a `.zip` file is needed for all the QuPath objects to be represented in a way ImageJ can access all in one go. > So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. Ok, but please keep in mind that ImageJ has existed in some form for more than 30 years, and has had input from many fantastically knowledgeable people both in terms of development and documentation. There has been a huge amount of volunteer effort, alongside many components and plugins developed as part of larger, funded projects. On the other hand, QuPath was created and documented essentially by one person and has only been available for a couple of years. The same person also wrote all the wiki, the [blog](https://petebankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the f",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401546472:4042,Usability,clear,clear,4042,"e, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. I hope the above comments explain why this is the case. The possibilities with Groovy are pretty limitless - sometimes all it takes is to ask. But the software is being used by hundreds of groups across the world for very different applications (if you see the [Citing QuPath](https://github.com/qupath/qupath/wiki/Citing-QuPath) page you will observe that others _do_ manage to use it in 'practical workflows'), and from what you describe you aren't working with whole slide images. Adding the functionality you want to the core software would potentially not benefit anyone else using it... which is why the ability to script things is so essential. I wish the software could do everything already, but it's a process. But for reasons that should become clear in the next few months, it's a pretty exciting time and I hope you'll like what is to come over the next year or two.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472
https://github.com/qupath/qupath/issues/182#issuecomment-401617889:744,Safety,detect,detection,744,"![roi_image](https://user-images.githubusercontent.com/40424957/42136435-27fb3254-7d53-11e8-849a-be9f82ae2613.png). Dear Pete,. yes, I chose the wrong words, I didnt want to say bad things about QuPath, I like it. I just described what I miss most (acutely, get the .rois to ImageJ and in general, some API to look up classes and methods and so on), with caring too less about my wording. I am sorry. ; Yes, I am not using whole slide images this time, but IHC-fluorescence. And I want to quantify DNA-damage foci and that I know best in ImageJ. I tried to attach an image, so the script for the .rois works very well, thank you. But I would like to do more with QuPath, now that I know the .rois get out, I can write the script to do the cell detection and the classification for the whole folder of images automatically. And I also like to contribute to the project, so if there is a place to donate...; Best regards; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401617889
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:322,Deployability,install,installation,322,"No problem, thanks for your reply. If you have an ImageJ/Fiji macro/script that completes your analysis (once the ROIs are out), then I could think some more about whether the entire thing might be callable from within QuPath. It's already possible to connect QuPath to a specific ImageJ plugins directory for an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:1537,Deployability,update,update,1537,"d from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a bit stricter with myself about compiling the Javadocs and finding a home for them. In the meantime, there is some additional documentation and developments described on [my blog](",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:1665,Deployability,release,release,1665,"However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a bit stricter with myself about compiling the Javadocs and finding a home for them. In the meantime, there is some additional documentation and developments described on [my blog](https://petebankhead.github.io).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:624,Integrability,depend,dependencies,624,"No problem, thanks for your reply. If you have an ImageJ/Fiji macro/script that completes your analysis (once the ROIs are out), then I could think some more about whether the entire thing might be callable from within QuPath. It's already possible to connect QuPath to a specific ImageJ plugins directory for an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:288,Modifiability,plugin,plugins,288,"No problem, thanks for your reply. If you have an ImageJ/Fiji macro/script that completes your analysis (once the ROIs are out), then I could think some more about whether the entire thing might be callable from within QuPath. It's already possible to connect QuPath to a specific ImageJ plugins directory for an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:453,Modifiability,plugin,plugins,453,"No problem, thanks for your reply. If you have an ImageJ/Fiji macro/script that completes your analysis (once the ROIs are out), then I could think some more about whether the entire thing might be callable from within QuPath. It's already possible to connect QuPath to a specific ImageJ plugins directory for an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:566,Modifiability,plugin,plugins,566,"No problem, thanks for your reply. If you have an ImageJ/Fiji macro/script that completes your analysis (once the ROIs are out), then I could think some more about whether the entire thing might be callable from within QuPath. It's already possible to connect QuPath to a specific ImageJ plugins directory for an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:2012,Security,access,access,2012,"However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a bit stricter with myself about compiling the Javadocs and finding a home for them. In the meantime, there is some additional documentation and developments described on [my blog](https://petebankhead.github.io).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401622161:1206,Usability,clear,clear,1206,"r an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161
https://github.com/qupath/qupath/issues/182#issuecomment-401763074:503,Modifiability,Plugin,Plugin,503,"Dear Pete,. Sounds good. From the outside, maybe I can give two remarks that might be helpful to consider:. Because QuPath is your ""baby"", you are thinking a lot about how to include outside functionality (ImageJ) into QuPath. At the same time, you say rightly, ImageJ has much more documentation and support, and more users and more diverse users. Maybe it might be a good project to access QuPath from ImageJ, either the whole GUI, but even better, just its functional structures, by writing a ImageJ Plugin. And I guess, you would not necessarily need to do that yourself, because it might be easier to find someone to help, because there is more people experienced with writing ImageJ Plugins. QuPath itself is really good for Digital Pathology, and Digital Pathology is booming. A lot of people probably already gave you very positive feedback. This means, there must be ways to get more funding for that project and then you can actually hire people to do the programming. But somehow I think, you might have thought about that already. If there is anything I can help with (unfortunately not programming a software), I would like to support.; Best Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401763074
https://github.com/qupath/qupath/issues/182#issuecomment-401763074:689,Modifiability,Plugin,Plugins,689,"Dear Pete,. Sounds good. From the outside, maybe I can give two remarks that might be helpful to consider:. Because QuPath is your ""baby"", you are thinking a lot about how to include outside functionality (ImageJ) into QuPath. At the same time, you say rightly, ImageJ has much more documentation and support, and more users and more diverse users. Maybe it might be a good project to access QuPath from ImageJ, either the whole GUI, but even better, just its functional structures, by writing a ImageJ Plugin. And I guess, you would not necessarily need to do that yourself, because it might be easier to find someone to help, because there is more people experienced with writing ImageJ Plugins. QuPath itself is really good for Digital Pathology, and Digital Pathology is booming. A lot of people probably already gave you very positive feedback. This means, there must be ways to get more funding for that project and then you can actually hire people to do the programming. But somehow I think, you might have thought about that already. If there is anything I can help with (unfortunately not programming a software), I would like to support.; Best Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401763074
https://github.com/qupath/qupath/issues/182#issuecomment-401763074:385,Security,access,access,385,"Dear Pete,. Sounds good. From the outside, maybe I can give two remarks that might be helpful to consider:. Because QuPath is your ""baby"", you are thinking a lot about how to include outside functionality (ImageJ) into QuPath. At the same time, you say rightly, ImageJ has much more documentation and support, and more users and more diverse users. Maybe it might be a good project to access QuPath from ImageJ, either the whole GUI, but even better, just its functional structures, by writing a ImageJ Plugin. And I guess, you would not necessarily need to do that yourself, because it might be easier to find someone to help, because there is more people experienced with writing ImageJ Plugins. QuPath itself is really good for Digital Pathology, and Digital Pathology is booming. A lot of people probably already gave you very positive feedback. This means, there must be ways to get more funding for that project and then you can actually hire people to do the programming. But somehow I think, you might have thought about that already. If there is anything I can help with (unfortunately not programming a software), I would like to support.; Best Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401763074
https://github.com/qupath/qupath/issues/182#issuecomment-401763074:840,Usability,feedback,feedback,840,"Dear Pete,. Sounds good. From the outside, maybe I can give two remarks that might be helpful to consider:. Because QuPath is your ""baby"", you are thinking a lot about how to include outside functionality (ImageJ) into QuPath. At the same time, you say rightly, ImageJ has much more documentation and support, and more users and more diverse users. Maybe it might be a good project to access QuPath from ImageJ, either the whole GUI, but even better, just its functional structures, by writing a ImageJ Plugin. And I guess, you would not necessarily need to do that yourself, because it might be easier to find someone to help, because there is more people experienced with writing ImageJ Plugins. QuPath itself is really good for Digital Pathology, and Digital Pathology is booming. A lot of people probably already gave you very positive feedback. This means, there must be ways to get more funding for that project and then you can actually hire people to do the programming. But somehow I think, you might have thought about that already. If there is anything I can help with (unfortunately not programming a software), I would like to support.; Best Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401763074
https://github.com/qupath/qupath/issues/182#issuecomment-402686585:261,Deployability,integrat,integration,261,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585
https://github.com/qupath/qupath/issues/182#issuecomment-402686585:674,Deployability,update,update,674,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585
https://github.com/qupath/qupath/issues/182#issuecomment-402686585:1820,Energy Efficiency,sustainab,sustainability,1820,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585
https://github.com/qupath/qupath/issues/182#issuecomment-402686585:261,Integrability,integrat,integration,261,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585
https://github.com/qupath/qupath/issues/182#issuecomment-402686585:754,Usability,learn,learned,754,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585
https://github.com/qupath/qupath/issues/182#issuecomment-402686585:1764,Usability,guid,guided,1764,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585
https://github.com/qupath/qupath/issues/183#issuecomment-403232897:3,Integrability,depend,depends,3,It depends what kind of object you added the features to - but you can create measurement tables with _Measure &rarr; Show annotation measurements_ or _Measure &rarr; Show detection measurements_ and save the results from either table. See also [Exporting results](https://github.com/qupath/qupath/wiki/Exporting-results) on the wiki.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/183#issuecomment-403232897
https://github.com/qupath/qupath/issues/183#issuecomment-403232897:172,Safety,detect,detection,172,It depends what kind of object you added the features to - but you can create measurement tables with _Measure &rarr; Show annotation measurements_ or _Measure &rarr; Show detection measurements_ and save the results from either table. See also [Exporting results](https://github.com/qupath/qupath/wiki/Exporting-results) on the wiki.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/183#issuecomment-403232897
https://github.com/qupath/qupath/issues/184#issuecomment-403369967:21,Availability,error,error,21,"The main part of the error message is from OpenSlide, saying; ```; Slides with dissimilar main images are not supported; ```. You could try installing the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) to see if that works for your images. There is more information on the [Supported image formats](https://github.com/qupath/qupath/wiki/Supported-image-formats) page of the wiki.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/184#issuecomment-403369967
https://github.com/qupath/qupath/issues/184#issuecomment-403369967:140,Deployability,install,installing,140,"The main part of the error message is from OpenSlide, saying; ```; Slides with dissimilar main images are not supported; ```. You could try installing the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) to see if that works for your images. There is more information on the [Supported image formats](https://github.com/qupath/qupath/wiki/Supported-image-formats) page of the wiki.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/184#issuecomment-403369967
https://github.com/qupath/qupath/issues/184#issuecomment-403369967:27,Integrability,message,message,27,"The main part of the error message is from OpenSlide, saying; ```; Slides with dissimilar main images are not supported; ```. You could try installing the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) to see if that works for your images. There is more information on the [Supported image formats](https://github.com/qupath/qupath/wiki/Supported-image-formats) page of the wiki.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/184#issuecomment-403369967
https://github.com/qupath/qupath/issues/185#issuecomment-403948004:27,Security,access,access,27,"I'm travelling and without access to a proper computer this week, but will try to write a brief description when I get back. I have used smoothed features often, but not really the other two. There is more information on smoothed features at https://github.com/qupath/qupath/wiki/Classifying-objects",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-403948004
https://github.com/qupath/qupath/issues/185#issuecomment-404545796:1352,Performance,perform,performed,1352,"[OD](https://en.wikipedia.org/wiki/Absorbance) is usually used for brightfield images while intensity is used for fluorescence images due to the way the light is measured (how much passes through your sample versus how much is emitted). Sums and averages are exactly that based on all pixels, though usually applied to the detection area in question (a single SLIC, a single cell, or a single nucleus, etc). If you had a 2 pixel detection of 1 OD and 0.5 OD, it would have a OD sum of 1.5 and an average of 0.75. The distance value after the measurements using add intensity features determines how finely the features are calculated. Smaller values tend to take longer but be more accurate, and I almost always use my pixel size (height or width) for any _Add intensity features._. Smoothing, as far as I can tell, is a straight radius for inclusion, calculated from the centroid of the detection object to the centroid of all other detection objects. I tested this using the scale bar at 20um and two cells that were about 22um apart (center to center), and gradually expanded the radius until the smoothed features became a mix of the two (Nearby detection counts for each became 1). The radius is a hard limit, while the smoothing is applied over a FWHM gradient as mentioned in Pete's link. In that example, if the two cells were 22um apart and I performed a 22um smoothing, they would have less of an impact on each other's ""smoothed"" values than if they were only 5um apart. A cell with a centroid at 23um away would have 0 impact on another cell's measurements, while a cell that was 22um away would have about half of the impact of a cell that was almost right on top of the original cell. Every cell's smoothed features are calculated independently, imagine drawing a quick circle around each cell and calculating the smoothed features based on what centroids are inside that circle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404545796
https://github.com/qupath/qupath/issues/185#issuecomment-404545796:323,Safety,detect,detection,323,"[OD](https://en.wikipedia.org/wiki/Absorbance) is usually used for brightfield images while intensity is used for fluorescence images due to the way the light is measured (how much passes through your sample versus how much is emitted). Sums and averages are exactly that based on all pixels, though usually applied to the detection area in question (a single SLIC, a single cell, or a single nucleus, etc). If you had a 2 pixel detection of 1 OD and 0.5 OD, it would have a OD sum of 1.5 and an average of 0.75. The distance value after the measurements using add intensity features determines how finely the features are calculated. Smaller values tend to take longer but be more accurate, and I almost always use my pixel size (height or width) for any _Add intensity features._. Smoothing, as far as I can tell, is a straight radius for inclusion, calculated from the centroid of the detection object to the centroid of all other detection objects. I tested this using the scale bar at 20um and two cells that were about 22um apart (center to center), and gradually expanded the radius until the smoothed features became a mix of the two (Nearby detection counts for each became 1). The radius is a hard limit, while the smoothing is applied over a FWHM gradient as mentioned in Pete's link. In that example, if the two cells were 22um apart and I performed a 22um smoothing, they would have less of an impact on each other's ""smoothed"" values than if they were only 5um apart. A cell with a centroid at 23um away would have 0 impact on another cell's measurements, while a cell that was 22um away would have about half of the impact of a cell that was almost right on top of the original cell. Every cell's smoothed features are calculated independently, imagine drawing a quick circle around each cell and calculating the smoothed features based on what centroids are inside that circle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404545796
https://github.com/qupath/qupath/issues/185#issuecomment-404545796:429,Safety,detect,detection,429,"[OD](https://en.wikipedia.org/wiki/Absorbance) is usually used for brightfield images while intensity is used for fluorescence images due to the way the light is measured (how much passes through your sample versus how much is emitted). Sums and averages are exactly that based on all pixels, though usually applied to the detection area in question (a single SLIC, a single cell, or a single nucleus, etc). If you had a 2 pixel detection of 1 OD and 0.5 OD, it would have a OD sum of 1.5 and an average of 0.75. The distance value after the measurements using add intensity features determines how finely the features are calculated. Smaller values tend to take longer but be more accurate, and I almost always use my pixel size (height or width) for any _Add intensity features._. Smoothing, as far as I can tell, is a straight radius for inclusion, calculated from the centroid of the detection object to the centroid of all other detection objects. I tested this using the scale bar at 20um and two cells that were about 22um apart (center to center), and gradually expanded the radius until the smoothed features became a mix of the two (Nearby detection counts for each became 1). The radius is a hard limit, while the smoothing is applied over a FWHM gradient as mentioned in Pete's link. In that example, if the two cells were 22um apart and I performed a 22um smoothing, they would have less of an impact on each other's ""smoothed"" values than if they were only 5um apart. A cell with a centroid at 23um away would have 0 impact on another cell's measurements, while a cell that was 22um away would have about half of the impact of a cell that was almost right on top of the original cell. Every cell's smoothed features are calculated independently, imagine drawing a quick circle around each cell and calculating the smoothed features based on what centroids are inside that circle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404545796
https://github.com/qupath/qupath/issues/185#issuecomment-404545796:888,Safety,detect,detection,888,"[OD](https://en.wikipedia.org/wiki/Absorbance) is usually used for brightfield images while intensity is used for fluorescence images due to the way the light is measured (how much passes through your sample versus how much is emitted). Sums and averages are exactly that based on all pixels, though usually applied to the detection area in question (a single SLIC, a single cell, or a single nucleus, etc). If you had a 2 pixel detection of 1 OD and 0.5 OD, it would have a OD sum of 1.5 and an average of 0.75. The distance value after the measurements using add intensity features determines how finely the features are calculated. Smaller values tend to take longer but be more accurate, and I almost always use my pixel size (height or width) for any _Add intensity features._. Smoothing, as far as I can tell, is a straight radius for inclusion, calculated from the centroid of the detection object to the centroid of all other detection objects. I tested this using the scale bar at 20um and two cells that were about 22um apart (center to center), and gradually expanded the radius until the smoothed features became a mix of the two (Nearby detection counts for each became 1). The radius is a hard limit, while the smoothing is applied over a FWHM gradient as mentioned in Pete's link. In that example, if the two cells were 22um apart and I performed a 22um smoothing, they would have less of an impact on each other's ""smoothed"" values than if they were only 5um apart. A cell with a centroid at 23um away would have 0 impact on another cell's measurements, while a cell that was 22um away would have about half of the impact of a cell that was almost right on top of the original cell. Every cell's smoothed features are calculated independently, imagine drawing a quick circle around each cell and calculating the smoothed features based on what centroids are inside that circle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404545796
https://github.com/qupath/qupath/issues/185#issuecomment-404545796:934,Safety,detect,detection,934,"[OD](https://en.wikipedia.org/wiki/Absorbance) is usually used for brightfield images while intensity is used for fluorescence images due to the way the light is measured (how much passes through your sample versus how much is emitted). Sums and averages are exactly that based on all pixels, though usually applied to the detection area in question (a single SLIC, a single cell, or a single nucleus, etc). If you had a 2 pixel detection of 1 OD and 0.5 OD, it would have a OD sum of 1.5 and an average of 0.75. The distance value after the measurements using add intensity features determines how finely the features are calculated. Smaller values tend to take longer but be more accurate, and I almost always use my pixel size (height or width) for any _Add intensity features._. Smoothing, as far as I can tell, is a straight radius for inclusion, calculated from the centroid of the detection object to the centroid of all other detection objects. I tested this using the scale bar at 20um and two cells that were about 22um apart (center to center), and gradually expanded the radius until the smoothed features became a mix of the two (Nearby detection counts for each became 1). The radius is a hard limit, while the smoothing is applied over a FWHM gradient as mentioned in Pete's link. In that example, if the two cells were 22um apart and I performed a 22um smoothing, they would have less of an impact on each other's ""smoothed"" values than if they were only 5um apart. A cell with a centroid at 23um away would have 0 impact on another cell's measurements, while a cell that was 22um away would have about half of the impact of a cell that was almost right on top of the original cell. Every cell's smoothed features are calculated independently, imagine drawing a quick circle around each cell and calculating the smoothed features based on what centroids are inside that circle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404545796
https://github.com/qupath/qupath/issues/185#issuecomment-404545796:1150,Safety,detect,detection,1150,"[OD](https://en.wikipedia.org/wiki/Absorbance) is usually used for brightfield images while intensity is used for fluorescence images due to the way the light is measured (how much passes through your sample versus how much is emitted). Sums and averages are exactly that based on all pixels, though usually applied to the detection area in question (a single SLIC, a single cell, or a single nucleus, etc). If you had a 2 pixel detection of 1 OD and 0.5 OD, it would have a OD sum of 1.5 and an average of 0.75. The distance value after the measurements using add intensity features determines how finely the features are calculated. Smaller values tend to take longer but be more accurate, and I almost always use my pixel size (height or width) for any _Add intensity features._. Smoothing, as far as I can tell, is a straight radius for inclusion, calculated from the centroid of the detection object to the centroid of all other detection objects. I tested this using the scale bar at 20um and two cells that were about 22um apart (center to center), and gradually expanded the radius until the smoothed features became a mix of the two (Nearby detection counts for each became 1). The radius is a hard limit, while the smoothing is applied over a FWHM gradient as mentioned in Pete's link. In that example, if the two cells were 22um apart and I performed a 22um smoothing, they would have less of an impact on each other's ""smoothed"" values than if they were only 5um apart. A cell with a centroid at 23um away would have 0 impact on another cell's measurements, while a cell that was 22um away would have about half of the impact of a cell that was almost right on top of the original cell. Every cell's smoothed features are calculated independently, imagine drawing a quick circle around each cell and calculating the smoothed features based on what centroids are inside that circle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404545796
https://github.com/qupath/qupath/issues/185#issuecomment-404545796:955,Testability,test,tested,955,"[OD](https://en.wikipedia.org/wiki/Absorbance) is usually used for brightfield images while intensity is used for fluorescence images due to the way the light is measured (how much passes through your sample versus how much is emitted). Sums and averages are exactly that based on all pixels, though usually applied to the detection area in question (a single SLIC, a single cell, or a single nucleus, etc). If you had a 2 pixel detection of 1 OD and 0.5 OD, it would have a OD sum of 1.5 and an average of 0.75. The distance value after the measurements using add intensity features determines how finely the features are calculated. Smaller values tend to take longer but be more accurate, and I almost always use my pixel size (height or width) for any _Add intensity features._. Smoothing, as far as I can tell, is a straight radius for inclusion, calculated from the centroid of the detection object to the centroid of all other detection objects. I tested this using the scale bar at 20um and two cells that were about 22um apart (center to center), and gradually expanded the radius until the smoothed features became a mix of the two (Nearby detection counts for each became 1). The radius is a hard limit, while the smoothing is applied over a FWHM gradient as mentioned in Pete's link. In that example, if the two cells were 22um apart and I performed a 22um smoothing, they would have less of an impact on each other's ""smoothed"" values than if they were only 5um apart. A cell with a centroid at 23um away would have 0 impact on another cell's measurements, while a cell that was 22um away would have about half of the impact of a cell that was almost right on top of the original cell. Every cell's smoothed features are calculated independently, imagine drawing a quick circle around each cell and calculating the smoothed features based on what centroids are inside that circle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404545796
https://github.com/qupath/qupath/issues/185#issuecomment-404557901:325,Safety,detect,detection,325,"More specifically for the coherence features, OD sum (you can have an OD sum sum, if you add up the total of each pixel's OD sum value, as opposed to the OD sum mean which is the average of each pixel's OD sum) will be the total optical density, and the tile diameter appears to be a circle/square around the centroid of the detection. Here I ran the coherence twice on OD sum where i had a very dark center of the cell. Notice that the sum/mean go up as I shrink the ""tile"" size to only fit inside the nucleus.; ![coherence](https://user-images.githubusercontent.com/23145209/42643926-29b98578-85af-11e8-9c33-385e5588d7e3.JPG); The most dramatic change is in the minimum, once the entire tile would fit inside of the dark ""nucleus."". In general you might want to use that instead of smoothing, if you want ALL of the pixels around a detection out to a certain distance included in the measurement (tissue based measurements).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404557901
https://github.com/qupath/qupath/issues/185#issuecomment-404557901:834,Safety,detect,detection,834,"More specifically for the coherence features, OD sum (you can have an OD sum sum, if you add up the total of each pixel's OD sum value, as opposed to the OD sum mean which is the average of each pixel's OD sum) will be the total optical density, and the tile diameter appears to be a circle/square around the centroid of the detection. Here I ran the coherence twice on OD sum where i had a very dark center of the cell. Notice that the sum/mean go up as I shrink the ""tile"" size to only fit inside the nucleus.; ![coherence](https://user-images.githubusercontent.com/23145209/42643926-29b98578-85af-11e8-9c33-385e5588d7e3.JPG); The most dramatic change is in the minimum, once the entire tile would fit inside of the dark ""nucleus."". In general you might want to use that instead of smoothing, if you want ALL of the pixels around a detection out to a certain distance included in the measurement (tissue based measurements).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404557901
https://github.com/qupath/qupath/issues/185#issuecomment-404956257:955,Safety,detect,detection,955,"Hi, Svidro; Thank you so much for your help on the understanding of the features’ meaning! Do you know how to draw the cluster of the cells, or calculate the cluster features, as the photo I attached. I know it’s easy but I can’t find the way to make it.; Thank you so much for your help!; Xiaxia. From: Svidro [mailto:notifications@github.com]; Sent: Thursday, July 12, 2018 11:45 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Meng, Xiaxia <XMENG2@mgh.harvard.edu>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] What's the meaning of specific features in Qupath? (#185). External Email - Use Caution. More specifically for the coherence features, OD sum (you can have an OD sum sum, if you add up the total of each pixel's OD sum value, as opposed to the OD sum mean which is the average of each pixel's OD sum) will be the total optical density, and the tile diameter appears to be a circle/square around the centroid of the detection. Here I ran the coherence twice on OD sum where i had a very dark center of the cell. Notice that the sum/mean go up as I shrink the ""tile"" size to only fit inside the nucleus.; [Image removed by sender. coherence]<https://user-images.githubusercontent.com/23145209/42643926-29b98578-85af-11e8-9c33-385e5588d7e3.JPG>; The most dramatic change is in the minimum, once the entire tile would fit inside of the dark ""nucleus."". In general you might want to use that instead of smoothing, if you want ALL of the pixels around a detection out to a certain distance included in the measurement (tissue based measurements). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/185#issuecomment-404557901>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnH_7_REgO9uqIhkZxQGWmMVJq17ptFYks5uF278gaJpZM4VKA8r>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404956257
https://github.com/qupath/qupath/issues/185#issuecomment-404956257:1488,Safety,detect,detection,1488,"Hi, Svidro; Thank you so much for your help on the understanding of the features’ meaning! Do you know how to draw the cluster of the cells, or calculate the cluster features, as the photo I attached. I know it’s easy but I can’t find the way to make it.; Thank you so much for your help!; Xiaxia. From: Svidro [mailto:notifications@github.com]; Sent: Thursday, July 12, 2018 11:45 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Meng, Xiaxia <XMENG2@mgh.harvard.edu>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] What's the meaning of specific features in Qupath? (#185). External Email - Use Caution. More specifically for the coherence features, OD sum (you can have an OD sum sum, if you add up the total of each pixel's OD sum value, as opposed to the OD sum mean which is the average of each pixel's OD sum) will be the total optical density, and the tile diameter appears to be a circle/square around the centroid of the detection. Here I ran the coherence twice on OD sum where i had a very dark center of the cell. Notice that the sum/mean go up as I shrink the ""tile"" size to only fit inside the nucleus.; [Image removed by sender. coherence]<https://user-images.githubusercontent.com/23145209/42643926-29b98578-85af-11e8-9c33-385e5588d7e3.JPG>; The most dramatic change is in the minimum, once the entire tile would fit inside of the dark ""nucleus."". In general you might want to use that instead of smoothing, if you want ALL of the pixels around a detection out to a certain distance included in the measurement (tissue based measurements). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/185#issuecomment-404557901>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnH_7_REgO9uqIhkZxQGWmMVJq17ptFYks5uF278gaJpZM4VKA8r>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-404956257
https://github.com/qupath/qupath/issues/185#issuecomment-405282490:307,Integrability,depend,depend,307,"I do not think they mean much on their own, other than what you can read in: https://en.wikipedia.org/wiki/Local_binary_patterns. I have mostly found them useful used as an entire set being fed into a classifier, where they can be used to find different ""textured"" areas. How successful this is can heavily depend on your radius and sample variability within the color setup you have chosen. Remember that OD sum will be gray-scale, the same as pressing ""5"" when you are in the main viewing window.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-405282490
https://github.com/qupath/qupath/issues/185#issuecomment-405282490:340,Modifiability,variab,variability,340,"I do not think they mean much on their own, other than what you can read in: https://en.wikipedia.org/wiki/Local_binary_patterns. I have mostly found them useful used as an entire set being fed into a classifier, where they can be used to find different ""textured"" areas. How successful this is can heavily depend on your radius and sample variability within the color setup you have chosen. Remember that OD sum will be gray-scale, the same as pressing ""5"" when you are in the main viewing window.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-405282490
https://github.com/qupath/qupath/issues/185#issuecomment-406657616:454,Performance,perform,perform,454,"Any time you draw an annotation region, you should get separate statistics for that annotation in the Annotation Measurements. So if you are able to manually draw areas, it should be fairly easy to group the results. If you do a full tissue annotation, then generate your cells, you can create smaller annotations within the first annotation, then run the Delaunay clustering within each separate ""sub-annotation."" Just select the annotation you want to perform the cluster analysis on before you click Run. Note that the connecting lines will only show up for the most recent sub-annotation, though you can select more than one and run them all at once.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-406657616
https://github.com/qupath/qupath/issues/185#issuecomment-406673198:657,Usability,clear,clearly,657,"> So I need to write scripting by myself?. Generally yes, if you want to do something non-standard... there is some more information under the [Automation](https://github.com/qupath/qupath/wiki) section fo the wiki. In time, the software will have more features - but if you need something customized, or a feature that doesn't exist yet, then scripting is the way to do it. There are lots of posts related to scripting at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users) - which is generally a better place to ask questions than here, since this is really for 'Issues' (e.g. bugs, feature requests). But it helps a lot to explain very clearly what you want to achieve, what you've tried, and ideally to include screenshots.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-406673198
https://github.com/qupath/qupath/issues/185#issuecomment-406674542:79,Usability,clear,clearly,79,"Thank you, later I will post my question at google group, and describe it more clearly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/185#issuecomment-406674542
https://github.com/qupath/qupath/issues/186#issuecomment-405090390:137,Modifiability,enhance,enhancement,137,"Currently no, but I agree this is needed. It was somewhere in the unwritten feature request list in my head, but I have flagged it as an enhancement here as that's probably a more useful place for it to be.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/186#issuecomment-405090390
https://github.com/qupath/qupath/issues/186#issuecomment-410657364:332,Deployability,update,update,332,"If you try the latest [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) you can get the channel names by scripting. And if you combine it with my QuPath fork, you can see them in the _Brightness/Contrast_ window. There are more details [here](https://petebankhead.github.io/qupath/2018/08/03/bioformats-update.html#support-for-32-bit-multichannel-images)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/186#issuecomment-410657364
https://github.com/qupath/qupath/issues/186#issuecomment-518313426:55,Deployability,release,releases,55,Channel names are included now in the v0.2.0 milestone releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/186#issuecomment-518313426
https://github.com/qupath/qupath/issues/187#issuecomment-406624163:463,Integrability,depend,depending,463,"It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-406624163
https://github.com/qupath/qupath/issues/187#issuecomment-406624163:172,Safety,risk,risk,172,"It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-406624163
https://github.com/qupath/qupath/issues/187#issuecomment-407029411:544,Energy Efficiency,power,powerful,544,"Dear all,. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411
https://github.com/qupath/qupath/issues/187#issuecomment-407029411:1574,Integrability,depend,depending,1574,",. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4VYHCt>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411
https://github.com/qupath/qupath/issues/187#issuecomment-407029411:512,Modifiability,extend,extended,512,"Dear all,. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411
https://github.com/qupath/qupath/issues/187#issuecomment-407029411:486,Performance,load,load,486,"Dear all,. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411
https://github.com/qupath/qupath/issues/187#issuecomment-407029411:757,Performance,load,load,757,"Dear all,. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411
https://github.com/qupath/qupath/issues/187#issuecomment-407029411:1283,Safety,risk,risk,1283,",. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4VYHCt>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411
https://github.com/qupath/qupath/issues/187#issuecomment-407034348:420,Deployability,install,installed,420,"The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding _'a way to calculate the intensity for fluorescence above a threshold'_ do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:; * Using _Send region to ImageJ_ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like [this one](https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html); * Using a script, macro or _Simple tissue detection_ to generate the QuPath annotation first, then within QuPath calling _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407034348
https://github.com/qupath/qupath/issues/187#issuecomment-407034348:948,Integrability,depend,dependent,948,"The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding _'a way to calculate the intensity for fluorescence above a threshold'_ do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:; * Using _Send region to ImageJ_ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like [this one](https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html); * Using a script, macro or _Simple tissue detection_ to generate the QuPath annotation first, then within QuPath calling _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407034348
https://github.com/qupath/qupath/issues/187#issuecomment-407034348:41,Modifiability,variab,variable,41,"The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding _'a way to calculate the intensity for fluorescence above a threshold'_ do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:; * Using _Send region to ImageJ_ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like [this one](https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html); * Using a script, macro or _Simple tissue detection_ to generate the QuPath annotation first, then within QuPath calling _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407034348
https://github.com/qupath/qupath/issues/187#issuecomment-407035378:813,Deployability,install,installed,813,"Concerning the intensity, in fact we are trying to calculate an area above a threshold for different condition. De : Pete <notifications@github.com>; Envoyé : Monday, July 23, 2018 2:04 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding 'a way to calculate the intensity for fluorescence above a threshold' do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:. * Using Send region to ImageJ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like this one<https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html>; * Using a script, macro or Simple tissue detection to generate the QuPath annotation first, then within QuPath calling Analyze → Calculate features → Add intensity features (experimental). —; You are receiving this because you au",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407035378
https://github.com/qupath/qupath/issues/187#issuecomment-407035378:1339,Integrability,depend,dependent,1339,"let@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding 'a way to calculate the intensity for fluorescence above a threshold' do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:. * Using Send region to ImageJ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like this one<https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html>; * Using a script, macro or Simple tissue detection to generate the QuPath annotation first, then within QuPath calling Analyze → Calculate features → Add intensity features (experimental). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-407034348>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC6_wpAcAAwaZNs36171_gwZkNzouks5uJburgaJpZM4VYHCt>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407035378
https://github.com/qupath/qupath/issues/187#issuecomment-407035378:434,Modifiability,variab,variable,434,"Concerning the intensity, in fact we are trying to calculate an area above a threshold for different condition. De : Pete <notifications@github.com>; Envoyé : Monday, July 23, 2018 2:04 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding 'a way to calculate the intensity for fluorescence above a threshold' do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:. * Using Send region to ImageJ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like this one<https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html>; * Using a script, macro or Simple tissue detection to generate the QuPath annotation first, then within QuPath calling Analyze → Calculate features → Add intensity features (experimental). —; You are receiving this because you au",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407035378
https://github.com/qupath/qupath/issues/187#issuecomment-407035378:1813,Safety,detect,detection,1813,"let@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding 'a way to calculate the intensity for fluorescence above a threshold' do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:. * Using Send region to ImageJ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like this one<https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html>; * Using a script, macro or Simple tissue detection to generate the QuPath annotation first, then within QuPath calling Analyze → Calculate features → Add intensity features (experimental). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-407034348>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC6_wpAcAAwaZNs36171_gwZkNzouks5uJburgaJpZM4VYHCt>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407035378
https://github.com/qupath/qupath/issues/187#issuecomment-407035378:1799,Usability,Simpl,Simple,1799,"let@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding 'a way to calculate the intensity for fluorescence above a threshold' do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:. * Using Send region to ImageJ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like this one<https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html>; * Using a script, macro or Simple tissue detection to generate the QuPath annotation first, then within QuPath calling Analyze → Calculate features → Add intensity features (experimental). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-407034348>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC6_wpAcAAwaZNs36171_gwZkNzouks5uJburgaJpZM4VYHCt>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407035378
https://github.com/qupath/qupath/issues/187#issuecomment-407093698:75,Availability,down,downsampled,75,"Depending on the size, I would usually do something like that by sending a downsampled whole image to ImageJ to create and return a ""tissue annotation."" Then, tile that first annotation into further annotation tiles, and send each tile to ImageJ at full resolution. Use only your channel of interest to return detection objects for areas over your threshold. Removing all of the tile annotations would then leave you with your initial ""full"" annotation and a whole list of detection objects, which you could sum the area of and compare to the full annotation for a percent positive. The whole thing should be script-able. If you want to look at methods though or get help with scripting, I would recommend the [Google Group forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407093698
https://github.com/qupath/qupath/issues/187#issuecomment-407093698:0,Integrability,Depend,Depending,0,"Depending on the size, I would usually do something like that by sending a downsampled whole image to ImageJ to create and return a ""tissue annotation."" Then, tile that first annotation into further annotation tiles, and send each tile to ImageJ at full resolution. Use only your channel of interest to return detection objects for areas over your threshold. Removing all of the tile annotations would then leave you with your initial ""full"" annotation and a whole list of detection objects, which you could sum the area of and compare to the full annotation for a percent positive. The whole thing should be script-able. If you want to look at methods though or get help with scripting, I would recommend the [Google Group forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407093698
https://github.com/qupath/qupath/issues/187#issuecomment-407093698:310,Safety,detect,detection,310,"Depending on the size, I would usually do something like that by sending a downsampled whole image to ImageJ to create and return a ""tissue annotation."" Then, tile that first annotation into further annotation tiles, and send each tile to ImageJ at full resolution. Use only your channel of interest to return detection objects for areas over your threshold. Removing all of the tile annotations would then leave you with your initial ""full"" annotation and a whole list of detection objects, which you could sum the area of and compare to the full annotation for a percent positive. The whole thing should be script-able. If you want to look at methods though or get help with scripting, I would recommend the [Google Group forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407093698
https://github.com/qupath/qupath/issues/187#issuecomment-407093698:473,Safety,detect,detection,473,"Depending on the size, I would usually do something like that by sending a downsampled whole image to ImageJ to create and return a ""tissue annotation."" Then, tile that first annotation into further annotation tiles, and send each tile to ImageJ at full resolution. Use only your channel of interest to return detection objects for areas over your threshold. Removing all of the tile annotations would then leave you with your initial ""full"" annotation and a whole list of detection objects, which you could sum the area of and compare to the full annotation for a percent positive. The whole thing should be script-able. If you want to look at methods though or get help with scripting, I would recommend the [Google Group forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407093698
https://github.com/qupath/qupath/issues/188#issuecomment-407441080:218,Availability,down,downloading,218,"I think this is pretty much it. ; https://groups.google.com/forum/#!searchin/qupath-users/touch%7Csort:date/qupath-users/IZSVOOgWZ9E/Hd3QWlQXBAAJ; I am not sure if the changes are in version 1.3 yet, but you could try downloading that.; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407441080
https://github.com/qupath/qupath/issues/188#issuecomment-407441080:293,Deployability,update,updates,293,"I think this is pretty much it. ; https://groups.google.com/forum/#!searchin/qupath-users/touch%7Csort:date/qupath-users/IZSVOOgWZ9E/Hd3QWlQXBAAJ; I am not sure if the changes are in version 1.3 yet, but you could try downloading that.; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407441080
https://github.com/qupath/qupath/issues/188#issuecomment-407442971:215,Deployability,update,update,215,"As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407442971
https://github.com/qupath/qupath/issues/188#issuecomment-407444374:335,Availability,down,down,335,"Thank you Pete for your fast reply!. I am already looking forward to that update!. . I appreciate your work so much!. . Best,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 24. Juli 2018 11:13; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-407442971> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t4lxL8zuwRnSs13DwCom_Y8IfbkSks5uJzl2gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t9545gipQaUMFkktOfyaa_Ebxhdiks5uJzl2gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407444374
https://github.com/qupath/qupath/issues/188#issuecomment-407444374:74,Deployability,update,update,74,"Thank you Pete for your fast reply!. I am already looking forward to that update!. . I appreciate your work so much!. . Best,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 24. Juli 2018 11:13; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-407442971> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t4lxL8zuwRnSs13DwCom_Y8IfbkSks5uJzl2gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t9545gipQaUMFkktOfyaa_Ebxhdiks5uJzl2gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407444374
https://github.com/qupath/qupath/issues/188#issuecomment-407444374:565,Deployability,update,update,565,"Thank you Pete for your fast reply!. I am already looking forward to that update!. . I appreciate your work so much!. . Best,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 24. Juli 2018 11:13; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-407442971> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t4lxL8zuwRnSs13DwCom_Y8IfbkSks5uJzl2gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t9545gipQaUMFkktOfyaa_Ebxhdiks5uJzl2gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407444374
https://github.com/qupath/qupath/issues/188#issuecomment-408029691:115,Deployability,update,updates,115,"Hi Marcel, if you want to try the version described [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-408029691
https://github.com/qupath/qupath/issues/188#issuecomment-408029691:312,Testability,test,test,312,"Hi Marcel, if you want to try the version described [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-408029691
https://github.com/qupath/qupath/issues/188#issuecomment-409252791:435,Availability,down,down,435,"Hi Pete,. . thank you so much!. However can you tell me which is the very latest version?. Is it “core-processing-awt” or “gui-fx”? Both were published five days ago. . Once again thank you so much for your quick support!. . Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 26. Juli 2018 05:04; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Hi Marcel, if you want to try the version described here <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html> then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-408029691> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t627iqkNMmyVFat9LbnxkR_wY7xIks5uKYX4gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t_MNy2cguhmKmBspZsSx-GuGcLgeks5uKYX4gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409252791
https://github.com/qupath/qupath/issues/188#issuecomment-409252791:564,Deployability,update,updates,564,"Hi Pete,. . thank you so much!. However can you tell me which is the very latest version?. Is it “core-processing-awt” or “gui-fx”? Both were published five days ago. . Once again thank you so much for your quick support!. . Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 26. Juli 2018 05:04; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Hi Marcel, if you want to try the version described here <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html> then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-408029691> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t627iqkNMmyVFat9LbnxkR_wY7xIks5uKYX4gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t_MNy2cguhmKmBspZsSx-GuGcLgeks5uKYX4gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409252791
https://github.com/qupath/qupath/issues/188#issuecomment-409252791:761,Testability,test,test,761,"Hi Pete,. . thank you so much!. However can you tell me which is the very latest version?. Is it “core-processing-awt” or “gui-fx”? Both were published five days ago. . Once again thank you so much for your quick support!. . Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 26. Juli 2018 05:04; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Hi Marcel, if you want to try the version described here <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html> then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-408029691> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t627iqkNMmyVFat9LbnxkR_wY7xIks5uKYX4gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t_MNy2cguhmKmBspZsSx-GuGcLgeks5uKYX4gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409252791
https://github.com/qupath/qupath/issues/188#issuecomment-409255073:246,Integrability,depend,dependencies,246,"Both are required - you'll need all the code there. If you follow the instructions towards the end of the linked page (starting with _Step by step guide_) you should end up with a runnable version of QuPath, with all the different components and dependencies.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409255073
https://github.com/qupath/qupath/issues/188#issuecomment-410879743:498,Availability,down,down,498,"Hi Pete,. . thank you so much for the new versoin, it works perfectly with my hp spectre 360 and the hp tilt pen!. . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. . Once again thank you so much!. . Yours,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 31. Juli 2018 11:10; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Both are required - you'll need all the code there. If you follow the instructions towards the end of the linked page (starting with Step by step guide) you should end up with a runnable version of QuPath, with all the different components and dependencies. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-409255073> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t63nFYvKbsHb5pvIvHf0JgJLMPRaks5uMHMygaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9tyO3hUoiEJIDsuFGimLqg7M8qJCfks5uMHMygaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410879743
https://github.com/qupath/qupath/issues/188#issuecomment-410879743:757,Integrability,depend,dependencies,757,"Hi Pete,. . thank you so much for the new versoin, it works perfectly with my hp spectre 360 and the hp tilt pen!. . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. . Once again thank you so much!. . Yours,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 31. Juli 2018 11:10; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Both are required - you'll need all the code there. If you follow the instructions towards the end of the linked page (starting with Step by step guide) you should end up with a runnable version of QuPath, with all the different components and dependencies. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-409255073> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t63nFYvKbsHb5pvIvHf0JgJLMPRaks5uMHMygaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9tyO3hUoiEJIDsuFGimLqg7M8qJCfks5uMHMygaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410879743
https://github.com/qupath/qupath/issues/188#issuecomment-410879743:659,Usability,guid,guide,659,"Hi Pete,. . thank you so much for the new versoin, it works perfectly with my hp spectre 360 and the hp tilt pen!. . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. . Once again thank you so much!. . Yours,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 31. Juli 2018 11:10; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Both are required - you'll need all the code there. If you follow the instructions towards the end of the linked page (starting with Step by step guide) you should end up with a runnable version of QuPath, with all the different components and dependencies. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-409255073> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t63nFYvKbsHb5pvIvHf0JgJLMPRaks5uMHMygaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9tyO3hUoiEJIDsuFGimLqg7M8qJCfks5uMHMygaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410879743
https://github.com/qupath/qupath/issues/188#issuecomment-410954902:180,Availability,error,errors,180,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902
https://github.com/qupath/qupath/issues/188#issuecomment-410954902:752,Deployability,update,updates,752,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902
https://github.com/qupath/qupath/issues/188#issuecomment-410954902:925,Deployability,install,install,925,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902
https://github.com/qupath/qupath/issues/188#issuecomment-410954902:361,Performance,load,loading,361,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902
https://github.com/qupath/qupath/issues/188#issuecomment-410954902:778,Usability,guid,guide,778,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:66,Availability,ERROR,ERROR,66,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2037,Availability,down,down,2037,"lication.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2230,Availability,error,errors,2230,"l.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on Gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:581,Deployability,install,installExtension,581,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1603,Deployability,update,update,1603,"enCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths wou",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1798,Deployability,install,install,1798,"<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/20",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2794,Deployability,update,updates,2794,"hread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-410954902> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t66btf2pNKUFzGRoCitGUIq4Cyj0ks5uOTtLgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t8H3MmRIa4B_NLD4ME359kClICBNks5uOTtLgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2967,Deployability,install,install,2967,"hread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-410954902> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t66btf2pNKUFzGRoCitGUIq4Cyj0ks5uOTtLgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t8H3MmRIa4B_NLD4ME359kClICBNks5uOTtLgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:83,Performance,load,load,83,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:146,Performance,load,load,146,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:254,Performance,load,loadLibrary,254,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:363,Performance,load,loadLibrary,363,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:427,Performance,load,loadNativeLibrary,427,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1592,Performance,Perform,Performing,1592,"enCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths wou",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2404,Performance,load,loading,2404,"tive Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-410954902> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t66btf2pNKUFzGRoCitGUIq4Cyj0ks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1136,Security,secur,security,1136,"brary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1145,Security,Access,AccessController,1145,"tive Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:52,Testability,log,log,52,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2255,Testability,log,log,2255,"l.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on Gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2820,Usability,guid,guide,2820,"hread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-410954902> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t66btf2pNKUFzGRoCitGUIq4Cyj0ks5uOTtLgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t8H3MmRIa4B_NLD4ME359kClICBNks5uOTtLgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646
https://github.com/qupath/qupath/issues/188#issuecomment-411636630:215,Availability,down,downloaded,215,"Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose _Repository &rarr; Show in Explorer_. . Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411636630
https://github.com/qupath/qupath/issues/188#issuecomment-411636630:436,Deployability,update,updates,436,"Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose _Repository &rarr; Show in Explorer_. . Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411636630
https://github.com/qupath/qupath/issues/188#issuecomment-411636630:79,Performance,load,load,79,"Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose _Repository &rarr; Show in Explorer_. . Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411636630
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:73,Availability,Error,Error,73,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3392,Availability,down,down,3392," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3622,Availability,down,downloaded,3622," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:86,Deployability,install,installation,86,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:628,Deployability,install,installed,628,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3834,Deployability,update,updates,3834," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:479,Modifiability,Config,Configure,479,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:2083,Modifiability,Config,Config,2083,"qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Result application bundle: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native. Config files are saved to C:\Users\marsh\AppData\Local\Temp\fxbundler5936450042917729024\windows. Use them to customize package.ve\ij-1.51s.jar has a main class ij.ImageJ that does not match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414648451:3486,Performance,load,load,3486," match the declared main qupath.QuPath. > :jfxNative=-> 98% EXECUTING [18s]a main class groovy.ui.GroovyMain that does not match the declared main qupath.QuPath. The jar jars\openslide-3.4.1_2.jar has a main class org.openslide.gui.Demo that does not match the declared main qupath. BUILD SUCCESSFUL in 27sCUTING [18s]. 41 actionable tasks: 3 executed, 38 up-to-date181\jre\bin\java, -version]. C:\Users\marsh\Documents\GitHub\qupath>. . > :jfxNative=-> 98% EXECUTING [18s]al\Temp\iconswap1913588824785848432.exe, C:\Users\marsh\AppData\Local\Temp\fxbundler5. 936450042917729024\windows\QuPath.ico, C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe]. > :jfxNative=-> 98% EXECUTING [18s]ata\Local\Temp\fxbundler5936450042917729024\windows\QuPath.ico. Executable File Name: C:\Users\marsh\Documents\GitHub\qupath\build\jfx\native\QuPath\QuPath.exe. > :jfxNative=-> 98% EXECUTING [18s]. > :jfxNative. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 9. August 2018 00:57; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose Repository → Show in Explorer. Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-411636630> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t735brx4t4Ayw9u_bSbXvNoYf3AKks5uO8EcgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t1sYPUju1CKEzlZQaC88wVg1AcDuks5uO8EcgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451
https://github.com/qupath/qupath/issues/188#issuecomment-414650057:262,Availability,down,download,262,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057
https://github.com/qupath/qupath/issues/188#issuecomment-414650057:391,Availability,error,error,391,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057
https://github.com/qupath/qupath/issues/188#issuecomment-414650057:463,Availability,error,error,463,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057
https://github.com/qupath/qupath/issues/188#issuecomment-414650057:236,Deployability,install,installing,236,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057
https://github.com/qupath/qupath/issues/188#issuecomment-414650057:504,Testability,test,test,504,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057
https://github.com/qupath/qupath/issues/188#issuecomment-414685806:578,Availability,down,down,578,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806
https://github.com/qupath/qupath/issues/188#issuecomment-414685806:855,Availability,down,download,855,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806
https://github.com/qupath/qupath/issues/188#issuecomment-414685806:984,Availability,error,error,984,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806
https://github.com/qupath/qupath/issues/188#issuecomment-414685806:1056,Availability,error,error,1056,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806
https://github.com/qupath/qupath/issues/188#issuecomment-414685806:829,Deployability,install,installing,829,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806
https://github.com/qupath/qupath/issues/188#issuecomment-414685806:1097,Testability,test,test,1097,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806
https://github.com/qupath/qupath/issues/188#issuecomment-414691671:77,Availability,error,error,77,"Great! Thanks for confirming, glad that has solved it. I'll keep in mind the error in case I see it again, and close this issue now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414691671
https://github.com/qupath/qupath/issues/188#issuecomment-454585138:83,Testability,test,test,83,"I am experiencing the same issue with a Wacom pen tablet. I don't have the time to test the latest test version, I just want to hear if there are any plans on releasing a new pre-compiled version in the near future?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-454585138
https://github.com/qupath/qupath/issues/188#issuecomment-454585138:99,Testability,test,test,99,"I am experiencing the same issue with a Wacom pen tablet. I don't have the time to test the latest test version, I just want to hear if there are any plans on releasing a new pre-compiled version in the near future?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-454585138
https://github.com/qupath/qupath/issues/188#issuecomment-454693082:61,Testability,test,test,61,"Not in less time than it would take you to try compiling the test version :); Always plans, but limited by severe lack of time and the many, many tasks involved. Don't expect a pre-compiled version before March (and it's sooner, that will be a nice surprise for all of us).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-454693082
https://github.com/qupath/qupath/issues/188#issuecomment-454705287:302,Deployability,update,updates,302,"They use the standard Java Preferences API so for Windows that is (I believe) the registry.; In the future (and on my build-able fork), classifications will also be maintained in .qpproj files to make it easier to switch between different lists: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-454705287
https://github.com/qupath/qupath/issues/188#issuecomment-479510416:42,Testability,test,test,42,"I do not currently have a Wacom tablet to test this. You say 'returned', but you never reported if it was fixed for you in any version, only that you didn't have time to test it at the time I was actively working on it. If you want a solution, it would be helpful if you could provide much more detailed information about what does/did work, on which operating systems and which versions of QuPath etc. If I knew it works in v0.1.3 but not in v0.2.0-m1 _on the same computer_ that would be a start. Is this the case?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479510416
https://github.com/qupath/qupath/issues/188#issuecomment-479510416:170,Testability,test,test,170,"I do not currently have a Wacom tablet to test this. You say 'returned', but you never reported if it was fixed for you in any version, only that you didn't have time to test it at the time I was actively working on it. If you want a solution, it would be helpful if you could provide much more detailed information about what does/did work, on which operating systems and which versions of QuPath etc. If I knew it works in v0.1.3 but not in v0.2.0-m1 _on the same computer_ that would be a start. Is this the case?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479510416
https://github.com/qupath/qupath/issues/188#issuecomment-479515958:350,Availability,down,down,350,"Sorry, I just saw that the bug was marked close and didn't think deeper about it. Yes, the bug was gone in version 0.1.3 on the same computer (Windows 10) and with the same tablet and drivers.; So to specify what was working in 0.1.3:. - Pan (using e.g. spacebar or move tool) would correctly move the viewport in the desired direction. Moving up or down would not result in pan AND zoom; - Pen pressure would change the brush size to mimic the brush strokes of a paint brush and thus making it much more flexible when doing precise annotation at different zoom levels. By the way, it would be a neat feature if it was possible to rotate images more than +-90 degrees and perhaps even flip them (for when you want to align images in two viewports).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479515958
https://github.com/qupath/qupath/issues/188#issuecomment-479515958:505,Modifiability,flexible,flexible,505,"Sorry, I just saw that the bug was marked close and didn't think deeper about it. Yes, the bug was gone in version 0.1.3 on the same computer (Windows 10) and with the same tablet and drivers.; So to specify what was working in 0.1.3:. - Pan (using e.g. spacebar or move tool) would correctly move the viewport in the desired direction. Moving up or down would not result in pan AND zoom; - Pen pressure would change the brush size to mimic the brush strokes of a paint brush and thus making it much more flexible when doing precise annotation at different zoom levels. By the way, it would be a neat feature if it was possible to rotate images more than +-90 degrees and perhaps even flip them (for when you want to align images in two viewports).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479515958
https://github.com/qupath/qupath/issues/188#issuecomment-479519382:96,Safety,avoid,avoid,96,"Thanks @Svidro ; @bjtho08 note that v0.2.0-m2 uses a different location for user preferences to avoid conflicting with v0.1.3. Have you checked that the relevant preferences are the same, e.g. those under _tools &rarr; Multi-touch gestures_?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479519382
https://github.com/qupath/qupath/issues/188#issuecomment-479526476:73,Performance,load,load,73,"Note that I think the JPen issue is separate, related to an inability to load the native library. The switch to JDK 11 has resulted in some new behavior regarding where native libraries are found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479526476
https://github.com/qupath/qupath/issues/188#issuecomment-479816228:138,Availability,error,error,138,When I run the following script:; ```groovy; try {; System.loadLibrary('jpen-2-3-64'); } catch (Throwable t) {; print t; }; ```; I get an error that it cannot find dependent libraries. However I see the same error in all versions of QuPath... possibly because I don't have a tablet. What do you see if you run this script in both working and non-working versions of QuPath?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479816228
https://github.com/qupath/qupath/issues/188#issuecomment-479816228:208,Availability,error,error,208,When I run the following script:; ```groovy; try {; System.loadLibrary('jpen-2-3-64'); } catch (Throwable t) {; print t; }; ```; I get an error that it cannot find dependent libraries. However I see the same error in all versions of QuPath... possibly because I don't have a tablet. What do you see if you run this script in both working and non-working versions of QuPath?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479816228
https://github.com/qupath/qupath/issues/188#issuecomment-479816228:164,Integrability,depend,dependent,164,When I run the following script:; ```groovy; try {; System.loadLibrary('jpen-2-3-64'); } catch (Throwable t) {; print t; }; ```; I get an error that it cannot find dependent libraries. However I see the same error in all versions of QuPath... possibly because I don't have a tablet. What do you see if you run this script in both working and non-working versions of QuPath?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479816228
https://github.com/qupath/qupath/issues/188#issuecomment-479816228:59,Performance,load,loadLibrary,59,When I run the following script:; ```groovy; try {; System.loadLibrary('jpen-2-3-64'); } catch (Throwable t) {; print t; }; ```; I get an error that it cannot find dependent libraries. However I see the same error in all versions of QuPath... possibly because I don't have a tablet. What do you see if you run this script in both working and non-working versions of QuPath?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479816228
https://github.com/qupath/qupath/issues/188#issuecomment-479821853:615,Availability,down,down,615,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853
https://github.com/qupath/qupath/issues/188#issuecomment-479821853:388,Deployability,Update,Update,388,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853
https://github.com/qupath/qupath/issues/188#issuecomment-479821853:521,Deployability,release,released,521,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853
https://github.com/qupath/qupath/issues/188#issuecomment-479821853:148,Performance,load,loaded,148,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853
https://github.com/qupath/qupath/issues/188#issuecomment-479821853:327,Performance,load,loaded,327,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853
https://github.com/qupath/qupath/issues/188#issuecomment-479825671:39,Availability,error,error,39,"Already loaded sounds like a the right error to see. I don't encounter any zooming problem when I use my touchscreen (without a pen) and don't recall having made any changes in this regard since v0.1.3. I can use the brush comfortably with the touchscreen & my finger, and it only zooms if I 'swipe' at the end of the gesture - otherwise the image is static. Is this also what you see? Since it turns out that JPen works after all, I really don't have enough information to know _exactly_ what problem you are reporting, when it occurs, how to reproduce it and with precisely what settings enabled in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479825671
https://github.com/qupath/qupath/issues/188#issuecomment-479825671:8,Performance,load,loaded,8,"Already loaded sounds like a the right error to see. I don't encounter any zooming problem when I use my touchscreen (without a pen) and don't recall having made any changes in this regard since v0.1.3. I can use the brush comfortably with the touchscreen & my finger, and it only zooms if I 'swipe' at the end of the gesture - otherwise the image is static. Is this also what you see? Since it turns out that JPen works after all, I really don't have enough information to know _exactly_ what problem you are reporting, when it occurs, how to reproduce it and with precisely what settings enabled in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479825671
https://github.com/qupath/qupath/issues/188#issuecomment-479827096:88,Safety,Avoid,Avoiding,88,"> it only zooms if I 'swipe' at the end of the gesture. This actually EXACTLY my issue! Avoiding the swipe motion requires very careful handling of the pen which makes it very unhandy for navigating large images and that in turn makes a tablet almost useless for this purpose since I do a lot of navigating while drawing (my tablet is rather small, so I cant draw on a precisely on large area). Is there some way to disable the swipe for zoom or make it switchable?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479827096
https://github.com/qupath/qupath/issues/188#issuecomment-479832407:171,Deployability,release,release,171,Ok. Attempted resolution in this commit https://github.com/petebankhead/qupath/commit/c7b07e5919aa76de19a81a71286dd8b434284017; Look out for changes in the next milestone release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479832407
https://github.com/qupath/qupath/issues/188#issuecomment-479845425:18,Testability,test,test,18,Do you want me to test it out for you? I could try to build a version with that commit and run it right away,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479845425
https://github.com/qupath/qupath/issues/188#issuecomment-479846872:86,Deployability,release,release,86,"As you wish. For me it is not urgent at all, the next milestone will not be the final release version and I need to work on many other things.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479846872
https://github.com/qupath/qupath/issues/189#issuecomment-408123949:232,Deployability,install,installed,232,"I suspect that one computer is opening the image with OpenSlide, and the other with Bio-Formats.; My guess is that this one (with the black background) is using Bio-Formats. If you have a recent version of the Bio-Formats extension installed, you can force it not to be used (or always to be used) for the `.scn` files - there are instructions at the bottom of https://github.com/qupath/qupath-bioformats-extension",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/189#issuecomment-408123949
https://github.com/qupath/qupath/issues/190#issuecomment-408301912:166,Safety,detect,detection,166,"A fairly complete description of TMA setup is here: https://github.com/qupath/qupath/wiki/TMA-CD3-analysis. The only difference for H-score is running ""Positive cell detection"" instead of ""Fast Cell Counts"". You can find information on Positive cell detection here: https://github.com/qupath/qupath/wiki/Detecting-objects",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/190#issuecomment-408301912
https://github.com/qupath/qupath/issues/190#issuecomment-408301912:250,Safety,detect,detection,250,"A fairly complete description of TMA setup is here: https://github.com/qupath/qupath/wiki/TMA-CD3-analysis. The only difference for H-score is running ""Positive cell detection"" instead of ""Fast Cell Counts"". You can find information on Positive cell detection here: https://github.com/qupath/qupath/wiki/Detecting-objects",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/190#issuecomment-408301912
https://github.com/qupath/qupath/issues/190#issuecomment-408301912:304,Safety,Detect,Detecting-objects,304,"A fairly complete description of TMA setup is here: https://github.com/qupath/qupath/wiki/TMA-CD3-analysis. The only difference for H-score is running ""Positive cell detection"" instead of ""Fast Cell Counts"". You can find information on Positive cell detection here: https://github.com/qupath/qupath/wiki/Detecting-objects",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/190#issuecomment-408301912
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:8,Availability,error,error,8,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:104,Availability,error,error,104,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:163,Availability,ERROR,ERROR,163,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:223,Availability,ERROR,ERROR,223,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:7598,Availability,ERROR,ERROR,7598,); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:7658,Availability,ERROR,ERROR,7658,); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:15033,Availability,ERROR,ERROR,15033,); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:15093,Availability,ERROR,ERROR,15093,); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:14,Integrability,message,message,14,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:110,Integrability,message,message,110,"exemple error message when trying multiplexed IF images with bioformats on ; (if disabled, just getting error message saying it can't open it for multiplexed IF). ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(Basic",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:3941,Performance,load,loadClass,3941,processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:3999,Performance,load,loadClass,3999,DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.Basic,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:11376,Performance,load,loadClass,11376,processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:11434,Performance,load,loadClass,11434,DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.Basic,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:18811,Performance,load,loadClass,18811,processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:18869,Performance,load,loadClass,18869,DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.Basic,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:3021,Security,access,access,3021,com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:3240,Security,secur,security,3240,patchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:3249,Security,Access,AccessController,3249,l.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openIma,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:6805,Security,access,access,6805,com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.Ima,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:7024,Security,secur,security,7024,patchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:7033,Security,Access,AccessController,7033,l.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:10456,Security,access,access,10456,com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:10675,Security,secur,security,10675,patchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:10684,Security,Access,AccessController,10684,l.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openIma,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:14240,Security,access,access,14240,com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.Ima,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:14459,Security,secur,security,14459,patchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:14468,Security,Access,AccessController,14468,l.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:17891,Security,access,access,17891,com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:18110,Security,secur,security,18110,patchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:18119,Security,Access,AccessController,18119,l.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openIma,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:21675,Security,access,access,21675,asicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:21894,Security,secur,security,21894,asicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409021767:21903,Security,Access,AccessController,21903,asicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409021767
https://github.com/qupath/qupath/issues/191#issuecomment-409025091:530,Deployability,update,updates,530,"What happens if you try to open the `.scn` file with Fiji (www.fiji.sc)? If this is successful (even to open part of the image - probably not all), then it is likely an issue with the QuPath Bio-Formats extension. But if not, then it is unlikely to be something that can be solved on the QuPath side. QuPath does not handle proprietary file formats, and depends on Bio-Formats and OpenSlide; and OpenSlide is inherently limited to 8-bit RGB images, which really means that Bio-Formats is the only option here. I plan to make some updates to the QuPath Bio-Formats extension soon, and I'll investigate `.scn` specifically with the few sample images I have access to tomorrow. But I don't know if the changes I plan to make will be relevant to the issue you are seeing. If you are able to share an example image that isn't working, I can investigate further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409025091
https://github.com/qupath/qupath/issues/191#issuecomment-409025091:354,Integrability,depend,depends,354,"What happens if you try to open the `.scn` file with Fiji (www.fiji.sc)? If this is successful (even to open part of the image - probably not all), then it is likely an issue with the QuPath Bio-Formats extension. But if not, then it is unlikely to be something that can be solved on the QuPath side. QuPath does not handle proprietary file formats, and depends on Bio-Formats and OpenSlide; and OpenSlide is inherently limited to 8-bit RGB images, which really means that Bio-Formats is the only option here. I plan to make some updates to the QuPath Bio-Formats extension soon, and I'll investigate `.scn` specifically with the few sample images I have access to tomorrow. But I don't know if the changes I plan to make will be relevant to the issue you are seeing. If you are able to share an example image that isn't working, I can investigate further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409025091
https://github.com/qupath/qupath/issues/191#issuecomment-409025091:655,Security,access,access,655,"What happens if you try to open the `.scn` file with Fiji (www.fiji.sc)? If this is successful (even to open part of the image - probably not all), then it is likely an issue with the QuPath Bio-Formats extension. But if not, then it is unlikely to be something that can be solved on the QuPath side. QuPath does not handle proprietary file formats, and depends on Bio-Formats and OpenSlide; and OpenSlide is inherently limited to 8-bit RGB images, which really means that Bio-Formats is the only option here. I plan to make some updates to the QuPath Bio-Formats extension soon, and I'll investigate `.scn` specifically with the few sample images I have access to tomorrow. But I don't know if the changes I plan to make will be relevant to the issue you are seeing. If you are able to share an example image that isn't working, I can investigate further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409025091
https://github.com/qupath/qupath/issues/191#issuecomment-409026871:118,Testability,test,test,118,"One other thing: did you make a project first, and add the image to the project?. I have looked at a couple of `.scn` test images, and that works better for me whenever I force them to be opened with Bio-Formats. I will explore further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409026871
https://github.com/qupath/qupath/issues/191#issuecomment-409052439:763,Deployability,update,updates,763,"The larger one opens fine for me with Bioformats, although I see three separate images. One is 4 channel fluorescence (red, green, blue, yellow), one is grayscale, and one is what I assume is a solid pink thumbnail overview.; Edit: Looking at it, the mono image seems to be a whole slide version of the image, but possibly the red or green channel only. I am guessing it was the low res ""targeting"" scan to find the tissue. ![image](https://user-images.githubusercontent.com/23145209/43429972-71551b16-941b-11e8-8d4d-70e1b4d6d027.png). This is with Version 0.1.3 (a couple of months old, so not up to date) however, and a fairly recent version of Bioformats. Win7 64bit. You can find more about 0.1.3 here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409052439
https://github.com/qupath/qupath/issues/191#issuecomment-409052439:124,Energy Efficiency,green,green,124,"The larger one opens fine for me with Bioformats, although I see three separate images. One is 4 channel fluorescence (red, green, blue, yellow), one is grayscale, and one is what I assume is a solid pink thumbnail overview.; Edit: Looking at it, the mono image seems to be a whole slide version of the image, but possibly the red or green channel only. I am guessing it was the low res ""targeting"" scan to find the tissue. ![image](https://user-images.githubusercontent.com/23145209/43429972-71551b16-941b-11e8-8d4d-70e1b4d6d027.png). This is with Version 0.1.3 (a couple of months old, so not up to date) however, and a fairly recent version of Bioformats. Win7 64bit. You can find more about 0.1.3 here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409052439
https://github.com/qupath/qupath/issues/191#issuecomment-409052439:334,Energy Efficiency,green,green,334,"The larger one opens fine for me with Bioformats, although I see three separate images. One is 4 channel fluorescence (red, green, blue, yellow), one is grayscale, and one is what I assume is a solid pink thumbnail overview.; Edit: Looking at it, the mono image seems to be a whole slide version of the image, but possibly the red or green channel only. I am guessing it was the low res ""targeting"" scan to find the tissue. ![image](https://user-images.githubusercontent.com/23145209/43429972-71551b16-941b-11e8-8d4d-70e1b4d6d027.png). This is with Version 0.1.3 (a couple of months old, so not up to date) however, and a fairly recent version of Bioformats. Win7 64bit. You can find more about 0.1.3 here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409052439
https://github.com/qupath/qupath/issues/191#issuecomment-409095677:722,Deployability,install,installing,722,"I can also confirm both are working for me in v0.1.2 - I don't believe I made any changes with v0.1.3 that should affect it working, but there are changes that are likely to improve performance. I'm running it on a Mac. I'd suggest making sure you have the latest versions of Bio-Formats at the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension). If the latest (v0.0.6) doesn't work, then try removing it and going back to v0.0.5. It's best to do this by adding/removing the `.jar` files from the extensions folder directly whenever QuPath isn't running, to make sure there aren't old versions lingering (unfortunately v0.0.5 and v0.0.6 were accidentally given different filenames... so installing one won't overwrite the other). If there's any double about the location of the extensions folder, you could try this script: https://gist.github.com/petebankhead/e687cbcc2e35195e177104e05b633072. Please let me know if this works (or doesn't); if there are any problems, I'd like to try to resolve them before updating the extension. One small(ish) thing: the original brightness/contrast settings applied in QuPath for these images are pretty bad, and so you'll need to adjust the sliders to something sensible. One reason they are so bad is that at least some channels of some of the images are quite severely clipped at the low end (i.e. lots of pixels with 0 values).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409095677
https://github.com/qupath/qupath/issues/191#issuecomment-409095677:182,Performance,perform,performance,182,"I can also confirm both are working for me in v0.1.2 - I don't believe I made any changes with v0.1.3 that should affect it working, but there are changes that are likely to improve performance. I'm running it on a Mac. I'd suggest making sure you have the latest versions of Bio-Formats at the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension). If the latest (v0.0.6) doesn't work, then try removing it and going back to v0.0.5. It's best to do this by adding/removing the `.jar` files from the extensions folder directly whenever QuPath isn't running, to make sure there aren't old versions lingering (unfortunately v0.0.5 and v0.0.6 were accidentally given different filenames... so installing one won't overwrite the other). If there's any double about the location of the extensions folder, you could try this script: https://gist.github.com/petebankhead/e687cbcc2e35195e177104e05b633072. Please let me know if this works (or doesn't); if there are any problems, I'd like to try to resolve them before updating the extension. One small(ish) thing: the original brightness/contrast settings applied in QuPath for these images are pretty bad, and so you'll need to adjust the sliders to something sensible. One reason they are so bad is that at least some channels of some of the images are quite severely clipped at the low end (i.e. lots of pixels with 0 values).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409095677
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:266,Availability,error,error,266,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:552,Availability,ERROR,ERROR,552,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:612,Availability,ERROR,ERROR,612,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:492,Deployability,update,update,492,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:481,Performance,Perform,Performing,481,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:4330,Performance,load,loadClass,4330,processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(Compos,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:4388,Performance,load,loadClass,4388,DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.Basic,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:3410,Security,access,access,3410,com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:3629,Security,secur,security,3629,patchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:3638,Security,Access,AccessController,3638,l.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037); Caused by loci.formats.FormatException at java.net.URLClassLoader.findClass(URLClassLoader.java:381); at java.lang.ClassLoader.loadClass(ClassLoader.java:424); at java.lang.ClassLoader.loadClass(ClassLoader.java:357); at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openIma,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:7194,Security,access,access,7194,asicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:7413,Security,secur,security,7413,asicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409140774:7422,Security,Access,AccessController,7422,asicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.Scene$DnDGesture.fireEvent(Scene.java:2933); at javafx.scene.Scene$DnDGesture.processTargetDrop(Scene.java:3159); at javafx.scene.Scene$DnDGesture.access$6400(Scene.java:2909); at javafx.scene.Scene$DropTargetListener.drop(Scene.java:2873); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.lambda$handleDragDrop$309(GlassSceneDnDEventHandler.java:95); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassSceneDnDEventHandler.handleDragDrop(GlassSceneDnDEventHandler.java:92); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleDragDrop$363(GlassViewEventHandler.java:700); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleDragDrop(GlassViewEventHandler.java:699); at com.sun.glass.ui.View.handleDragDrop(View.java:712); at com.sun.glass.ui.View.notifyDragDrop(View.java:1037),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774
https://github.com/qupath/qupath/issues/191#issuecomment-409153464:113,Availability,down,downloaded,113,Please make sure you followed the instructions [here](https://github.com/qupath/qupath-bioformats-extension) and downloaded _both_ `.jar` files - it looks like `bioformats_package.jar` is missing. You can find it at http://www.openmicroscopy.org/bio-formats/downloads/. I can replicate the error if I remove `bioformats_package.jar` from my extensions folder.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409153464
https://github.com/qupath/qupath/issues/191#issuecomment-409153464:258,Availability,down,downloads,258,Please make sure you followed the instructions [here](https://github.com/qupath/qupath-bioformats-extension) and downloaded _both_ `.jar` files - it looks like `bioformats_package.jar` is missing. You can find it at http://www.openmicroscopy.org/bio-formats/downloads/. I can replicate the error if I remove `bioformats_package.jar` from my extensions folder.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409153464
https://github.com/qupath/qupath/issues/191#issuecomment-409153464:290,Availability,error,error,290,Please make sure you followed the instructions [here](https://github.com/qupath/qupath-bioformats-extension) and downloaded _both_ `.jar` files - it looks like `bioformats_package.jar` is missing. You can find it at http://www.openmicroscopy.org/bio-formats/downloads/. I can replicate the error if I remove `bioformats_package.jar` from my extensions folder.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409153464
https://github.com/qupath/qupath/issues/191#issuecomment-409243439:792,Security,access,access,792,"Indeed I had only one of the 2 `.jar` files in the folder. Sorry about this and thanks a lot for your help. I also see 3 images. 1 is thumbnail, 1 is low-resolution pre-scan, the other is high magnification scan. The default contrasts settings are indeed very bad with these images, but it's fine once adjusted. I guess the high number of pixels with 0 values would come from empty regions... Is it possible somehow to set predefined values that would work by default on every similar files in the future? (forcing QuPath not to auto adjust would probably do the trick..., or to ignore those 0 values when adjusting the settings). These images can contain sometimes a maximum projection + z-stacks (it is the case of the biggest of the 2 images for example). Do you know if it is possible to access these z-stacks? Do you know how it would chose the stack? It seem to be taking the maximum projection by default be haven't checked enough images to be sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409243439
https://github.com/qupath/qupath/issues/191#issuecomment-409246552:269,Performance,load,load,269,"Pete wrote a script that can modify the display settings, and I kept a copy here: https://gist.github.com/Svidro/e00021dff92ea1173e535008854be72e#file-adjust-fluorescence-contrast-groovy; It also contains a link to the original conversation. I do not think it can auto-load those settings, but should be more convenient than manually modifying it each time. I don't know anything about the rest of the scn files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409246552
https://github.com/qupath/qupath/issues/191#issuecomment-409247462:628,Availability,avail,available,628,"I saw some z-stacks in the images that you linked, and it's possible to switch between slices with the slider at the top left. The auto contrast settings are a bit more sensible at if you can build the beta version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), and this will also then save the contrast settings within the `.qpdata` file. The viewer should be quite a bit more responsive as well, if you have more channels. So it's definitely worth checking out if you're working with fluorescence. If you add the image to a QuPath project, all the potentially-interesting images _should_ become available in the project, and you can optionally delete some afterwards.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409247462
https://github.com/qupath/qupath/issues/191#issuecomment-409247462:278,Deployability,update,updates,278,"I saw some z-stacks in the images that you linked, and it's possible to switch between slices with the slider at the top left. The auto contrast settings are a bit more sensible at if you can build the beta version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), and this will also then save the contrast settings within the `.qpdata` file. The viewer should be quite a bit more responsive as well, if you have more channels. So it's definitely worth checking out if you're working with fluorescence. If you add the image to a QuPath project, all the potentially-interesting images _should_ become available in the project, and you can optionally delete some afterwards.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409247462
https://github.com/qupath/qupath/issues/191#issuecomment-409247462:409,Usability,responsiv,responsive,409,"I saw some z-stacks in the images that you linked, and it's possible to switch between slices with the slider at the top left. The auto contrast settings are a bit more sensible at if you can build the beta version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), and this will also then save the contrast settings within the `.qpdata` file. The viewer should be quite a bit more responsive as well, if you have more channels. So it's definitely worth checking out if you're working with fluorescence. If you add the image to a QuPath project, all the potentially-interesting images _should_ become available in the project, and you can optionally delete some afterwards.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409247462
https://github.com/qupath/qupath/issues/191#issuecomment-409745698:831,Safety,avoid,avoid,831,"Thanks, it is great to be able to go through the z-stacks. I find the viewer very responsive compared to other image analysis/viewing softwares!. The script to adjust fluorescence contrast is a fairly good/quick option to adjust the settings. One question though: is it possible to also adjust manually the default colours for each channels within the same script? I've tried something like `channels[0].setColor(color)` but it is not working.... do you know which code would do the trick?. Another question related to the `.scn` format. The first image is the label but appears all pink. Do you know a way of seeing the actual label? (which would normally display in other viewers, and wouldn't be pink). And the label doesn't seem recognised as a label by QuPath but is showing in the image list, I guess it could be possible to avoid this?. Many thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409745698
https://github.com/qupath/qupath/issues/191#issuecomment-409745698:82,Usability,responsiv,responsive,82,"Thanks, it is great to be able to go through the z-stacks. I find the viewer very responsive compared to other image analysis/viewing softwares!. The script to adjust fluorescence contrast is a fairly good/quick option to adjust the settings. One question though: is it possible to also adjust manually the default colours for each channels within the same script? I've tried something like `channels[0].setColor(color)` but it is not working.... do you know which code would do the trick?. Another question related to the `.scn` format. The first image is the label but appears all pink. Do you know a way of seeing the actual label? (which would normally display in other viewers, and wouldn't be pink). And the label doesn't seem recognised as a label by QuPath but is showing in the image list, I guess it could be possible to avoid this?. Many thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409745698
https://github.com/qupath/qupath/issues/191#issuecomment-409765018:232,Integrability,interface,interface,232,"The pink thing has come up before with scn files here: https://github.com/qupath/qupath/issues/141 but that is all I remember. I think the colors are scriptable (when not in Openslide), but have never done it, just used the Display interface. Probably somewhere around the save and loadChannelColorProperties() and addChannelOptions... but I have no specifics.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409765018
https://github.com/qupath/qupath/issues/191#issuecomment-409765018:282,Performance,load,loadChannelColorProperties,282,"The pink thing has come up before with scn files here: https://github.com/qupath/qupath/issues/141 but that is all I remember. I think the colors are scriptable (when not in Openslide), but have never done it, just used the Display interface. Probably somewhere around the save and loadChannelColorProperties() and addChannelOptions... but I have no specifics.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409765018
https://github.com/qupath/qupath/issues/191#issuecomment-409882684:1931,Deployability,update,updated,1931," to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it could be handy in improving the default colors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684
https://github.com/qupath/qupath/issues/191#issuecomment-409882684:1304,Energy Efficiency,green,green,1304," to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it could be handy in improving the default colors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684
https://github.com/qupath/qupath/issues/191#issuecomment-409882684:1627,Energy Efficiency,Green,Green,1627," to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it could be handy in improving the default colors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684
https://github.com/qupath/qupath/issues/191#issuecomment-409882684:1874,Security,access,accessible,1874," to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it could be handy in improving the default colors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684
https://github.com/qupath/qupath/issues/191#issuecomment-409882684:869,Usability,clear,clear,869,"Regarding the 'pink' issue, it looks related to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it coul",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684
https://github.com/qupath/qupath/issues/191#issuecomment-409927029:762,Deployability,update,updates,762,"Thanks a lot for your answer. So running the following code when opening a new image is relatively painless:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255). // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0). // Ensure the updates are visible; viewer.repaintEntireImage(). // Usually a good idea to print something, so we know it finished; print 'Done!'`. Regarding the pink staining actually it doesn't look like it's the label. It might just be a very low resolution scan, probably brightfield used by the scanner to detect the coverslip and slide.; Do you think it would need a Bio-Formats update for QuPath to access the label image? Or is this something that could be implemented directly in QuPath? The label must be somewhere in the `.scn` as I can see it if I open the image in imageJ, or other softwares (Definiens, Halo, ImageScope...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409927029
https://github.com/qupath/qupath/issues/191#issuecomment-409927029:1132,Deployability,update,update,1132,"Thanks a lot for your answer. So running the following code when opening a new image is relatively painless:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255). // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0). // Ensure the updates are visible; viewer.repaintEntireImage(). // Usually a good idea to print something, so we know it finished; print 'Done!'`. Regarding the pink staining actually it doesn't look like it's the label. It might just be a very low resolution scan, probably brightfield used by the scanner to detect the coverslip and slide.; Do you think it would need a Bio-Formats update for QuPath to access the label image? Or is this something that could be implemented directly in QuPath? The label must be somewhere in the `.scn` as I can see it if I open the image in imageJ, or other softwares (Definiens, Halo, ImageScope...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409927029
https://github.com/qupath/qupath/issues/191#issuecomment-409927029:1058,Safety,detect,detect,1058,"Thanks a lot for your answer. So running the following code when opening a new image is relatively painless:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255). // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0). // Ensure the updates are visible; viewer.repaintEntireImage(). // Usually a good idea to print something, so we know it finished; print 'Done!'`. Regarding the pink staining actually it doesn't look like it's the label. It might just be a very low resolution scan, probably brightfield used by the scanner to detect the coverslip and slide.; Do you think it would need a Bio-Formats update for QuPath to access the label image? Or is this something that could be implemented directly in QuPath? The label must be somewhere in the `.scn` as I can see it if I open the image in imageJ, or other softwares (Definiens, Halo, ImageScope...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409927029
https://github.com/qupath/qupath/issues/191#issuecomment-409927029:118,Security,access,access,118,"Thanks a lot for your answer. So running the following code when opening a new image is relatively painless:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255). // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0). // Ensure the updates are visible; viewer.repaintEntireImage(). // Usually a good idea to print something, so we know it finished; print 'Done!'`. Regarding the pink staining actually it doesn't look like it's the label. It might just be a very low resolution scan, probably brightfield used by the scanner to detect the coverslip and slide.; Do you think it would need a Bio-Formats update for QuPath to access the label image? Or is this something that could be implemented directly in QuPath? The label must be somewhere in the `.scn` as I can see it if I open the image in imageJ, or other softwares (Definiens, Halo, ImageScope...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409927029
https://github.com/qupath/qupath/issues/191#issuecomment-409927029:1153,Security,access,access,1153,"Thanks a lot for your answer. So running the following code when opening a new image is relatively painless:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255). // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0). // Ensure the updates are visible; viewer.repaintEntireImage(). // Usually a good idea to print something, so we know it finished; print 'Done!'`. Regarding the pink staining actually it doesn't look like it's the label. It might just be a very low resolution scan, probably brightfield used by the scanner to detect the coverslip and slide.; Do you think it would need a Bio-Formats update for QuPath to access the label image? Or is this something that could be implemented directly in QuPath? The label must be somewhere in the `.scn` as I can see it if I open the image in imageJ, or other softwares (Definiens, Halo, ImageScope...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409927029
https://github.com/qupath/qupath/issues/191#issuecomment-409928556:83,Security,access,access,83,"I think you're right about the pink image not being the label, but are you able to access the label through ImageJ using Bio-Formats, or some other way? When I open it with Fiji, I can't see a label for either of the two images linked to above. If a label is found, it should appear in QuPath under the 'Image' tab and 'Associated images'.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409928556
https://github.com/qupath/qupath/issues/191#issuecomment-409938514:103,Availability,avail,available,103,"v0.0.7 of the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) is available now... doesn't solve this, but gives a meaningful error if `bioformats_package.jar` is missing - and has a lot of other improvements. Regarding the label, here's an inelegant script that works for me with your images:; ```groovy; /**; * Extract the label from an .scn image.; * Assumes it matches with the specified IFD (6) - I've no idea if this is always the case!; * ; * Shows the extracted label using ImageJ.; */. import ij.ImagePlus; import loci.formats.gui.AWTImageTools; import loci.formats.in.LeicaSCNReader; import qupath.lib.scripting.QPEx. def path = QPEx.getCurrentImageData().getServerPath(); if (path.contains('::')); path = path.substring(0, path.lastIndexOf('::')). def reader = new LeicaSCNReader(); try {; reader.setId(path); def ifd = reader.getIFDs().get(6); int h = ifd.getImageLength(); int w = ifd.getImageWidth(); def samples = new byte[w * h * 3]; samples = reader.tiffParser.getSamples(ifd, samples, 0, 0, w, h); def img = AWTImageTools.openImage(samples, reader, w, h); new ImagePlus(""Label"", img).show(); } finally {; reader.close(); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409938514
https://github.com/qupath/qupath/issues/191#issuecomment-409938514:163,Availability,error,error,163,"v0.0.7 of the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) is available now... doesn't solve this, but gives a meaningful error if `bioformats_package.jar` is missing - and has a lot of other improvements. Regarding the label, here's an inelegant script that works for me with your images:; ```groovy; /**; * Extract the label from an .scn image.; * Assumes it matches with the specified IFD (6) - I've no idea if this is always the case!; * ; * Shows the extracted label using ImageJ.; */. import ij.ImagePlus; import loci.formats.gui.AWTImageTools; import loci.formats.in.LeicaSCNReader; import qupath.lib.scripting.QPEx. def path = QPEx.getCurrentImageData().getServerPath(); if (path.contains('::')); path = path.substring(0, path.lastIndexOf('::')). def reader = new LeicaSCNReader(); try {; reader.setId(path); def ifd = reader.getIFDs().get(6); int h = ifd.getImageLength(); int w = ifd.getImageWidth(); def samples = new byte[w * h * 3]; samples = reader.tiffParser.getSamples(ifd, samples, 0, 0, w, h); def img = AWTImageTools.openImage(samples, reader, w, h); new ImagePlus(""Label"", img).show(); } finally {; reader.close(); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409938514
https://github.com/qupath/qupath/issues/191#issuecomment-411572502:771,Deployability,update,updates,771,"Thanks for your answer, no worries.; I have additional questions regarding .scn files:. - Using the following script:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(); // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255); // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0); // Ensure the updates are visible; viewer.repaintEntireImage(); // Usually a good idea to print something, so we know it finished; print 'Done!'`. I tried ""Run for Project"" to get the settings applied on all the images within the project, it seems to be doing it as the prompt iterates the list of images, but when I open another image of the project, the view settings remain unchanged... Is there a trick?. - If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. - some images have different ""high resolution"" scans because several regions have been selected during the slide scan. When opening chromogenic images, there is no problem and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. - regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411572502
https://github.com/qupath/qupath/issues/191#issuecomment-411572502:1894,Deployability,update,update,1894,"nfo for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(); // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255); // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0); // Ensure the updates are visible; viewer.repaintEntireImage(); // Usually a good idea to print something, so we know it finished; print 'Done!'`. I tried ""Run for Project"" to get the settings applied on all the images within the project, it seems to be doing it as the prompt iterates the list of images, but when I open another image of the project, the view settings remain unchanged... Is there a trick?. - If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. - some images have different ""high resolution"" scans because several regions have been selected during the slide scan. When opening chromogenic images, there is no problem and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. - regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?). - is it possible to delete scripts within the script editor (such as empty ""untitled"" scripts that get created by default when opening the editor)?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411572502
https://github.com/qupath/qupath/issues/191#issuecomment-411572502:127,Security,access,access,127,"Thanks for your answer, no worries.; I have additional questions regarding .scn files:. - Using the following script:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(); // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255); // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0); // Ensure the updates are visible; viewer.repaintEntireImage(); // Usually a good idea to print something, so we know it finished; print 'Done!'`. I tried ""Run for Project"" to get the settings applied on all the images within the project, it seems to be doing it as the prompt iterates the list of images, but when I open another image of the project, the view settings remain unchanged... Is there a trick?. - If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. - some images have different ""high resolution"" scans because several regions have been selected during the slide scan. When opening chromogenic images, there is no problem and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. - regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411572502
https://github.com/qupath/qupath/issues/191#issuecomment-411576889:217,Availability,down,down,217,"In the script editor, when you have a script selected, File->Close script. I overlooked that a few times too when I was starting, thinking it might close the whole thing. Update measurement names: Where does it break down? Are the channels named correctly? And is there an error?. Batch images for view settings-> These will not have any effect, as they only work on the currently open image and are not saved as part of the .qpdata file at this time. Pete mentioned this in another post... https://groups.google.com/forum/#!searchin/qupath-users/viewer%7Csort:date/qupath-users/uBMxJ_3JnBM/GkDahJw7EAAJ ah there it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411576889
https://github.com/qupath/qupath/issues/191#issuecomment-411576889:273,Availability,error,error,273,"In the script editor, when you have a script selected, File->Close script. I overlooked that a few times too when I was starting, thinking it might close the whole thing. Update measurement names: Where does it break down? Are the channels named correctly? And is there an error?. Batch images for view settings-> These will not have any effect, as they only work on the currently open image and are not saved as part of the .qpdata file at this time. Pete mentioned this in another post... https://groups.google.com/forum/#!searchin/qupath-users/viewer%7Csort:date/qupath-users/uBMxJ_3JnBM/GkDahJw7EAAJ ah there it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411576889
https://github.com/qupath/qupath/issues/191#issuecomment-411576889:171,Deployability,Update,Update,171,"In the script editor, when you have a script selected, File->Close script. I overlooked that a few times too when I was starting, thinking it might close the whole thing. Update measurement names: Where does it break down? Are the channels named correctly? And is there an error?. Batch images for view settings-> These will not have any effect, as they only work on the currently open image and are not saved as part of the .qpdata file at this time. Pete mentioned this in another post... https://groups.google.com/forum/#!searchin/qupath-users/viewer%7Csort:date/qupath-users/uBMxJ_3JnBM/GkDahJw7EAAJ ah there it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411576889
https://github.com/qupath/qupath/issues/191#issuecomment-411649825:1302,Deployability,update,updates,1302,"s are being applied through the viewer, but in _Run for Project_ the image isn't actually open in the viewer. There's always a way. For example, a script could potentially be written that loops through the images and opens in them in the viewer first... but it would take a bit of work and wouldn't be very elegant. It's hard to generalize because the script ought to handle cases where the number of channels for an image might differ. > If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. Sort of... Firstly, you can open the .qpproj file in a text editor (I use [Atom](https://atom.io)) and remove entries manually. Alternatively, if you're using v0.1.3 you can set metadata for each image and then sort by that:; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#better-tools-to-manage-projects--metadata. Then if you right-click on the header for one of the metadata flags (under which there are multiple images), you can delete that and it results in all the images under it being removed. This does require somehow setting the metadata in the first place. If you have to do it manually, it probably doesn't help much. So again with a script (as usual)...; ```groovy; def server = getCurrentImageData().getServer(); if (server.getWidth() < 6000) {; getProjectEntry().putMetadataValue('Small', 'True'); }; ```; This will set a flag for all the images with a width < 6000 pixels. Then you can right-click on the list of images in the project, choose _Sort by... &rarr; Small_ and then right-click on _True_ and choose _Remove image_. You'll be asked if you want to delete whatever number of images are below _True_. You can then _Sort by... &rarr; None_ to go back to where you were. > some images have different ""high resolution"" scans bec",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411649825
https://github.com/qupath/qupath/issues/191#issuecomment-411649825:3507,Deployability,update,update,3507,"and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. I'm afraid not any time soon... QuPath is just displaying the images as Bio-Formats provides them, and here they are as distinct 'series' (as presumably the scanner writes them separately as well to the file). Deciphering exactly which series belong together and where to position them in the viewer wouldn't be an easy task, especially as it would need to be solved for different scanners - which may have their own complexities. For example, I think series (scenes) can overlap in .czi files, and indeed there might be different z-slices and time points. It's also a little scary... if a scene is wrongly positioned, and then this is identified and fixed, previous analysis of the same image won't match any more. Therefore it is a big and complex job; I look into it every now and then, but don't plan to take it on any time soon. > regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?). Bio-Formats needs to have read the channel names from the file, and I'm not sure that it does for .scn - it doesn't appear to in the images of yours that I've seen. So this would require a change in Bio-Formats. I added some descriptions of scn-related issues on the Bio-Formats issue tracker on GitHub https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-410024564. There are other ways to contact the Bio-Formats team to discuss more or check if this has been discussed elsewhere, e.g. https://www.openmicroscopy.org/support/. > is it possible to delete scripts within the script editor (such as empty ""untitled"" scripts that get created by default when opening the editor)?. As @Svidro mentions, there's a _File &rarr; Close script_ option - I use the shortcut `Ctrl + W`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411649825
https://github.com/qupath/qupath/issues/192#issuecomment-409096361:256,Security,access,accessible,256,"This question is too broad to answer well... QuPath is primarily a desktop application, which you can use to analyze whole slide images - interactively and by scripting. Once you've established what you want to do, you can batch process it. To make QuPath accessible from IntelliJ, for Groovy scripting or potentially other reasons, see https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ. If this doesn't answer your question, please describe more fully what exactly you want to do.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/192#issuecomment-409096361
https://github.com/qupath/qupath/issues/193#issuecomment-409309963:409,Deployability,update,updates,409,"What a curious bug... didn't know about it, but I could replicate it and noticed that the points also increased in size as the rotation got closer to 90 degrees. Anyhow, both phenomena had the same cause and it should be fixed in the next version. You can try it out early, including the fix, if you follow the instructions at the bottom of [this page](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). (There should be a few other fixes there related to the _Point tool_ - such as when deleting a point with _Alt_ pressed might enthusiastically remove a neighboring point, but not actually the one you were aiming for)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409309963
https://github.com/qupath/qupath/issues/193#issuecomment-409484563:121,Deployability,upgrade,upgraded,121,"Due to the problem with straight line ROIs shifting when reloading previously-saved image data (Issue #71), I've already upgraded to v0.1.3 ( #71 fixed). Unfortunately the 90 degree point bug remains in effect.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409484563
https://github.com/qupath/qupath/issues/193#issuecomment-409486427:237,Availability,down,down,237,"If you've already got everything set up in _GitHub Desktop_, there should be a _Fetch origin_ button towards the top right - click that, and then again if the text changes to _Pull origin_. Then, with the latest code successfully pulled down, in the _History_ tab on the left the top entry should be _Fixed point painting bug_. If you follow the rest of the instructions to build QuPath, you should end up with a version that works. I've tested it on Windows and Mac and it is working here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409486427
https://github.com/qupath/qupath/issues/193#issuecomment-409486427:438,Testability,test,tested,438,"If you've already got everything set up in _GitHub Desktop_, there should be a _Fetch origin_ button towards the top right - click that, and then again if the text changes to _Pull origin_. Then, with the latest code successfully pulled down, in the _History_ tab on the left the top entry should be _Fixed point painting bug_. If you follow the rest of the instructions to build QuPath, you should end up with a version that works. I've tested it on Windows and Mac and it is working here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409486427
https://github.com/qupath/qupath/issues/194#issuecomment-409582139:65,Deployability,release,released,65,"I see the same - I don't think it was the case before v0.1.2 was released (I developed it on a Mac and think I'd have noticed...). So my guess is that some macOS update in between could be responsible, but I'm not certain. As a workaround, under the _Preferences_ try turning on the option _Use tile brush_. This will change the behavior of the brush if you happen to be using superpixels... but otherwise it shouldn't. However, it _will_ avoid the attempted use of a custom cursor, which appears to be what is causing the trouble.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/194#issuecomment-409582139
https://github.com/qupath/qupath/issues/194#issuecomment-409582139:162,Deployability,update,update,162,"I see the same - I don't think it was the case before v0.1.2 was released (I developed it on a Mac and think I'd have noticed...). So my guess is that some macOS update in between could be responsible, but I'm not certain. As a workaround, under the _Preferences_ try turning on the option _Use tile brush_. This will change the behavior of the brush if you happen to be using superpixels... but otherwise it shouldn't. However, it _will_ avoid the attempted use of a custom cursor, which appears to be what is causing the trouble.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/194#issuecomment-409582139
https://github.com/qupath/qupath/issues/194#issuecomment-409582139:439,Safety,avoid,avoid,439,"I see the same - I don't think it was the case before v0.1.2 was released (I developed it on a Mac and think I'd have noticed...). So my guess is that some macOS update in between could be responsible, but I'm not certain. As a workaround, under the _Preferences_ try turning on the option _Use tile brush_. This will change the behavior of the brush if you happen to be using superpixels... but otherwise it shouldn't. However, it _will_ avoid the attempted use of a custom cursor, which appears to be what is causing the trouble.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/194#issuecomment-409582139
https://github.com/qupath/qupath/issues/195#issuecomment-409798891:4,Availability,error,error,4,"The error includes `image size too large (2453.678853034973 MB)`. My guess is that the exported TIFF isn't a pyramidal TIFF, and this may be why QuPath + Bio-Formats needs to resort to reading it in one go - and too much memory is required for that to be possible. I'm not familiar with `.mds` - I don't suppose it works directly, or do you have any alternative options to export the image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409798891
https://github.com/qupath/qupath/issues/195#issuecomment-409831047:193,Availability,error,errors,193,"Thanks for your help. Exactly, the .mds file is a kind of mirror file. The statistics I got from my teacher are all of this kind which can only be open with a special software . Otherwise some errors might occur. I agree with your guess because Qupath can open the .tif files which are pyramidal TIFF I got from camelyon challenge. But is there any method of expanding the memory or is there an alternative to solve the problem?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409831047
https://github.com/qupath/qupath/issues/195#issuecomment-409842270:405,Performance,optimiz,optimized,405,"You could try converting your existing TIFF into a pyramidal one - there are some suggestions at https://github.com/openslide/openslide/wiki/CreatingPyramidalTIFFs. Please let me know if you find this works - I haven't tried it myself yet. There are also tips for adjusting the memory settings [here](https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits), but QuPath is really only optimized for large 2D images if they are in a pyramidal format. Assuming this one isn't, even if the image _could_ be opened the performance is likely to be bad.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409842270
https://github.com/qupath/qupath/issues/195#issuecomment-409842270:535,Performance,perform,performance,535,"You could try converting your existing TIFF into a pyramidal one - there are some suggestions at https://github.com/openslide/openslide/wiki/CreatingPyramidalTIFFs. Please let me know if you find this works - I haven't tried it myself yet. There are also tips for adjusting the memory settings [here](https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits), but QuPath is really only optimized for large 2D images if they are in a pyramidal format. Assuming this one isn't, even if the image _could_ be opened the performance is likely to be bad.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409842270
https://github.com/qupath/qupath/issues/195#issuecomment-409849565:34,Availability,down,download,34,"Thanks a lot ! It really works! I download the VIPS , use it convert my TIFF to pyramidal TIFF, and then the Qupath can open it with no problem. Thanks again for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/195#issuecomment-409849565
https://github.com/qupath/qupath/issues/196#issuecomment-410631215:330,Safety,detect,detect,330,"The Brightness/Contrast dialog shows there are 4 channels, but 3 are turned off; the TMA dearrayer won't be affected by which channels are turned on/off there though. For such images, it uses [an average projection of all the channels](https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java#L237). It will most likely have correctly auto-set the image type as 'Fluorescence', but it's always worth checking under the 'Image' tab (in case this was changed / the auto detection of image type was turned off).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410631215
https://github.com/qupath/qupath/issues/196#issuecomment-410631215:546,Safety,detect,detection,546,"The Brightness/Contrast dialog shows there are 4 channels, but 3 are turned off; the TMA dearrayer won't be affected by which channels are turned on/off there though. For such images, it uses [an average projection of all the channels](https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java#L237). It will most likely have correctly auto-set the image type as 'Fluorescence', but it's always worth checking under the 'Image' tab (in case this was changed / the auto detection of image type was turned off).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410631215
https://github.com/qupath/qupath/issues/196#issuecomment-410763976:250,Availability,down,downstream,250,"You are both correct. It’s a multi channel image, and some of the channels; are noisy. Secondly, in dev debug mode I can see that the initial threshold; fails. What should I do so that it just uses the red channel to find cores (I need; other colors downstream)?. On Mon, Aug 6, 2018 at 01:34 Pete <notifications@github.com> wrote:. > The Brightness/Contrast dialog shows there are 4 channels, but 3 are; > turned off; the TMA dearrayer won't be affected by which channels are; > turned on/off there though. For such images, it uses an average; > projection of all the channels; > <https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java#L237>; > .; >; > It will most likely have correctly auto-set the image type as; > 'Fluorescence', but it's always worth checking under the 'Image' tab (in; > case this was changed / the auto detection of image type was turned off).; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/196#issuecomment-410631215>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAcFTCZOP0VOb--7eOugusLtmVZlM1HUks5uN_-xgaJpZM4VvdxT>; > .; >; -- ; Rishi Rawat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410763976
https://github.com/qupath/qupath/issues/196#issuecomment-410763976:676,Safety,detect,detect,676,"You are both correct. It’s a multi channel image, and some of the channels; are noisy. Secondly, in dev debug mode I can see that the initial threshold; fails. What should I do so that it just uses the red channel to find cores (I need; other colors downstream)?. On Mon, Aug 6, 2018 at 01:34 Pete <notifications@github.com> wrote:. > The Brightness/Contrast dialog shows there are 4 channels, but 3 are; > turned off; the TMA dearrayer won't be affected by which channels are; > turned on/off there though. For such images, it uses an average; > projection of all the channels; > <https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java#L237>; > .; >; > It will most likely have correctly auto-set the image type as; > 'Fluorescence', but it's always worth checking under the 'Image' tab (in; > case this was changed / the auto detection of image type was turned off).; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/196#issuecomment-410631215>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAcFTCZOP0VOb--7eOugusLtmVZlM1HUks5uN_-xgaJpZM4VvdxT>; > .; >; -- ; Rishi Rawat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410763976
https://github.com/qupath/qupath/issues/196#issuecomment-410763976:908,Safety,detect,detection,908,"You are both correct. It’s a multi channel image, and some of the channels; are noisy. Secondly, in dev debug mode I can see that the initial threshold; fails. What should I do so that it just uses the red channel to find cores (I need; other colors downstream)?. On Mon, Aug 6, 2018 at 01:34 Pete <notifications@github.com> wrote:. > The Brightness/Contrast dialog shows there are 4 channels, but 3 are; > turned off; the TMA dearrayer won't be affected by which channels are; > turned on/off there though. For such images, it uses an average; > projection of all the channels; > <https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java#L237>; > .; >; > It will most likely have correctly auto-set the image type as; > 'Fluorescence', but it's always worth checking under the 'Image' tab (in; > case this was changed / the auto detection of image type was turned off).; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/196#issuecomment-410631215>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AAcFTCZOP0VOb--7eOugusLtmVZlM1HUks5uN_-xgaJpZM4VvdxT>; > .; >; -- ; Rishi Rawat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410763976
https://github.com/qupath/qupath/issues/196#issuecomment-410767203:237,Security,access,access,237,"Forcing it to use the red channel would require modifying the code for the dearrayer. This would not be easy to do in a straightforward way that doesn't break existing scripts for other users. It is difficult to help you further without access to your image, and just a screenshot showing one channel and no illustration of what 'the initial threshold fails' looks like. Did you use the script that I wrote for you when you asked a similar question in #77 ? You didn't reply. Can it not be used in this case?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-410767203
https://github.com/qupath/qupath/issues/196#issuecomment-411736810:379,Performance,perform,perform,379,"To answer your question, when I do the debug seting in imagej I can se ethat the threshold fails quite extremely. Perhaps it's becasue the threshold expects a light image on a dark bkrd. Or, it could be due to the other channels in my image, some of which are extremely noisy and really ought to be excluded from the threshold calculation. I think it would be useful if we could perform simple processing (brightness/contrast) on the core image before it's sent to imJ for core detection.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-411736810
https://github.com/qupath/qupath/issues/196#issuecomment-411736810:478,Safety,detect,detection,478,"To answer your question, when I do the debug seting in imagej I can se ethat the threshold fails quite extremely. Perhaps it's becasue the threshold expects a light image on a dark bkrd. Or, it could be due to the other channels in my image, some of which are extremely noisy and really ought to be excluded from the threshold calculation. I think it would be useful if we could perform simple processing (brightness/contrast) on the core image before it's sent to imJ for core detection.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-411736810
https://github.com/qupath/qupath/issues/196#issuecomment-411736810:387,Usability,simpl,simple,387,"To answer your question, when I do the debug seting in imagej I can se ethat the threshold fails quite extremely. Perhaps it's becasue the threshold expects a light image on a dark bkrd. Or, it could be due to the other channels in my image, some of which are extremely noisy and really ought to be excluded from the threshold calculation. I think it would be useful if we could perform simple processing (brightness/contrast) on the core image before it's sent to imJ for core detection.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-411736810
https://github.com/qupath/qupath/issues/196#issuecomment-411736903:41,Performance,load,loading,41,"for now, I think I'll fix the problem by loading/editing a pre-defined map",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/196#issuecomment-411736903
https://github.com/qupath/qupath/issues/197#issuecomment-471152442:79,Deployability,release,release,79,"Remembered this a few days ago and tried to get the fix into the new milestone release: https://github.com/qupath/qupath/commit/45820e625872b14197e4f784dbb71a37e96ef17d. Closing this issue as it should now be fixed, but please reopen if you find it is not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/197#issuecomment-471152442
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:744,Energy Efficiency,green,green,744,"I suspect the difficulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially eit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:850,Energy Efficiency,green,green,850,"I suspect the difficulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially eit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:939,Energy Efficiency,green,green,939,"I suspect the difficulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially eit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:1084,Energy Efficiency,green,green,1084,"ulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially either way could work.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:297,Integrability,interface,interface,297,"I suspect the difficulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially eit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:757,Modifiability,extend,extends,757,"I suspect the difficulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially eit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:1971,Safety,detect,detection,1971,"ulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially either way could work.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411011755:223,Usability,intuit,intuitive,223,"I suspect the difficulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially eit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:230,Energy Efficiency,green,green,230,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:330,Energy Efficiency,green,green,330,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:570,Energy Efficiency,green,green,570,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:628,Energy Efficiency,green,green,628,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:748,Energy Efficiency,green,green,748,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:909,Energy Efficiency,green,green,909,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:1142,Energy Efficiency,green,green,1142," positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:2054,Energy Efficiency,green,green,2054,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:343,Modifiability,extend,extended,343,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:543,Modifiability,extend,extend,543,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:2027,Modifiability,extend,extend,2027,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:594,Performance,perform,perform,594,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:2084,Performance,perform,perform,2084,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:2187,Performance,perform,perform,2187,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:611,Safety,detect,detection,611,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:1384,Safety,detect,detection,1384,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:1941,Safety,detect,detection,1941,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:2101,Safety,detect,detection,2101,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411026150:2202,Safety,detect,detection,2202,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150
https://github.com/qupath/qupath/issues/198#issuecomment-411662693:1485,Deployability,update,updates,1485,"ong with a description here<https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html>. I hope it helps, but if you see a way to improve it just let me know. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/198#issuecomment-411427127>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AoNwyOpnbOnOW9rFnT_2pqry0gg-jCySks5uOvZygaJpZM4VxsNx>.; {""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/qupath/qupath"",""title"":""qupath/qupath"",""subtitle"":""GitHub repository"",""main_image_url"":""https://assets-cdn.github.com/images/email/message_cards/header.png"",""avatar_image_url"":""https://assets-cdn.github.com/images/email/message_cards/avatar.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/qupath/qupath""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@petebankhead in #198: I suspect this will be a frequent enough need to deserve its own command in the future... in the meantime I've written a script that I hope will help.\r\n\r\nYou can find it along with a description [here](https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html).\r\n\r\nI<https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html)./r/n/r/nI> hope it helps, but if you see a way to improve it just let me know.""}],""action"":{""name"":""View Issue"",""url"":""https://github.com/qupath/qupath/issues/198#issuecomment-411427127""}}} [ { ""@context"": ""http://schema.org"", ""@type"": ""EmailMessage"", ""potentialAction"": { ""@type"": ""ViewAction"", ""target"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""url"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""name"": ""View Issue"" }, ""description"": ""View this Issue on GitHub"", ""publisher"": { ""@type"": ""Organization"", ""name"": ""GitHub"", ""url"": ""https://github.com"" } }, { ""@type"": ""Me",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411662693
https://github.com/qupath/qupath/issues/198#issuecomment-411662693:1525,Integrability,message,message,1525,"ong with a description here<https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html>. I hope it helps, but if you see a way to improve it just let me know. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/198#issuecomment-411427127>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AoNwyOpnbOnOW9rFnT_2pqry0gg-jCySks5uOvZygaJpZM4VxsNx>.; {""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/qupath/qupath"",""title"":""qupath/qupath"",""subtitle"":""GitHub repository"",""main_image_url"":""https://assets-cdn.github.com/images/email/message_cards/header.png"",""avatar_image_url"":""https://assets-cdn.github.com/images/email/message_cards/avatar.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/qupath/qupath""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@petebankhead in #198: I suspect this will be a frequent enough need to deserve its own command in the future... in the meantime I've written a script that I hope will help.\r\n\r\nYou can find it along with a description [here](https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html).\r\n\r\nI<https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html)./r/n/r/nI> hope it helps, but if you see a way to improve it just let me know.""}],""action"":{""name"":""View Issue"",""url"":""https://github.com/qupath/qupath/issues/198#issuecomment-411427127""}}} [ { ""@context"": ""http://schema.org"", ""@type"": ""EmailMessage"", ""potentialAction"": { ""@type"": ""ViewAction"", ""target"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""url"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""name"": ""View Issue"" }, ""description"": ""View this Issue on GitHub"", ""publisher"": { ""@type"": ""Organization"", ""name"": ""GitHub"", ""url"": ""https://github.com"" } }, { ""@type"": ""Me",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411662693
https://github.com/qupath/qupath/issues/198#issuecomment-411662693:2552,Integrability,Message,MessageCard,2552,"uspect this will be a frequent enough need to deserve its own command in the future... in the meantime I've written a script that I hope will help.\r\n\r\nYou can find it along with a description [here](https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html).\r\n\r\nI<https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html)./r/n/r/nI> hope it helps, but if you see a way to improve it just let me know.""}],""action"":{""name"":""View Issue"",""url"":""https://github.com/qupath/qupath/issues/198#issuecomment-411427127""}}} [ { ""@context"": ""http://schema.org"", ""@type"": ""EmailMessage"", ""potentialAction"": { ""@type"": ""ViewAction"", ""target"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""url"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""name"": ""View Issue"" }, ""description"": ""View this Issue on GitHub"", ""publisher"": { ""@type"": ""Organization"", ""name"": ""GitHub"", ""url"": ""https://github.com"" } }, { ""@type"": ""MessageCard"", ""@context"": ""http://schema.org/extensions"", ""hideOriginalBody"": ""false"", ""originator"": ""AF6C5A86-E920-430C-9C59-A73278B5EFEB"", ""title"": ""Re: [qupath/qupath] New/merging annotations when using the classifier (#198)"", ""sections"": [ { ""text"": """", ""activityTitle"": ""**Pete**"", ""activityImage"": ""https://assets-cdn.github.com/images/email/message_cards/avatar.png"", ""activitySubtitle"": ""@petebankhead"", ""facts"": [ ] } ], ""potentialAction"": [ { ""name"": ""Add a comment"", ""@type"": ""ActionCard"", ""inputs"": [ { ""isMultiLine"": true, ""@type"": ""TextInput"", ""id"": ""IssueComment"", ""isRequired"": false } ], ""actions"": [ { ""name"": ""Comment"", ""@type"": ""HttpPOST"", ""target"": ""https://api.github.com"", ""body"": ""{\n\""commandName\"": \""IssueComment\"",\n\""repositoryFullName\"": \""qupath/qupath\"",\n\""issueId\"": 198,\n\""IssueComment\"": \""{{IssueComment.value}}\""\n}"" } ] }, { ""name"": ""Close issue"", ""@type"": ""HttpPOST"", ""target"": ""https://api.github.com"", ""body"": ""{\n\""commandName\"": \""IssueClose\"",\n\""repositoryFullNam",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411662693
https://github.com/qupath/qupath/issues/198#issuecomment-468241801:119,Safety,avoid,avoid,119,I find that defining the inner region from expanding the outer region and intersecting with the original area helps to avoid getting an inner margin in regions where the area of interest expands all the way to the tissue border where it makes no sense to add an inner margin. The central margin is then just the original area - the inner margin,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-468241801
https://github.com/qupath/qupath/issues/199#issuecomment-411218042:338,Usability,simpl,simple,338,"It is, though I think it would need to be scripted. Something like find centroid for a given annotation, subtract 2*distance from Y and X coordinates independently, rebuild the ROI with the new coordinates. It may be more or less complicated if you have an AWT/""annotation with holes or separate pieces"" where the points aren't kept in a simple list. Pete would probably know more, and I don't have a script ready built to do that, sorry :(",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/199#issuecomment-411218042
https://github.com/qupath/qupath/issues/200#issuecomment-411333092:231,Availability,mask,masks,231,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092
https://github.com/qupath/qupath/issues/200#issuecomment-411333092:442,Availability,down,downsampled,442,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092
https://github.com/qupath/qupath/issues/200#issuecomment-411333092:292,Energy Efficiency,adapt,adapted,292,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092
https://github.com/qupath/qupath/issues/200#issuecomment-411333092:361,Integrability,depend,depend,361,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092
https://github.com/qupath/qupath/issues/200#issuecomment-411333092:292,Modifiability,adapt,adapted,292,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092
https://github.com/qupath/qupath/issues/200#issuecomment-411335497:75,Modifiability,plugin,plugin,75,"Thanks for the quick reply. I just want to run the simple tissue detection plugin and then save the result. `runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 0, ""requestedDownsample"": 5.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 5000.0, ""darkBackground"": true, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');`. This is the automated script for my operation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411335497
https://github.com/qupath/qupath/issues/200#issuecomment-411335497:65,Safety,detect,detection,65,"Thanks for the quick reply. I just want to run the simple tissue detection plugin and then save the result. `runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 0, ""requestedDownsample"": 5.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 5000.0, ""darkBackground"": true, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');`. This is the automated script for my operation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411335497
https://github.com/qupath/qupath/issues/200#issuecomment-411335497:134,Safety,detect,detect,134,"Thanks for the quick reply. I just want to run the simple tissue detection plugin and then save the result. `runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 0, ""requestedDownsample"": 5.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 5000.0, ""darkBackground"": true, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');`. This is the automated script for my operation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411335497
https://github.com/qupath/qupath/issues/200#issuecomment-411335497:51,Usability,simpl,simple,51,"Thanks for the quick reply. I just want to run the simple tissue detection plugin and then save the result. `runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 0, ""requestedDownsample"": 5.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 5000.0, ""darkBackground"": true, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');`. This is the automated script for my operation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411335497
https://github.com/qupath/qupath/issues/200#issuecomment-411343228:79,Availability,error,error,79,"The example script is running fine except it is not writing the image, showing error : **No compatible writer found.**",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411343228
https://github.com/qupath/qupath/issues/200#issuecomment-411347394:49,Availability,Error,Error,49,yes it is a Fluorescence image. . I am getting **Error at line 51: Width (0) and height (0) cannot be <= 0**. I checked the width and height with getWidth() and getHeight() functions and its not 0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411347394
https://github.com/qupath/qupath/issues/200#issuecomment-411347979:136,Availability,down,downsampling,136,"Note that there's a `requestedPixelSize` used to control the resolution - it's set for a whole slide image (with some pretty aggressive downsampling...). You can either change the `requestedPixelSize` or `downsample`, where it is used later in the script.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411347979
https://github.com/qupath/qupath/issues/200#issuecomment-411347979:205,Availability,down,downsample,205,"Note that there's a `requestedPixelSize` used to control the resolution - it's set for a whole slide image (with some pretty aggressive downsampling...). You can either change the `requestedPixelSize` or `downsample`, where it is used later in the script.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411347979
https://github.com/qupath/qupath/issues/202#issuecomment-411749897:275,Availability,down,downsample,275,"Yes, `ImageIO` can't write the images you need. You can try this, which will use ImageJ instead:; ```groovy; import ij.IJ; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); IJ.save(imp, new File(dirOutput, core.getName() + '.tif').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-411749897
https://github.com/qupath/qupath/issues/202#issuecomment-411749897:816,Availability,down,downsample,816,"Yes, `ImageIO` can't write the images you need. You can try this, which will use ImageJ instead:; ```groovy; import ij.IJ; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); IJ.save(imp, new File(dirOutput, core.getName() + '.tif').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-411749897
https://github.com/qupath/qupath/issues/202#issuecomment-415310669:525,Availability,down,downsample,525,"You can try this to bring across the original colors from QuPath, and use them to set the lookup tables for each channel of the image in ImageJ. But I'm afraid it doesn't bring over any customizations you might have made with the Brightness/Contrast tool. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++); composite.setChannelLut(; LUT.createLutFromColor(; ColorToolsAwt.getCachedColor(server.getDefaultChannelColor(c))), c+1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415310669
https://github.com/qupath/qupath/issues/202#issuecomment-415310669:1066,Availability,down,downsample,1066,"You can try this to bring across the original colors from QuPath, and use them to set the lookup tables for each channel of the image in ImageJ. But I'm afraid it doesn't bring over any customizations you might have made with the Brightness/Contrast tool. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++); composite.setChannelLut(; LUT.createLutFromColor(; ColorToolsAwt.getCachedColor(server.getDefaultChannelColor(c))), c+1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415310669
https://github.com/qupath/qupath/issues/202#issuecomment-415312268:439,Availability,down,downsample,439,"You can also try this one, which aims to bring over the brightness/contrast settings and channel colors from the current image viewer:. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QPEx. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def display = QPEx.getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.getAvailableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415312268
https://github.com/qupath/qupath/issues/202#issuecomment-415312268:980,Availability,down,downsample,980,"You can also try this one, which aims to bring over the brightness/contrast settings and channel colors from the current image viewer:. ```groovy; import ij.CompositeImage; import ij.IJ; import ij.process.LUT; import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.lib.awt.color.ColorToolsAwt; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QPEx. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(server); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = server.readImagePlusRegion(RegionRequest.createInstance(path, downsample, core.getROI())).getImage(); if (!imp.isComposite()) {; def display = QPEx.getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.getAvailableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415312268
https://github.com/qupath/qupath/issues/202#issuecomment-415419359:77,Testability,test,tested,77,"Try adding; ```groovy; imp = imp.flatten(); ```; before `IJ.save`. I haven't tested it here, but 'flatten' is the ImageJ command that converts to RGB. But if you change the extension from `.tiff` to `.png` you might find that it flattens anyway.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-415419359
https://github.com/qupath/qupath/issues/202#issuecomment-520236152:251,Availability,failure,failures,251,"@petebankhead How does one get the code, mentioned above, (https://github.com/qupath/qupath/issues/202#issuecomment-415312268 where the pictures with specific contrast/brightness settings are exported) to work in version 0.2.0-m2?; It has some import failures in my version and when I am deleting all imports and click on ""include default bindings"" it also does not work. Can you help or do I have to use an older/newer version?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520236152
https://github.com/qupath/qupath/issues/202#issuecomment-520237540:381,Availability,down,downsample,381,"It should be something like this:; ```groovy; import ij.CompositeImage; import ij.IJ; import ij.ImagePlus; import ij.process.LUT; import qupath.imagej.tools.IJTools; import qupath.lib.color.ColorToolsAwt; import qupath.lib.projects.Projects; import qupath.lib.regions.RegionRequest; import static qupath.lib.gui.scripting.QPEx.*. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def project = getProject(); def dirOutput = buildFilePath(Projects.getBaseDirectory(project).getAbsolutePath(), 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = IJTools.convertToImagePlus(server, RegionRequest.createInstance(path, downsample, core.getROI())).getImage() as ImagePlus; if (!imp.isComposite()) {; def display = getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.availableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```; I'm afraid I haven't had time to track down an appropriate image and check it works; it doesn't work for brightfield but hopefully does with fluorescence. (I'm trying to move away from GitHub for questions to use it properly as an issue tracker, so https://forum.image.sc/tags/qupath would be best for following up)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520237540
https://github.com/qupath/qupath/issues/202#issuecomment-520237540:921,Availability,down,downsample,921,"It should be something like this:; ```groovy; import ij.CompositeImage; import ij.IJ; import ij.ImagePlus; import ij.process.LUT; import qupath.imagej.tools.IJTools; import qupath.lib.color.ColorToolsAwt; import qupath.lib.projects.Projects; import qupath.lib.regions.RegionRequest; import static qupath.lib.gui.scripting.QPEx.*. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def project = getProject(); def dirOutput = buildFilePath(Projects.getBaseDirectory(project).getAbsolutePath(), 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = IJTools.convertToImagePlus(server, RegionRequest.createInstance(path, downsample, core.getROI())).getImage() as ImagePlus; if (!imp.isComposite()) {; def display = getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.availableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```; I'm afraid I haven't had time to track down an appropriate image and check it works; it doesn't work for brightfield but hopefully does with fluorescence. (I'm trying to move away from GitHub for questions to use it properly as an issue tracker, so https://forum.image.sc/tags/qupath would be best for following up)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520237540
https://github.com/qupath/qupath/issues/202#issuecomment-520237540:1190,Availability,avail,availableChannels,1190,"It should be something like this:; ```groovy; import ij.CompositeImage; import ij.IJ; import ij.ImagePlus; import ij.process.LUT; import qupath.imagej.tools.IJTools; import qupath.lib.color.ColorToolsAwt; import qupath.lib.projects.Projects; import qupath.lib.regions.RegionRequest; import static qupath.lib.gui.scripting.QPEx.*. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def project = getProject(); def dirOutput = buildFilePath(Projects.getBaseDirectory(project).getAbsolutePath(), 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = IJTools.convertToImagePlus(server, RegionRequest.createInstance(path, downsample, core.getROI())).getImage() as ImagePlus; if (!imp.isComposite()) {; def display = getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.availableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```; I'm afraid I haven't had time to track down an appropriate image and check it works; it doesn't work for brightfield but hopefully does with fluorescence. (I'm trying to move away from GitHub for questions to use it properly as an issue tracker, so https://forum.image.sc/tags/qupath would be best for following up)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520237540
https://github.com/qupath/qupath/issues/202#issuecomment-520237540:1625,Availability,down,down,1625,"It should be something like this:; ```groovy; import ij.CompositeImage; import ij.IJ; import ij.ImagePlus; import ij.process.LUT; import qupath.imagej.tools.IJTools; import qupath.lib.color.ColorToolsAwt; import qupath.lib.projects.Projects; import qupath.lib.regions.RegionRequest; import static qupath.lib.gui.scripting.QPEx.*. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def project = getProject(); def dirOutput = buildFilePath(Projects.getBaseDirectory(project).getAbsolutePath(), 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed; if (Thread.currentThread().isInterrupted()); break; // Request ImagePlus; def imp = IJTools.convertToImagePlus(server, RegionRequest.createInstance(path, downsample, core.getROI())).getImage() as ImagePlus; if (!imp.isComposite()) {; def display = getCurrentViewer().getImageDisplay(); def composite = new CompositeImage(imp, CompositeImage.COMPOSITE); for (int c = 0; c < server.nChannels(); c++) {; def channel = display.availableChannels().get(c); def color = ColorToolsAwt.getCachedColor(channel.getColor()); composite.setChannelLut(; LUT.createLutFromColor(color), c+1); composite.setC(c+1); composite.setDisplayRange(channel.getMinDisplay(), channel.getMaxDisplay()); }; composite.setC(1); imp = composite; }; IJ.save(imp, new File(dirOutput, core.getName() + '.tiff').getAbsolutePath()); }; print('Done!'); ```; I'm afraid I haven't had time to track down an appropriate image and check it works; it doesn't work for brightfield but hopefully does with fluorescence. (I'm trying to move away from GitHub for questions to use it properly as an issue tracker, so https://forum.image.sc/tags/qupath would be best for following up)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520237540
https://github.com/qupath/qupath/issues/202#issuecomment-520238308:73,Availability,error,error,73,"@petebankhead Thanks a lot! Unfortunately, it does not work out (Startup error below). Shall I then move this question to the new qupath forum? One more question: Is there a documentation of the qupath functions and classes?. ```ERROR: Error: startup failed:; Script1.groovy: 7: unable to resolve class qupath.lib.color.ColorToolsAwt; @ line 7, column 1.; import qupath.lib.color.ColorToolsAwt; ^. Script1.groovy: 8: unable to resolve class qupath.lib.projects.Projects; @ line 8, column 1.; import qupath.lib.projects.Projects; ^. Script1.groovy: 6: unable to resolve class qupath.imagej.tools.IJTools; @ line 6, column 1.; import qupath.imagej.tools.IJTools; ^. 3 errors; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238308
https://github.com/qupath/qupath/issues/202#issuecomment-520238308:229,Availability,ERROR,ERROR,229,"@petebankhead Thanks a lot! Unfortunately, it does not work out (Startup error below). Shall I then move this question to the new qupath forum? One more question: Is there a documentation of the qupath functions and classes?. ```ERROR: Error: startup failed:; Script1.groovy: 7: unable to resolve class qupath.lib.color.ColorToolsAwt; @ line 7, column 1.; import qupath.lib.color.ColorToolsAwt; ^. Script1.groovy: 8: unable to resolve class qupath.lib.projects.Projects; @ line 8, column 1.; import qupath.lib.projects.Projects; ^. Script1.groovy: 6: unable to resolve class qupath.imagej.tools.IJTools; @ line 6, column 1.; import qupath.imagej.tools.IJTools; ^. 3 errors; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238308
https://github.com/qupath/qupath/issues/202#issuecomment-520238308:236,Availability,Error,Error,236,"@petebankhead Thanks a lot! Unfortunately, it does not work out (Startup error below). Shall I then move this question to the new qupath forum? One more question: Is there a documentation of the qupath functions and classes?. ```ERROR: Error: startup failed:; Script1.groovy: 7: unable to resolve class qupath.lib.color.ColorToolsAwt; @ line 7, column 1.; import qupath.lib.color.ColorToolsAwt; ^. Script1.groovy: 8: unable to resolve class qupath.lib.projects.Projects; @ line 8, column 1.; import qupath.lib.projects.Projects; ^. Script1.groovy: 6: unable to resolve class qupath.imagej.tools.IJTools; @ line 6, column 1.; import qupath.imagej.tools.IJTools; ^. 3 errors; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238308
https://github.com/qupath/qupath/issues/202#issuecomment-520238308:666,Availability,error,errors,666,"@petebankhead Thanks a lot! Unfortunately, it does not work out (Startup error below). Shall I then move this question to the new qupath forum? One more question: Is there a documentation of the qupath functions and classes?. ```ERROR: Error: startup failed:; Script1.groovy: 7: unable to resolve class qupath.lib.color.ColorToolsAwt; @ line 7, column 1.; import qupath.lib.color.ColorToolsAwt; ^. Script1.groovy: 8: unable to resolve class qupath.lib.projects.Projects; @ line 8, column 1.; import qupath.lib.projects.Projects; ^. Script1.groovy: 6: unable to resolve class qupath.imagej.tools.IJTools; @ line 6, column 1.; import qupath.imagej.tools.IJTools; ^. 3 errors; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238308
https://github.com/qupath/qupath/issues/202#issuecomment-520238887:258,Availability,error,error,258,"Sorry, I should have said I tested it only with v0.2.0-m3 - where it works for brightfield only if I disable the brightness/contrast thing (which is where I'm only guessing it should work for fluorescence...). My guess/hope is that that is the source of the error if you were using v0.2.0-m2. I've been working towards adding javadocs for all the public methods in QuPath and have written many hundreds so far, but still have many more to go... I'm afraid it will take a while. I try to answer questions about the milestones as they change, but I'm afraid I can't really support the older ones (not least because it's hard to keep all the changes in my head, and set up a scripting environment for each). I'd really advise to switch from m2 as soon as feasible:; https://forum.image.sc/t/third-milestone-on-the-path-to-qupath-v0-2-0/27953/15",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238887
https://github.com/qupath/qupath/issues/202#issuecomment-520238887:28,Testability,test,tested,28,"Sorry, I should have said I tested it only with v0.2.0-m3 - where it works for brightfield only if I disable the brightness/contrast thing (which is where I'm only guessing it should work for fluorescence...). My guess/hope is that that is the source of the error if you were using v0.2.0-m2. I've been working towards adding javadocs for all the public methods in QuPath and have written many hundreds so far, but still have many more to go... I'm afraid it will take a while. I try to answer questions about the milestones as they change, but I'm afraid I can't really support the older ones (not least because it's hard to keep all the changes in my head, and set up a scripting environment for each). I'd really advise to switch from m2 as soon as feasible:; https://forum.image.sc/t/third-milestone-on-the-path-to-qupath-v0-2-0/27953/15",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520238887
https://github.com/qupath/qupath/issues/202#issuecomment-520239588:171,Integrability,rout,routinely,171,"Ah, I never really tend to change the brightness/contrast settings for brightfield images and I don't recall if this has been requested before... is this something you do routinely?. In the latest milestone version you can at least send multiple regions to ImageJ in one go (just select multiple cores before running the command to extract them).... although it does result in a whole lot of images open in ImageJ, it might help a bit and perhaps the actual adjusting/saving could be done in a macro.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520239588
https://github.com/qupath/qupath/issues/205#issuecomment-414434663:149,Safety,detect,detection,149,"That sounds like it might be possible, as long as the mitotic nuclei are distinct enough visually to easily distinguish, but in the case of the Ki67 detection, that was done with DAB staining so the same method would not work on H&E slides. It is simply detecting ""brown"" in the cell. Perhaps a higher Hematoxylin OD or something similar would work for your H&E slides. It sounds very similar to things done with deep learning already, but may be possible with either a scripted classifier or the classifier function in QuPath as long as you can give it a big enough training set. . Though, this seems like less of a QuPath technical issue, and more of a [question for the forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414434663
https://github.com/qupath/qupath/issues/205#issuecomment-414434663:254,Safety,detect,detecting,254,"That sounds like it might be possible, as long as the mitotic nuclei are distinct enough visually to easily distinguish, but in the case of the Ki67 detection, that was done with DAB staining so the same method would not work on H&E slides. It is simply detecting ""brown"" in the cell. Perhaps a higher Hematoxylin OD or something similar would work for your H&E slides. It sounds very similar to things done with deep learning already, but may be possible with either a scripted classifier or the classifier function in QuPath as long as you can give it a big enough training set. . Though, this seems like less of a QuPath technical issue, and more of a [question for the forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414434663
https://github.com/qupath/qupath/issues/205#issuecomment-414434663:247,Usability,simpl,simply,247,"That sounds like it might be possible, as long as the mitotic nuclei are distinct enough visually to easily distinguish, but in the case of the Ki67 detection, that was done with DAB staining so the same method would not work on H&E slides. It is simply detecting ""brown"" in the cell. Perhaps a higher Hematoxylin OD or something similar would work for your H&E slides. It sounds very similar to things done with deep learning already, but may be possible with either a scripted classifier or the classifier function in QuPath as long as you can give it a big enough training set. . Though, this seems like less of a QuPath technical issue, and more of a [question for the forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414434663
https://github.com/qupath/qupath/issues/205#issuecomment-414434663:418,Usability,learn,learning,418,"That sounds like it might be possible, as long as the mitotic nuclei are distinct enough visually to easily distinguish, but in the case of the Ki67 detection, that was done with DAB staining so the same method would not work on H&E slides. It is simply detecting ""brown"" in the cell. Perhaps a higher Hematoxylin OD or something similar would work for your H&E slides. It sounds very similar to things done with deep learning already, but may be possible with either a scripted classifier or the classifier function in QuPath as long as you can give it a big enough training set. . Though, this seems like less of a QuPath technical issue, and more of a [question for the forum](https://groups.google.com/forum/#!forum/qupath-users).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414434663
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:1047,Deployability,integrat,integrate,1047," the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:1047,Integrability,integrat,integrate,1047," the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:112,Safety,detect,detection,112,"QuPath gives the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:614,Safety,detect,detection,614,"QuPath gives the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:659,Safety,detect,detection,659,"QuPath gives the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:733,Safety,detect,detection,733,"QuPath gives the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:220,Usability,learn,learning,220,"QuPath gives the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:1358,Usability,learn,learning,1358,"rithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, it's an algorithm development platform that takes away a lot of the difficulty in working with whole slide images. But I also try to make it user-friendly, as there's not much point in creating the algorithms if no one can use them... I write some more about the technical side [on my blog](https://petebankhead.github.io) and as @Svidro says there are more posts on the applications [on the Google Group",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:1374,Usability,learn,learning,1374,"rithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, it's an algorithm development platform that takes away a lot of the difficulty in working with whole slide images. But I also try to make it user-friendly, as there's not much point in creating the algorithms if no one can use them... I write some more about the technical side [on my blog](https://petebankhead.github.io) and as @Svidro says there are more posts on the applications [on the Google Group",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/205#issuecomment-414438828:2152,Usability,user-friendly,user-friendly,2152,"d to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, it's an algorithm development platform that takes away a lot of the difficulty in working with whole slide images. But I also try to make it user-friendly, as there's not much point in creating the algorithms if no one can use them... I write some more about the technical side [on my blog](https://petebankhead.github.io) and as @Svidro says there are more posts on the applications [on the Google Group](; https://groups.google.com/forum/#!forum/qupath-user).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828
https://github.com/qupath/qupath/issues/206#issuecomment-416021080:109,Deployability,install,installed,109,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080
https://github.com/qupath/qupath/issues/206#issuecomment-416021080:413,Energy Efficiency,reduce,reduce,413,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080
https://github.com/qupath/qupath/issues/206#issuecomment-416021080:192,Integrability,depend,depending,192,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080
https://github.com/qupath/qupath/issues/206#issuecomment-416021080:28,Security,access,access,28,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080
https://github.com/qupath/qupath/issues/206#issuecomment-416021080:690,Usability,learn,learn,690,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080
https://github.com/qupath/qupath/issues/208#issuecomment-417774812:117,Deployability,update,update,117,"It should be possible - the classifier interface is fairly simple, and once you've got a classifier you just need to update it. See https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathObjectClassifier.java#L69. The default is the [RTreesClassifier](https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-opencv/src/main/java/qupath/opencv/classify/RTreesClassifier.java), and there are some useful helper methods in the [PathClassificationLabellingHelper](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathClassificationLabellingHelper.java) class.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417774812
https://github.com/qupath/qupath/issues/208#issuecomment-417774812:39,Integrability,interface,interface,39,"It should be possible - the classifier interface is fairly simple, and once you've got a classifier you just need to update it. See https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathObjectClassifier.java#L69. The default is the [RTreesClassifier](https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-opencv/src/main/java/qupath/opencv/classify/RTreesClassifier.java), and there are some useful helper methods in the [PathClassificationLabellingHelper](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathClassificationLabellingHelper.java) class.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417774812
https://github.com/qupath/qupath/issues/208#issuecomment-417774812:59,Usability,simpl,simple,59,"It should be possible - the classifier interface is fairly simple, and once you've got a classifier you just need to update it. See https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathObjectClassifier.java#L69. The default is the [RTreesClassifier](https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-opencv/src/main/java/qupath/opencv/classify/RTreesClassifier.java), and there are some useful helper methods in the [PathClassificationLabellingHelper](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathClassificationLabellingHelper.java) class.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417774812
https://github.com/qupath/qupath/issues/208#issuecomment-417778082:88,Modifiability,plugin,plugins,88,"Ah Excellent. ; I clearly didn't look very deep... The ease of doing so many things via plugins seems to have made me lazy,; Thanks for putting me in the right direction.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417778082
https://github.com/qupath/qupath/issues/208#issuecomment-417778082:18,Usability,clear,clearly,18,"Ah Excellent. ; I clearly didn't look very deep... The ease of doing so many things via plugins seems to have made me lazy,; Thanks for putting me in the right direction.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417778082
https://github.com/qupath/qupath/issues/208#issuecomment-417789387:116,Deployability,update,updateClassifier,116,"If you get it working I would be curious to see a sample script. ; For clarity since I have not played with this... updateClassifier will add the input list of objects to the current list of objects from all previous slides? Or restart the classifier with only the current slide input, but same choice of classifier and variables?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417789387
https://github.com/qupath/qupath/issues/208#issuecomment-417789387:320,Modifiability,variab,variables,320,"If you get it working I would be curious to see a sample script. ; For clarity since I have not played with this... updateClassifier will add the input list of objects to the current list of objects from all previous slides? Or restart the classifier with only the current slide input, but same choice of classifier and variables?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417789387
https://github.com/qupath/qupath/issues/208#issuecomment-417792656:269,Testability,test,test,269,"From memory, I believe that the new classifier uses all the objects it is passed in the call to that method - it doesn't remember previous objects, or know the images that they came from. This information should be stored elsewhere, if it is needed. But always best to test these things if it's important...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417792656
https://github.com/qupath/qupath/issues/209#issuecomment-418069254:23,Usability,clear,clear,23,Thank you Pete. That's clear.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/209#issuecomment-418069254
https://github.com/qupath/qupath/issues/210#issuecomment-418390877:238,Availability,error,errors,238,"If you could provide a screenshot of what you are looking at (cell detections/annotations+the classifier dialog) and a copy of the log (View->Show Log), that would help the troubleshooting a bit. Occasionally the classifier does run into errors and those show up in the log (unless that is what you meant by details).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418390877
https://github.com/qupath/qupath/issues/210#issuecomment-418390877:67,Safety,detect,detections,67,"If you could provide a screenshot of what you are looking at (cell detections/annotations+the classifier dialog) and a copy of the log (View->Show Log), that would help the troubleshooting a bit. Occasionally the classifier does run into errors and those show up in the log (unless that is what you meant by details).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418390877
https://github.com/qupath/qupath/issues/210#issuecomment-418390877:131,Testability,log,log,131,"If you could provide a screenshot of what you are looking at (cell detections/annotations+the classifier dialog) and a copy of the log (View->Show Log), that would help the troubleshooting a bit. Occasionally the classifier does run into errors and those show up in the log (unless that is what you meant by details).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418390877
https://github.com/qupath/qupath/issues/210#issuecomment-418390877:147,Testability,Log,Log,147,"If you could provide a screenshot of what you are looking at (cell detections/annotations+the classifier dialog) and a copy of the log (View->Show Log), that would help the troubleshooting a bit. Occasionally the classifier does run into errors and those show up in the log (unless that is what you meant by details).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418390877
https://github.com/qupath/qupath/issues/210#issuecomment-418390877:270,Testability,log,log,270,"If you could provide a screenshot of what you are looking at (cell detections/annotations+the classifier dialog) and a copy of the log (View->Show Log), that would help the troubleshooting a bit. Occasionally the classifier does run into errors and those show up in the log (unless that is what you meant by details).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418390877
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:472,Availability,ERROR,ERROR,472,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:503,Availability,avail,available,503,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:5218,Availability,avail,available,5218,"h.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA cores; INFO: Processing complete in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seco",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:5740,Availability,avail,available,5740,"in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seconds; INFO: Classification time: 0.08 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 0.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Number of unclassified objects in the test set: 303 (100.00%); INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 0	 0; Tumor	 0	 0. INFO: Number of reclassified objects: 4375 of 4375. Please let me know if you have any suggestions on how I can run the classifier succesfully. Best,; Sanne",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:5815,Availability,avail,available,5815,"in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seconds; INFO: Classification time: 0.08 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 0.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Number of unclassified objects in the test set: 303 (100.00%); INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 0	 0; Tumor	 0	 0. INFO: Number of reclassified objects: 4375 of 4375. Please let me know if you have any suggestions on how I can run the classifier succesfully. Best,; Sanne",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:412,Deployability,update,update,412,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:534,Energy Efficiency,power,power,534,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:4663,Modifiability,plugin,plugins,4663,"ianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 3.01 seconds); INFO: Processing complete in 3.03 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA cores; INFO: Processing complete in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:401,Performance,Perform,Performing,401,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:1187,Safety,detect,detect,1187," be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:1478,Safety,detect,detected,1478,"tyle: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigma",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:1603,Safety,detect,detect,1603,"e@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:1642,Safety,detect,detectionImageBrightfield,1642," bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stai",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:2066,Safety,detect,detected,2066," (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"":",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:2191,Safety,detect,detect,2191,"dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackg",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:2230,Safety,detect,detectionImageBrightfield,2230,"rizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": fals",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:2794,Safety,detect,detected,2794,"equestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:2919,Safety,detect,detect,2919,"""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"":",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:2958,Safety,detect,detectionImageBrightfield,2958,"ei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 1165 nuclei detected (processing time: 3.94 seconds); INFO: Processing complete in 3.98 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:3382,Safety,detect,detected,3382,"nRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 3.01 seconds); INFO: Processing complete in 3.03 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 4",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:3507,Safety,detect,detect,3507,"""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 3.01 seconds); INFO: Processing complete in 3.03 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundar",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:3546,Safety,detect,detectionImageBrightfield,3546,""": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Requesting region for stain vector editing: ; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 989 nuclei detected (processing time: 1.90 seconds); INFO: Processing complete in 1.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 3.01 seconds); INFO: Processing complete in 3.03 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:3975,Safety,detect,detected,3975,"dCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 3.01 seconds); INFO: Processing complete in 3.03 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA cores; INFO: Processing complete in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:4100,Safety,detect,detect,4100,"aMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 3.01 seconds); INFO: Processing complete in 3.03 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA cores; INFO: Processing complete in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:4139,Safety,detect,detectionImageBrightfield,4139," ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 2.11 seconds); INFO: Processing complete in 2.15 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: 2443 nuclei detected (processing time: 3.01 seconds); INFO: Processing complete in 3.03 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Smoothing using TMA cores; INFO: Processing complete in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:879,Security,Validat,Validation,879,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:26,Testability,log,log,26,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:348,Testability,Log,Log-file,348,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:547,Testability,Test,Test,547,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:6284,Testability,test,testing,6284,"in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seconds; INFO: Classification time: 0.08 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 0.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Number of unclassified objects in the test set: 303 (100.00%); INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 0	 0; Tumor	 0	 0. INFO: Number of reclassified objects: 4375 of 4375. Please let me know if you have any suggestions on how I can run the classifier succesfully. Best,; Sanne",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418647572:6361,Testability,test,test,6361,"in 0.18 seconds; INFO: Completed!; INFO: ; qupath.lib.plugins.objects.SmoothFeaturesPlugin {""fwhmMicrons"": 25.0, ""smoothWithinClasses"": false, ""useLegacyNames"": false}; INFO: Measurement mapper limits for Smoothed: 25 µm: Nucleus/Cell area ratio: 0.12291267514228821, 0.4222889840602875; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Cell: DAB OD max Quartile 1: 0.2062; INFO: Cell: DAB OD max Median: 0.4188; INFO: Cell: DAB OD max Quartile 3: 0.5843; INFO: Cell: DAB OD max Mean: 0.4174; INFO: Cell: DAB OD max Std.Dev.: 0.2091; INFO: Cell: DAB OD mean Quartile 1: 0.0725; INFO: Cell: DAB OD mean Median: 0.1700; INFO: Cell: DAB OD mean Quartile 3: 0.2724; INFO: Cell: DAB OD mean Mean: 0.1814; INFO: Cell: DAB OD mean Std.Dev.: 0.1103; INFO: Feature selection: Classifier set to train using all 67 available features; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Training size: 67x303; INFO: Responses size: 1x303; INFO: RTrees classifier termination criteria: { type: 1, maxCount: 50, epsilon: 0.0}; INFO: Classifier trained with 303 samples; INFO: Classifier training time: 0.04 seconds; INFO: Classification time: 0.08 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 0.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Number of unclassified objects in the test set: 303 (100.00%); INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 0	 0; Tumor	 0	 0. INFO: Number of reclassified objects: 4375 of 4375. Please let me know if you have any suggestions on how I can run the classifier succesfully. Best,; Sanne",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572
https://github.com/qupath/qupath/issues/210#issuecomment-418648914:197,Availability,avail,available,197,Using only the smoothed featurs for the classifier I do see now that the classifier works:. INFO: Number of reclassified objects: 40 of 4375; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Classifier already trained with the same samples - existing classifier will be used; INFO: Classifier training time: 0.01 seconds; INFO: Main classifier unchanged...; INFO: Classification time: 0.00 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 100.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 138	 0; Tumor	 0	 165. But still it doesn't apply this to the rest of the picture. Sanne,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418648914
https://github.com/qupath/qupath/issues/210#issuecomment-418648914:608,Testability,test,testing,608,Using only the smoothed featurs for the classifier I do see now that the classifier works:. INFO: Number of reclassified objects: 40 of 4375; INFO: Stroma: 138; INFO: Tumor: 165; INFO: 303 objects available for classifier training from 1 images; INFO: Classifier already trained with the same samples - existing classifier will be used; INFO: Classifier training time: 0.01 seconds; INFO: Main classifier unchanged...; INFO: Classification time: 0.00 seconds; INFO: Percentage of correctly classified objects in TRAINING set: 100.00% (n=303); WARN: It is *strongly* advised not to report accuracies based on testing using the training set!; INFO: Confusion matrix; 	Stroma	 Tumor; Stroma	 138	 0; Tumor	 0	 165. But still it doesn't apply this to the rest of the picture. Sanne,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418648914
https://github.com/qupath/qupath/issues/211#issuecomment-418701871:29,Performance,load,loading,29,"I could solve the problem by loading the image in the free ImageScope, cuting the whole WSI out and resave it with JPEG2000 compression. (i did not try the other options yet). ; QuPath is now able to display the image in a correct way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/211#issuecomment-418701871
https://github.com/qupath/qupath/issues/212#issuecomment-418987438:124,Availability,mask,masks,124,"You could try the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; (Or [here's](https://gist.githubusercontent.com/petebankhead/0b14beef131312042686c01056104b85/raw/8223a934f10761a885ef6cab20d71f786029bb84/QuPath-Export%20binary%20masks.groovy) a direct link to the script only.). It should export the annotated regions, along with a corresponding binary image... so if you're not interested in the binary image you can just delete it. It needs to be run inside a project, and the images are exported to a subdirectory inside the project called 'masks'.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/212#issuecomment-418987438
https://github.com/qupath/qupath/issues/212#issuecomment-418987438:615,Availability,mask,masks,615,"You could try the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; (Or [here's](https://gist.githubusercontent.com/petebankhead/0b14beef131312042686c01056104b85/raw/8223a934f10761a885ef6cab20d71f786029bb84/QuPath-Export%20binary%20masks.groovy) a direct link to the script only.). It should export the annotated regions, along with a corresponding binary image... so if you're not interested in the binary image you can just delete it. It needs to be run inside a project, and the images are exported to a subdirectory inside the project called 'masks'.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/212#issuecomment-418987438
https://github.com/qupath/qupath/issues/213#issuecomment-419363485:887,Availability,error,error,887,"Thank you very much for your help, but I have a new problem. How can I save the results to my local disk? ; ------------------------------------------script---------------------------------------; import static qupath.lib.scripting.QP.*; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ---------------------------------------------error---------------------------------------; 04:25:18.186 [main] [INFO ] QuPath - Launching QuPath with args: /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, 2.groovy; Script result: false; ------------------------------------------------------------------------------------------; thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/213#issuecomment-419363485
https://github.com/qupath/qupath/issues/213#issuecomment-419363485:519,Safety,detect,detect,519,"Thank you very much for your help, but I have a new problem. How can I save the results to my local disk? ; ------------------------------------------script---------------------------------------; import static qupath.lib.scripting.QP.*; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ---------------------------------------------error---------------------------------------; 04:25:18.186 [main] [INFO ] QuPath - Launching QuPath with args: /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, 2.groovy; Script result: false; ------------------------------------------------------------------------------------------; thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/213#issuecomment-419363485
https://github.com/qupath/qupath/issues/213#issuecomment-494365043:92,Availability,error,error,92,"Closed due to lack of activity and because the import statement should address the original error. The need for better command line support remains, but this is the subject of other issues also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/213#issuecomment-494365043
https://github.com/qupath/qupath/issues/216#issuecomment-420215988:291,Availability,mask,masks,291,"There are lots of possible export options and discussions, but I'm not sure if they match exactly what you want. Here are some:; * https://groups.google.com/d/msg/qupath-users/Anci7FBEHQg/XcGFJcfGAQAJ; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/14/script-export-labelled-images.html; * https://groups.google.com/forum/#!topic/qupath-users/ub6TC9IMmZ8. None of them are quite the same as the _Viewer snapshot_, but then the output of this would depend on the current magnification, window size etc. and so you would lose some control in the script concerning what is actually exported (unless you also programmatically modify the viewer...). Therefore in scripts I tend to export overview images using a different approach from the viewer snapshot directly. If the above links don't help, could you describe more what exactly you want to export, and how it should look?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420215988
https://github.com/qupath/qupath/issues/216#issuecomment-420215988:560,Integrability,depend,depend,560,"There are lots of possible export options and discussions, but I'm not sure if they match exactly what you want. Here are some:; * https://groups.google.com/d/msg/qupath-users/Anci7FBEHQg/XcGFJcfGAQAJ; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/14/script-export-labelled-images.html; * https://groups.google.com/forum/#!topic/qupath-users/ub6TC9IMmZ8. None of them are quite the same as the _Viewer snapshot_, but then the output of this would depend on the current magnification, window size etc. and so you would lose some control in the script concerning what is actually exported (unless you also programmatically modify the viewer...). Therefore in scripts I tend to export overview images using a different approach from the viewer snapshot directly. If the above links don't help, could you describe more what exactly you want to export, and how it should look?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420215988
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:123,Integrability,interface,interface,123,"There are many problems with groovy script processing, so I read the source code of the qupath software. And call the java interface to process the image. I want to save the analyzed image, but I failed, I don't know how to deal with this problem, so I hope to get your help.; -------------------------------; import java.awt.image.BufferedImage;; import java.io.IOException;; import java.util.Hashtable;; import java.util.SortedMap;. import javax.imageio.spi.ImageWriterSpi;. import org.controlsfx.control.SnapshotView;. import ij.plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:991,Integrability,interface,interfaces,991,"There are many problems with groovy script processing, so I read the source code of the qupath software. And call the java interface to process the image. I want to save the analyzed image, but I failed, I don't know how to deal with this problem, so I hope to get your help.; -------------------------------; import java.awt.image.BufferedImage;; import java.io.IOException;; import java.util.Hashtable;; import java.util.SortedMap;. import javax.imageio.spi.ImageWriterSpi;. import org.controlsfx.control.SnapshotView;. import ij.plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:532,Modifiability,plugin,plugin,532,"There are many problems with groovy script processing, so I read the source code of the qupath software. And call the java interface to process the image. I want to save the analyzed image, but I failed, I don't know how to deal with this problem, so I hope to get your help.; -------------------------------; import java.awt.image.BufferedImage;; import java.io.IOException;; import java.util.Hashtable;; import java.util.SortedMap;. import javax.imageio.spi.ImageWriterSpi;. import org.controlsfx.control.SnapshotView;. import ij.plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:1853,Safety,detect,detection,1853,".plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			// TODO Auto-generated catch block; 			e.printStackTrace();; 		}; 		int x = 0,y = 0;; 		int width=server.getWidth(),height = server.getHeight();; 		RegionRequest request = RegionRequest.createInstance(imageData.getServerPath(),1, x, y, width, height);; 		System.out.println(imageData.getServerPath());; 		ImageWriterTools.writeImageRegion(server, request,""d:/out-detection01.png"");; 	}; 	; 	; 	public static void main(String[] args) throws InterruptedException, IOException {; 		test01 t = new test01();; 		t.mydetection();; 	}. }",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:1885,Safety,detect,detection,1885,".plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			// TODO Auto-generated catch block; 			e.printStackTrace();; 		}; 		int x = 0,y = 0;; 		int width=server.getWidth(),height = server.getHeight();; 		RegionRequest request = RegionRequest.createInstance(imageData.getServerPath(),1, x, y, width, height);; 		System.out.println(imageData.getServerPath());; 		ImageWriterTools.writeImageRegion(server, request,""d:/out-detection01.png"");; 	}; 	; 	; 	public static void main(String[] args) throws InterruptedException, IOException {; 		test01 t = new test01();; 		t.mydetection();; 	}. }",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:1925,Safety,detect,detect,1925,".plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			// TODO Auto-generated catch block; 			e.printStackTrace();; 		}; 		int x = 0,y = 0;; 		int width=server.getWidth(),height = server.getHeight();; 		RegionRequest request = RegionRequest.createInstance(imageData.getServerPath(),1, x, y, width, height);; 		System.out.println(imageData.getServerPath());; 		ImageWriterTools.writeImageRegion(server, request,""d:/out-detection01.png"");; 	}; 	; 	; 	public static void main(String[] args) throws InterruptedException, IOException {; 		test01 t = new test01();; 		t.mydetection();; 	}. }",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:394,Security,Hash,Hashtable,394,"There are many problems with groovy script processing, so I read the source code of the qupath software. And call the java interface to process the image. I want to save the analyzed image, but I failed, I don't know how to deal with this problem, so I hope to get your help.; -------------------------------; import java.awt.image.BufferedImage;; import java.io.IOException;; import java.util.Hashtable;; import java.util.SortedMap;. import javax.imageio.spi.ImageWriterSpi;. import org.controlsfx.control.SnapshotView;. import ij.plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420269884:1265,Testability,stub,stub,1265,"n't know how to deal with this problem, so I hope to get your help.; -------------------------------; import java.awt.image.BufferedImage;; import java.io.IOException;; import java.util.Hashtable;; import java.util.SortedMap;. import javax.imageio.spi.ImageWriterSpi;. import org.controlsfx.control.SnapshotView;. import ij.plugin.JpegWriter;; import javafx.scene.SnapshotResult;; import qupath.lib.gui.ImageWriterTools;; import qupath.lib.gui.QuPathGUI;; import qupath.lib.gui.commands.SaveViewCommand;; import qupath.lib.gui.prefs.PathPrefs;; import qupath.lib.images.ImageData;; import qupath.lib.images.servers.ImageServer;; import qupath.lib.images.servers.ImageServerProvider;; import qupath.lib.io.ImageWriter;; import qupath.lib.regions.RegionRequest;; import qupath.lib.roi.interfaces.ROI;; import qupath.lib.scripting.QP;; import qupath.lib.scripting.QPEx;. public class test01 {; 	private static QuPathGUI qupath;; 	private static boolean wholeWindow;; 	; 	public void mydetection() throws InterruptedException {; 		// TODO Auto-generated method stub; 		String imagePath=""D:\\Overview\\9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg"";; 		ImageServer<BufferedImage> server = ImageServerProvider.buildServer(imagePath, BufferedImage.class);; 		ImageData imageData = new ImageData<>(server);; 		String bind = ""{\""threshold\"": 162, \""requestedDownsample\"": 1.0, \""minAreaPixels\"": 100000.0, \""maxHoleAreaPixels\"": 500.0, \""darkBackground\"": false, \""smoothImage\"": true, \""medianCleanup\"": true, \""dilateBoundaries\"": false, \r\n"" + ; 				"" \""smoothCoordinates\"": true, \""excludeOnBoundary\"": false, \""singleAnnotation\"": true}');"";; 		boolean detection = false;; 		try {; 			detection = QP.runPlugin(""qupath.imagej.detect.tissue.SimpleTissueDetection2"",bind);; 		} catch (Exception e) {; 			// TODO Auto-generated catch block; 			e.printStackTrace();; 		}; 		int x = 0,y = 0;; 		int width=server.getWidth(),height = server.getHeight();; 		RegionRequest request = RegionRequest.createInstance(imageDa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420269884
https://github.com/qupath/qupath/issues/216#issuecomment-420273639:277,Integrability,interface,interface,277,"What do you call from the command line?. And can you simple run your script from the QuPath _Script editor_, following some of the Wiki documentation (e.g. [here](https://github.com/qupath/qupath/wiki/Writing-custom-scripts))?. I have not had time to focus on the command line interface for QuPath, and prefer to work from the script editor. This allows you to choose _Run &rarr; Run for project_ for simpler batch processing. Eventually I hope to have another look at the command line, but there are many other tasks to be done first. It would help to understand exactly what you want to do, in case there are easier ways to achieve that goal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420273639
https://github.com/qupath/qupath/issues/216#issuecomment-420273639:53,Usability,simpl,simple,53,"What do you call from the command line?. And can you simple run your script from the QuPath _Script editor_, following some of the Wiki documentation (e.g. [here](https://github.com/qupath/qupath/wiki/Writing-custom-scripts))?. I have not had time to focus on the command line interface for QuPath, and prefer to work from the script editor. This allows you to choose _Run &rarr; Run for project_ for simpler batch processing. Eventually I hope to have another look at the command line, but there are many other tasks to be done first. It would help to understand exactly what you want to do, in case there are easier ways to achieve that goal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420273639
https://github.com/qupath/qupath/issues/216#issuecomment-420273639:401,Usability,simpl,simpler,401,"What do you call from the command line?. And can you simple run your script from the QuPath _Script editor_, following some of the Wiki documentation (e.g. [here](https://github.com/qupath/qupath/wiki/Writing-custom-scripts))?. I have not had time to focus on the command line interface for QuPath, and prefer to work from the script editor. This allows you to choose _Run &rarr; Run for project_ for simpler batch processing. Eventually I hope to have another look at the command line, but there are many other tasks to be done first. It would help to understand exactly what you want to do, in case there are easier ways to achieve that goal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420273639
https://github.com/qupath/qupath/issues/216#issuecomment-420281214:646,Safety,detect,detect,646,"I am running the groovy script in qupath as follows, but the saved image is the original image instead of the analyzed image. import qupath.lib.gui.ImageWriterTools; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QPEx. def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); def filename = server.getShortServerName(). setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; int x = 0,y = 0;; int width=server.getWidth(),height = server.getHeight();; def request = RegionRequest.createInstance(imageData.getServerPath(),1, x, y, width, height);; ImageWriterTools.writeImageRegion(server, request,""d:/snapshot.png"");",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420281214
https://github.com/qupath/qupath/issues/216#issuecomment-420282401:56,Safety,detect,detected,56,"Yes, that is correct. Assuming you want to see what was detected, you'll need to use `writeImageRegionWithOverlay`. There's an example at https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420282401
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1460,Availability,avail,available,1460,"; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1619,Availability,down,downsample,1619,"tImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1683,Availability,down,downsample,1683,"tImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1825,Availability,down,downsample,1825,"2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""ex",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2383,Availability,down,downsample,2383,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2881,Availability,ERROR,ERROR,2881,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2888,Availability,Error,Error,2888,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2945,Availability,ERROR,ERROR,2945,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:1637,Integrability,depend,depending,1637,"tImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:943,Safety,detect,detect,943,"Thank you for your reference, but I have some problems when I run it.; ----------------------------------------------------------------------; import qupath.lib.gui.ImageWriterTools; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.viewer.OverlayOptions; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QPEx. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2439,Safety,detect,detected,2439,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420287639:2564,Safety,detect,detect,2564,", ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath()); ----------------------------------------------------------------------; WARN: Invalid requested downsample 1.0 - will use 1.057 instead; INFO: 1 region detected (processing time: 2.97 seconds); INFO: Processing complete in 3.06 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; ERROR: Error writing D:\image-project\export\358.jpg with JPEG; ERROR: Unable to write D:\image-project\export\358.jpg! No compatible writer found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420287639
https://github.com/qupath/qupath/issues/216#issuecomment-420294416:142,Availability,down,downsampled,142,"It works for me, but perhaps the image you are trying to export is too large / lacks pixel size information, resulting in the image not being downsampled enough?. You could try replacing the line; ```groovy; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); ```; with; ```groovy; double downsample = 10; ```; or a higher value to specify that the image should be downsampled. Or try using one of the whole slide images from the early stages of the Wiki, where there are step-by-step guides. Otherwise, if you are able to attach your original image then I can try replicating your issue exactly - but for the images I've tried it works. > It's also quite hard to read your code with the different font size/bold formatting - you can format code by enclosing it as follows:; > ```groovy; > ```groovy; > // Code here; > ```; > ```; > See https://help.github.com/articles/creating-and-highlighting-code-blocks/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420294416
https://github.com/qupath/qupath/issues/216#issuecomment-420294416:215,Availability,down,downsample,215,"It works for me, but perhaps the image you are trying to export is too large / lacks pixel size information, resulting in the image not being downsampled enough?. You could try replacing the line; ```groovy; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); ```; with; ```groovy; double downsample = 10; ```; or a higher value to specify that the image should be downsampled. Or try using one of the whole slide images from the early stages of the Wiki, where there are step-by-step guides. Otherwise, if you are able to attach your original image then I can try replicating your issue exactly - but for the images I've tried it works. > It's also quite hard to read your code with the different font size/bold formatting - you can format code by enclosing it as follows:; > ```groovy; > ```groovy; > // Code here; > ```; > ```; > See https://help.github.com/articles/creating-and-highlighting-code-blocks/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420294416
https://github.com/qupath/qupath/issues/216#issuecomment-420294416:316,Availability,down,downsample,316,"It works for me, but perhaps the image you are trying to export is too large / lacks pixel size information, resulting in the image not being downsampled enough?. You could try replacing the line; ```groovy; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); ```; with; ```groovy; double downsample = 10; ```; or a higher value to specify that the image should be downsampled. Or try using one of the whole slide images from the early stages of the Wiki, where there are step-by-step guides. Otherwise, if you are able to attach your original image then I can try replicating your issue exactly - but for the images I've tried it works. > It's also quite hard to read your code with the different font size/bold formatting - you can format code by enclosing it as follows:; > ```groovy; > ```groovy; > // Code here; > ```; > ```; > See https://help.github.com/articles/creating-and-highlighting-code-blocks/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420294416
https://github.com/qupath/qupath/issues/216#issuecomment-420294416:392,Availability,down,downsampled,392,"It works for me, but perhaps the image you are trying to export is too large / lacks pixel size information, resulting in the image not being downsampled enough?. You could try replacing the line; ```groovy; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); ```; with; ```groovy; double downsample = 10; ```; or a higher value to specify that the image should be downsampled. Or try using one of the whole slide images from the early stages of the Wiki, where there are step-by-step guides. Otherwise, if you are able to attach your original image then I can try replicating your issue exactly - but for the images I've tried it works. > It's also quite hard to read your code with the different font size/bold formatting - you can format code by enclosing it as follows:; > ```groovy; > ```groovy; > // Code here; > ```; > ```; > See https://help.github.com/articles/creating-and-highlighting-code-blocks/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420294416
https://github.com/qupath/qupath/issues/216#issuecomment-420294416:512,Usability,guid,guides,512,"It works for me, but perhaps the image you are trying to export is too large / lacks pixel size information, resulting in the image not being downsampled enough?. You could try replacing the line; ```groovy; double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); ```; with; ```groovy; double downsample = 10; ```; or a higher value to specify that the image should be downsampled. Or try using one of the whole slide images from the early stages of the Wiki, where there are step-by-step guides. Otherwise, if you are able to attach your original image then I can try replicating your issue exactly - but for the images I've tried it works. > It's also quite hard to read your code with the different font size/bold formatting - you can format code by enclosing it as follows:; > ```groovy; > ```groovy; > // Code here; > ```; > ```; > See https://help.github.com/articles/creating-and-highlighting-code-blocks/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420294416
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:4001,Availability,ERROR,ERROR,4001,"Path/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; Caused by: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91); 	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.gro",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:4017,Availability,Error,Error,4017,"Path/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; Caused by: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91); 	at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48); 	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); 	at org.codehaus.gro",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:6919,Availability,avail,available,6919,"x. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); println(overlayOptions); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath())",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:7078,Availability,down,downsample,7078,"x. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); println(overlayOptions); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath())",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:7142,Availability,down,downsample,7142,"x. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); println(overlayOptions); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath())",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:7288,Availability,down,downsample,7288,"x. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); println(overlayOptions); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath())",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:213,Deployability,deploy,deploy,213,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:285,Deployability,deploy,deploy,285,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:361,Deployability,deploy,deploy,361,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:444,Deployability,deploy,deploy,444,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:531,Deployability,deploy,deploy,531,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:611,Deployability,deploy,deploy,611,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:694,Deployability,deploy,deploy,694,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:778,Deployability,deploy,deploy,778,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:865,Deployability,deploy,deploy,865,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:946,Deployability,deploy,deploy,946,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1037,Deployability,deploy,deploy,1037, run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/depl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1111,Deployability,deploy,deploy,1111,--------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1192,Deployability,deploy,deploy,1192,2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qu,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1277,Deployability,deploy,deploy,1277,y/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/d,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1349,Deployability,deploy,deploy,1349,/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupat,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1420,Deployability,deploy,deploy,1420,/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1487,Deployability,deploy,deploy,1487,oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oam,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1552,Deployability,deploy,deploy,1552,0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1624,Deployability,deploy,deploy,1624,extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1687,Deployability,deploy,deploy,1687,deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1748,Deployability,deploy,deploy,1748,1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1822,Deployability,deploy,deploy,1822,/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1894,Deployability,deploy,deploy,1894,.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1959,Deployability,deploy,deploy,1959,ion-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/o,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2047,Deployability,deploy,deploy,2047,-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslid,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2133,Deployability,deploy,deploy,2133,.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2223,Deployability,deploy,deploy,2223,2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-os,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2289,Deployability,deploy,deploy,2289,.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-n,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2369,Deployability,deploy,deploy,2369,mp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2447,Deployability,deploy,deploy,2447,/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2529,Deployability,deploy,deploy,2529,/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oam,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2594,Deployability,deploy,deploy,2594,.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2668,Deployability,deploy,deploy,2668,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 3,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2739,Deployability,deploy,deploy,2739,deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launc,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2804,Deployability,deploy,deploy,2804,"th-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2883,Deployability,deploy,deploy,2883,"2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2960,Deployability,deploy,deploy,2960,"s/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3041,Deployability,deploy,deploy,3041,"y/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3111,Deployability,deploy,deploy,3111,"path-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3195,Deployability,deploy,deploy,3195,"1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3277,Deployability,deploy,deploy,3277,"/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.mai",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3363,Deployability,deploy,deploy,3363,"oy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerExc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3432,Deployability,deploy,deploy,3432,"1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codeha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3502,Deployability,deploy,deploy,3502,".2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3571,Deployability,deploy,deploy,3571,"/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3634,Deployability,deploy,deploy,3634,"h/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; C",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:7096,Integrability,depend,depending,7096,"x. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = new File(path); def fileImage = new File(dir, name + "".jpg""); def img = ImageWriterTools.writeImageRegion(server, request, fileImage.getAbsolutePath()); def fileImageWithOverlay = new File(dir, name + ""-overlay.jpg""); println(overlayOptions); ImageWriterTools.writeImageRegionWithOverlay(img, imageData, overlayOptions, request, fileImageWithOverlay.getAbsolutePath())",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:6402,Safety,detect,detect,6402,".groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); 	... 2 common frames omitted. ---------------------------------------------------------; t6.groovy:; import qupath.lib.gui.ImageWriterTools; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.viewer.OverlayOptions; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QPEx. // Aim for an output resolution of approx 20 µm/pixel; double requestedPixelSize = 20. // Create the output directory, if required; def path = ""./out/t6result"" //QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""export""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 127, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');. // Get the file name from the current server; def name = server.getShortServerName(). // We need to get the display settings (colors, line thicknesses, opacity etc.) from the current viewer, if available; def overlayOptions = QuPathGUI.getInstance() == null ? new OverlayOptions() : QuPathGUI.getInstance().getViewer().getOverlayOptions(). // Calculate downsample factor depending on the requested pixel size; double downsample = 5 //requestedPixelSize / server.getAveragedPixelSizeMicrons(); def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()). // Write output image, with and without overlay; def dir = n",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2606,Testability,log,logback-classic-,2606,.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2680,Testability,log,logback-core-,2680,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 3,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3583,Usability,undo,undofx-,3583,"/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003
https://github.com/qupath/qupath/issues/216#issuecomment-420533550:325,Availability,error,error,325,"This is now a duplicate of https://github.com/qupath/qupath/issues/217 and it would be better to continue there. On Linux, it appears that image hasn't been opened and therefore there is no `imageData` (both here and in the other discussion). I don't know why this is the case; it could be a bug in QuPath, or it could be an error in the way you call it from the command line (I don't know what you type at the command line or where your image is located). Can you say what exactly solved the problem above? https://github.com/qupath/qupath/issues/216#issuecomment-420296209; This would be helpful in case a similar question comes up in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420533550
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:38,Availability,fault,fault,38,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:218,Deployability,deploy,deploy,218,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:290,Deployability,deploy,deploy,290,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:366,Deployability,deploy,deploy,366,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:449,Deployability,deploy,deploy,449,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:536,Deployability,deploy,deploy,536,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:616,Deployability,deploy,deploy,616,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:699,Deployability,deploy,deploy,699,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:783,Deployability,deploy,deploy,783,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:870,Deployability,deploy,deploy,870,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:951,Deployability,deploy,deploy,951,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1042,Deployability,deploy,deploy,1042,"dd the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/depl",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1116,Deployability,deploy,deploy,1116,.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1197,Deployability,deploy,deploy,1197,2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qu,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1282,Deployability,deploy,deploy,1282,y/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/d,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1354,Deployability,deploy,deploy,1354,/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupat,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1425,Deployability,deploy,deploy,1425,/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1492,Deployability,deploy,deploy,1492,oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oam,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1557,Deployability,deploy,deploy,1557,0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1629,Deployability,deploy,deploy,1629,extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1692,Deployability,deploy,deploy,1692,deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1753,Deployability,deploy,deploy,1753,1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1827,Deployability,deploy,deploy,1827,/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1899,Deployability,deploy,deploy,1899,.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1964,Deployability,deploy,deploy,1964,ion-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/o,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2052,Deployability,deploy,deploy,2052,-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslid,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2138,Deployability,deploy,deploy,2138,.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2228,Deployability,deploy,deploy,2228,2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-os,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2294,Deployability,deploy,deploy,2294,.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-n,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2374,Deployability,deploy,deploy,2374,mp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2452,Deployability,deploy,deploy,2452,/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2534,Deployability,deploy,deploy,2534,/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oam,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2599,Deployability,deploy,deploy,2599,.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2673,Deployability,deploy,deploy,2673,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2744,Deployability,deploy,deploy,2744,deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy;,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2809,Deployability,deploy,deploy,2809,th-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args:,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2888,Deployability,deploy,deploy,2888,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2965,Deployability,deploy,deploy,2965,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3046,Deployability,deploy,deploy,3046,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3116,Deployability,deploy,deploy,3116,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3200,Deployability,deploy,deploy,3200,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3282,Deployability,deploy,deploy,3282,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3368,Deployability,deploy,deploy,3368,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3437,Deployability,deploy,deploy,3437,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3507,Deployability,deploy,deploy,3507,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3576,Deployability,deploy,deploy,3576,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3639,Deployability,deploy,deploy,3639,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2611,Testability,log,logback-classic-,2611,.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2685,Testability,log,logback-core-,2685,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/216#issuecomment-420540074:3588,Usability,undo,undofx-,3588,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074
https://github.com/qupath/qupath/issues/218#issuecomment-420276787:144,Deployability,release,release,144,"This looks like a small typo in the original code (calling `getInteger` instead of `parseInt`), which should be easily fixed in the next QuPath release. The relevant bit of the code is [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/io/PointIO.java#L207). If you need a temporary workaround, that bit could be extracted into a separate Groovy script with the fix. If you just save the `.qpdata` file (the standard file format with QuPath, also used within projects), then all the points should be retained with the appropriate color/name/classification... so the problem should only affect points that have been manually exported/imported. I've never had much call to reimport exported points (and so didn't notice the bug)... is there a particular workflow where this is important?. An alternative workaround might be to use the 'name' for the points, and then write a script to assign all your reimported points a color or classification based upon their name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/218#issuecomment-420276787
https://github.com/qupath/qupath/issues/218#issuecomment-420705510:53,Testability,test,testing,53,"Hello Pete,. Thanks for your quick reply. I was just testing the import functionality as I wanted to get point coordinates from a third party software. I've written a short Groovy script as you suggested. Thanks a lot for your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/218#issuecomment-420705510
https://github.com/qupath/qupath/issues/219#issuecomment-420473760:188,Safety,detect,detection,188,"1. https://groups.google.com/forum/#!searchin/qupath-users/small$20annotations%7Csort:date/qupath-users/TL6KCc6aB_E/UG3ESt5HBgAJ; 2. If your annotation is being generated by simple tissue detection, it might be easier to increase the minimum hole size value (Max fill area). Otherwise, I think the only way to do that would be to split the annotation into it's component parts, and then somehow reform it using only the components over a certain area measurement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/219#issuecomment-420473760
https://github.com/qupath/qupath/issues/219#issuecomment-420473760:174,Usability,simpl,simple,174,"1. https://groups.google.com/forum/#!searchin/qupath-users/small$20annotations%7Csort:date/qupath-users/TL6KCc6aB_E/UG3ESt5HBgAJ; 2. If your annotation is being generated by simple tissue detection, it might be easier to increase the minimum hole size value (Max fill area). Otherwise, I think the only way to do that would be to split the annotation into it's component parts, and then somehow reform it using only the components over a certain area measurement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/219#issuecomment-420473760
https://github.com/qupath/qupath/issues/219#issuecomment-420535392:79,Usability,simpl,simple,79,"Thanks a lot for the solution to Q1. . For Q2, I was trying to do something as simple as finding the polygon coordinates of holes and remove any polygons with smaller number of vertices. The trouble is the coordinates of the outer boundary of an annotation and the holes seem to merge together when you query them with `annotation.getROI.getPolygonPoints()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/219#issuecomment-420535392
https://github.com/qupath/qupath/issues/219#issuecomment-420556730:691,Performance,perform,performant,691,"[`PathROIToolsAwt.splitAreaToPolygons`](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-awt/src/main/java/qupath/lib/roi/PathROIToolsAwt.java#L533) should help, since it returns separate arrays of PolygonROIs for 'positive regions' and 'holes'. You can then request the areas for each. (From memory, I think the first array is for holes, the second is for positive regions). But even with that, Q2 is definitely a lot harder...; 1. You'll need to reassemble the shapes into new ROIs. [`PathROIToolsAwt.combineROIs`](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-awt/src/main/java/qupath/lib/roi/PathROIToolsAwt.java#L75) is one way to do that (although probably not very performant if you have lots of ROIs to combine).; 2. You'll need to either set the ROI of the annotation object (which is possible, but discouraged...) or create a new annotation object with the appropriate ROI. The first method can have problems if the modified ROI results in the hierarchy being 'wrong' (e.g. there was another object inside a hole that has since been removed). The second requires that you remember to set all the properties of the new annotation appropriately (e.g. name, color, classification...) then remove the old annotation and add the new one to the hierarchy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/219#issuecomment-420556730
https://github.com/qupath/qupath/issues/220#issuecomment-422573137:766,Deployability,update,updates,766,"Thanks Nick!. For an average DAB value (which [isn't terribly quantitative](http://www.mecourse.com/landinig/software/cdeconv/cdeconv.html)) you could create an annotation, then try _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_. For something area-based (which may be preferable), there is _Analyze &rarr; Region identification &rarr; Positive pixel count (experimental)_ or even _Analyze &rarr; Region identification &rarr; Create cytokeratin annotations (TMA, experimental)_. . As you can tell from the _(experimental)_ in the names, I wasn't entirely convinced either of these was quite as refined as they ought to be. I've done a bit of work to [improve the pixel count](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#more-useful-output-for-positive-pixel-count-experimental), but I plan to incorporate newer, better approaches for this kind of thing over the next few months. Given those caveats and limitations, you might find it better to try [creating your own method with ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ). Finally, most questions & answers are at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users) - you might try posting your question there (ideally with an example image/screenshot).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/220#issuecomment-422573137
https://github.com/qupath/qupath/issues/221#issuecomment-423728088:193,Availability,failure,failure,193,"The problematic TIFF appears not to be pyramidal, which means that QuPath + Bio-Formats try to read an very large image that is 23422 x 30978 pixels in size all in one go... which is doomed to failure. QuPath can handle much larger images, but they do need to by pyramidal so that QuPath can quickly extract lower resolution versions of the image when appropriate (which is presumably the case with your SVS file). You might be able to convert the TIFF to a pyramidal format, e.g. see https://github.com/openslide/openslide/wiki/CreatingPyramidalTIFFs",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423728088
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:337,Availability,ERROR,ERROR,337,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:368,Availability,avail,available,368,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:396,Availability,ERROR,ERROR,396,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:427,Availability,avail,available,427,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:455,Availability,ERROR,ERROR,455,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:486,Availability,avail,available,486,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:524,Availability,ERROR,ERROR,524,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:517,Energy Efficiency,power,power,517,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423805036:326,Testability,log,log,326,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036
https://github.com/qupath/qupath/issues/221#issuecomment-423807718:123,Availability,avail,available,123,"Ah, this is a harder one to work around... the problem is that QuPath strictly requires that the pixel size information is available in microns when using OpenSlide (which is the case here). Unfortunately, your newly-created pyramidal TIFF seems to be missing this information. I need to look into updating QuPath to support customizing this pixel size information when it's missing, rather than just refusing to open the image. Realistically this will take some weeks at least, although I'll report back here if I can think of a workaround in the short term. In the meantime, if you can find some way of adding the pixel size information (if known) to the TIFF in an OpenSlide-friendly way then that should also resolve the issue. Please do let me know if you manage to do this, as it could be useful in general. (Incidentally, do you know the origin of the TIFF? Is there any way to get the pixel size information - or even go back to the original software that wrote the TIFF in the first place and export the file directly into a different format?)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423807718
https://github.com/qupath/qupath/issues/221#issuecomment-423829998:17,Performance,load,load,17,I just manage to load that file by converting it to a TIF using the following command:. > convert before_converting.tif -define tiff:tile-geometry=128x128 -depth 8 ptif:after_converting.tif. The option '-depth' is necessary to add.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423829998
https://github.com/qupath/qupath/issues/221#issuecomment-1000156683:70,Availability,error,error-exists-when-open-a-tiff-image,70,Hi @SikangSHU I've responded on the forum at https://forum.image.sc/t/error-exists-when-open-a-tiff-image/61380,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-1000156683
https://github.com/qupath/qupath/issues/222#issuecomment-424650877:1427,Deployability,update,updates,1427,"Hi Shushan,. I think this relates to your last question: https://groups.google.com/d/msg/qupath-users/89AbDQSknm8/SCAbYzA2CAAJ; I've written a script linked to that tries to do the job of converting cells into region annotations. The bigger question of creating full image annotations is one that I'm very interested in and (kind of) working on. Currently, I often use [QuPath + ImageJ + conventional image processing](https://github.com/qupath/qupath/wiki/Working-with-ImageJ) to generate detailed annotations; I suspect that in your case, converting to 8-bit, Gaussian smoothing and thresholding would do a pretty good job of mimicking the red annotation; if you have that, then it's possible to 'invert' the annotation to get everything else - either for the entire image, or constrained to a larger (coarse, hand-drawn) annotation. It's still quite a laborious process, but armed with QuPath, ImageJ and a few short scripts (e.g. to invert annotations) it's possible to create much better annotations than could be done by hand. I've also made some steps towards creating brush/wand annotations that can't overlap but rather snap to the boundary of existing annotations when pressing a specific key (although it's hard to not get tangled up in the various keyboard modifiers this involves, so it may need more work). I don't actually remember if it's included [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) or is more recent... but it may be worth investigating if you haven't already. Slightly further in the distance (but hopefully not too far), I've also got a prototype pixel classifier working... but again some more work needs to be done to convert this into something usable and annotation-generating. And having a very large number of annotations across a full slide might raise some performance issues that needs to be addressed to. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424650877
https://github.com/qupath/qupath/issues/222#issuecomment-424650877:1826,Performance,perform,performance,1826,"Hi Shushan,. I think this relates to your last question: https://groups.google.com/d/msg/qupath-users/89AbDQSknm8/SCAbYzA2CAAJ; I've written a script linked to that tries to do the job of converting cells into region annotations. The bigger question of creating full image annotations is one that I'm very interested in and (kind of) working on. Currently, I often use [QuPath + ImageJ + conventional image processing](https://github.com/qupath/qupath/wiki/Working-with-ImageJ) to generate detailed annotations; I suspect that in your case, converting to 8-bit, Gaussian smoothing and thresholding would do a pretty good job of mimicking the red annotation; if you have that, then it's possible to 'invert' the annotation to get everything else - either for the entire image, or constrained to a larger (coarse, hand-drawn) annotation. It's still quite a laborious process, but armed with QuPath, ImageJ and a few short scripts (e.g. to invert annotations) it's possible to create much better annotations than could be done by hand. I've also made some steps towards creating brush/wand annotations that can't overlap but rather snap to the boundary of existing annotations when pressing a specific key (although it's hard to not get tangled up in the various keyboard modifiers this involves, so it may need more work). I don't actually remember if it's included [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) or is more recent... but it may be worth investigating if you haven't already. Slightly further in the distance (but hopefully not too far), I've also got a prototype pixel classifier working... but again some more work needs to be done to convert this into something usable and annotation-generating. And having a very large number of annotations across a full slide might raise some performance issues that needs to be addressed to. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424650877
https://github.com/qupath/qupath/issues/222#issuecomment-424650877:1709,Usability,usab,usable,1709,"Hi Shushan,. I think this relates to your last question: https://groups.google.com/d/msg/qupath-users/89AbDQSknm8/SCAbYzA2CAAJ; I've written a script linked to that tries to do the job of converting cells into region annotations. The bigger question of creating full image annotations is one that I'm very interested in and (kind of) working on. Currently, I often use [QuPath + ImageJ + conventional image processing](https://github.com/qupath/qupath/wiki/Working-with-ImageJ) to generate detailed annotations; I suspect that in your case, converting to 8-bit, Gaussian smoothing and thresholding would do a pretty good job of mimicking the red annotation; if you have that, then it's possible to 'invert' the annotation to get everything else - either for the entire image, or constrained to a larger (coarse, hand-drawn) annotation. It's still quite a laborious process, but armed with QuPath, ImageJ and a few short scripts (e.g. to invert annotations) it's possible to create much better annotations than could be done by hand. I've also made some steps towards creating brush/wand annotations that can't overlap but rather snap to the boundary of existing annotations when pressing a specific key (although it's hard to not get tangled up in the various keyboard modifiers this involves, so it may need more work). I don't actually remember if it's included [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) or is more recent... but it may be worth investigating if you haven't already. Slightly further in the distance (but hopefully not too far), I've also got a prototype pixel classifier working... but again some more work needs to be done to convert this into something usable and annotation-generating. And having a very large number of annotations across a full slide might raise some performance issues that needs to be addressed to. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424650877
https://github.com/qupath/qupath/issues/222#issuecomment-424737895:253,Availability,mask,masks,253,"Yes, that should certainly be possible. This could help give some ideas, both for exporting regions and then generating objects from binary images created elsewhere: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. I generally prefer to create contours with ImageJ (as in the script above), rather than OpenCV - the explanation why is at https://petebankhead.github.io/qupath/technical/2018/03/13/note-on-contours.html; But certainly the main processing can be done with OpenCV, with ImageJ only getting involved at the very final, contour-generating step.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424737895
https://github.com/qupath/qupath/issues/223#issuecomment-424744221:569,Availability,robust,robust,569,"I think this is a different issue; somehow the magnification needs to be written to the OME-TIFF. Unfortunately I don't know enough about OME-TIFF to do that... I don't have another QuPath-based workaround myself. There isn't a way to override what the image-reader gets from the image yet. The problem exists because _Add Local Binary Pattern features_ and _Add Coherence texture feature_ come from a time when I was using magnification instead of 'Requested/Preferred pixel size' (as is now the case for _Add intensity features_); the pixel size is a better and more robust approach to define an appropriate resolution, but it seems I didn't update the other two commands to adopt it... not least because I didn't find a use for them myself. I'm curious: do you find them to be particularly valuable, or are you just exploring if they are useful? Lest the software become too bloated by options and confusing, I would be tempted to remove them rather than update them... but if they are very useful then I should probably resist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424744221
https://github.com/qupath/qupath/issues/223#issuecomment-424744221:644,Deployability,update,update,644,"I think this is a different issue; somehow the magnification needs to be written to the OME-TIFF. Unfortunately I don't know enough about OME-TIFF to do that... I don't have another QuPath-based workaround myself. There isn't a way to override what the image-reader gets from the image yet. The problem exists because _Add Local Binary Pattern features_ and _Add Coherence texture feature_ come from a time when I was using magnification instead of 'Requested/Preferred pixel size' (as is now the case for _Add intensity features_); the pixel size is a better and more robust approach to define an appropriate resolution, but it seems I didn't update the other two commands to adopt it... not least because I didn't find a use for them myself. I'm curious: do you find them to be particularly valuable, or are you just exploring if they are useful? Lest the software become too bloated by options and confusing, I would be tempted to remove them rather than update them... but if they are very useful then I should probably resist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424744221
https://github.com/qupath/qupath/issues/223#issuecomment-424744221:958,Deployability,update,update,958,"I think this is a different issue; somehow the magnification needs to be written to the OME-TIFF. Unfortunately I don't know enough about OME-TIFF to do that... I don't have another QuPath-based workaround myself. There isn't a way to override what the image-reader gets from the image yet. The problem exists because _Add Local Binary Pattern features_ and _Add Coherence texture feature_ come from a time when I was using magnification instead of 'Requested/Preferred pixel size' (as is now the case for _Add intensity features_); the pixel size is a better and more robust approach to define an appropriate resolution, but it seems I didn't update the other two commands to adopt it... not least because I didn't find a use for them myself. I'm curious: do you find them to be particularly valuable, or are you just exploring if they are useful? Lest the software become too bloated by options and confusing, I would be tempted to remove them rather than update them... but if they are very useful then I should probably resist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424744221
https://github.com/qupath/qupath/issues/223#issuecomment-424748214:428,Availability,error,error,428,"Oops, my mistake. That's what I get for always posting as I wake up!. I have found them useful in SLIC classifications to automatically detect different types of tissue... and that is about it. Which ones are useful and why, I don't really know as I tend to feed them into classifiers and have not yet found a way to extract information from the classifier regarding which measurements were most useful. It was mostly trial and error based on what worked. Edit: The top discriminating features sounds like... a fantastic feature!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424748214
https://github.com/qupath/qupath/issues/223#issuecomment-424748214:136,Safety,detect,detect,136,"Oops, my mistake. That's what I get for always posting as I wake up!. I have found them useful in SLIC classifications to automatically detect different types of tissue... and that is about it. Which ones are useful and why, I don't really know as I tend to feed them into classifiers and have not yet found a way to extract information from the classifier regarding which measurements were most useful. It was mostly trial and error based on what worked. Edit: The top discriminating features sounds like... a fantastic feature!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424748214
https://github.com/qupath/qupath/issues/223#issuecomment-424771491:235,Availability,down,down,235,"Haha, I mean the ability to have access to a list! It has always been something I missed in more complex classifiers. . Thanks for the link, it has been a while since i used Weka, but I may give that a try the next time I want to trim down or adjust my input selection.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424771491
https://github.com/qupath/qupath/issues/223#issuecomment-424771491:33,Security,access,access,33,"Haha, I mean the ability to have access to a list! It has always been something I missed in more complex classifiers. . Thanks for the link, it has been a while since i used Weka, but I may give that a try the next time I want to trim down or adjust my input selection.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424771491
https://github.com/qupath/qupath/issues/223#issuecomment-424800236:417,Testability,test,test,417,"I see... well, upon reflection you _could_ do something like this, if you know the magnification you ought to have:; ```groovy; print 'Before: ' + getCurrentImageData().getServer().magnification; def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; print 'After: ' + getCurrentImageData().getServer().magnification; ```; Don't know if it's a good idea, but in my quick test it does enable the features to be calculated. You'd need to run it each time the image is opened / prior to calculating the features, because the value doesn't live long in the memory.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424800236
https://github.com/qupath/qupath/issues/223#issuecomment-424844216:507,Deployability,update,update,507,":) I'd like to advise against it, but I can't think of a sufficiently good reason why not... and I imagine the extra pixel-setting step is pretty time-consuming. So you might want to try something like this...; ```groovy; // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. // If you want to trigger the 'Image' tab on the left to update, try setting a property to something different (and perhaps back again); type = getCurrentImageData().getImageType(); setImageType(null); setImageType(type); ```; If this is performed at an early stage (before any measurements/analysis), I can't think of a reason why it would go wrong... although if you find one, please do let me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424844216
https://github.com/qupath/qupath/issues/223#issuecomment-424844216:688,Performance,perform,performed,688,":) I'd like to advise against it, but I can't think of a sufficiently good reason why not... and I imagine the extra pixel-setting step is pretty time-consuming. So you might want to try something like this...; ```groovy; // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. // If you want to trigger the 'Image' tab on the left to update, try setting a property to something different (and perhaps back again); type = getCurrentImageData().getImageType(); setImageType(null); setImageType(type); ```; If this is performed at an early stage (before any measurements/analysis), I can't think of a reason why it would go wrong... although if you find one, please do let me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424844216
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:302,Availability,error,error,302,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1742,Availability,Error,Error,1742,"B"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItems",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1810,Availability,ERROR,ERROR,1810,"ground"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.cont",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:5462,Availability,ERROR,ERROR,5462,un(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.Exp,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8924,Availability,ERROR,ERROR,8924,n(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at or,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8931,Availability,Error,Error,8931,n(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at or,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:12059,Availability,error,error,12059,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:46,Deployability,update,updates,46,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2624,Deployability,update,updateDefaultSelection,2624,".0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.pr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2736,Deployability,update,updateItemsObserver,2736,:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.propertyChange(PathImageDetailsPanel.java:539); at java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:6086,Deployability,update,updateDefaultSelection,6086,.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.pr,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:6198,Deployability,update,updateItemsObserver,6198,t.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.propertyChange(PathImageDetailsPanel.java:539); at java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8945,Modifiability,plugin,plugin,8945,n(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at or,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:9124,Modifiability,plugin,plugins,9124,pl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:9215,Modifiability,plugin,plugins,9215,.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.s,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:9299,Modifiability,plugin,plugins,9299,ditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:9307,Modifiability,Plugin,PluginRunnerFX,9307,695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scriptin,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:9331,Modifiability,Plugin,PluginRunnerFX,9331,scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEdit,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:9370,Modifiability,plugin,plugins,9370,ipt(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11428,Modifiability,plugin,plugins,11428,"$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnno",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:5128,Performance,concurren,concurrent,5128,nStains$1.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:5204,Performance,concurren,concurrent,5204,e.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsO,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:5265,Performance,concurren,concurrent,5265,org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableVi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:5349,Performance,concurren,concurrent,5349,va:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scen,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8590,Performance,concurren,concurrent,8590,nStains$1.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8666,Performance,concurren,concurrent,8666,e.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallS,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8727,Performance,concurren,concurrent,8727,org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8811,Performance,concurren,concurrent,8811,va:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.gro,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8998,Performance,concurren,concurrent,8998,ineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEng,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:9062,Performance,concurren,concurrent,9062,roovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEng,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:10563,Performance,concurren,concurrent,10563,runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Exe,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:10639,Performance,concurren,concurrent,10639,e.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:10700,Performance,concurren,concurrent,10700,org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Exe,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:10784,Performance,concurren,concurrent,10784,va:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at ja,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11524,Performance,concurren,concurrent,11524,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11600,Performance,concurren,concurrent,11600,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11661,Performance,concurren,concurrent,11661,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11737,Performance,concurren,concurrent,11737,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11798,Performance,concurren,concurrent,11798,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11882,Performance,concurren,concurrent,11882,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:872,Safety,detect,detect,872,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1292,Safety,detect,detect,1292,"lowing error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1334,Safety,detect,detectionImageBrightfield,1334," size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11312,Safety,detect,detect,11312,"g.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11436,Safety,Detect,DetectionPluginTools,11436,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11457,Safety,Detect,DetectionRunnable,11457,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:11479,Safety,Detect,DetectionPluginTools,11479,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:12119,Safety,detect,detect,12119,"riptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:120); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); INFO: Processing complete in 4,20 seconds; INFO: Completed with error java.lang.NullPointerException; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2845,Security,access,access,2845,pplication.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.propertyChange(PathImageDetailsPanel.java:539); at java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.java:335); at java.beans.PropertyChangeSupport.firePropertyChange(PropertyChangeSupport.java:327); at java,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:4991,Security,access,access,4991,java:178); at qupath.lib.scripting.QP.setColorDeconvolutionStains(QP.java:438); at qupath.lib.scripting.QP$setColorDeconvolutionStains$1.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:6307,Security,access,access,6307,cutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.propertyChange(PathImageDetailsPanel.java:539); at java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.java:335); at java.beans.PropertyChangeSupport.firePropertyChange(PropertyChangeSupport.java:327); at java,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:8453,Security,access,access,8453,java:178); at qupath.lib.scripting.QP.setColorDeconvolutionStains(QP.java:438); at qupath.lib.scripting.QP$setColorDeconvolutionStains$1.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:206); at Script30.run(Script30.groovy:10); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: Error running plugin: java.lang.NullPointerException; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.scripting.QPEx.runPlugin(Q,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:10426,Security,access,access,10426,b.scripting.QPEx.runPlugin(QPEx.java:266); at qupath.lib.scripting.QPEx.runPlugin(QPEx.java:286); at qupath.lib.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:56); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:194); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:214); at Script30.run(Script30.groovy:12); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by null at qupath.lib.images.servers.BioFormatsImageServer.getTimePoint(BioFormatsImageServer.java:930); at qupath.imagej.images.servers.BufferedImagePlusServer.getTimePoint(BufferedImagePlusServer.java:173); at qupath.imagej.helpers.IJTools.calibrateImagePlus(IJTools.java:220); at qupath.imagej.images.servers.BufferedImagePlusServer.readImagePlusRegion(BufferedImagePlusServer.java:241); at qupath.imagej.detect.tissue.SimpleTissueDetection2$GlobalThresholder.runDetection(SimpleTissueDetection2.java:158); at qupath.lib.plugins.Detect,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:308,Testability,log,log,308,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:1748,Testability,log,log,1748,"B"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItems",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2520,Usability,clear,clearSelection,2520,"ns"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImage",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075
https://github.com/qupath/qupath/issues/223#issuecomment-494363347:99,Deployability,release,release,99,Closed due to lack of activity and at least some of the issue has been resolved :); Next milestone release should support setting pixel sizes for images in a project from within QuPath by double-clicking them under the 'Image' tab.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-494363347
https://github.com/qupath/qupath/issues/224#issuecomment-425106079:548,Deployability,toggle,toggle,548,"I haven't seen this problem - does it happen consistently or intermittently? If you restart QuPath and open the same image again, does the problem persist? Also, is the image on your local hard disk or on a network drive?. If you are able to share an image, then I can investigate some more - otherwise if I can't reproduce it I can only really look out for it in the future. In the meantime, for .ndpi it should be possible to open the image with either OpenSlide or Bio-Formats, and the settings described at the bottom of this page give ways to toggle Bio-Formats on/off for specific file extensions: https://github.com/qupath/qupath-bioformats-extension",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/224#issuecomment-425106079
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:673,Deployability,install,installation,673,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:798,Deployability,update,updates,798,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:198,Safety,detect,detections,198,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:217,Safety,detect,detections,217,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:240,Safety,detect,detections,240,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:403,Safety,detect,detection,403,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:560,Safety,detect,detection,560,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:614,Safety,detect,detections,614,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:708,Testability,test,test,708,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/225#issuecomment-427051030:234,Usability,clear,clear,234,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030
https://github.com/qupath/qupath/issues/226#issuecomment-426971226:230,Safety,detect,detection,230,"The darkish background seems to be causing QuPath to estimate the wrong image type; double-click where it says 'Fluorescence' in the left tab of your screenshot, and change this to something more appropriate. Then reopen the cell detection command and the correct options should appear. (There is some more explanation of this at the start of the new [video tutorials](https://petebankhead.github.io/qupath/2018/08/22/qupath-video-tutorials.html))",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/226#issuecomment-426971226
https://github.com/qupath/qupath/issues/227#issuecomment-428235577:102,Safety,detect,detection,102,"That is a tricky one. If your staining is DAB, have you tried _Analyze-> Cell Analysis->Cell+Membrane detection?_; Another option might be more of an area analysis. In other words, use QuPath to define areas (by SLICs/tiling) high in concentration of your membrane stain, then calculate the number of nuclei within those areas plus the average value of your membrane stain.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/227#issuecomment-428235577
https://github.com/qupath/qupath/issues/227#issuecomment-428253931:127,Safety,detect,detection,127,I want to get the percentage or quantify the DAB membrane staining cells. Could you please tell me how can I use cell+membrane detection tool?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/227#issuecomment-428253931
https://github.com/qupath/qupath/issues/228#issuecomment-430142461:182,Modifiability,refactor,refactoring,182,"I agree! I've got an experimental version of a polyline tool on some branch of my fork... I plan for it to be included in the upcoming beta once I finally finish some (fairly major) refactoring for Java 11. And recreate the toolbar icons (currently I'm repurposing the polygon tool icon to have a button to show). Although the case you describe may be a little more complex; the polyline currently doesn't have any 'thickness'. It could be expanded, but this would be in _both_ directions. This would be hard to use to draw right up to the tissue boundary, since then you'd need to steadily draw along the center of the to-be-expanded line, i.e. slightly _within_ in the boundary. I think that an easier option in such cases is still to annotate the entire tissue and expand only inwards, before creating a coarse annotation around the 'uninteresting' part of the tissue and subtracting it from the boundary 'ring' annotation previously created. The result should be the desired line, stretching right up to the tissue boundary.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430142461
https://github.com/qupath/qupath/issues/228#issuecomment-430146028:557,Deployability,upgrade,upgrade,557,"This is the approach I use now. And it works great. I guess that if you want the line or polyline to do the same then you would need to define the start and end of the line and say that (-) is always to the right and (+) is always to the left from the perspective of the line itself. However, you will loose the expansion in both direction unless a third option expand from line is added (might be useful anyway for cases when you want a ring around the outer border of an object). Perhaps I will try to approach this at some point in time. If I am able to upgrade my poor java skills....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430146028
https://github.com/qupath/qupath/issues/228#issuecomment-430150335:125,Availability,down,down,125,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335
https://github.com/qupath/qupath/issues/228#issuecomment-430150335:85,Deployability,update,update,85,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335
https://github.com/qupath/qupath/issues/228#issuecomment-430150335:203,Usability,clear,clear,203,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335
https://github.com/qupath/qupath/issues/228#issuecomment-430150335:449,Usability,clear,clear,449,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335
https://github.com/qupath/qupath/issues/228#issuecomment-430154093:123,Availability,down,down,123,"I we can define the start of the line, left and right could be defined from; the perspective of the starting point looking down the line towards the; end. Inner/outer will be confusing as this will change according to where; your object of interest is (unless there is some kind of way to manually; decide inner/outer). The latter approach seems interesting. However, I have problems envisioning; its. Perhaps it has to be tested. I has the potential to create a lot of; annotations fast. Den tir. 16. okt. 2018 kl. 10:38 skrev Pete <notifications@github.com>:. > Thinking about it some more... the polygon/polygon could be expanded, and; > then the *original* polygon/polyline could be subtracted from the result; > (this would require that it has some thickness; perhaps one pixel). This; > would result in multiple annotations being created - at least two (one for; > each side), but possibly more if the shape is self-intersecting. Then it; > becomes a matter of deleting the annotations that you didn't want.; >; > What do you think? Currently it's only an idea, I haven't tried; > implementing it...; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/228#issuecomment-430151424>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL9P1XkGW49Da7gop_J0ur51Mvddeks5ulZsGgaJpZM4Xdx7z>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430154093
https://github.com/qupath/qupath/issues/228#issuecomment-430154093:423,Testability,test,tested,423,"I we can define the start of the line, left and right could be defined from; the perspective of the starting point looking down the line towards the; end. Inner/outer will be confusing as this will change according to where; your object of interest is (unless there is some kind of way to manually; decide inner/outer). The latter approach seems interesting. However, I have problems envisioning; its. Perhaps it has to be tested. I has the potential to create a lot of; annotations fast. Den tir. 16. okt. 2018 kl. 10:38 skrev Pete <notifications@github.com>:. > Thinking about it some more... the polygon/polygon could be expanded, and; > then the *original* polygon/polyline could be subtracted from the result; > (this would require that it has some thickness; perhaps one pixel). This; > would result in multiple annotations being created - at least two (one for; > each side), but possibly more if the shape is self-intersecting. Then it; > becomes a matter of deleting the annotations that you didn't want.; >; > What do you think? Currently it's only an idea, I haven't tried; > implementing it...; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/228#issuecomment-430151424>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL9P1XkGW49Da7gop_J0ur51Mvddeks5ulZsGgaJpZM4Xdx7z>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430154093
https://github.com/qupath/qupath/issues/228#issuecomment-518552859:56,Deployability,release,releases,56,"Ok, so there's a polyline tool in the current milestone releases.; ![Line](https://user-images.githubusercontent.com/4690904/62520963-8cae1e00-b826-11e9-9e21-4cbc94065b33.jpg). I've updated the 'Expand annotations' command for v0.2.0-m4 as follows. Previously, expanding line/polyline annotations would expand in all directions - and 'remove interior' had no effect (since the line had no thickness):; ![Rounded](https://user-images.githubusercontent.com/4690904/62520803-38a33980-b826-11e9-946a-c3365e251bd2.jpg). Now, there is an option to set the 'line cap' to be round (as before), flat or square. Also, 'Remove interior' will remove an approximately 1-pixel thick line if requested.; ![Flat](https://user-images.githubusercontent.com/4690904/62521003-a9e2ec80-b826-11e9-81b8-a16db61769af.jpg). This is enough to make a separation. You can then use _Objects &rarr; Annotations &rarr; Split annotations_...; ![Split](https://user-images.githubusercontent.com/4690904/62521123-f1697880-b826-11e9-965e-12510c734579.jpg). ...which allows you to separate the inner/outer expansion regions.; ![After split](https://user-images.githubusercontent.com/4690904/62521078-d72f9a80-b826-11e9-8a1b-cc1293b44d60.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-518552859
https://github.com/qupath/qupath/issues/228#issuecomment-518552859:182,Deployability,update,updated,182,"Ok, so there's a polyline tool in the current milestone releases.; ![Line](https://user-images.githubusercontent.com/4690904/62520963-8cae1e00-b826-11e9-9e21-4cbc94065b33.jpg). I've updated the 'Expand annotations' command for v0.2.0-m4 as follows. Previously, expanding line/polyline annotations would expand in all directions - and 'remove interior' had no effect (since the line had no thickness):; ![Rounded](https://user-images.githubusercontent.com/4690904/62520803-38a33980-b826-11e9-946a-c3365e251bd2.jpg). Now, there is an option to set the 'line cap' to be round (as before), flat or square. Also, 'Remove interior' will remove an approximately 1-pixel thick line if requested.; ![Flat](https://user-images.githubusercontent.com/4690904/62521003-a9e2ec80-b826-11e9-81b8-a16db61769af.jpg). This is enough to make a separation. You can then use _Objects &rarr; Annotations &rarr; Split annotations_...; ![Split](https://user-images.githubusercontent.com/4690904/62521123-f1697880-b826-11e9-965e-12510c734579.jpg). ...which allows you to separate the inner/outer expansion regions.; ![After split](https://user-images.githubusercontent.com/4690904/62521078-d72f9a80-b826-11e9-8a1b-cc1293b44d60.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-518552859
https://github.com/qupath/qupath/issues/228#issuecomment-518553184:29,Deployability,release,released,29,"Should clarify that m4 isn't released yet, but the change is in the last commit linked to above.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-518553184
https://github.com/qupath/qupath/issues/229#issuecomment-430237196:133,Energy Efficiency,green,green,133,Hi; From your picture it seems to me that you:; - have detected cells in an elipse; - started making a classifier (the small red and green circles); - are satisfied with the classifier (the cells are classfied correctly). It seems that you already got some measurements registered in the oval like total number of stromal and tumor cells and probably also number of cells per mm^2. What additional measurements are you after? . - Cell measurements?; - Measurements specific to certain classified cells?; - Measurements specific to certain areas?. Much is possible. You probably have to do some scripting if you want something tailored to your specific needs. I think you might find more answers in the [qupath google group](https://groups.google.com/forum/#!forum/qupath-users),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430237196
https://github.com/qupath/qupath/issues/229#issuecomment-430237196:55,Safety,detect,detected,55,Hi; From your picture it seems to me that you:; - have detected cells in an elipse; - started making a classifier (the small red and green circles); - are satisfied with the classifier (the cells are classfied correctly). It seems that you already got some measurements registered in the oval like total number of stromal and tumor cells and probably also number of cells per mm^2. What additional measurements are you after? . - Cell measurements?; - Measurements specific to certain classified cells?; - Measurements specific to certain areas?. Much is possible. You probably have to do some scripting if you want something tailored to your specific needs. I think you might find more answers in the [qupath google group](https://groups.google.com/forum/#!forum/qupath-users),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430237196
https://github.com/qupath/qupath/issues/229#issuecomment-430244183:1674,Performance,perform,perform,1674,"as a script that doesn't follow the borders you drew quite so tightly, but will classify area by the nearest cell, seen here: https://gist.github.com/petebankhead/e23393125fa57fe91c67f5003cbea3e2. You may be looking for something more like superpixel segmentation and classification, however, if you want to create regions that follow the general tissue outline more closely. I have used this several times to create annotations that separate two different types of tissue, either based on texture or coloration. It can be a bit tricky, however, and requires a bit of troubleshooting and decisions on what measurements to apply to the SLICs. Based on your image, the difference is fairly clear-cut and you might be able to get away with something as simple as OD Sum.; The specific tool is _Analyze->Region Identification->Tiles and superpixels_ and then either DoG or SLIC Superpixel segmentation. I tend to prefer SLICs for tissue segementation. Note that this WILL remove all detections (your cells, in this case) and should generally be done before any cell creation in a script. Essentially it makes a jigsaw puzzle of the selected annotation based on the flow of the colors in the tissue. ; ![image](https://user-images.githubusercontent.com/23145209/47020475-4b6d4600-d10e-11e8-8ec7-fccdd85860c6.png). You can then apply color measurements to each of those tiles and then classify them. ; ![image](https://user-images.githubusercontent.com/23145209/47020737-e1a16c00-d10e-11e8-868c-9d1255766fce.png). Finally you could merge all classified SLICs (which are detections) back into annotations using the _Tile classifications to annotations_ in the same menu, and perform cell detection within the new annotations. These annotations will have your area measurements as normal. If you want to apply a sum of all Tumor etc areas to the parent annotation, that will require another script. I am pretty sure this is discussed in more detail on the forums somewhere including scripts. *Runs and hides*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430244183
https://github.com/qupath/qupath/issues/229#issuecomment-430244183:985,Safety,detect,detections,985,"as a script that doesn't follow the borders you drew quite so tightly, but will classify area by the nearest cell, seen here: https://gist.github.com/petebankhead/e23393125fa57fe91c67f5003cbea3e2. You may be looking for something more like superpixel segmentation and classification, however, if you want to create regions that follow the general tissue outline more closely. I have used this several times to create annotations that separate two different types of tissue, either based on texture or coloration. It can be a bit tricky, however, and requires a bit of troubleshooting and decisions on what measurements to apply to the SLICs. Based on your image, the difference is fairly clear-cut and you might be able to get away with something as simple as OD Sum.; The specific tool is _Analyze->Region Identification->Tiles and superpixels_ and then either DoG or SLIC Superpixel segmentation. I tend to prefer SLICs for tissue segementation. Note that this WILL remove all detections (your cells, in this case) and should generally be done before any cell creation in a script. Essentially it makes a jigsaw puzzle of the selected annotation based on the flow of the colors in the tissue. ; ![image](https://user-images.githubusercontent.com/23145209/47020475-4b6d4600-d10e-11e8-8ec7-fccdd85860c6.png). You can then apply color measurements to each of those tiles and then classify them. ; ![image](https://user-images.githubusercontent.com/23145209/47020737-e1a16c00-d10e-11e8-868c-9d1255766fce.png). Finally you could merge all classified SLICs (which are detections) back into annotations using the _Tile classifications to annotations_ in the same menu, and perform cell detection within the new annotations. These annotations will have your area measurements as normal. If you want to apply a sum of all Tumor etc areas to the parent annotation, that will require another script. I am pretty sure this is discussed in more detail on the forums somewhere including scripts. *Runs and hides*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430244183
https://github.com/qupath/qupath/issues/229#issuecomment-430244183:1570,Safety,detect,detections,1570,"as a script that doesn't follow the borders you drew quite so tightly, but will classify area by the nearest cell, seen here: https://gist.github.com/petebankhead/e23393125fa57fe91c67f5003cbea3e2. You may be looking for something more like superpixel segmentation and classification, however, if you want to create regions that follow the general tissue outline more closely. I have used this several times to create annotations that separate two different types of tissue, either based on texture or coloration. It can be a bit tricky, however, and requires a bit of troubleshooting and decisions on what measurements to apply to the SLICs. Based on your image, the difference is fairly clear-cut and you might be able to get away with something as simple as OD Sum.; The specific tool is _Analyze->Region Identification->Tiles and superpixels_ and then either DoG or SLIC Superpixel segmentation. I tend to prefer SLICs for tissue segementation. Note that this WILL remove all detections (your cells, in this case) and should generally be done before any cell creation in a script. Essentially it makes a jigsaw puzzle of the selected annotation based on the flow of the colors in the tissue. ; ![image](https://user-images.githubusercontent.com/23145209/47020475-4b6d4600-d10e-11e8-8ec7-fccdd85860c6.png). You can then apply color measurements to each of those tiles and then classify them. ; ![image](https://user-images.githubusercontent.com/23145209/47020737-e1a16c00-d10e-11e8-868c-9d1255766fce.png). Finally you could merge all classified SLICs (which are detections) back into annotations using the _Tile classifications to annotations_ in the same menu, and perform cell detection within the new annotations. These annotations will have your area measurements as normal. If you want to apply a sum of all Tumor etc areas to the parent annotation, that will require another script. I am pretty sure this is discussed in more detail on the forums somewhere including scripts. *Runs and hides*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430244183
https://github.com/qupath/qupath/issues/229#issuecomment-430244183:1687,Safety,detect,detection,1687,"as a script that doesn't follow the borders you drew quite so tightly, but will classify area by the nearest cell, seen here: https://gist.github.com/petebankhead/e23393125fa57fe91c67f5003cbea3e2. You may be looking for something more like superpixel segmentation and classification, however, if you want to create regions that follow the general tissue outline more closely. I have used this several times to create annotations that separate two different types of tissue, either based on texture or coloration. It can be a bit tricky, however, and requires a bit of troubleshooting and decisions on what measurements to apply to the SLICs. Based on your image, the difference is fairly clear-cut and you might be able to get away with something as simple as OD Sum.; The specific tool is _Analyze->Region Identification->Tiles and superpixels_ and then either DoG or SLIC Superpixel segmentation. I tend to prefer SLICs for tissue segementation. Note that this WILL remove all detections (your cells, in this case) and should generally be done before any cell creation in a script. Essentially it makes a jigsaw puzzle of the selected annotation based on the flow of the colors in the tissue. ; ![image](https://user-images.githubusercontent.com/23145209/47020475-4b6d4600-d10e-11e8-8ec7-fccdd85860c6.png). You can then apply color measurements to each of those tiles and then classify them. ; ![image](https://user-images.githubusercontent.com/23145209/47020737-e1a16c00-d10e-11e8-868c-9d1255766fce.png). Finally you could merge all classified SLICs (which are detections) back into annotations using the _Tile classifications to annotations_ in the same menu, and perform cell detection within the new annotations. These annotations will have your area measurements as normal. If you want to apply a sum of all Tumor etc areas to the parent annotation, that will require another script. I am pretty sure this is discussed in more detail on the forums somewhere including scripts. *Runs and hides*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430244183
https://github.com/qupath/qupath/issues/229#issuecomment-430244183:694,Usability,clear,clear-cut,694,"Pete has a script that doesn't follow the borders you drew quite so tightly, but will classify area by the nearest cell, seen here: https://gist.github.com/petebankhead/e23393125fa57fe91c67f5003cbea3e2. You may be looking for something more like superpixel segmentation and classification, however, if you want to create regions that follow the general tissue outline more closely. I have used this several times to create annotations that separate two different types of tissue, either based on texture or coloration. It can be a bit tricky, however, and requires a bit of troubleshooting and decisions on what measurements to apply to the SLICs. Based on your image, the difference is fairly clear-cut and you might be able to get away with something as simple as OD Sum.; The specific tool is _Analyze->Region Identification->Tiles and superpixels_ and then either DoG or SLIC Superpixel segmentation. I tend to prefer SLICs for tissue segementation. Note that this WILL remove all detections (your cells, in this case) and should generally be done before any cell creation in a script. Essentially it makes a jigsaw puzzle of the selected annotation based on the flow of the colors in the tissue. ; ![image](https://user-images.githubusercontent.com/23145209/47020475-4b6d4600-d10e-11e8-8ec7-fccdd85860c6.png). You can then apply color measurements to each of those tiles and then classify them. ; ![image](https://user-images.githubusercontent.com/23145209/47020737-e1a16c00-d10e-11e8-868c-9d1255766fce.png). Finally you could merge all classified SLICs (which are detections) back into annotations using the _Tile classifications to annotations_ in the same menu, and perform cell detection within the new annotations. These annotations will have your area measurements as normal. If you want to apply a sum of all Tumor etc areas to the parent annotation, that will require another script. I am pretty sure this is discussed in more detail on the forums somewhere including scripts. *Runs and h",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430244183
https://github.com/qupath/qupath/issues/229#issuecomment-430244183:756,Usability,simpl,simple,756,"Pete has a script that doesn't follow the borders you drew quite so tightly, but will classify area by the nearest cell, seen here: https://gist.github.com/petebankhead/e23393125fa57fe91c67f5003cbea3e2. You may be looking for something more like superpixel segmentation and classification, however, if you want to create regions that follow the general tissue outline more closely. I have used this several times to create annotations that separate two different types of tissue, either based on texture or coloration. It can be a bit tricky, however, and requires a bit of troubleshooting and decisions on what measurements to apply to the SLICs. Based on your image, the difference is fairly clear-cut and you might be able to get away with something as simple as OD Sum.; The specific tool is _Analyze->Region Identification->Tiles and superpixels_ and then either DoG or SLIC Superpixel segmentation. I tend to prefer SLICs for tissue segementation. Note that this WILL remove all detections (your cells, in this case) and should generally be done before any cell creation in a script. Essentially it makes a jigsaw puzzle of the selected annotation based on the flow of the colors in the tissue. ; ![image](https://user-images.githubusercontent.com/23145209/47020475-4b6d4600-d10e-11e8-8ec7-fccdd85860c6.png). You can then apply color measurements to each of those tiles and then classify them. ; ![image](https://user-images.githubusercontent.com/23145209/47020737-e1a16c00-d10e-11e8-868c-9d1255766fce.png). Finally you could merge all classified SLICs (which are detections) back into annotations using the _Tile classifications to annotations_ in the same menu, and perform cell detection within the new annotations. These annotations will have your area measurements as normal. If you want to apply a sum of all Tumor etc areas to the parent annotation, that will require another script. I am pretty sure this is discussed in more detail on the forums somewhere including scripts. *Runs and h",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430244183
https://github.com/qupath/qupath/issues/229#issuecomment-430299780:63,Safety,detect,detection,63,"Does this help? The script exports annotation measurements and detection measurements into folders inside the project - as .txt file only. They can be imported into MS Excel. ; By Excel Macro you can even automate the .txt import, if you have many slides. . If you need to fuse measurements for many slides, there is also a combine script from Pete. ; The following script works only within projects!. //Script to save annotations results inside a results folder inside the project folder: . import qupath.lib.scripting.QPEx; // Create the output directory, if required; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""annotation measurements""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(); def path2 = buildFilePath(PROJECT_BASE_DIR, ""annotation measurements"", name); saveAnnotationMeasurements(path2 + "".txt""); print('annotation results saved in results folder'). def path3 = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""detection measurements""); QPEx.mkdirs(path3). def path4 = buildFilePath(PROJECT_BASE_DIR, ""detection measurements"", name); saveDetectionMeasurements(path4 + "".txt""); print('detection results saved in results folder')",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430299780
https://github.com/qupath/qupath/issues/229#issuecomment-430299780:1098,Safety,detect,detection,1098,"Does this help? The script exports annotation measurements and detection measurements into folders inside the project - as .txt file only. They can be imported into MS Excel. ; By Excel Macro you can even automate the .txt import, if you have many slides. . If you need to fuse measurements for many slides, there is also a combine script from Pete. ; The following script works only within projects!. //Script to save annotations results inside a results folder inside the project folder: . import qupath.lib.scripting.QPEx; // Create the output directory, if required; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""annotation measurements""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(); def path2 = buildFilePath(PROJECT_BASE_DIR, ""annotation measurements"", name); saveAnnotationMeasurements(path2 + "".txt""); print('annotation results saved in results folder'). def path3 = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""detection measurements""); QPEx.mkdirs(path3). def path4 = buildFilePath(PROJECT_BASE_DIR, ""detection measurements"", name); saveDetectionMeasurements(path4 + "".txt""); print('detection results saved in results folder')",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430299780
https://github.com/qupath/qupath/issues/229#issuecomment-430299780:1189,Safety,detect,detection,1189,"Does this help? The script exports annotation measurements and detection measurements into folders inside the project - as .txt file only. They can be imported into MS Excel. ; By Excel Macro you can even automate the .txt import, if you have many slides. . If you need to fuse measurements for many slides, there is also a combine script from Pete. ; The following script works only within projects!. //Script to save annotations results inside a results folder inside the project folder: . import qupath.lib.scripting.QPEx; // Create the output directory, if required; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""annotation measurements""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(); def path2 = buildFilePath(PROJECT_BASE_DIR, ""annotation measurements"", name); saveAnnotationMeasurements(path2 + "".txt""); print('annotation results saved in results folder'). def path3 = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""detection measurements""); QPEx.mkdirs(path3). def path4 = buildFilePath(PROJECT_BASE_DIR, ""detection measurements"", name); saveDetectionMeasurements(path4 + "".txt""); print('detection results saved in results folder')",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430299780
https://github.com/qupath/qupath/issues/229#issuecomment-430299780:1271,Safety,detect,detection,1271,"Does this help? The script exports annotation measurements and detection measurements into folders inside the project - as .txt file only. They can be imported into MS Excel. ; By Excel Macro you can even automate the .txt import, if you have many slides. . If you need to fuse measurements for many slides, there is also a combine script from Pete. ; The following script works only within projects!. //Script to save annotations results inside a results folder inside the project folder: . import qupath.lib.scripting.QPEx; // Create the output directory, if required; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""annotation measurements""); QPEx.mkdirs(path). // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(); def path2 = buildFilePath(PROJECT_BASE_DIR, ""annotation measurements"", name); saveAnnotationMeasurements(path2 + "".txt""); print('annotation results saved in results folder'). def path3 = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""detection measurements""); QPEx.mkdirs(path3). def path4 = buildFilePath(PROJECT_BASE_DIR, ""detection measurements"", name); saveDetectionMeasurements(path4 + "".txt""); print('detection results saved in results folder')",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430299780
https://github.com/qupath/qupath/issues/230#issuecomment-431095054:451,Deployability,release,release,451,"For now I'd suggest trying to link up with the source code directly through IntelliJ: https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ. I was finally convinced of the value of Javadocs recently, and also discovered that those for QuPath v0.1.2 didn't compile nicely due to illegal characters and various other issues... I think I've resolved most of these problems and plan to have them working and online somewhere for the next release, once the necessary refactoring for Java 11 is completed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431095054
https://github.com/qupath/qupath/issues/230#issuecomment-431095054:479,Modifiability,refactor,refactoring,479,"For now I'd suggest trying to link up with the source code directly through IntelliJ: https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ. I was finally convinced of the value of Javadocs recently, and also discovered that those for QuPath v0.1.2 didn't compile nicely due to illegal characters and various other issues... I think I've resolved most of these problems and plan to have them working and online somewhere for the next release, once the necessary refactoring for Java 11 is completed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431095054
https://github.com/qupath/qupath/issues/230#issuecomment-431349486:663,Deployability,release,release,663,"Hi Pete,. Just as on twitter. Let me know if I can help with Javadocs or creating; tutorials on Groovy for Qupath. On Thu, Oct 18, 2018 at 6:29 PM Pete <notifications@github.com> wrote:. > For now I'd suggest trying to link up with the source code directly; > through IntelliJ:; > https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ; >; > I was finally convinced of the value of Javadocs recently, and also; > discovered that those for QuPath v0.1.2 didn't compile nicely due to; > illegal characters and various other issues... I think I've resolved most; > of these problems and plan to have them working and online somewhere for; > the next release, once the necessary refactoring for Java 11 is completed.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/230#issuecomment-431095054>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AqMBwxGT_h-Sk7VfVcCIJT9OMzy4USR9ks5umLqDgaJpZM4XtyUr>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431349486
https://github.com/qupath/qupath/issues/230#issuecomment-431349486:691,Modifiability,refactor,refactoring,691,"Hi Pete,. Just as on twitter. Let me know if I can help with Javadocs or creating; tutorials on Groovy for Qupath. On Thu, Oct 18, 2018 at 6:29 PM Pete <notifications@github.com> wrote:. > For now I'd suggest trying to link up with the source code directly; > through IntelliJ:; > https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ; >; > I was finally convinced of the value of Javadocs recently, and also; > discovered that those for QuPath v0.1.2 didn't compile nicely due to; > illegal characters and various other issues... I think I've resolved most; > of these problems and plan to have them working and online somewhere for; > the next release, once the necessary refactoring for Java 11 is completed.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/230#issuecomment-431095054>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AqMBwxGT_h-Sk7VfVcCIJT9OMzy4USR9ks5umLqDgaJpZM4XtyUr>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431349486
https://github.com/qupath/qupath/issues/231#issuecomment-431117318:479,Performance,perform,perform,479,"For the nuclei, I would recommend starting a thread on the forum where you can post some pictures, that sounds like more of a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431117318
https://github.com/qupath/qupath/issues/231#issuecomment-431117318:501,Safety,detect,detection,501,"For the nuclei, I would recommend starting a thread on the forum where you can post some pictures, that sounds like more of a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431117318
https://github.com/qupath/qupath/issues/231#issuecomment-431261059:138,Performance,optimiz,optimizing,138,"In the second video tutorial I talk about different cell detection parameters, and the impact they have on detection - this may help with optimizing the detection a bit further: https://petebankhead.github.io/qupath/2018/08/22/qupath-video-tutorials.html. It's hard to judge without seeing an example image, but it's quite possible that QuPath's generic cell detection isn't accurate enough for your application. In this case, it might require a custom detection method (e.g. with an ImageJ macro or script) to get the results you want, although that may involve a considerable amount of work and image processing. I'd definitely recommend exploring what can be achieved by adjusting the parameters first. For more information about setting cells as positive/negative (regardless of cell type), see https://petebankhead.github.io/qupath/tips/2018/03/22/setting-positive.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431261059
https://github.com/qupath/qupath/issues/231#issuecomment-431261059:57,Safety,detect,detection,57,"In the second video tutorial I talk about different cell detection parameters, and the impact they have on detection - this may help with optimizing the detection a bit further: https://petebankhead.github.io/qupath/2018/08/22/qupath-video-tutorials.html. It's hard to judge without seeing an example image, but it's quite possible that QuPath's generic cell detection isn't accurate enough for your application. In this case, it might require a custom detection method (e.g. with an ImageJ macro or script) to get the results you want, although that may involve a considerable amount of work and image processing. I'd definitely recommend exploring what can be achieved by adjusting the parameters first. For more information about setting cells as positive/negative (regardless of cell type), see https://petebankhead.github.io/qupath/tips/2018/03/22/setting-positive.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431261059
https://github.com/qupath/qupath/issues/231#issuecomment-431261059:107,Safety,detect,detection,107,"In the second video tutorial I talk about different cell detection parameters, and the impact they have on detection - this may help with optimizing the detection a bit further: https://petebankhead.github.io/qupath/2018/08/22/qupath-video-tutorials.html. It's hard to judge without seeing an example image, but it's quite possible that QuPath's generic cell detection isn't accurate enough for your application. In this case, it might require a custom detection method (e.g. with an ImageJ macro or script) to get the results you want, although that may involve a considerable amount of work and image processing. I'd definitely recommend exploring what can be achieved by adjusting the parameters first. For more information about setting cells as positive/negative (regardless of cell type), see https://petebankhead.github.io/qupath/tips/2018/03/22/setting-positive.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431261059
https://github.com/qupath/qupath/issues/231#issuecomment-431261059:153,Safety,detect,detection,153,"In the second video tutorial I talk about different cell detection parameters, and the impact they have on detection - this may help with optimizing the detection a bit further: https://petebankhead.github.io/qupath/2018/08/22/qupath-video-tutorials.html. It's hard to judge without seeing an example image, but it's quite possible that QuPath's generic cell detection isn't accurate enough for your application. In this case, it might require a custom detection method (e.g. with an ImageJ macro or script) to get the results you want, although that may involve a considerable amount of work and image processing. I'd definitely recommend exploring what can be achieved by adjusting the parameters first. For more information about setting cells as positive/negative (regardless of cell type), see https://petebankhead.github.io/qupath/tips/2018/03/22/setting-positive.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431261059
https://github.com/qupath/qupath/issues/231#issuecomment-431261059:359,Safety,detect,detection,359,"In the second video tutorial I talk about different cell detection parameters, and the impact they have on detection - this may help with optimizing the detection a bit further: https://petebankhead.github.io/qupath/2018/08/22/qupath-video-tutorials.html. It's hard to judge without seeing an example image, but it's quite possible that QuPath's generic cell detection isn't accurate enough for your application. In this case, it might require a custom detection method (e.g. with an ImageJ macro or script) to get the results you want, although that may involve a considerable amount of work and image processing. I'd definitely recommend exploring what can be achieved by adjusting the parameters first. For more information about setting cells as positive/negative (regardless of cell type), see https://petebankhead.github.io/qupath/tips/2018/03/22/setting-positive.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431261059
https://github.com/qupath/qupath/issues/231#issuecomment-431261059:453,Safety,detect,detection,453,"In the second video tutorial I talk about different cell detection parameters, and the impact they have on detection - this may help with optimizing the detection a bit further: https://petebankhead.github.io/qupath/2018/08/22/qupath-video-tutorials.html. It's hard to judge without seeing an example image, but it's quite possible that QuPath's generic cell detection isn't accurate enough for your application. In this case, it might require a custom detection method (e.g. with an ImageJ macro or script) to get the results you want, although that may involve a considerable amount of work and image processing. I'd definitely recommend exploring what can be achieved by adjusting the parameters first. For more information about setting cells as positive/negative (regardless of cell type), see https://petebankhead.github.io/qupath/tips/2018/03/22/setting-positive.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431261059
https://github.com/qupath/qupath/issues/231#issuecomment-431292156:1156,Performance,perform,perform,1156,"is that it makes the sub-class “Tumour: Positive” but not “Stroma: Positive” and I can’t understand how to create this. Many tanks again, I’ll work on the nuclei shape more extensively later on. Lucia. From: Svidro <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Thursday, 18 October 2018 at 19:40; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Montorsi, Lucia"" <lucia.montorsi@kcl.ac.uk>, Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] Elongated nuclei not correctly detected (#231). For the nuclei, I would recommend starting a thread on the forum where you can post some pictures, that sounds like more of a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fwiki%2FObject-classifications&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=UQryuEzaf5zSNRtDGv8hrkp%2FfCUaV5EV%2FABLyh8vxoY%3D&reserved=0>. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://emea01.safelin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431292156
https://github.com/qupath/qupath/issues/231#issuecomment-431292156:660,Safety,detect,detected,660,"Hi Svidro,. Many thanks for the help. I think derived classes should work fine with me. I have trained a classifier and the problem is that it makes the sub-class “Tumour: Positive” but not “Stroma: Positive” and I can’t understand how to create this. Many tanks again, I’ll work on the nuclei shape more extensively later on. Lucia. From: Svidro <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Thursday, 18 October 2018 at 19:40; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Montorsi, Lucia"" <lucia.montorsi@kcl.ac.uk>, Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] Elongated nuclei not correctly detected (#231). For the nuclei, I would recommend starting a thread on the forum where you can post some pictures, that sounds like more of a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fwiki%2FObject-classifications&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=UQryuEzaf5zSNRtDGv8hrkp%2FfCUaV5EV%2FABLyh8vxoY%3D&reserved=0>. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431292156
https://github.com/qupath/qupath/issues/231#issuecomment-431292156:1178,Safety,detect,detection,1178,"is that it makes the sub-class “Tumour: Positive” but not “Stroma: Positive” and I can’t understand how to create this. Many tanks again, I’ll work on the nuclei shape more extensively later on. Lucia. From: Svidro <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Thursday, 18 October 2018 at 19:40; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Montorsi, Lucia"" <lucia.montorsi@kcl.ac.uk>, Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] Elongated nuclei not correctly detected (#231). For the nuclei, I would recommend starting a thread on the forum where you can post some pictures, that sounds like more of a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fwiki%2FObject-classifications&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=UQryuEzaf5zSNRtDGv8hrkp%2FfCUaV5EV%2FABLyh8vxoY%3D&reserved=0>. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://emea01.safelin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431292156
https://github.com/qupath/qupath/issues/231#issuecomment-431292156:1502,Safety,safe,safelinks,1502,".com>; Cc: ""Montorsi, Lucia"" <lucia.montorsi@kcl.ac.uk>, Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] Elongated nuclei not correctly detected (#231). For the nuclei, I would recommend starting a thread on the forum where you can post some pictures, that sounds like more of a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fwiki%2FObject-classifications&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=UQryuEzaf5zSNRtDGv8hrkp%2FfCUaV5EV%2FABLyh8vxoY%3D&reserved=0>. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F231%23issuecomment-431117318&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=f0CtUFa8ECpcchyI4Q7%2BY8PwuygiWZKq9wwPdVmoZKo%3D&reserved=0>, or mute the thread<https://emea01.safelinks.protection.outlook.com/?url=https",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431292156
https://github.com/qupath/qupath/issues/231#issuecomment-431292156:2125,Safety,safe,safelinks,2125," a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fwiki%2FObject-classifications&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=UQryuEzaf5zSNRtDGv8hrkp%2FfCUaV5EV%2FABLyh8vxoY%3D&reserved=0>. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F231%23issuecomment-431117318&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=f0CtUFa8ECpcchyI4Q7%2BY8PwuygiWZKq9wwPdVmoZKo%3D&reserved=0>, or mute the thread<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAlLGAJDTdTi-Ix7yRlQnu_6NIcX4uIMjks5umMsLgaJpZM4XuQ5V&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=DouOAad6wA%2FpgEMUgYt2wSQKeQqOGqeqfsaR4L6Naps%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431292156
https://github.com/qupath/qupath/issues/231#issuecomment-431292156:2464,Safety,safe,safelinks,2464," a image analysis problem. 20X might also be challenging with truly thin, elongated nuclei. Even more challenging if the Hamamatsu defaults to saving with JPEG compression (bad for analysis, great for file size). You can both classify regions and cellular populations, so you can subdivide your sample into ""tumor"" and ""stroma"" annotations first, and then perform positive cell detection within each of those (or however many classifications you want). Another option is using derived classes, so that you would first classify by tumor and stroma, then classify the cells as positive or negative within those classifications: https://github.com/qupath/qupath/wiki/Object-classifications<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fwiki%2FObject-classifications&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=UQryuEzaf5zSNRtDGv8hrkp%2FfCUaV5EV%2FABLyh8vxoY%3D&reserved=0>. Either way, you can then ignore the stromal positive cells in the data processing (merge populations) however you want, or create a step that re-classifies any Stroma-positive to Stroma-negative, etc. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F231%23issuecomment-431117318&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=f0CtUFa8ECpcchyI4Q7%2BY8PwuygiWZKq9wwPdVmoZKo%3D&reserved=0>, or mute the thread<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAlLGAJDTdTi-Ix7yRlQnu_6NIcX4uIMjks5umMsLgaJpZM4XuQ5V&data=01%7C01%7Clucia.montorsi%40kcl.ac.uk%7Cc0fb04b4d26e44a6d0fa08d63529246a%7C8370cf1416f34c16b83c724071654356%7C0&sdata=DouOAad6wA%2FpgEMUgYt2wSQKeQqOGqeqfsaR4L6Naps%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/231#issuecomment-431292156
https://github.com/qupath/qupath/issues/232#issuecomment-431572591:31,Availability,avail,available,31,"Have you set qupath to use the available ram?. Den lør. 20. okt. 2018, 13:09 skrev simonesteffens <notifications@github.com; >:. > Hey Guys,; >; > could an image or annotation be to large for any analysis/computation?; > Because I tried to calculate my images on different computers but all of; > them stopped around 80% of the calculation.; >; > I talked to some IT-experts but they told me that these computer power; > (RAM, Processor unit etc.) should able to handle that.; >; > Anyone had that problem before?; >; > Greetings and thanks a lot.; > Simone; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/232>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL5LW98a8f0kSlN7mcHQxVGhUybwrks5umwRigaJpZM4Xx3eP>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/232#issuecomment-431572591
https://github.com/qupath/qupath/issues/232#issuecomment-431572591:412,Energy Efficiency,power,power,412,"Have you set qupath to use the available ram?. Den lør. 20. okt. 2018, 13:09 skrev simonesteffens <notifications@github.com; >:. > Hey Guys,; >; > could an image or annotation be to large for any analysis/computation?; > Because I tried to calculate my images on different computers but all of; > them stopped around 80% of the calculation.; >; > I talked to some IT-experts but they told me that these computer power; > (RAM, Processor unit etc.) should able to handle that.; >; > Anyone had that problem before?; >; > Greetings and thanks a lot.; > Simone; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/232>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL5LW98a8f0kSlN7mcHQxVGhUybwrks5umwRigaJpZM4Xx3eP>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/232#issuecomment-431572591
https://github.com/qupath/qupath/issues/233#issuecomment-431887783:227,Availability,mask,masks,227,"It's definitely possible, as long as each annotation is of some manageable size (which it is here). A couple of blog posts are relevant:; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/07/script-extracting-image-regions-to-imagej.html. For the first one, you can remove the `ImageIO.write(imgMask, 'PNG', fileMask)` bit if you don't need a binary image (which wouldn't be very meaningful here...). For the second you'd need to uncomment the `//IJ.save(imp, '/path/to/save.tif')` part, choose a sensible output name, and avoid showing the image through ImageJ. It should be possible to _Run &rarr; Run for project_ in both cases, so long as your image files all have distinct names. A recent script from Sara might help too: https://groups.google.com/d/msg/qupath-users/aHcikTZF9HE/dkcn0BoFBwAJ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/233#issuecomment-431887783
https://github.com/qupath/qupath/issues/233#issuecomment-431887783:632,Safety,avoid,avoid,632,"It's definitely possible, as long as each annotation is of some manageable size (which it is here). A couple of blog posts are relevant:; * https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html; * https://petebankhead.github.io/qupath/scripting/2018/03/07/script-extracting-image-regions-to-imagej.html. For the first one, you can remove the `ImageIO.write(imgMask, 'PNG', fileMask)` bit if you don't need a binary image (which wouldn't be very meaningful here...). For the second you'd need to uncomment the `//IJ.save(imp, '/path/to/save.tif')` part, choose a sensible output name, and avoid showing the image through ImageJ. It should be possible to _Run &rarr; Run for project_ in both cases, so long as your image files all have distinct names. A recent script from Sara might help too: https://groups.google.com/d/msg/qupath-users/aHcikTZF9HE/dkcn0BoFBwAJ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/233#issuecomment-431887783
https://github.com/qupath/qupath/issues/234#issuecomment-432762268:39,Safety,detect,detections,39,"This is a very shoddy way of doing the detections per annotation, and is written for version 1.2 where the default names might not be unique. 1.3 could simply use the annotation name instead of incremental numbers. If the annotations were all uniquely (manually) named, that could potentially be used for the file name.; https://gist.github.com/Svidro/5e4c29630e8d2ef36988184987d1028f#file-export-detections-per-annotation-groovy. Note that this is very slow and poorly written :) It would be much more elegant to write out the detection measurements that had already been created by using getChildObjects... but this was something I could easily do!. Good luck and let me know if you have any questions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/234#issuecomment-432762268
https://github.com/qupath/qupath/issues/234#issuecomment-432762268:397,Safety,detect,detections-per-annotation-groovy,397,"This is a very shoddy way of doing the detections per annotation, and is written for version 1.2 where the default names might not be unique. 1.3 could simply use the annotation name instead of incremental numbers. If the annotations were all uniquely (manually) named, that could potentially be used for the file name.; https://gist.github.com/Svidro/5e4c29630e8d2ef36988184987d1028f#file-export-detections-per-annotation-groovy. Note that this is very slow and poorly written :) It would be much more elegant to write out the detection measurements that had already been created by using getChildObjects... but this was something I could easily do!. Good luck and let me know if you have any questions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/234#issuecomment-432762268
https://github.com/qupath/qupath/issues/234#issuecomment-432762268:528,Safety,detect,detection,528,"This is a very shoddy way of doing the detections per annotation, and is written for version 1.2 where the default names might not be unique. 1.3 could simply use the annotation name instead of incremental numbers. If the annotations were all uniquely (manually) named, that could potentially be used for the file name.; https://gist.github.com/Svidro/5e4c29630e8d2ef36988184987d1028f#file-export-detections-per-annotation-groovy. Note that this is very slow and poorly written :) It would be much more elegant to write out the detection measurements that had already been created by using getChildObjects... but this was something I could easily do!. Good luck and let me know if you have any questions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/234#issuecomment-432762268
https://github.com/qupath/qupath/issues/234#issuecomment-432762268:152,Usability,simpl,simply,152,"This is a very shoddy way of doing the detections per annotation, and is written for version 1.2 where the default names might not be unique. 1.3 could simply use the annotation name instead of incremental numbers. If the annotations were all uniquely (manually) named, that could potentially be used for the file name.; https://gist.github.com/Svidro/5e4c29630e8d2ef36988184987d1028f#file-export-detections-per-annotation-groovy. Note that this is very slow and poorly written :) It would be much more elegant to write out the detection measurements that had already been created by using getChildObjects... but this was something I could easily do!. Good luck and let me know if you have any questions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/234#issuecomment-432762268
https://github.com/qupath/qupath/issues/234#issuecomment-432962423:188,Safety,detect,detections,188,"Dear Pete and Svidro,. Thank you very much for your support, I really do appreciate it!; Pete, thank you for the link to the other issue, I followed the instructions there and renamed the detections according to the annotation (which I also renamed to have a unique index) they are in. Svidro, thanks a lot for the script! I tried doing exactly this and failed because of not knowing enough groovy and your script is very educational (apart from doing exactly what I need) in that sense. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/234#issuecomment-432962423
https://github.com/qupath/qupath/issues/235#issuecomment-433603073:124,Integrability,depend,dependent,124,"I extended the export-import Script from Pete to be able to to export import of annotations in batch mode for many images - dependent on their names. The scripts create annotation folders and create annotation databanks. . **Script for anotation export (without detections or cells):** . import qupath.lib.scripting.QPEx; // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(). def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""annotations""); QPEx.mkdirs(path). def path2 = buildFilePath(PROJECT_BASE_DIR,""annotations"", name +'_annotations'); def annotations = getAnnotationObjects().collect {new qupath.lib.objects.PathAnnotationObject(it.getROI(), it.getPathClass())}; new File(path2).withObjectOutputStream {; it.writeObject(annotations); }; print 'Done!'. **This script is for import the annotation - works only with corresponding image names:** . import qupath.lib.scripting.QPEx; // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(). def path = buildFilePath(PROJECT_BASE_DIR, ""annotations"", name + '_annotations'); def annotations = null; new File(path).withObjectInputStream {; annotations = it.readObject(); }; addObjects(annotations); print 'Added ' + annotations",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/235#issuecomment-433603073
https://github.com/qupath/qupath/issues/235#issuecomment-433603073:2,Modifiability,extend,extended,2,"I extended the export-import Script from Pete to be able to to export import of annotations in batch mode for many images - dependent on their names. The scripts create annotation folders and create annotation databanks. . **Script for anotation export (without detections or cells):** . import qupath.lib.scripting.QPEx; // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(). def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""annotations""); QPEx.mkdirs(path). def path2 = buildFilePath(PROJECT_BASE_DIR,""annotations"", name +'_annotations'); def annotations = getAnnotationObjects().collect {new qupath.lib.objects.PathAnnotationObject(it.getROI(), it.getPathClass())}; new File(path2).withObjectOutputStream {; it.writeObject(annotations); }; print 'Done!'. **This script is for import the annotation - works only with corresponding image names:** . import qupath.lib.scripting.QPEx; // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(). def path = buildFilePath(PROJECT_BASE_DIR, ""annotations"", name + '_annotations'); def annotations = null; new File(path).withObjectInputStream {; annotations = it.readObject(); }; addObjects(annotations); print 'Added ' + annotations",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/235#issuecomment-433603073
https://github.com/qupath/qupath/issues/235#issuecomment-433603073:262,Safety,detect,detections,262,"I extended the export-import Script from Pete to be able to to export import of annotations in batch mode for many images - dependent on their names. The scripts create annotation folders and create annotation databanks. . **Script for anotation export (without detections or cells):** . import qupath.lib.scripting.QPEx; // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(). def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""annotations""); QPEx.mkdirs(path). def path2 = buildFilePath(PROJECT_BASE_DIR,""annotations"", name +'_annotations'); def annotations = getAnnotationObjects().collect {new qupath.lib.objects.PathAnnotationObject(it.getROI(), it.getPathClass())}; new File(path2).withObjectOutputStream {; it.writeObject(annotations); }; print 'Done!'. **This script is for import the annotation - works only with corresponding image names:** . import qupath.lib.scripting.QPEx; // Get the imageData & server; def imageData = QPEx.getCurrentImageData(); def server = imageData.getServer(); // Get the file name from the current server; def name = server.getShortServerName(). def path = buildFilePath(PROJECT_BASE_DIR, ""annotations"", name + '_annotations'); def annotations = null; new File(path).withObjectInputStream {; annotations = it.readObject(); }; addObjects(annotations); print 'Added ' + annotations",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/235#issuecomment-433603073
https://github.com/qupath/qupath/issues/236#issuecomment-433478046:242,Integrability,Depend,Depending,242,"I think the closest you can get is the median whole cell measurements, at the moment. Of course, if you can script it, you can generate that information easily! All of the base values should exist, you would just have to do the calculations. Depending on your experience, though, it might be easier to export the detection measurements to Excel or R. Actually, re-reading, if you mean a cell by cell measurement of IRQ (based on the pixel values for each individual cell), you might need to use ImageJ scripts? I am not sure about that one. Overall IQR of all detections shouldn't be too hard though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433478046
https://github.com/qupath/qupath/issues/236#issuecomment-433478046:313,Safety,detect,detection,313,"I think the closest you can get is the median whole cell measurements, at the moment. Of course, if you can script it, you can generate that information easily! All of the base values should exist, you would just have to do the calculations. Depending on your experience, though, it might be easier to export the detection measurements to Excel or R. Actually, re-reading, if you mean a cell by cell measurement of IRQ (based on the pixel values for each individual cell), you might need to use ImageJ scripts? I am not sure about that one. Overall IQR of all detections shouldn't be too hard though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433478046
https://github.com/qupath/qupath/issues/236#issuecomment-433478046:560,Safety,detect,detections,560,"I think the closest you can get is the median whole cell measurements, at the moment. Of course, if you can script it, you can generate that information easily! All of the base values should exist, you would just have to do the calculations. Depending on your experience, though, it might be easier to export the detection measurements to Excel or R. Actually, re-reading, if you mean a cell by cell measurement of IRQ (based on the pixel values for each individual cell), you might need to use ImageJ scripts? I am not sure about that one. Overall IQR of all detections shouldn't be too hard though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433478046
https://github.com/qupath/qupath/issues/236#issuecomment-433480694:27,Safety,detect,detection,27,"Yeah, I'm working with the detection measurements in R and can calculate IQR on those, but I was interested in the cell by cell pixel IQR values.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433480694
https://github.com/qupath/qupath/issues/236#issuecomment-433483920:368,Availability,mask,mask,368,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920
https://github.com/qupath/qupath/issues/236#issuecomment-433483920:812,Energy Efficiency,efficient,efficiently,812,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920
https://github.com/qupath/qupath/issues/236#issuecomment-433483920:106,Safety,detect,detection,106,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920
https://github.com/qupath/qupath/issues/236#issuecomment-433483920:175,Safety,detect,detection,175,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920
https://github.com/qupath/qupath/issues/236#issuecomment-433483920:490,Safety,detect,detection,490,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920
https://github.com/qupath/qupath/issues/236#issuecomment-433483920:58,Security,access,access,58,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920
https://github.com/qupath/qupath/issues/236#issuecomment-433484202:913,Availability,avail,available,913,"Ah, that will be a Pete question, but I don't know of any way currently. It took a bit of work for me to get find new _mean_ stain intensities for the nucleus/cytoplasm when applying a variety of color vectors for multiplexing... ; I suspect the nucleus would be doable since that is a stand alone ROI, especially if you dig into the java files (the pixel by pixel cytoplasmic values, as far as I know, are only used as the cells are generated), but the cytoplasm might be more difficult. ; The file I am thinking about is: https://gist.github.com/Svidro/eaf29399e36d34caacddf345ab668b0c#file-watershedcelldetection-java; That is a version of it that I edited to use % of different color vectors for the nuclear detection, rather than just OD sum or Htx. That is where I would recommend starting if you want to try to insert an IQR measurement. But I really don't know!. It would be nice to have that information available, if you/Pete can get it working, but I don't think I can help much more here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433484202
https://github.com/qupath/qupath/issues/236#issuecomment-433484202:712,Safety,detect,detection,712,"Ah, that will be a Pete question, but I don't know of any way currently. It took a bit of work for me to get find new _mean_ stain intensities for the nucleus/cytoplasm when applying a variety of color vectors for multiplexing... ; I suspect the nucleus would be doable since that is a stand alone ROI, especially if you dig into the java files (the pixel by pixel cytoplasmic values, as far as I know, are only used as the cells are generated), but the cytoplasm might be more difficult. ; The file I am thinking about is: https://gist.github.com/Svidro/eaf29399e36d34caacddf345ab668b0c#file-watershedcelldetection-java; That is a version of it that I edited to use % of different color vectors for the nuclear detection, rather than just OD sum or Htx. That is where I would recommend starting if you want to try to insert an IQR measurement. But I really don't know!. It would be nice to have that information available, if you/Pete can get it working, but I don't think I can help much more here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433484202
https://github.com/qupath/qupath/issues/237#issuecomment-433489049:158,Safety,detect,detection,158,"Hi @pssaha - great to hear about the exciting research!; Try double-clicking where it says 'Min display'. Also, if this is for a positive cutoff (rather than detection), see https://petebankhead.github.io/qupath/tips/2018/03/22/setting-positive.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/237#issuecomment-433489049
https://github.com/qupath/qupath/issues/237#issuecomment-433491033:45,Usability,simpl,simple,45,"Hi @petebankhead.. Got it! Thanks. it was so simple! Cannot believe it why I didn't find it myself! Anyway, I appreciate a lot! Please help us in future. Many thanks once again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/237#issuecomment-433491033
https://github.com/qupath/qupath/issues/238#issuecomment-434396341:25,Deployability,install,install,25,"It's the same process to install extensions on Windows: drag the jar onto QuPath when it's running and (generally) accept the default extensions directory. You might need to restart QuPath, but maybe not. Files inside `QuPath\app\jars` aren't automatically picked up, rather they need to be added to the classpath explicitly. There's a file `QuPath.cfg` that defines this for the built-in jars.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/238#issuecomment-434396341
https://github.com/qupath/qupath/issues/240#issuecomment-436165047:450,Deployability,install,installation,450,"QuPath shouldn't be limited by the file size, however it is very possible that an .svs file from a Huron scanner differs in some way from an .svs file from another source. In general, .svs is based on .tif, and .tif images can have all kinds of internal differences in terms of data representation and compression. Have you tried opening the image with Bio-Formats?; See https://github.com/qupath/qupath-bioformats-extension - in particular note the installation instructions at the bottom of the page, and how you can force QuPath to use Bio-Formats rather than OpenSlide to open files with a specific extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436165047
https://github.com/qupath/qupath/issues/240#issuecomment-436386267:144,Availability,error,error,144,"Unfortunately, I installed the bio-formats extensions and forced QuPath to use Bio-Formats in the preferences, and still got the same behavior (error message rather than opening image file.) If you, or others, have other ideas, I'd love to hear them. . Thanks for the observation about svs files not being all alike. Based on that information, I'll dig more into the format being the problem, and not the size. . Thanks!; Rob",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436386267
https://github.com/qupath/qupath/issues/240#issuecomment-436386267:17,Deployability,install,installed,17,"Unfortunately, I installed the bio-formats extensions and forced QuPath to use Bio-Formats in the preferences, and still got the same behavior (error message rather than opening image file.) If you, or others, have other ideas, I'd love to hear them. . Thanks for the observation about svs files not being all alike. Based on that information, I'll dig more into the format being the problem, and not the size. . Thanks!; Rob",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436386267
https://github.com/qupath/qupath/issues/240#issuecomment-436386267:150,Integrability,message,message,150,"Unfortunately, I installed the bio-formats extensions and forced QuPath to use Bio-Formats in the preferences, and still got the same behavior (error message rather than opening image file.) If you, or others, have other ideas, I'd love to hear them. . Thanks for the observation about svs files not being all alike. Based on that information, I'll dig more into the format being the problem, and not the size. . Thanks!; Rob",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436386267
https://github.com/qupath/qupath/issues/240#issuecomment-436420385:87,Modifiability,variab,variable,87,"It's always worth trying with Bio-Formats + Fiji (www.fiji.sc) to take away the QuPath variable. Also, generic tiff-exploring tools like tiffinfo can be informative. Also, _View &rarr; Show log_ might give more details. The image definitely needs to be a _pyramidal_ tiff to have any chance of working with QuPath (at least if it is 2 GB). I assume if it's .svs then it should be. It should also be tiled, and generally the images I know work use JPEG compression for tiles. > Just in case Bio-Formats isn't being picked up and loaded as an extension, you can check by opening another image (forcing Bio-Formats by specifying the extension, if necessary), and checking under the 'Image' tab for the 'Server type'. That should read 'Bio-Formats'.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436420385
https://github.com/qupath/qupath/issues/240#issuecomment-436420385:528,Performance,load,loaded,528,"It's always worth trying with Bio-Formats + Fiji (www.fiji.sc) to take away the QuPath variable. Also, generic tiff-exploring tools like tiffinfo can be informative. Also, _View &rarr; Show log_ might give more details. The image definitely needs to be a _pyramidal_ tiff to have any chance of working with QuPath (at least if it is 2 GB). I assume if it's .svs then it should be. It should also be tiled, and generally the images I know work use JPEG compression for tiles. > Just in case Bio-Formats isn't being picked up and loaded as an extension, you can check by opening another image (forcing Bio-Formats by specifying the extension, if necessary), and checking under the 'Image' tab for the 'Server type'. That should read 'Bio-Formats'.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436420385
https://github.com/qupath/qupath/issues/241#issuecomment-436907818:101,Deployability,update,updated,101,"Thanks, I can replicate this whenever I add enough lines. It also happens with my experimental, much updated branch (Java 11, updated dependencies)... so none of the updates have addressed this. The entire script editor needs an overhaul, and it seems the underlying text component that can provide the syntax highlighting (RichTextFX) isn't maintained any longer; JavaFX doesn't have something similar built-in, unfortunately. I'll look to see if I can find a quick fix on the QuPath side. If not, it adds to the urgency of updating the script editor... any suggestions for the best way to get a code editor with syntax highlighting into a JavaFX application welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-436907818
https://github.com/qupath/qupath/issues/241#issuecomment-436907818:126,Deployability,update,updated,126,"Thanks, I can replicate this whenever I add enough lines. It also happens with my experimental, much updated branch (Java 11, updated dependencies)... so none of the updates have addressed this. The entire script editor needs an overhaul, and it seems the underlying text component that can provide the syntax highlighting (RichTextFX) isn't maintained any longer; JavaFX doesn't have something similar built-in, unfortunately. I'll look to see if I can find a quick fix on the QuPath side. If not, it adds to the urgency of updating the script editor... any suggestions for the best way to get a code editor with syntax highlighting into a JavaFX application welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-436907818
https://github.com/qupath/qupath/issues/241#issuecomment-436907818:166,Deployability,update,updates,166,"Thanks, I can replicate this whenever I add enough lines. It also happens with my experimental, much updated branch (Java 11, updated dependencies)... so none of the updates have addressed this. The entire script editor needs an overhaul, and it seems the underlying text component that can provide the syntax highlighting (RichTextFX) isn't maintained any longer; JavaFX doesn't have something similar built-in, unfortunately. I'll look to see if I can find a quick fix on the QuPath side. If not, it adds to the urgency of updating the script editor... any suggestions for the best way to get a code editor with syntax highlighting into a JavaFX application welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-436907818
https://github.com/qupath/qupath/issues/241#issuecomment-436907818:134,Integrability,depend,dependencies,134,"Thanks, I can replicate this whenever I add enough lines. It also happens with my experimental, much updated branch (Java 11, updated dependencies)... so none of the updates have addressed this. The entire script editor needs an overhaul, and it seems the underlying text component that can provide the syntax highlighting (RichTextFX) isn't maintained any longer; JavaFX doesn't have something similar built-in, unfortunately. I'll look to see if I can find a quick fix on the QuPath side. If not, it adds to the urgency of updating the script editor... any suggestions for the best way to get a code editor with syntax highlighting into a JavaFX application welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-436907818
https://github.com/qupath/qupath/issues/241#issuecomment-481208920:287,Availability,robust,robust,287,"You probably already know this and maybe it's not even relevant any longer, but anyway: It appears the RichTextFX team has been replaced and is now actively maintained. Also, [this](https://www.mirkosertic.de/blog/2015/04/a-javafx-based-lua-editor/) might be a simple way to implement a robust script editor. I hope this is useful 😄",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-481208920
https://github.com/qupath/qupath/issues/241#issuecomment-481208920:261,Usability,simpl,simple,261,"You probably already know this and maybe it's not even relevant any longer, but anyway: It appears the RichTextFX team has been replaced and is now actively maintained. Also, [this](https://www.mirkosertic.de/blog/2015/04/a-javafx-based-lua-editor/) might be a simple way to implement a robust script editor. I hope this is useful 😄",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-481208920
https://github.com/qupath/qupath/issues/241#issuecomment-518353876:112,Availability,error,error,112,"Switching to apply the syntax highlighting asynchronously appears to address this issue... or at least make the error less obtrusive. This will be in v0.2.0-m4. Replacing the script editor is still preferable in the longer term, for performance, features and maintainability.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-518353876
https://github.com/qupath/qupath/issues/241#issuecomment-518353876:259,Modifiability,maintainab,maintainability,259,"Switching to apply the syntax highlighting asynchronously appears to address this issue... or at least make the error less obtrusive. This will be in v0.2.0-m4. Replacing the script editor is still preferable in the longer term, for performance, features and maintainability.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-518353876
https://github.com/qupath/qupath/issues/241#issuecomment-518353876:233,Performance,perform,performance,233,"Switching to apply the syntax highlighting asynchronously appears to address this issue... or at least make the error less obtrusive. This will be in v0.2.0-m4. Replacing the script editor is still preferable in the longer term, for performance, features and maintainability.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-518353876
https://github.com/qupath/qupath/issues/242#issuecomment-494372482:30,Deployability,update,update,30,Closed due to the lack of any update.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/242#issuecomment-494372482
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2647,Availability,avail,available,2647,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:169,Deployability,update,updates,169,"This is intended, even if it's not optimal. And because it could be better, it will change in the next version:; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects. ### Current situation (v0.1.2) & planned changes; Currently, the class list is saved in the preferences - and not any individual project or data file. In the next release, I plan that the class list will be saved in the preferences as _also_ in the project. Furthermore, it will be possible to import class lists from different projects. I hadn't realised when I was writing it at first how long or complex the class lists would become... and I understand that losing a long list can be very frustrating. ### The class list & object classes in the image; The classes actually applied in the image _don't_ need to correspond to the class list. The purpose of the class list is only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:390,Deployability,release,release,390,"This is intended, even if it's not optimal. And because it could be better, it will change in the next version:; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects. ### Current situation (v0.1.2) & planned changes; Currently, the class list is saved in the preferences - and not any individual project or data file. In the next release, I plan that the class list will be saved in the preferences as _also_ in the project. Furthermore, it will be possible to import class lists from different projects. I hadn't realised when I was writing it at first how long or complex the class lists would become... and I understand that losing a long list can be very frustrating. ### The class list & object classes in the image; The classes actually applied in the image _don't_ need to correspond to the class list. The purpose of the class list is only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2575,Deployability,update,updates,2575,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2716,Deployability,release,release,2716,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:1081,Safety,detect,detection,1081,"ub.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects. ### Current situation (v0.1.2) & planned changes; Currently, the class list is saved in the preferences - and not any individual project or data file. In the next release, I plan that the class list will be saved in the preferences as _also_ in the project. Furthermore, it will be possible to import class lists from different projects. I hadn't realised when I was writing it at first how long or complex the class lists would become... and I understand that losing a long list can be very frustrating. ### The class list & object classes in the image; The classes actually applied in the image _don't_ need to correspond to the class list. The purpose of the class list is only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2505,Testability,test,test,2505,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2601,Usability,guid,guide,2601,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159
https://github.com/qupath/qupath/issues/244#issuecomment-438962953:93,Deployability,release,release,93,"I've made a fix for the 'double-point' issue in one of my branches for inclusion in the next release. Depending on your use case and why this is causing you problems, it may help to edit an existing polygon with the Brush tool, which can address small (or large) defects. Potentially the problematic final point for existing annotations could be removed by scripting, if really necessary. Switching tools while in the process of drawing isn't really intended...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-438962953
https://github.com/qupath/qupath/issues/244#issuecomment-438962953:102,Integrability,Depend,Depending,102,"I've made a fix for the 'double-point' issue in one of my branches for inclusion in the next release. Depending on your use case and why this is causing you problems, it may help to edit an existing polygon with the Brush tool, which can address small (or large) defects. Potentially the problematic final point for existing annotations could be removed by scripting, if really necessary. Switching tools while in the process of drawing isn't really intended...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-438962953
https://github.com/qupath/qupath/issues/244#issuecomment-438964450:477,Deployability,release,release,477,"Polyline could be troublesome, as it still hasn't got an icon & I think for many people (possibly including me) it's going to prove a gateway to wanting a multi-polyline tool... which then introduces questions around whether 'Areas' should really be multi-polygons, and the whole ROI system being revised more in line with Java Topology Suite - with all kinds of backwards compatibility complications : ). But yeah, some form of polyline is planned for the next (big, Java 11) release, which will include this fix also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-438964450
https://github.com/qupath/qupath/issues/244#issuecomment-471152180:53,Deployability,release,release,53,This should now be addressed in the latest milestone release: https://github.com/qupath/qupath/releases/tag/v0.2.0-m1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-471152180
https://github.com/qupath/qupath/issues/244#issuecomment-471152180:95,Deployability,release,releases,95,This should now be addressed in the latest milestone release: https://github.com/qupath/qupath/releases/tag/v0.2.0-m1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-471152180
https://github.com/qupath/qupath/issues/246#issuecomment-439322750:176,Integrability,interface,interface,176,"It's intended that projects are set up first, and then QuPath will create and manage all the .qpdata files for you. Adding .qpdata files later isn't supported through the user interface. I'd suggest creating a project and annotating your images again... or at least starting to. [Project structure](https://github.com/qupath/qupath/wiki/Project-structure) may help if you then want to manually replace the contends of the 'data' subfolder within the project to use your existing .qpdata files (to trick QuPath into using them). These .qpdata files may need to be renamed for this to work. [This video](https://www.youtube.com/watch?v=2yoRMl1IaJ4&index=3&list=PL4ta8RxZklWkPB_pwW-ZDVAGPGktAlE5Y) may also help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/246#issuecomment-439322750
https://github.com/qupath/qupath/issues/247#issuecomment-439292612:202,Usability,clear,clearer,202,"I cannot replicate this; for me, for me it works as intended. The hierarchy (and its limitations) is described [here](https://github.com/qupath/qupath/wiki/Object-hierarchies). To accept this as a bug, clearer steps to reproduce would be needed - preferably with screenshots to demonstrate the issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/247#issuecomment-439292612
https://github.com/qupath/qupath/issues/248#issuecomment-441513852:375,Availability,down,downsampling,375,"That is correct, and as far as I know it is the only possible behavior for the simple tissue detection command. I have always added any extra annotations after that first step. . If you do not want that behavior, you could also create an ImageJ script that does something similar, and then run it on all existing annotations. Assuming the ImageJ script was set up correctly (downsampling to fit ImageJ's file size requirements, etc), you could use Thresholding+Analyze Particles and then return the created outlines as annotation objects. . That is actually more like what I do for fluorescent tissue detection, and it can work fairly well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-441513852
https://github.com/qupath/qupath/issues/248#issuecomment-441513852:93,Safety,detect,detection,93,"That is correct, and as far as I know it is the only possible behavior for the simple tissue detection command. I have always added any extra annotations after that first step. . If you do not want that behavior, you could also create an ImageJ script that does something similar, and then run it on all existing annotations. Assuming the ImageJ script was set up correctly (downsampling to fit ImageJ's file size requirements, etc), you could use Thresholding+Analyze Particles and then return the created outlines as annotation objects. . That is actually more like what I do for fluorescent tissue detection, and it can work fairly well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-441513852
https://github.com/qupath/qupath/issues/248#issuecomment-441513852:601,Safety,detect,detection,601,"That is correct, and as far as I know it is the only possible behavior for the simple tissue detection command. I have always added any extra annotations after that first step. . If you do not want that behavior, you could also create an ImageJ script that does something similar, and then run it on all existing annotations. Assuming the ImageJ script was set up correctly (downsampling to fit ImageJ's file size requirements, etc), you could use Thresholding+Analyze Particles and then return the created outlines as annotation objects. . That is actually more like what I do for fluorescent tissue detection, and it can work fairly well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-441513852
https://github.com/qupath/qupath/issues/248#issuecomment-441513852:79,Usability,simpl,simple,79,"That is correct, and as far as I know it is the only possible behavior for the simple tissue detection command. I have always added any extra annotations after that first step. . If you do not want that behavior, you could also create an ImageJ script that does something similar, and then run it on all existing annotations. Assuming the ImageJ script was set up correctly (downsampling to fit ImageJ's file size requirements, etc), you could use Thresholding+Analyze Particles and then return the created outlines as annotation objects. . That is actually more like what I do for fluorescent tissue detection, and it can work fairly well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-441513852
https://github.com/qupath/qupath/issues/248#issuecomment-460298789:94,Safety,detect,detection,94,"actually there is. You can use a script that exporte your annotations. runs the simple tissue detection, re-imports your annotations, then substracts everything of simple tissue detection of your ROI. . Then finally you have your annotations with simple tissue detection inside. ; That requires quite some scripting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460298789
https://github.com/qupath/qupath/issues/248#issuecomment-460298789:178,Safety,detect,detection,178,"actually there is. You can use a script that exporte your annotations. runs the simple tissue detection, re-imports your annotations, then substracts everything of simple tissue detection of your ROI. . Then finally you have your annotations with simple tissue detection inside. ; That requires quite some scripting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460298789
https://github.com/qupath/qupath/issues/248#issuecomment-460298789:261,Safety,detect,detection,261,"actually there is. You can use a script that exporte your annotations. runs the simple tissue detection, re-imports your annotations, then substracts everything of simple tissue detection of your ROI. . Then finally you have your annotations with simple tissue detection inside. ; That requires quite some scripting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460298789
https://github.com/qupath/qupath/issues/248#issuecomment-460298789:80,Usability,simpl,simple,80,"actually there is. You can use a script that exporte your annotations. runs the simple tissue detection, re-imports your annotations, then substracts everything of simple tissue detection of your ROI. . Then finally you have your annotations with simple tissue detection inside. ; That requires quite some scripting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460298789
https://github.com/qupath/qupath/issues/248#issuecomment-460298789:164,Usability,simpl,simple,164,"actually there is. You can use a script that exporte your annotations. runs the simple tissue detection, re-imports your annotations, then substracts everything of simple tissue detection of your ROI. . Then finally you have your annotations with simple tissue detection inside. ; That requires quite some scripting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460298789
https://github.com/qupath/qupath/issues/248#issuecomment-460298789:247,Usability,simpl,simple,247,"actually there is. You can use a script that exporte your annotations. runs the simple tissue detection, re-imports your annotations, then substracts everything of simple tissue detection of your ROI. . Then finally you have your annotations with simple tissue detection inside. ; That requires quite some scripting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460298789
https://github.com/qupath/qupath/issues/248#issuecomment-460299389:4,Integrability,depend,depending,4,"but depending on the nature of your tissue, a simple SLIC command with a classifier and subsequent tiles to annotations would be the easier way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460299389
https://github.com/qupath/qupath/issues/248#issuecomment-460299389:46,Usability,simpl,simple,46,"but depending on the nature of your tissue, a simple SLIC command with a classifier and subsequent tiles to annotations would be the easier way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/248#issuecomment-460299389
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:236,Availability,error,error,236,"Hi Svidro,. thank you very much for your suggestion. I renamed the file you attached (TMA.txt) to a .qpdata file giving the same name of my image (1.qpdata). Then, I opened the 1.qpdata by double clicking, but I found the following two error messages: ""Error invoking method"" and ""failed to launch JVM"". Could you suggest me how to use the qpdata file?. thank you in advance for your help. best regards. ________________________________________; Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:253,Availability,Error,Error,253,"Hi Svidro,. thank you very much for your suggestion. I renamed the file you attached (TMA.txt) to a .qpdata file giving the same name of my image (1.qpdata). Then, I opened the 1.qpdata by double clicking, but I found the following two error messages: ""Error invoking method"" and ""failed to launch JVM"". Could you suggest me how to use the qpdata file?. thank you in advance for your help. best regards. ________________________________________; Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:1362,Availability,error,errore,1362,"Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying o",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:1766,Availability,error,errore,1766,"h/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neithe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:2311,Availability,error,error,2311,"use you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neither the sender identity nor the data integrity",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:242,Integrability,message,messages,242,"Hi Svidro,. thank you very much for your suggestion. I renamed the file you attached (TMA.txt) to a .qpdata file giving the same name of my image (1.qpdata). Then, I opened the 1.qpdata by double clicking, but I found the following two error messages: ""Error invoking method"" and ""failed to launch JVM"". Could you suggest me how to use the qpdata file?. thank you in advance for your help. best regards. ________________________________________; Da: Svidro [notifications@github.com]; Inviato: giovedì 29 novembre 2018 16.34; A: qupath/qupath; Cc: Tuccitto Alessandra; Author; Oggetto: Re: [qupath/qupath] TMA grid (#249). I would recommend looking through #77<https://github.com/qupath/qupath/issues/77>. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:1989,Security,confidential,confidential,1989,"use you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neither the sender identity nor the data integrity",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/249#issuecomment-442919733:2727,Security,integrity,integrity,2727,"use you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/249#issuecomment-442877107>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ArWoyy9fQqh1OZIfaIx3IN1LUJdlXAEKks5uz_51gaJpZM4Y5w90>. La presente comunicazione, che potrebbe contenere informazioni riservate e/o protette da segreto professionale, è indirizzata esclusivamente ai destinatari della medesima qui indicati. Ogni informazione qui contenuta, che non sia relativa alla nostra attività caratteristica, deve essere considerata come non inviata. Nel caso in cui abbiate ricevuto per errore la presente comunicazione, vogliate cortesemente darcene immediata notizia, rispondendo a questo stesso indirizzo di e-mail, e poi procedere alla cancellazione di questo messaggio dal Vostro sistema. E' strettamente proibito e potrebbe essere fonte di violazione di legge qualsiasi uso, comunicazione, copia o diffusione dei contenuti di questa comunicazione da parte di chi la abbia ricevuta per errore o in violazione degli scopi della presente. Ricordiamo che la tecnologia di trasmissione utilizzata non consente di garantire l’autenticità del mittente né l’integrità dei dati. This communication, which may contain confidential and/or legally privileged information, is intended solely for the use of the intended addressees. All information or advice contained in this communication is subject to the terms and conditions provided by the agreement governing each particular client engagement. If you have received this communication in error, please notify us immediately by responding to this email; then please delete it from your system. Any use, disclosure, copying or distribution of the contents of this communication by a not-intended recipient or in violation of the purposes of this communication is strictly prohibited and may be unlawful. The transmission technology used to send this mail can grant neither the sender identity nor the data integrity",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/249#issuecomment-442919733
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:5,Safety,detect,detection,5,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:32,Safety,detect,detection,32,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:175,Safety,detect,detection,175,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:437,Safety,detect,detect,437,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:659,Safety,Detect,Detection,659,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:731,Safety,detect,detection,731,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:1019,Safety,detect,detections,1019,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-447236061:1289,Safety,detect,detection,1289,"Cell detection or Positive Cell detection at the top of the same _Analysis->Cell Analysis_ menu should work. . Set your first color vector to match the red stain (for nuclear detection) and the second stain to blue (for you X-Gal). More information on how to do that here:; https://github.com/qupath/qupath/wiki/Preprocessing; https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s. Either way you do it, you can use the first color vector to detect nuclei, and then the second color vector to judge whether the cells are positive or negative for X-Gal.; I would recommend leaving the names of the color vectors in the Image tab as they are and using Positive Cell Detection, with Hematoxylin OD (having been repurposed to ""red"") as the detection image, and Nucleus DAB OD (now ""blue"") mean as the Score Compartment. I expect it would come out looking something like this, though the file you included is the data file, not the image file, so I don't have a full image to work with. QPDATA files only include the annotation, detections, and other drawn on objects.; ![image](https://user-images.githubusercontent.com/23145209/49988566-158ce800-ff2c-11e8-8c57-cdab949e4ae0.png). Once you choose your threshold, you should be good to go. I think he might be considering removing Watershed nucleus detection (experimental) as it is. Cheers",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-447236061
https://github.com/qupath/qupath/issues/250#issuecomment-448783885:213,Availability,down,download,213,"Dear @Svidro ,. Many thanks for your suggestions. I am extremely sorry as I did not attach the original image to my previous post. I thought that you got everything with enclosed QPDATA files. I, here, give a ****download link** (below) of the original image.**; https://my.pcloud.com/publink/show?code=XZN1HC7ZCU8ImbiEUGShoj457lSYa7TCxtEy. **I have tried the following things as you suggested but could come up of the following issues:**. 1. I could not switch in-between diffient channels of colors as shown (comfortably) in the video. In other words, I could not check the _color deconvolution_ before estimating the vectors . 2. I wanted to get separate values for the number of cells with each color. But looks like, QuPath gives as a total number. Having them, is very important for me as . 3. In most cases, after _running_ the Positive Cell Detection, even some blue cells are not encircled, letting me assume that they were not counted probably. Image below:; ![capture](https://user-images.githubusercontent.com/44507241/50253977-ea821880-03b1-11e9-826e-bb092ba9b087.JPG). I admit that I am a newbie to QuPath. I apologize if you see these problems are because of very silly mistakes. . Many thanks for helping me out!; sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-448783885
https://github.com/qupath/qupath/issues/250#issuecomment-448783885:849,Safety,Detect,Detection,849,"Dear @Svidro ,. Many thanks for your suggestions. I am extremely sorry as I did not attach the original image to my previous post. I thought that you got everything with enclosed QPDATA files. I, here, give a ****download link** (below) of the original image.**; https://my.pcloud.com/publink/show?code=XZN1HC7ZCU8ImbiEUGShoj457lSYa7TCxtEy. **I have tried the following things as you suggested but could come up of the following issues:**. 1. I could not switch in-between diffient channels of colors as shown (comfortably) in the video. In other words, I could not check the _color deconvolution_ before estimating the vectors . 2. I wanted to get separate values for the number of cells with each color. But looks like, QuPath gives as a total number. Having them, is very important for me as . 3. In most cases, after _running_ the Positive Cell Detection, even some blue cells are not encircled, letting me assume that they were not counted probably. Image below:; ![capture](https://user-images.githubusercontent.com/44507241/50253977-ea821880-03b1-11e9-826e-bb092ba9b087.JPG). I admit that I am a newbie to QuPath. I apologize if you see these problems are because of very silly mistakes. . Many thanks for helping me out!; sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-448783885
https://github.com/qupath/qupath/issues/250#issuecomment-449019237:243,Deployability,update,update,243,"No problem, it is also challenging to advise correctly without having the full image, so thank you for that!; Changing channels should be possible with the 1/2/3/4 keys, but you can only do this once you have picked color vectors. They do not update ""live."". I am not sure what you mean by question 2, but hopefully the script below improves things for you, and I am sure if you play around with the values you can improve it even further!. Here is what I came up with for settings that seem to work for cell detection in the main bulk of your tissue:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 30.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.4, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; ![image](https://user-images.githubusercontent.com/23145209/50290376-79864380-0439-11e9-86dc-7b4375cee119.png); ![image](https://user-images.githubusercontent.com/23145209/50290399-873bc900-0439-11e9-937b-7dc5c5ce1139.png). A couple of things to note about this, some cells in certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough. The script ab",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449019237
https://github.com/qupath/qupath/issues/250#issuecomment-449019237:509,Safety,detect,detection,509,"No problem, it is also challenging to advise correctly without having the full image, so thank you for that!; Changing channels should be possible with the 1/2/3/4 keys, but you can only do this once you have picked color vectors. They do not update ""live."". I am not sure what you mean by question 2, but hopefully the script below improves things for you, and I am sure if you play around with the values you can improve it even further!. Here is what I came up with for settings that seem to work for cell detection in the main bulk of your tissue:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 30.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.4, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; ![image](https://user-images.githubusercontent.com/23145209/50290376-79864380-0439-11e9-86dc-7b4375cee119.png); ![image](https://user-images.githubusercontent.com/23145209/50290399-873bc900-0439-11e9-937b-7dc5c5ce1139.png). A couple of things to note about this, some cells in certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough. The script ab",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449019237
https://github.com/qupath/qupath/issues/250#issuecomment-449019237:856,Safety,detect,detect,856,"No problem, it is also challenging to advise correctly without having the full image, so thank you for that!; Changing channels should be possible with the 1/2/3/4 keys, but you can only do this once you have picked color vectors. They do not update ""live."". I am not sure what you mean by question 2, but hopefully the script below improves things for you, and I am sure if you play around with the values you can improve it even further!. Here is what I came up with for settings that seem to work for cell detection in the main bulk of your tissue:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 30.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.4, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; ![image](https://user-images.githubusercontent.com/23145209/50290376-79864380-0439-11e9-86dc-7b4375cee119.png); ![image](https://user-images.githubusercontent.com/23145209/50290399-873bc900-0439-11e9-937b-7dc5c5ce1139.png). A couple of things to note about this, some cells in certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough. The script ab",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449019237
https://github.com/qupath/qupath/issues/250#issuecomment-449019237:897,Safety,detect,detectionImageBrightfield,897,"No problem, it is also challenging to advise correctly without having the full image, so thank you for that!; Changing channels should be possible with the 1/2/3/4 keys, but you can only do this once you have picked color vectors. They do not update ""live."". I am not sure what you mean by question 2, but hopefully the script below improves things for you, and I am sure if you play around with the values you can improve it even further!. Here is what I came up with for settings that seem to work for cell detection in the main bulk of your tissue:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 30.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.4, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; ![image](https://user-images.githubusercontent.com/23145209/50290376-79864380-0439-11e9-86dc-7b4375cee119.png); ![image](https://user-images.githubusercontent.com/23145209/50290399-873bc900-0439-11e9-937b-7dc5c5ce1139.png). A couple of things to note about this, some cells in certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough. The script ab",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449019237
https://github.com/qupath/qupath/issues/250#issuecomment-449019237:2289,Safety,detect,detecting,2289,""" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 30.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.4, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; ![image](https://user-images.githubusercontent.com/23145209/50290376-79864380-0439-11e9-86dc-7b4375cee119.png); ![image](https://user-images.githubusercontent.com/23145209/50290399-873bc900-0439-11e9-937b-7dc5c5ce1139.png). A couple of things to note about this, some cells in certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough. The script above should work for the central areas with the blue stained cells. Your scanner/sample plane is also slightly off, and you can see that in the above screenshots where the lower right corner of the (by image) frame changes focus. Small variations like that can have significant impacts on detecting faintly stained objects, so your negative nuclear accuracy may vary based on where in the frame you are counting. ![image](https://user-images.githubusercontent.com/23145209/50290628-43958f00-043a-11e9-9125-032f51c04a5d.png). That said, hopefully the above script works well for you. I ended up selecting a small area that included a blue nucleus and manually adjusting the color vectors, which are included in the script.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449019237
https://github.com/qupath/qupath/issues/250#issuecomment-449906512:143,Deployability,update,update,143,"Dear @Svidro . You gave me the best Christmas gift !!! Amazing help indeed! I thank you so much to help me for that. _I give you the following update and also put forward a few queries if you don't mind:_. **1.** **I was not sure how you found the following values for the Stain 1 and 2.** I mean, these:. ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""**0.18752 0.65887 0.72851** "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""**0.72191 0.55664 0.41109** "". Did you use the technique (shown in this video https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s) to assign colour values for each ROI for each stain?; ![image](https://user-images.githubusercontent.com/44507241/50432704-490b3300-0899-11e9-89b5-87f5653ffc0f.png). **2.** **You mentioned in your post:** ""Certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough."". **>My comment:** Essentially, they are the valid population of cells, so I would not like to exclude them. Would it be possible to classify them as a third type? . **>Also,** can I somehow make the Qupath learn that they belong to Stain 2/ DAB, by setting the ""Stain vector for their ROI""? I mean:; ![image](https://user-images.githubusercontent.com/44507241/50433088-aacc9c80-089b-11e9-9bb7-f975b4fbab7e.png). I hope you'll kindly take your time to help me with this again. I'm sorry that I get back to you lately each time - this is because I carefully go through your comments, try to replicate it, and gather questions for you. I hope you'll not misunderstand it. But I am grateful to you how you are helping!. Thanks again. sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449906512
https://github.com/qupath/qupath/issues/250#issuecomment-449906512:1192,Usability,learn,learn,1192,"Dear @Svidro . You gave me the best Christmas gift !!! Amazing help indeed! I thank you so much to help me for that. _I give you the following update and also put forward a few queries if you don't mind:_. **1.** **I was not sure how you found the following values for the Stain 1 and 2.** I mean, these:. ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""**0.18752 0.65887 0.72851** "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""**0.72191 0.55664 0.41109** "". Did you use the technique (shown in this video https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s) to assign colour values for each ROI for each stain?; ![image](https://user-images.githubusercontent.com/44507241/50432704-490b3300-0899-11e9-89b5-87f5653ffc0f.png). **2.** **You mentioned in your post:** ""Certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough."". **>My comment:** Essentially, they are the valid population of cells, so I would not like to exclude them. Would it be possible to classify them as a third type? . **>Also,** can I somehow make the Qupath learn that they belong to Stain 2/ DAB, by setting the ""Stain vector for their ROI""? I mean:; ![image](https://user-images.githubusercontent.com/44507241/50433088-aacc9c80-089b-11e9-9bb7-f975b4fbab7e.png). I hope you'll kindly take your time to help me with this again. I'm sorry that I get back to you lately each time - this is because I carefully go through your comments, try to replicate it, and gather questions for you. I hope you'll not misunderstand it. But I am grateful to you how you are helping!. Thanks again. sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449906512
https://github.com/qupath/qupath/issues/250#issuecomment-449989226:1488,Performance,optimiz,optimize,1488,"as ""blue"" positive.; Here is the edited first script:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 20.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.30, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.45, ""thresholdPositive2"": 0.45, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; And here is a variant of a classifier you can play with to optimize for your samples. Note that these sorts of classifiers are always sensitive to staining variations, so it may not be very accurate between samples (if the staining is not!). You can find more about[ scripting classifiers here](https://gist.github.com/Svidro/5b016e192a33c883c0bd20de18eb7764).; ```. blueThreshold = 0.45 //Set to class Tumor; brownThreshold = 1 //Set to class Stroma. // Get cells & reset all the classifications; def cells = getCellObjects(); resetDetectionClassifications(). cells.each {it.setPathClass(getPathClass('Negative'))}. // Get channel 1 & 2 positives; def ch1Pos = cells.findAll {measurement(it, ""Nucleus: DAB OD mean"") > blueThreshold}; ch1Pos.each {it.setPathClass(getPathClass('Tumor'))}. def ch2Pos = cells.findAll {measurement(it, ""Nucleus: Hematoxylin OD mean"") > brownThreshold}; ch2Pos.each {it.setPathClass(getPathClass('Stroma'))}. // Overwrite classifications for double positives; //def doublePos = ch1Pos.intersect",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449989226
https://github.com/qupath/qupath/issues/250#issuecomment-449989226:811,Safety,detect,detect,811,"For the stain vectors, I used the manual method shown in the video from the menu option _Analyze->Preprocessing->Estimate Stain Vectors_. I had a fairly large area in the middle of your sample selected with an annotation. For this run I lowered the Minimum area to 20um^2, as the size limit had been excluding many of these darker types of cells. Part of the reason I did that is because many of the smallest nuclei are SO dark, they too are showing up as ""blue"" positive.; Here is the edited first script:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 20.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.30, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.45, ""thresholdPositive2"": 0.45, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; And here is a variant of a classifier you can play with to optimize for your samples. Note that these sorts of classifiers are always sensitive to staining variations, so it may not be very accurate between samples (if the staining is not!). You can find more about[ scripting classifiers here](https://gist.github.com/Svidro/5b016e192a33c883c0bd20de18eb7764).; ```. blueThreshold = 0.45 //Set to class Tumor; brownThreshold = 1 //Set to class Stroma. // Get cells & reset all the classifications; def cells = getCellObjects(); resetDetectionClassifications(). cells.each ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449989226
https://github.com/qupath/qupath/issues/250#issuecomment-449989226:852,Safety,detect,detectionImageBrightfield,852,"For the stain vectors, I used the manual method shown in the video from the menu option _Analyze->Preprocessing->Estimate Stain Vectors_. I had a fairly large area in the middle of your sample selected with an annotation. For this run I lowered the Minimum area to 20um^2, as the size limit had been excluding many of these darker types of cells. Part of the reason I did that is because many of the smallest nuclei are SO dark, they too are showing up as ""blue"" positive.; Here is the edited first script:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 20.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.30, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.45, ""thresholdPositive2"": 0.45, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; And here is a variant of a classifier you can play with to optimize for your samples. Note that these sorts of classifiers are always sensitive to staining variations, so it may not be very accurate between samples (if the staining is not!). You can find more about[ scripting classifiers here](https://gist.github.com/Svidro/5b016e192a33c883c0bd20de18eb7764).; ```. blueThreshold = 0.45 //Set to class Tumor; brownThreshold = 1 //Set to class Stroma. // Get cells & reset all the classifications; def cells = getCellObjects(); resetDetectionClassifications(). cells.each ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449989226
https://github.com/qupath/qupath/issues/250#issuecomment-449989226:3118,Usability,simpl,simply,3118," may not be very accurate between samples (if the staining is not!). You can find more about[ scripting classifiers here](https://gist.github.com/Svidro/5b016e192a33c883c0bd20de18eb7764).; ```. blueThreshold = 0.45 //Set to class Tumor; brownThreshold = 1 //Set to class Stroma. // Get cells & reset all the classifications; def cells = getCellObjects(); resetDetectionClassifications(). cells.each {it.setPathClass(getPathClass('Negative'))}. // Get channel 1 & 2 positives; def ch1Pos = cells.findAll {measurement(it, ""Nucleus: DAB OD mean"") > blueThreshold}; ch1Pos.each {it.setPathClass(getPathClass('Tumor'))}. def ch2Pos = cells.findAll {measurement(it, ""Nucleus: Hematoxylin OD mean"") > brownThreshold}; ch2Pos.each {it.setPathClass(getPathClass('Stroma'))}. // Overwrite classifications for double positives; //def doublePos = ch1Pos.intersect(ch2Pos); //doublePos.each {it.setPathClass(getPathClass('Double positive'))}. fireHierarchyUpdate(); ```; A couple of notes here, the Sigma that worked best for finding your blue cells and not splitting them DOES cause problems with multiple cells being merged in some of your ""DAB cell"" areas. A lower Sigma will break up the cells more, while a higher one will prevent individual cells from being incorrectly split. Also, since I don't know what classes you have currently colored/created, I labeled the two cell types ""Tumor"" and ""Stroma"" in the above script (those two classes are included by default). You can change those to anything that makes sense to you simply by editing the name in the script. If you then right click in the list of Annotation classes in the left Tab, you can create and color any class you want to use. Also, the values for the thresholds for each class are at the top, and you can and should modify those to whatever you think is most accurate, I just took a guess based on the _Measure->Measurement map_.; ![image](https://user-images.githubusercontent.com/23145209/50451238-a9c15c80-08e7-11e9-8782-c2fbddb49f28.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449989226
https://github.com/qupath/qupath/issues/251#issuecomment-449676448:101,Availability,down,down,101,"I would try using SLICs rather than tiles, but either way, it looks like you have the classification down. If you want a picture, do you mean something like the File->Export->Export Viewer Snapshot (but scripted)? Just trying to verify because there are a lot of image export options, though none of them will create a whole slide image. This issue has a bunch of links to various options: https://github.com/qupath/qupath/issues/216",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/251#issuecomment-449676448
https://github.com/qupath/qupath/issues/252#issuecomment-450680141:81,Deployability,release,release,81,It will be possible to set the grid spacing from the preference pane in the next release.; https://github.com/petebankhead/qupath/commit/9f337258120125724e17c7f6985fdce495a230f0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/252#issuecomment-450680141
https://github.com/qupath/qupath/issues/253#issuecomment-450835981:93,Availability,avail,available,93,"You can drag a .jar onto QuPath to add it to the extensions directory, and then it should be available on the classpath for any scripts. Although I'm curious about what syntax isn't supported?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450835981
https://github.com/qupath/qupath/issues/253#issuecomment-450863091:414,Integrability,message,message,414,"Thanks for the reply :). It is mostly the closure and double colon, which requires more refactoring. . Actually, I tried the extension part. First of all, by modifying multiple parts of the code (syntax) and execute them directly in groovy, the code works as expected. But if I make the class implements QuPathExtension and use ; `; print('start'). import package.classname; `; in the script, there is no printing message at all. Besides, after executing this script (without getting any printing message) and remove the ""import"" line, the groovy reports two lines of ""start"". If I click 8 times of ""run"" with ""import"" line and remove it, afterward each time I click the ""run"" there will be 9 lines of printing (thread thing?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450863091
https://github.com/qupath/qupath/issues/253#issuecomment-450863091:497,Integrability,message,message,497,"Thanks for the reply :). It is mostly the closure and double colon, which requires more refactoring. . Actually, I tried the extension part. First of all, by modifying multiple parts of the code (syntax) and execute them directly in groovy, the code works as expected. But if I make the class implements QuPathExtension and use ; `; print('start'). import package.classname; `; in the script, there is no printing message at all. Besides, after executing this script (without getting any printing message) and remove the ""import"" line, the groovy reports two lines of ""start"". If I click 8 times of ""run"" with ""import"" line and remove it, afterward each time I click the ""run"" there will be 9 lines of printing (thread thing?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450863091
https://github.com/qupath/qupath/issues/253#issuecomment-450863091:88,Modifiability,refactor,refactoring,88,"Thanks for the reply :). It is mostly the closure and double colon, which requires more refactoring. . Actually, I tried the extension part. First of all, by modifying multiple parts of the code (syntax) and execute them directly in groovy, the code works as expected. But if I make the class implements QuPathExtension and use ; `; print('start'). import package.classname; `; in the script, there is no printing message at all. Besides, after executing this script (without getting any printing message) and remove the ""import"" line, the groovy reports two lines of ""start"". If I click 8 times of ""run"" with ""import"" line and remove it, afterward each time I click the ""run"" there will be 9 lines of printing (thread thing?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450863091
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1123,Availability,error,errors,1123,"red me at times & required adjusting the code, although it's not too tricky: http://groovy-lang.org/differences.html#_lambdas; Other differences (e.g. with `equals` or numbers becoming `BigDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to u",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1251,Availability,ERROR,ERROR,1251,"igDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy suppor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1258,Availability,Error,Error,1258,"igDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy suppor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1421,Availability,error,error,1421,"situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1914,Availability,down,down,1914,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:487,Deployability,release,releasenotes,487,"True, lambdas are the only incompatibility that has particularly bothered me at times & required adjusting the code, although it's not too tricky: http://groovy-lang.org/differences.html#_lambdas; Other differences (e.g. with `equals` or numbers becoming `BigDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for di",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1771,Deployability,integrat,integrate,1771,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1873,Deployability,integrat,integrating,1873,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1771,Integrability,integrat,integrate,1771,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1873,Integrability,integrat,integrating,1873,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1950,Integrability,rout,route,1950,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:897,Security,access,access,897,"True, lambdas are the only incompatibility that has particularly bothered me at times & required adjusting the code, although it's not too tricky: http://groovy-lang.org/differences.html#_lambdas; Other differences (e.g. with `equals` or numbers becoming `BigDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for di",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:2136,Security,access,access,2136,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1532,Testability,log,logging,1532,".html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in maki",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1867,Usability,guid,guide-integrating,1867,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869
https://github.com/qupath/qupath/issues/253#issuecomment-450920465:110,Integrability,depend,dependencies,110,"Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450920465
https://github.com/qupath/qupath/issues/253#issuecomment-450920465:204,Integrability,depend,dependencies,204,"Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450920465
https://github.com/qupath/qupath/issues/253#issuecomment-450920465:225,Integrability,depend,dependencies,225,"Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450920465
https://github.com/qupath/qupath/issues/253#issuecomment-463342528:112,Integrability,depend,dependencies,112,"> Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath. Appreciate the reply!.; I look into the Bio-Formats extension. It appears that the package of the classes is ""qupath\lib\images\servers"", which is somehow an existing package in the qupath source code. Is it required that all classes of extensions must be in such existing package?. Besides, under the Meta-Inf/service, there are two files:; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.images.servers.ImageServerBuilder. with strings like; qupath.lib.images.servers.BioFormatsOptionsExtension; qupath.lib.images.servers.BioFormatsServerBuilder. It looks like some class relationship (the source code shows that BioFormatsServerBuilder extends ImageServerBuilder). May I ask what is the reason to include these two files under the META-INF?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-463342528
https://github.com/qupath/qupath/issues/253#issuecomment-463342528:206,Integrability,depend,dependencies,206,"> Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath. Appreciate the reply!.; I look into the Bio-Formats extension. It appears that the package of the classes is ""qupath\lib\images\servers"", which is somehow an existing package in the qupath source code. Is it required that all classes of extensions must be in such existing package?. Besides, under the Meta-Inf/service, there are two files:; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.images.servers.ImageServerBuilder. with strings like; qupath.lib.images.servers.BioFormatsOptionsExtension; qupath.lib.images.servers.BioFormatsServerBuilder. It looks like some class relationship (the source code shows that BioFormatsServerBuilder extends ImageServerBuilder). May I ask what is the reason to include these two files under the META-INF?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-463342528
https://github.com/qupath/qupath/issues/253#issuecomment-463342528:227,Integrability,depend,dependencies,227,"> Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath. Appreciate the reply!.; I look into the Bio-Formats extension. It appears that the package of the classes is ""qupath\lib\images\servers"", which is somehow an existing package in the qupath source code. Is it required that all classes of extensions must be in such existing package?. Besides, under the Meta-Inf/service, there are two files:; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.images.servers.ImageServerBuilder. with strings like; qupath.lib.images.servers.BioFormatsOptionsExtension; qupath.lib.images.servers.BioFormatsServerBuilder. It looks like some class relationship (the source code shows that BioFormatsServerBuilder extends ImageServerBuilder). May I ask what is the reason to include these two files under the META-INF?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-463342528
https://github.com/qupath/qupath/issues/253#issuecomment-463342528:950,Modifiability,extend,extends,950,"> Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath. Appreciate the reply!.; I look into the Bio-Formats extension. It appears that the package of the classes is ""qupath\lib\images\servers"", which is somehow an existing package in the qupath source code. Is it required that all classes of extensions must be in such existing package?. Besides, under the Meta-Inf/service, there are two files:; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.images.servers.ImageServerBuilder. with strings like; qupath.lib.images.servers.BioFormatsOptionsExtension; qupath.lib.images.servers.BioFormatsServerBuilder. It looks like some class relationship (the source code shows that BioFormatsServerBuilder extends ImageServerBuilder). May I ask what is the reason to include these two files under the META-INF?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-463342528
https://github.com/qupath/qupath/issues/254#issuecomment-452892735:691,Modifiability,extend,extends,691,"Hmm, I am not sure about creating a multi-cell object on purpose, but you could use smoothing (_Add smoothed measurements_) or clustering to generate groups of classified objects, or re-classify/add additional classification based off of smoothed values. As far as boundary regions, if the necrotic space was sufficiently different in stain/color intensity, you could use ""_Add intensity features_"" and rather than using the cell ROI (which is the default), choose to use information from a 10/20um square or circle around the cell. If the mean value of your color of interest is increased or depressed by being next to sufficient necrotic area, you could detect that.; As far as I know, it extends in all directions equally, so keep that in mind!; ![image](https://user-images.githubusercontent.com/23145209/50932446-7cfa6280-141a-11e9-9368-8aab4f4a5f68.png). Come to think of it, if the necrotic regions are nuclei free, you might increase the cell expansion, and perform a subcellular detection that picks up the necrotic tissue specifically. And classify based on that.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452892735
https://github.com/qupath/qupath/issues/254#issuecomment-452892735:966,Performance,perform,perform,966,"Hmm, I am not sure about creating a multi-cell object on purpose, but you could use smoothing (_Add smoothed measurements_) or clustering to generate groups of classified objects, or re-classify/add additional classification based off of smoothed values. As far as boundary regions, if the necrotic space was sufficiently different in stain/color intensity, you could use ""_Add intensity features_"" and rather than using the cell ROI (which is the default), choose to use information from a 10/20um square or circle around the cell. If the mean value of your color of interest is increased or depressed by being next to sufficient necrotic area, you could detect that.; As far as I know, it extends in all directions equally, so keep that in mind!; ![image](https://user-images.githubusercontent.com/23145209/50932446-7cfa6280-141a-11e9-9368-8aab4f4a5f68.png). Come to think of it, if the necrotic regions are nuclei free, you might increase the cell expansion, and perform a subcellular detection that picks up the necrotic tissue specifically. And classify based on that.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452892735
https://github.com/qupath/qupath/issues/254#issuecomment-452892735:656,Safety,detect,detect,656,"Hmm, I am not sure about creating a multi-cell object on purpose, but you could use smoothing (_Add smoothed measurements_) or clustering to generate groups of classified objects, or re-classify/add additional classification based off of smoothed values. As far as boundary regions, if the necrotic space was sufficiently different in stain/color intensity, you could use ""_Add intensity features_"" and rather than using the cell ROI (which is the default), choose to use information from a 10/20um square or circle around the cell. If the mean value of your color of interest is increased or depressed by being next to sufficient necrotic area, you could detect that.; As far as I know, it extends in all directions equally, so keep that in mind!; ![image](https://user-images.githubusercontent.com/23145209/50932446-7cfa6280-141a-11e9-9368-8aab4f4a5f68.png). Come to think of it, if the necrotic regions are nuclei free, you might increase the cell expansion, and perform a subcellular detection that picks up the necrotic tissue specifically. And classify based on that.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452892735
https://github.com/qupath/qupath/issues/254#issuecomment-452892735:988,Safety,detect,detection,988,"Hmm, I am not sure about creating a multi-cell object on purpose, but you could use smoothing (_Add smoothed measurements_) or clustering to generate groups of classified objects, or re-classify/add additional classification based off of smoothed values. As far as boundary regions, if the necrotic space was sufficiently different in stain/color intensity, you could use ""_Add intensity features_"" and rather than using the cell ROI (which is the default), choose to use information from a 10/20um square or circle around the cell. If the mean value of your color of interest is increased or depressed by being next to sufficient necrotic area, you could detect that.; As far as I know, it extends in all directions equally, so keep that in mind!; ![image](https://user-images.githubusercontent.com/23145209/50932446-7cfa6280-141a-11e9-9368-8aab4f4a5f68.png). Come to think of it, if the necrotic regions are nuclei free, you might increase the cell expansion, and perform a subcellular detection that picks up the necrotic tissue specifically. And classify based on that.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452892735
https://github.com/qupath/qupath/issues/254#issuecomment-452897098:670,Availability,reliab,reliable,670,"Thanks for the prompt response, but the example I gave was probably one of the more simple type of structures that I'm interested in looking at. Another type of structure I'd be interested in looking at is the marginal invasive zone of a tumour. While at first it may seem simple (boundary between tumour and non-tumor tissue), there isn't always a clear boundary; instead there could be a lot of interwoven tumour tissue among non-tumour tissue. ; I'd be interested in a function that could classify (after training) this boundary, and I imagine it'd take into account the ratio of tumour to non-tumour regions or something like that if the computer found that to be a reliable and consistent variable in the classification of this structure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452897098
https://github.com/qupath/qupath/issues/254#issuecomment-452897098:694,Modifiability,variab,variable,694,"Thanks for the prompt response, but the example I gave was probably one of the more simple type of structures that I'm interested in looking at. Another type of structure I'd be interested in looking at is the marginal invasive zone of a tumour. While at first it may seem simple (boundary between tumour and non-tumor tissue), there isn't always a clear boundary; instead there could be a lot of interwoven tumour tissue among non-tumour tissue. ; I'd be interested in a function that could classify (after training) this boundary, and I imagine it'd take into account the ratio of tumour to non-tumour regions or something like that if the computer found that to be a reliable and consistent variable in the classification of this structure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452897098
https://github.com/qupath/qupath/issues/254#issuecomment-452897098:84,Usability,simpl,simple,84,"Thanks for the prompt response, but the example I gave was probably one of the more simple type of structures that I'm interested in looking at. Another type of structure I'd be interested in looking at is the marginal invasive zone of a tumour. While at first it may seem simple (boundary between tumour and non-tumor tissue), there isn't always a clear boundary; instead there could be a lot of interwoven tumour tissue among non-tumour tissue. ; I'd be interested in a function that could classify (after training) this boundary, and I imagine it'd take into account the ratio of tumour to non-tumour regions or something like that if the computer found that to be a reliable and consistent variable in the classification of this structure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452897098
https://github.com/qupath/qupath/issues/254#issuecomment-452897098:273,Usability,simpl,simple,273,"Thanks for the prompt response, but the example I gave was probably one of the more simple type of structures that I'm interested in looking at. Another type of structure I'd be interested in looking at is the marginal invasive zone of a tumour. While at first it may seem simple (boundary between tumour and non-tumor tissue), there isn't always a clear boundary; instead there could be a lot of interwoven tumour tissue among non-tumour tissue. ; I'd be interested in a function that could classify (after training) this boundary, and I imagine it'd take into account the ratio of tumour to non-tumour regions or something like that if the computer found that to be a reliable and consistent variable in the classification of this structure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452897098
https://github.com/qupath/qupath/issues/254#issuecomment-452897098:349,Usability,clear,clear,349,"Thanks for the prompt response, but the example I gave was probably one of the more simple type of structures that I'm interested in looking at. Another type of structure I'd be interested in looking at is the marginal invasive zone of a tumour. While at first it may seem simple (boundary between tumour and non-tumor tissue), there isn't always a clear boundary; instead there could be a lot of interwoven tumour tissue among non-tumour tissue. ; I'd be interested in a function that could classify (after training) this boundary, and I imagine it'd take into account the ratio of tumour to non-tumour regions or something like that if the computer found that to be a reliable and consistent variable in the classification of this structure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452897098
https://github.com/qupath/qupath/issues/254#issuecomment-452908873:185,Integrability,contract,contraction,185,"Sounds like fun! I think in the past I have mostly seen identifying the tumor region by texture and such, then modifying the annotation using an expansion (for tumor border regions) or contraction for infiltration.; https://gist.github.com/petebankhead/7e69e9252416da0a677eb4d3a999e442. The next closest thing I could think of would be using SLICs and color/texture measurements (Haralick, LBP, etc) to define the tile areas by a variety of added measurements. I have done a bit of that to automatically generate annotations for different types of tissue areas, but it isn't going to be as good as, say, a deep learning model. Some of the above was discussed here: https://groups.google.com/forum/#!topic/qupath-users/gm0YYJxSriA. Otherwise it sounds more like smoothing added measurements between classes (cells where 40-60% of the cells nearby are one class, and 40-60% another class would get a subclass), might be the way to go. Pete might have some better ideas, but it really sounds like it might be more of a deep learning project! Accurate understanding of context can be difficult to simulate in tissue using a standard classifier, and it is hard to recommend anything too specific without a concrete example (types of staining, fluorescence vs bf, etc can vary what might work a lot).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452908873
https://github.com/qupath/qupath/issues/254#issuecomment-452908873:611,Usability,learn,learning,611,"Sounds like fun! I think in the past I have mostly seen identifying the tumor region by texture and such, then modifying the annotation using an expansion (for tumor border regions) or contraction for infiltration.; https://gist.github.com/petebankhead/7e69e9252416da0a677eb4d3a999e442. The next closest thing I could think of would be using SLICs and color/texture measurements (Haralick, LBP, etc) to define the tile areas by a variety of added measurements. I have done a bit of that to automatically generate annotations for different types of tissue areas, but it isn't going to be as good as, say, a deep learning model. Some of the above was discussed here: https://groups.google.com/forum/#!topic/qupath-users/gm0YYJxSriA. Otherwise it sounds more like smoothing added measurements between classes (cells where 40-60% of the cells nearby are one class, and 40-60% another class would get a subclass), might be the way to go. Pete might have some better ideas, but it really sounds like it might be more of a deep learning project! Accurate understanding of context can be difficult to simulate in tissue using a standard classifier, and it is hard to recommend anything too specific without a concrete example (types of staining, fluorescence vs bf, etc can vary what might work a lot).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452908873
https://github.com/qupath/qupath/issues/254#issuecomment-452908873:1021,Usability,learn,learning,1021,"Sounds like fun! I think in the past I have mostly seen identifying the tumor region by texture and such, then modifying the annotation using an expansion (for tumor border regions) or contraction for infiltration.; https://gist.github.com/petebankhead/7e69e9252416da0a677eb4d3a999e442. The next closest thing I could think of would be using SLICs and color/texture measurements (Haralick, LBP, etc) to define the tile areas by a variety of added measurements. I have done a bit of that to automatically generate annotations for different types of tissue areas, but it isn't going to be as good as, say, a deep learning model. Some of the above was discussed here: https://groups.google.com/forum/#!topic/qupath-users/gm0YYJxSriA. Otherwise it sounds more like smoothing added measurements between classes (cells where 40-60% of the cells nearby are one class, and 40-60% another class would get a subclass), might be the way to go. Pete might have some better ideas, but it really sounds like it might be more of a deep learning project! Accurate understanding of context can be difficult to simulate in tissue using a standard classifier, and it is hard to recommend anything too specific without a concrete example (types of staining, fluorescence vs bf, etc can vary what might work a lot).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-452908873
https://github.com/qupath/qupath/issues/254#issuecomment-453001561:76,Integrability,interface,interface,76,"It's not possible to try an additional classifier directly through the user interface, but that is just because the functionality the user interface gives access to is necessarily very limited. QuPath gives the tools to solve many problems like this, but constructing the specific solutions could still take a lot of work. It is hard to judge without seeing any images, but it sounds like one or more research projects to figure out how to approach the analysis, develop the techniques and write the necessary code. There is no built-in command to do all of what is needed here, but that is why it is also possible to write scripts and extensions for QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-453001561
https://github.com/qupath/qupath/issues/254#issuecomment-453001561:139,Integrability,interface,interface,139,"It's not possible to try an additional classifier directly through the user interface, but that is just because the functionality the user interface gives access to is necessarily very limited. QuPath gives the tools to solve many problems like this, but constructing the specific solutions could still take a lot of work. It is hard to judge without seeing any images, but it sounds like one or more research projects to figure out how to approach the analysis, develop the techniques and write the necessary code. There is no built-in command to do all of what is needed here, but that is why it is also possible to write scripts and extensions for QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-453001561
https://github.com/qupath/qupath/issues/254#issuecomment-453001561:155,Security,access,access,155,"It's not possible to try an additional classifier directly through the user interface, but that is just because the functionality the user interface gives access to is necessarily very limited. QuPath gives the tools to solve many problems like this, but constructing the specific solutions could still take a lot of work. It is hard to judge without seeing any images, but it sounds like one or more research projects to figure out how to approach the analysis, develop the techniques and write the necessary code. There is no built-in command to do all of what is needed here, but that is why it is also possible to write scripts and extensions for QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/254#issuecomment-453001561
https://github.com/qupath/qupath/issues/255#issuecomment-454414897:30,Availability,down,down,30,"It looks like you have things down pretty well on the scripting side, hopefully this gives you the extra nudge to get everything working in a TMA:; https://gist.github.com/Svidro/68dd668af64ad91b2f76022015dd8a45#file-class-percentages-to-tma-measurements-groovy; You will want to rewrite each of your cell lists for the current core's ""total"" (using another findAll), which is the total number of cellsObjects in that core. In this case the measurements are placed into the TMA measurement list, but you could also print them out if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/255#issuecomment-454414897
https://github.com/qupath/qupath/issues/255#issuecomment-454414897:280,Modifiability,rewrite,rewrite,280,"It looks like you have things down pretty well on the scripting side, hopefully this gives you the extra nudge to get everything working in a TMA:; https://gist.github.com/Svidro/68dd668af64ad91b2f76022015dd8a45#file-class-percentages-to-tma-measurements-groovy; You will want to rewrite each of your cell lists for the current core's ""total"" (using another findAll), which is the total number of cellsObjects in that core. In this case the measurements are placed into the TMA measurement list, but you could also print them out if desired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/255#issuecomment-454414897
https://github.com/qupath/qupath/issues/255#issuecomment-454432990:44,Deployability,update,update,44,Thanks for the reply!; I will get to it and update you with the outcome.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/255#issuecomment-454432990
https://github.com/qupath/qupath/issues/256#issuecomment-455564256:1183,Security,Hash,HashMap,1183,"It might be... there's no built-in option to do so, but see https://github.com/qupath/qupath/issues/57#issuecomment-288491139 for possible workarounds (which in your case would really involve duplicating and merging your projects). The following script _might_ work; as far as I know it does the right thing, but I haven't exactly tested it very much:; ```groovy; // Paths to training files (here, both relative to the current project); paths = [; buildFilePath(PROJECT_BASE_DIR, 'training', 'my_training.qptrain'),; buildFilePath(PROJECT_BASE_DIR, 'training', 'my_training2.qptrain'),; ]. // Path to output training file; pathOutput = buildFilePath(PROJECT_BASE_DIR, 'training', 'merged.qptrain'). // Count mostly helps to ensure we're adding with unique keys; count = 0. // Loop through training files; def result = null; for (path in paths) {; // .qptrain files just have one object but class isn't public, so ; // we take the first one that is deserialized; new File(path).withObjectInputStream {; saved = it.readObject(); }; // Add the training objects, appending an extra number which ; // (probably, unless very unfortunate with image names?) means they are unique; map = new HashMap<>(saved.getMap()); if (result == null) {; result = saved; result.clear(); }; for (entry in map.entrySet()); result.put(entry.getKey() + '-' + count, entry.getValue()); count++; }. // Check how big the map is & what it contains; print result.size(); print result.getMap().keySet().each { println it }. // Write out a new training file; new File(pathOutput).withObjectOutputStream {; it.writeObject(result); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/256#issuecomment-455564256
https://github.com/qupath/qupath/issues/256#issuecomment-455564256:331,Testability,test,tested,331,"It might be... there's no built-in option to do so, but see https://github.com/qupath/qupath/issues/57#issuecomment-288491139 for possible workarounds (which in your case would really involve duplicating and merging your projects). The following script _might_ work; as far as I know it does the right thing, but I haven't exactly tested it very much:; ```groovy; // Paths to training files (here, both relative to the current project); paths = [; buildFilePath(PROJECT_BASE_DIR, 'training', 'my_training.qptrain'),; buildFilePath(PROJECT_BASE_DIR, 'training', 'my_training2.qptrain'),; ]. // Path to output training file; pathOutput = buildFilePath(PROJECT_BASE_DIR, 'training', 'merged.qptrain'). // Count mostly helps to ensure we're adding with unique keys; count = 0. // Loop through training files; def result = null; for (path in paths) {; // .qptrain files just have one object but class isn't public, so ; // we take the first one that is deserialized; new File(path).withObjectInputStream {; saved = it.readObject(); }; // Add the training objects, appending an extra number which ; // (probably, unless very unfortunate with image names?) means they are unique; map = new HashMap<>(saved.getMap()); if (result == null) {; result = saved; result.clear(); }; for (entry in map.entrySet()); result.put(entry.getKey() + '-' + count, entry.getValue()); count++; }. // Check how big the map is & what it contains; print result.size(); print result.getMap().keySet().each { println it }. // Write out a new training file; new File(pathOutput).withObjectOutputStream {; it.writeObject(result); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/256#issuecomment-455564256
https://github.com/qupath/qupath/issues/256#issuecomment-455564256:1256,Usability,clear,clear,1256,"It might be... there's no built-in option to do so, but see https://github.com/qupath/qupath/issues/57#issuecomment-288491139 for possible workarounds (which in your case would really involve duplicating and merging your projects). The following script _might_ work; as far as I know it does the right thing, but I haven't exactly tested it very much:; ```groovy; // Paths to training files (here, both relative to the current project); paths = [; buildFilePath(PROJECT_BASE_DIR, 'training', 'my_training.qptrain'),; buildFilePath(PROJECT_BASE_DIR, 'training', 'my_training2.qptrain'),; ]. // Path to output training file; pathOutput = buildFilePath(PROJECT_BASE_DIR, 'training', 'merged.qptrain'). // Count mostly helps to ensure we're adding with unique keys; count = 0. // Loop through training files; def result = null; for (path in paths) {; // .qptrain files just have one object but class isn't public, so ; // we take the first one that is deserialized; new File(path).withObjectInputStream {; saved = it.readObject(); }; // Add the training objects, appending an extra number which ; // (probably, unless very unfortunate with image names?) means they are unique; map = new HashMap<>(saved.getMap()); if (result == null) {; result = saved; result.clear(); }; for (entry in map.entrySet()); result.put(entry.getKey() + '-' + count, entry.getValue()); count++; }. // Check how big the map is & what it contains; print result.size(); print result.getMap().keySet().each { println it }. // Write out a new training file; new File(pathOutput).withObjectOutputStream {; it.writeObject(result); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/256#issuecomment-455564256
https://github.com/qupath/qupath/issues/256#issuecomment-455695541:100,Deployability,update,update,100,"This appears to be working perfectly, thank you! I haven't done much testing yet either, and I will update if something goes awry.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/256#issuecomment-455695541
https://github.com/qupath/qupath/issues/256#issuecomment-455695541:69,Testability,test,testing,69,"This appears to be working perfectly, thank you! I haven't done much testing yet either, and I will update if something goes awry.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/256#issuecomment-455695541
https://github.com/qupath/qupath/issues/257#issuecomment-456983998:771,Deployability,update,update,771,"It's not clear to me if this is a QuPath question or an eclipse question, or if you are already familiar with eclipse. There are various other posts if you search for ""eclipse"" either here or on the [QuPath Google Group](https://groups.google.com/forum/#!forum/qupath-users) and I don't know what you've read or tried. In any case, I'm working on my own fork currently and making major changes (including a switch to Java 11, and from Maven to Gradle). The code here was always a bit awkward to set up, but once I have merged in the changes the process will be different... I'm afraid I can't write up any more extensive documentation on setting up this version, because it will soon be out of date and all my spare time to work on this really needs to be devoted to the update. Someone else may be able to help more.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/257#issuecomment-456983998
https://github.com/qupath/qupath/issues/257#issuecomment-456983998:9,Usability,clear,clear,9,"It's not clear to me if this is a QuPath question or an eclipse question, or if you are already familiar with eclipse. There are various other posts if you search for ""eclipse"" either here or on the [QuPath Google Group](https://groups.google.com/forum/#!forum/qupath-users) and I don't know what you've read or tried. In any case, I'm working on my own fork currently and making major changes (including a switch to Java 11, and from Maven to Gradle). The code here was always a bit awkward to set up, but once I have merged in the changes the process will be different... I'm afraid I can't write up any more extensive documentation on setting up this version, because it will soon be out of date and all my spare time to work on this really needs to be devoted to the update. Someone else may be able to help more.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/257#issuecomment-456983998
https://github.com/qupath/qupath/issues/258#issuecomment-457601907:171,Safety,detect,detect,171,"Hi, I'm not completely sure I understand - is this what you are looking for? https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-ij/src/main/java/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.java; You can also search for 'TMA' within the QuPath GitHub repository. This is shorter and might also help: https://github.com/qupath/qupath/issues/77#issuecomment-301234930",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/258#issuecomment-457601907
https://github.com/qupath/qupath/issues/259#issuecomment-457707115:88,Safety,detect,detections,88,Did that happen once or does it happen reproducibly? My first guess is that somehow the detections with thinner lines are inside (duplicated) detections. I don't know why.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457707115
https://github.com/qupath/qupath/issues/259#issuecomment-457707115:142,Safety,detect,detections,142,Did that happen once or does it happen reproducibly? My first guess is that somehow the detections with thinner lines are inside (duplicated) detections. I don't know why.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457707115
https://github.com/qupath/qupath/issues/259#issuecomment-457722556:376,Safety,detect,detected,376,"I think all of those things may be correct.; If you collapse the rectangle in the Hierarchy tab, do you see two cells ""outside"" of the rectangle (although they are are mostly inside of it?; Edit, or the two cells that are parents to your hand drawn cells are somehow invisible? :). What shows up when you highlight the parent polygon? I am guessing that the polygons are your detected cells, and the AWTs are your hand-drawn, within that hierarchy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457722556
https://github.com/qupath/qupath/issues/259#issuecomment-457725262:28,Availability,error,error,28,recreated - unrotated. Same error again: ; ![grafik](https://user-images.githubusercontent.com/16352785/51772368-1ea4d380-20ec-11e9-9bea-87a6acf1fdd6.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457725262
https://github.com/qupath/qupath/issues/259#issuecomment-457730791:893,Safety,avoid,avoid,893,"> yes - the problem is reproducible.; Until now I was aware of one lacking cell. This time it was two cells lacking. Things like this make me think of parallelization and the threads of the GUI. Not certain this is the issue, but rather than; ```groovy; selectObjects { p -> p.getPathClass() == null && p.isAnnotation() && p.getROI().getArea() < 4000 }; annotations = getSelectedObjects(); ```; I'd suggest trying something like:; ```groovy; getAnnotationObjects().findAll { p -> p.getPathClass() == null && p.isAnnotation() && p.getROI().getArea() < 4000 }; ```; As has occurred before, weird things can happen when modifying the hierarchy too quickly after selections within scripts that are run interactively in the GUI (since the GUI elements may not have completed processing before the later lines of the script have run). If this is correct, the trouble shouldn't arise if ; 1. you can avoid selecting/deselecting objects, or ; 2. run the script in batch mode via _Run &rarr; Run for project_. Out of curiosity, what happens if you select one of the weird-behaving cells and run the following:; ```groovy; def selected = getSelectedObject(); def parent = selected.getParent(); print selected; print parent; print selected == parent; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457730791
https://github.com/qupath/qupath/issues/259#issuecomment-457817384:508,Safety,detect,detection,508,"For the existing 'true' cells, check if the annotations fall inside the full cell boundary (assuming that in this case you're only displaying the nuclei, but actually both the nucleus and cytoplasm regions exist). (If this is correct, it highlights that the `toString` method used for QuPath objects isn't very good... knowing that the parent object has a polygon ROI [which the script I posted above reveals] has limited use - it would help if printing out the object also told you if it was an annotation, detection, cell or whatever. I will make this change...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457817384
https://github.com/qupath/qupath/issues/259#issuecomment-457853179:75,Testability,test,test,75,hi Pete. I did not really understand the meaning of that. ; But i made the test to put points into the cytoplasm of existing cells and a point outside the cytoplasm of existing cells. ; The result was: all points (that i converted into cells with Mikes new script) that were inside existing cells were not counted as objects inside the annotations tab. But counted in the measurments. ; It corresponds with the thickness of the boundary: ; ![grafik](https://user-images.githubusercontent.com/16352785/51791164-1a85be00-219f-11e9-8116-9384b0c09ab4.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457853179
https://github.com/qupath/qupath/issues/259#issuecomment-457854313:378,Safety,detect,detection,378,"If I understand correctly, then everything is actually behaving as it is supposed to... adding a new object that is inside an existing one (even a cell) gets positioned 'below' it. So... it might not be what you wanted, but it is correct - right?. If you don't need the cell boundaries (or associated measurements) then by reducing the 'cell expansion' parameter to zero during detection you can create a 'nucleus detector' only, which may help avoid confusion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457854313
https://github.com/qupath/qupath/issues/259#issuecomment-457854313:414,Safety,detect,detector,414,"If I understand correctly, then everything is actually behaving as it is supposed to... adding a new object that is inside an existing one (even a cell) gets positioned 'below' it. So... it might not be what you wanted, but it is correct - right?. If you don't need the cell boundaries (or associated measurements) then by reducing the 'cell expansion' parameter to zero during detection you can create a 'nucleus detector' only, which may help avoid confusion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457854313
https://github.com/qupath/qupath/issues/259#issuecomment-457854313:445,Safety,avoid,avoid,445,"If I understand correctly, then everything is actually behaving as it is supposed to... adding a new object that is inside an existing one (even a cell) gets positioned 'below' it. So... it might not be what you wanted, but it is correct - right?. If you don't need the cell boundaries (or associated measurements) then by reducing the 'cell expansion' parameter to zero during detection you can create a 'nucleus detector' only, which may help avoid confusion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457854313
https://github.com/qupath/qupath/issues/259#issuecomment-457855609:451,Safety,detect,detections,451,"Yep, just counting the direct children, one level below the annotation.; ![image](https://user-images.githubusercontent.com/23145209/51791450-15e9e700-2158-11e9-9eb8-18eb6b59e11e.png). Kinda shows it as well. Almost every annotation has one child annotation. Except one of the lowest ones, and some of those have 0 children. It doesn't matter if the objects are cells, it just counts direct child objects. Which is nice, since it prevents subcellular detections from being counted! That could get crazy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457855609
https://github.com/qupath/qupath/issues/259#issuecomment-457856110:47,Safety,detect,detections,47,"> Which is nice, since it prevents subcellular detections from being counted! That could get crazy. Yes, I have some distant memory that that was the reason... and also detections inside other detections need (progressively) thinner lines, giving a visual clue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457856110
https://github.com/qupath/qupath/issues/259#issuecomment-457856110:169,Safety,detect,detections,169,"> Which is nice, since it prevents subcellular detections from being counted! That could get crazy. Yes, I have some distant memory that that was the reason... and also detections inside other detections need (progressively) thinner lines, giving a visual clue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457856110
https://github.com/qupath/qupath/issues/259#issuecomment-457856110:193,Safety,detect,detections,193,"> Which is nice, since it prevents subcellular detections from being counted! That could get crazy. Yes, I have some distant memory that that was the reason... and also detections inside other detections need (progressively) thinner lines, giving a visual clue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/259#issuecomment-457856110
https://github.com/qupath/qupath/issues/260#issuecomment-457917147:376,Integrability,interface,interface,376,"Somehow you need the Bio-Formats extension and `bioformats_package.jar` added to the classpath from the command line, e.g. see https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html. As I recall, the rest of the classpath entries are there because they are included inside `QuPathApp.jar` (in the manifest). Eventually QuPath needs a better command line interface that takes care of loading extensions... but for now, I think/hope setting the classpath yourself should work. I haven't tried it myself though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/260#issuecomment-457917147
https://github.com/qupath/qupath/issues/260#issuecomment-457917147:405,Performance,load,loading,405,"Somehow you need the Bio-Formats extension and `bioformats_package.jar` added to the classpath from the command line, e.g. see https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html. As I recall, the rest of the classpath entries are there because they are included inside `QuPathApp.jar` (in the manifest). Eventually QuPath needs a better command line interface that takes care of loading extensions... but for now, I think/hope setting the classpath yourself should work. I haven't tried it myself though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/260#issuecomment-457917147
https://github.com/qupath/qupath/issues/260#issuecomment-457918978:239,Availability,error,error,239,"""C:\Program Files\QuPath\app\QuPathApp.jar"" -image ""D:\\QMDownload\\6\\[failed_handOK]Leica_scn\\Leica-Fluorescence-1.scn"" -script ""D:\\QMDownload\\6\\Tiling_a_whole_slide_image.groovy"" -classpath ""C:\\Users\\rmd\\QuPath\\extensions"". The error is still the same",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/260#issuecomment-457918978
https://github.com/qupath/qupath/issues/260#issuecomment-457925207:756,Testability,test,test,756,"The classpath would be handled before reaching QuPath, so it doesn't need appear at that point in the QuPath code. Not sure what you mean with `aClasspath`; the syntax is more like this:; ```; ""C:\Program Files\QuPath\app\QuPathApp.jar"" -image ""D:\QMDownload\6\Leica-Fluorescence-1.scn"" -script ""D:\QMDownload\6\Tiling_a_whole_slide_image.groovy"" -classpath ""C:\Users\rmd\QuPath\extensions\qupath-extension-bioformats.jar;C:\Users\rmd\QuPath\extensions\bioformats_package.jar""; ```; or possibly; ```; ""C:\Program Files\QuPath\app\QuPathApp.jar"" -image ""D:\QMDownload\6\Leica_scn\Leica-Fluorescence-1.scn"" -script ""D:\QMDownload\6\Tiling_a_whole_slide_image.groovy"" -cp ""C:\Program Files\QuPath\app\*;C:\Users\rmd\QuPath\extensions\*""; ```; I'm not able to test these currently, but hopefully you can find a combination that works.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/260#issuecomment-457925207
https://github.com/qupath/qupath/issues/261#issuecomment-458183899:365,Safety,detect,detection,365,"Not sure, it looks like you could mean two different things. I don't think you can really turn the superpixels into pathCellObjects since there is no nucleus/cytoplasm, though you could possibly use the XY centroids of each superpixel, create a small circle there, and then convert it plus it's parent superpixel into a cell. Alternatively, if you want to run cell detection, you should be able to selectAnnotations(); and then run your cell detection command. Sum the results in the annotation tab, or use a script to select only the annotations of a particular class and then use mergeSelectedAnnotations();; See here: https://gist.github.com/Svidro/8f9c06e2c8bcae214cdd7aa9afe57c50#file-a-selection-guide-groovy; That could at least get you one annotation per class, and make it easier to read out the results. Another option might be to generate all of the cells and then classify them by their parent annotation's class. Might need an image or something to be more help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/261#issuecomment-458183899
https://github.com/qupath/qupath/issues/261#issuecomment-458183899:442,Safety,detect,detection,442,"Not sure, it looks like you could mean two different things. I don't think you can really turn the superpixels into pathCellObjects since there is no nucleus/cytoplasm, though you could possibly use the XY centroids of each superpixel, create a small circle there, and then convert it plus it's parent superpixel into a cell. Alternatively, if you want to run cell detection, you should be able to selectAnnotations(); and then run your cell detection command. Sum the results in the annotation tab, or use a script to select only the annotations of a particular class and then use mergeSelectedAnnotations();; See here: https://gist.github.com/Svidro/8f9c06e2c8bcae214cdd7aa9afe57c50#file-a-selection-guide-groovy; That could at least get you one annotation per class, and make it easier to read out the results. Another option might be to generate all of the cells and then classify them by their parent annotation's class. Might need an image or something to be more help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/261#issuecomment-458183899
https://github.com/qupath/qupath/issues/261#issuecomment-458183899:702,Usability,guid,guide-groovy,702,"Not sure, it looks like you could mean two different things. I don't think you can really turn the superpixels into pathCellObjects since there is no nucleus/cytoplasm, though you could possibly use the XY centroids of each superpixel, create a small circle there, and then convert it plus it's parent superpixel into a cell. Alternatively, if you want to run cell detection, you should be able to selectAnnotations(); and then run your cell detection command. Sum the results in the annotation tab, or use a script to select only the annotations of a particular class and then use mergeSelectedAnnotations();; See here: https://gist.github.com/Svidro/8f9c06e2c8bcae214cdd7aa9afe57c50#file-a-selection-guide-groovy; That could at least get you one annotation per class, and make it easier to read out the results. Another option might be to generate all of the cells and then classify them by their parent annotation's class. Might need an image or something to be more help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/261#issuecomment-458183899
https://github.com/qupath/qupath/issues/262#issuecomment-458652442:415,Deployability,release,release,415,"Hi, this sounds potentially very challenging in H&E. It may be possible using a combination of existing QuPath features, such as superpixels and random trees classifiers and cell detection, although the steps are likely to be quite involved and elaborate. But it is not really possible to judge the difficulty without seeing some example images. I'm currently embroiled a multitude of tasks necessary to make a new release of QuPath ahead of some talks and workshops in March; this release will have some new features that may very well be useful for this application, but I need to finish them first. In the meantime, since this is more a question about applying the software, and not an 'issue' as such, you might get more answers on the QuPath user forum at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users)*. I'm afraid I can't help more myself at the moment, since I need to dive back into the code to try to meet the deadline... > *-Before getting too attached to the Google Group, I should mention that the main forum will likely move to https://forum.image.sc to coincide with the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458652442
https://github.com/qupath/qupath/issues/262#issuecomment-458652442:482,Deployability,release,release,482,"Hi, this sounds potentially very challenging in H&E. It may be possible using a combination of existing QuPath features, such as superpixels and random trees classifiers and cell detection, although the steps are likely to be quite involved and elaborate. But it is not really possible to judge the difficulty without seeing some example images. I'm currently embroiled a multitude of tasks necessary to make a new release of QuPath ahead of some talks and workshops in March; this release will have some new features that may very well be useful for this application, but I need to finish them first. In the meantime, since this is more a question about applying the software, and not an 'issue' as such, you might get more answers on the QuPath user forum at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users)*. I'm afraid I can't help more myself at the moment, since I need to dive back into the code to try to meet the deadline... > *-Before getting too attached to the Google Group, I should mention that the main forum will likely move to https://forum.image.sc to coincide with the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458652442
https://github.com/qupath/qupath/issues/262#issuecomment-458652442:1114,Deployability,release,release,1114,"Hi, this sounds potentially very challenging in H&E. It may be possible using a combination of existing QuPath features, such as superpixels and random trees classifiers and cell detection, although the steps are likely to be quite involved and elaborate. But it is not really possible to judge the difficulty without seeing some example images. I'm currently embroiled a multitude of tasks necessary to make a new release of QuPath ahead of some talks and workshops in March; this release will have some new features that may very well be useful for this application, but I need to finish them first. In the meantime, since this is more a question about applying the software, and not an 'issue' as such, you might get more answers on the QuPath user forum at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users)*. I'm afraid I can't help more myself at the moment, since I need to dive back into the code to try to meet the deadline... > *-Before getting too attached to the Google Group, I should mention that the main forum will likely move to https://forum.image.sc to coincide with the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458652442
https://github.com/qupath/qupath/issues/262#issuecomment-458652442:179,Safety,detect,detection,179,"Hi, this sounds potentially very challenging in H&E. It may be possible using a combination of existing QuPath features, such as superpixels and random trees classifiers and cell detection, although the steps are likely to be quite involved and elaborate. But it is not really possible to judge the difficulty without seeing some example images. I'm currently embroiled a multitude of tasks necessary to make a new release of QuPath ahead of some talks and workshops in March; this release will have some new features that may very well be useful for this application, but I need to finish them first. In the meantime, since this is more a question about applying the software, and not an 'issue' as such, you might get more answers on the QuPath user forum at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users)*. I'm afraid I can't help more myself at the moment, since I need to dive back into the code to try to meet the deadline... > *-Before getting too attached to the Google Group, I should mention that the main forum will likely move to https://forum.image.sc to coincide with the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458652442
https://github.com/qupath/qupath/issues/262#issuecomment-458656502:760,Safety,detect,detection,760,"You may want to open a [forum ](https://groups.google.com/forum/#!forum/qupath-users)thread where you can show some examples. Most examples I have seen of identifying TILs in HE staining were using deep learning, but if you can figure out a way to identify them among the rest of your cells, you should be able to do it. Extracting the data into a single worksheet is fairly easy, and can been seen in the following two links:; https://petebankhead.github.io/qupath/scripting/2018/03/04/script-annotation-export.html; https://petebankhead.github.io/qupath/scripting/2018/03/05/script-annotation-results-merge.html. I generally use SLICs to classify sub-annotation areas, then merge them into annotations (after some smoothing) to separate out tissues for cell detection. Aand I got horribly distracted by laser problems and Pete beat me to it :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458656502
https://github.com/qupath/qupath/issues/262#issuecomment-458656502:203,Usability,learn,learning,203,"You may want to open a [forum ](https://groups.google.com/forum/#!forum/qupath-users)thread where you can show some examples. Most examples I have seen of identifying TILs in HE staining were using deep learning, but if you can figure out a way to identify them among the rest of your cells, you should be able to do it. Extracting the data into a single worksheet is fairly easy, and can been seen in the following two links:; https://petebankhead.github.io/qupath/scripting/2018/03/04/script-annotation-export.html; https://petebankhead.github.io/qupath/scripting/2018/03/05/script-annotation-results-merge.html. I generally use SLICs to classify sub-annotation areas, then merge them into annotations (after some smoothing) to separate out tissues for cell detection. Aand I got horribly distracted by laser problems and Pete beat me to it :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458656502
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:687,Availability,avail,available,687,"This sounds very interesting! I'm afraid I don't have any immediate insights on the y-offset question... I have not explored .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1448,Availability,avail,available,1448,"aseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API direc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:655,Deployability,release,release,655,"This sounds very interesting! I'm afraid I don't have any immediate insights on the y-offset question... I have not explored .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1130,Deployability,release,release,1130,"ed .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not enti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1334,Energy Efficiency,reduce,reduce,1334,"aseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API direc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1243,Integrability,interface,interface,1243,"t seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1649,Integrability,wrap,wrap,1649,"ady got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API directly then it would be better to do so in a few weeks rather contend with the API for v0.1.2... since it is being revised and improved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1822,Performance,perform,performed,1822,"ady got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API directly then it would be better to do so in a few weeks rather contend with the API for v0.1.2... since it is being revised and improved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1973,Performance,perform,performed,1973,"ady got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API directly then it would be better to do so in a few weeks rather contend with the API for v0.1.2... since it is being revised and improved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203
https://github.com/qupath/qupath/issues/265#issuecomment-459978504:743,Modifiability,layers,layers,743,"This .mrxs file when opened in QuPath, I can only see a single compressed slice at level 0, but no stack. If open in CaseViewer, I can switch the view mode to see either the same single compressed slice, or 3D z-stack slice view. The compressed single slice is a little bit quirky because the neurons body in z-stack is totally solid black, while on compressed single slice the neuron body are lighter in center than outer part. My goal is to get the 3D stack image data, not the single compressed slice, into Matlab workspace for further usage (e.g., to make an imaris file for 3D image filament tracing), that’s why I try to analyze the source file to dig them out. In the extracted images I found that there are 9 levels, each level has 31 layers: The first layer is 128 tiles forming just the single compressed slice, while the layer 2-layer 31 correspond to the z-stack of 30 slices each formed by 128 tiles. What I see on QuPath is only the first layer: the single compressed slice, but CaseViewer can show both. I have exported all the tiles at all levels (although I only need level0) and manage to calculate the arrangement of the placement for each tile in the context of whole slide image. Apart from concatenating tiles into a camera snapshot, with the meta information below, I am able to deal with the merging overlapping distance between camera snapshot. DIGITIZER_WIDTH = 302;; DIGITIZER_HEIGHT = 252;; VIMSLIDE_SLIDE_BITDEPTH = 8;; CameraImageDivisionsPerSide = 8;; COMPRESSSED_STITCHING_TABLE_WIDTH = 68;; COMPRESSSED_STITCHING_TABLE_HEIGHT = 195;; COMPRESSSED_STITCHING_ORIG_CAMERA_TILE_WIDTH = 2416;; COMPRESSSED_STITCHING_ORIG_CAMERA_TILE_HEIGHT = 2016;; OVERLAP_X = 146.831304347826;; OVERLAP_Y = 146.831304347826;; COMPRESSED_STITCHING_ORIG_CAMERA_TILE_OVERLAP_X = 140;; COMPRESSED_STITCHING_ORIG_CAMERA_TILE_OVERLAP_Y = 140;; COMPRESSED_STITCHING_ORIG_SLIDE_SCANNED_AREA_IN_PIXELS__LEFT = 83669;; COMPRESSED_STITCHING_ORIG_SLIDE_SCANNED_AREA_IN_PIXELS__TOP = 216110;; COMPRESSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459978504
https://github.com/qupath/qupath/issues/266#issuecomment-461090032:67,Availability,error,error,67,".qpdata files are files full of objects, not the image itself. The error you are getting is probably QuPath trying to find the same file path to the _image_ file. In general, it is best to store the images within the project folder, and transfer the entire project folder. Regardless, you should be able to look at your data again, even with a completely new project. Just create the project, import the images again, and then copy the qpdata files into the ""data"" folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461090032
https://github.com/qupath/qupath/issues/266#issuecomment-461094561:175,Usability,simpl,simply,175,"When I attempt to create a new project, and open the folder containing the .tif image file, I get a dialogue box telling me the project directory must be empty. However I can simply open the .tif image in qupath if that helps. In that the originial .tif will open, without the analyses or objects overlayed. Each .tif file and its correlative .qpdata file are stored together in the same folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461094561
https://github.com/qupath/qupath/issues/266#issuecomment-461098234:154,Modifiability,portab,portable,154,"Yes, you have to create the project, then copy the images into the project.; Sorry for not being clearer on the order. Or don't bother making the project portable and just import the tif from; wherever it currently is. Then create a data folder and put the qpdata file; in it. In the end, you just need an image with name X ""in your project,""; and a qpdata file with name X in the data folder. On Wed, Feb 6, 2019, 8:43 AM Clemonsg109 <notifications@github.com wrote:. > When I attempt to create a new project, and open the folder containing the; > .tif image file, I get a dialogue box telling me the project directory must; > be empty. However I can simply open the .tif image in qupath if that helps.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/266#issuecomment-461094561>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-Ty73DDH2yTiSdH3yk3EKsJTz5gPks5vKwZEgaJpZM4allUl>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461098234
https://github.com/qupath/qupath/issues/266#issuecomment-461098234:97,Usability,clear,clearer,97,"Yes, you have to create the project, then copy the images into the project.; Sorry for not being clearer on the order. Or don't bother making the project portable and just import the tif from; wherever it currently is. Then create a data folder and put the qpdata file; in it. In the end, you just need an image with name X ""in your project,""; and a qpdata file with name X in the data folder. On Wed, Feb 6, 2019, 8:43 AM Clemonsg109 <notifications@github.com wrote:. > When I attempt to create a new project, and open the folder containing the; > .tif image file, I get a dialogue box telling me the project directory must; > be empty. However I can simply open the .tif image in qupath if that helps.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/266#issuecomment-461094561>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-Ty73DDH2yTiSdH3yk3EKsJTz5gPks5vKwZEgaJpZM4allUl>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461098234
https://github.com/qupath/qupath/issues/266#issuecomment-461098234:652,Usability,simpl,simply,652,"Yes, you have to create the project, then copy the images into the project.; Sorry for not being clearer on the order. Or don't bother making the project portable and just import the tif from; wherever it currently is. Then create a data folder and put the qpdata file; in it. In the end, you just need an image with name X ""in your project,""; and a qpdata file with name X in the data folder. On Wed, Feb 6, 2019, 8:43 AM Clemonsg109 <notifications@github.com wrote:. > When I attempt to create a new project, and open the folder containing the; > .tif image file, I get a dialogue box telling me the project directory must; > be empty. However I can simply open the .tif image in qupath if that helps.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/266#issuecomment-461094561>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-Ty73DDH2yTiSdH3yk3EKsJTz5gPks5vKwZEgaJpZM4allUl>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461098234
https://github.com/qupath/qupath/issues/266#issuecomment-461103648:205,Usability,simpl,simple,205,"So, after creating a project with the proper .tif file, how would I add the existing .qpdata to the project in such a way that it overlays with the .tif file? I'm really sorry, as I am sure this is really simple, I'm a cell biologist and not computer savvy at all",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461103648
https://github.com/qupath/qupath/issues/266#issuecomment-461113578:2,Usability,simpl,simply,2,"I simply opened a .tif file in qupath, then used the points tool to put counting dots over cell images. When I would finish and image I would save the file by clicking ""save"" and saving the .qpdata file right below the original .tif I was counting from. I'm not sure if this is helpful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461113578
https://github.com/qupath/qupath/issues/266#issuecomment-461120253:8,Safety,safe,safely,8,"I would safely estimate 200+ .qpdata files, and all .qpdata files are saved right below their respective .tifs in their respective folders.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461120253
https://github.com/qupath/qupath/issues/266#issuecomment-461120819:725,Performance,load,loaded,725,"Ah, I wasn't aware the naming changed when not using a project... but it seemed to work for me with CZI files.; Steps.; 1. Open a bunch of individual images in QuPath, save .qpdata files for them.; 2. Close QuPath (not really necessary, but eh); 3. Open QuPath and Create project from the Project tab.; 4. Go to the empty folder used to create the new project and add ""data"" and ""images"" folders; 5. Copy all .qpdata files (with the exact same name as the images) into the ""data"" folder; 6. Copy all (in my case czi) image files to the images folder; 7. Back in QuPath, click Import images in the Project tab, and select all of the images in the ""images"" folder. Import them.; 8. At this point, for my files, all of the data loaded to the appropriate image. Again, CZI images rather than TIF, so not sure about the naming scheme. I suppose he might have renamed the .qpdata file rather than left the name the same as the image? That _would_ be a problem!. Edit: if Clemsonsg109 is attempting this, you have already done steps 1 and 2 :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461120819
https://github.com/qupath/qupath/issues/266#issuecomment-461126113:10,Safety,safe,safely,10,"> I would safely estimate 200+ .qpdata files, and all .qpdata files are saved right below their respective .tifs in their respective folders. Hmmm, but that is not all the same folder...?. I ask because this could probably be resolved in a script, or with a change to QuPath to search for missing files in the same directory as the .qpdata file. Because you say it's urgent, the second option may not work for you. The first option requires knowing exactly how the files are arranged... and also the file format (if you are using Bio-Formats to read them rather than OpenSlide, the process may need to be slightly different). The operating system would also help (Windows/Linux/macOS). But @Svidro 's approach would be the most straightforward and fastest if it works for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461126113
https://github.com/qupath/qupath/issues/266#issuecomment-461156733:455,Performance,perform,perform,455,"The schema is:; 1)open .tif of the slide I wished to count in qupath (ie 1.tif); 2)use points tool to count the slide ; 3)after completing the slide, clicking file>save and naming the file ""1 complete.qpdata""; 4)this file would then be saved right below its respective original .tif image. this is the process I used to count many slides with the expectation that i would go back into qupath and take the data from my counts at the end of the endeavor to perform statistical analysis on etc.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461156733
https://github.com/qupath/qupath/issues/266#issuecomment-461156799:213,Performance,load,loading,213,"Ah, well, the above option I mentioned will only work if you fix the names. I use Bulk Rename Utility for that on Windows systems, but you could also manually edit the names. I am not good enough with the .qpdata loading system to figure out a script for that :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461156799
https://github.com/qupath/qupath/issues/266#issuecomment-461161849:921,Usability,clear,clear,921,"Basically, the .qpdata file contains a full path to your image. If your image isn't there (e.g. because you moved the image, or changed to another computer) then this will fail. The project also contains the full path to the image, but it only needs to match the _name_ of the image with the name of the .qpdata file, and the .qpdata files are all stored in a folder called 'data'. So if you create a new project, add all your images based on wherever they are currently (so they have the right paths), then you only need to make sure that .qpdata file names correspond with the image names. Pop these .qpdata files inside the 'data' folder of the project and all should be well. That being said, strictly speaking you don't need to do any of this if you only need to extract points from a .qpdata file... it's possible to write a script that just extracts the points without needing to open the image at all. What isn't clear to me is where exactly your .tif files are relative to one another. Is it 200 .tif files in one folder, or 200 folders, or spread across subfolders of folders....?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461161849
https://github.com/qupath/qupath/issues/266#issuecomment-461170872:63,Testability,test,tested,63,"Here is an _extremely_ quickly put together script that I have tested precisely once... may or may not do what it is meant to. But basically you'd create an entirely new project, go to _Automate &rarr; Show script editor_ and paste the contents there. When you run it, you should be prompted to select a folder. Choose the _base_ folder that all your .qpdata files are inside (doesn't matter if they are in subfolders). Note that this assumes that _all_ the .qpdata files are worth using; you may want to delete any extra .qpdata files if that is not the case. The script should then search (recursively) for all .qpdata files that it can find, and all .tif files that it can find, somewhere below the folder you selected (don't choose something like C:/ or it will take a _long_ time). It then peaks inside the .qpdata file, checks what .tif file it is associated with, and if it finds a match it will add the .tif file to the project and copy the .qpdata file to the 'data' folder where it belongs. Then your project should be fully formed and ready to go. You could just try it... but ideally not on the only copy of your data, lest it go badly. However I _think_ it works. ```groovy; import javafx.application.Platform; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.helpers.DisplayHelpers; import qupath.lib.io.PathIO; import qupath.lib.projects.ProjectIO; import qupath.lib.projects.ProjectImageEntry. import java.awt.image.BufferedImage. // Get the current project; def project = getProject(); if (project == null) {; DisplayHelpers.showErrorMessage(""Project from .qpdata"", ""Create a project first!""); return; }. // Get the base directory; def dirBase = QuPathGUI.getSharedDialogHelper().promptForDirectory(null). // Get all the .qpdata files; def qpdataFiles = new ArrayList<File>(); def tiffFiles = new ArrayList<File>(); dirBase.eachFileRecurse {; if (!it.isFile()); return; if (it.getName().endsWith('.qpdata')); qpdataFiles << it; else if (it.getName().endsWith('.tif')); tiffFiles",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461170872
https://github.com/qupath/qupath/issues/266#issuecomment-461186493:558,Integrability,rout,route,558,"Alternatively, I could try to figure out how to do an automated recount and just run all of the .tif files through this and scrap my manual counts. Goal is just counting blood smear slides to determine the ratio of sickled vs. nonsickled RBCs in each frame. Ie. nice round cells in each frame vs. football shaped or shriveled cells. I was attracted to qupath as it seemed like a user-friendly way to get into automated cell counts, though I quickly realized I was over my head in trying to achieve this and just used it's points tool and went the old-school route.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461186493
https://github.com/qupath/qupath/issues/266#issuecomment-461186493:379,Usability,user-friendly,user-friendly,379,"Alternatively, I could try to figure out how to do an automated recount and just run all of the .tif files through this and scrap my manual counts. Goal is just counting blood smear slides to determine the ratio of sickled vs. nonsickled RBCs in each frame. Ie. nice round cells in each frame vs. football shaped or shriveled cells. I was attracted to qupath as it seemed like a user-friendly way to get into automated cell counts, though I quickly realized I was over my head in trying to achieve this and just used it's points tool and went the old-school route.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461186493
https://github.com/qupath/qupath/issues/266#issuecomment-461190784:0,Deployability,Update,Updated,0,"Updated script to try...; ```groovy; import javafx.application.Platform; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.helpers.DisplayHelpers; import qupath.lib.io.PathIO; import qupath.lib.projects.ProjectIO; import qupath.lib.projects.ProjectImageEntry. import java.awt.image.BufferedImage. // Get the current project; def project = getProject(); if (project == null) {; DisplayHelpers.showErrorMessage(""Project from .qpdata"", ""Create a project first!""); return; }. // Get the base directory; def dirBase = QuPathGUI.getSharedDialogHelper().promptForDirectory(null). // Get all the .qpdata files; def qpdataFiles = new ArrayList<File>(); dirBase.eachFileRecurse {; if (!it.isFile()); return; if (it.getName().endsWith('.qpdata')); qpdataFiles << it; }. // For each .qpdata file, look for the image & copy it to the data folder; def entries = new ArrayList<ProjectImageEntry>(); for (file in qpdataFiles) {; // Look for an image with the same name; def path = PathIO.readSerializedServerPath(file); def name = new File(path).getName(); def tiff = new File(file.getParentFile(), name); if (!tiff.exists()) {; print('Could not find file for ' + name); continue; }; // Create a new image entry & copy the bytes; def imageName = tiff.getParentFile().getName() + ""-"" + name.replace('.tif', ''); def entry = new ProjectImageEntry<BufferedImage>(project, tiff.getAbsolutePath(), imageName, Collections.emptyMap()); def fileData = QuPathGUI.getImageDataFile(project, entry); fileData.bytes = file.bytes; entries << entry; }; project.addAllImages(entries); ProjectIO.writeProject(project). Platform.runLater {; getQuPath().setProject(null); getQuPath().setProject(project); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461190784
https://github.com/qupath/qupath/issues/266#issuecomment-461196550:71,Safety,detect,detection,71,"Ah, yes, that sounds like it would be very difficult for standard cell detection methods. Good luck counting! Or you might be able to use an ImageJ script to manipulate each image into a state where it can be processed and the results sent back to QuPath... but it might be easier to just count if the fields are small.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461196550
https://github.com/qupath/qupath/issues/266#issuecomment-461197765:241,Availability,toler,tolerance,241,"It is a complete guess without seeing your image, but I'd try:; * Send the image to ImageJ: https://github.com/qupath/qupath/wiki/Working-with-ImageJ; * _Process &rarr; Find Maxima_ and preview the point selection. Experiment with the noise tolerance, with the goal of _detecting_ the white center.; * If the count looks basically ok, make sure the output type is 'Point Selection' and click 'OK'; * Use _Plugins &rarr; Send ROI to QuPath_ to initialize the point selection; * Edit the points in QuPath as necessary",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461197765
https://github.com/qupath/qupath/issues/266#issuecomment-579362758:290,Availability,repair,repair-projects-by-finding-missingmoved-images,290,Projects in v0.2.0-m8 are quite different from in v0.1.2. The above instructions won't work and the awkward workarounds should no longer be necessary. I've written a bit about how to update paths since v0.2.0-m4 [here](https://petebankhead.github.io/qupath/2019/08/20/fourth-milestone.html#repair-projects-by-finding-missingmoved-images).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-579362758
https://github.com/qupath/qupath/issues/266#issuecomment-579362758:183,Deployability,update,update,183,Projects in v0.2.0-m8 are quite different from in v0.1.2. The above instructions won't work and the awkward workarounds should no longer be necessary. I've written a bit about how to update paths since v0.2.0-m4 [here](https://petebankhead.github.io/qupath/2019/08/20/fourth-milestone.html#repair-projects-by-finding-missingmoved-images).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-579362758
https://github.com/qupath/qupath/issues/267#issuecomment-461524342:481,Deployability,update,updated,481,"Do you have any more information on what you are doing (in QuPath),; operating system and version, etc?. Does the unresponsiveness occur before you try to run anything? Are other; programs running in the background?. On Thu, Feb 7, 2019, 9:31 AM Bjarne Thorsted <notifications@github.com>; wrote:. > After working some time (can be anything from a few minutes to half an; > hour) the menus stop responding. The only fix for me is to save and restart; > the software. I've recently updated to the latest dev build and the issue; > persists here.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/267>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-QSuGR2aghxKXt5rME9eLnnFPi-Wks5vLGL0gaJpZM4anysq>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461524342
https://github.com/qupath/qupath/issues/267#issuecomment-461525894:29,Deployability,update,updated,29,"Yeah, I am using Windows 10 (updated regularly) and it doesn't matter if I have several or no programs running in the background. I am doing complete image annotations on whole slide scans, so I have a lot of rather large and complex annotations. The unresponsiveness happens after I have been doing the annotations. I am also using a stylus to help with getting the finer details right in my annotations.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461525894
https://github.com/qupath/qupath/issues/267#issuecomment-461559724:308,Safety,Detect,Detection,308,"Ah, yes, I have seen that before once you get a large number of points defining the annotations. I think if I waited 30 minutes or so it came back, but it has been a while since I experienced that. I don't recall being able to do much about it either, though smoothing the annotations (if I was doing Tissue Detection) did help. It was especially noticeable when editing many annotations in very large TMAs. I also have a much better computer now, so that could be part of it! Hard to compare after all of the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461559724
https://github.com/qupath/qupath/issues/267#issuecomment-461569891:187,Availability,down,down,187,"It's hard to tell much here without a clearer idea of what 'a lot of rather large and complex annotations' means, but it may very well be that there are too many vertices that that slows down the rendering too much (on the JavaFX application thread, same as the menus and rest of the GUI). If so it isn't really a bug, but more pushing QuPath with a different application than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences in object types, and why it's not really intended to have very large numbers of annotations. You might try having fewer vertices somehow, perhaps with _Objects &rarr; Simplify annotation shape_ or splitting larger annotations into smaller ones (since annotations outside the field of view do not need to be rendered). Or write a script that periodically converts annotations you won't need to change any more into detections. Or try to leave parts of the image that are particularly complex _unannotated_, and then interpret the unannotated region appropriately later. (I was actually looking into this today for completely different reasons, and may be able to improve the annotation handling somewhat... but it doesn't help you now)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461569891
https://github.com/qupath/qupath/issues/267#issuecomment-461569891:419,Performance,optimiz,optimized,419,"It's hard to tell much here without a clearer idea of what 'a lot of rather large and complex annotations' means, but it may very well be that there are too many vertices that that slows down the rendering too much (on the JavaFX application thread, same as the menus and rest of the GUI). If so it isn't really a bug, but more pushing QuPath with a different application than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences in object types, and why it's not really intended to have very large numbers of annotations. You might try having fewer vertices somehow, perhaps with _Objects &rarr; Simplify annotation shape_ or splitting larger annotations into smaller ones (since annotations outside the field of view do not need to be rendered). Or write a script that periodically converts annotations you won't need to change any more into detections. Or try to leave parts of the image that are particularly complex _unannotated_, and then interpret the unannotated region appropriately later. (I was actually looking into this today for completely different reasons, and may be able to improve the annotation handling somewhat... but it doesn't help you now)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461569891
https://github.com/qupath/qupath/issues/267#issuecomment-461569891:920,Safety,detect,detections,920,"It's hard to tell much here without a clearer idea of what 'a lot of rather large and complex annotations' means, but it may very well be that there are too many vertices that that slows down the rendering too much (on the JavaFX application thread, same as the menus and rest of the GUI). If so it isn't really a bug, but more pushing QuPath with a different application than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences in object types, and why it's not really intended to have very large numbers of annotations. You might try having fewer vertices somehow, perhaps with _Objects &rarr; Simplify annotation shape_ or splitting larger annotations into smaller ones (since annotations outside the field of view do not need to be rendered). Or write a script that periodically converts annotations you won't need to change any more into detections. Or try to leave parts of the image that are particularly complex _unannotated_, and then interpret the unannotated region appropriately later. (I was actually looking into this today for completely different reasons, and may be able to improve the annotation handling somewhat... but it doesn't help you now)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461569891
https://github.com/qupath/qupath/issues/267#issuecomment-461569891:38,Usability,clear,clearer,38,"It's hard to tell much here without a clearer idea of what 'a lot of rather large and complex annotations' means, but it may very well be that there are too many vertices that that slows down the rendering too much (on the JavaFX application thread, same as the menus and rest of the GUI). If so it isn't really a bug, but more pushing QuPath with a different application than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences in object types, and why it's not really intended to have very large numbers of annotations. You might try having fewer vertices somehow, perhaps with _Objects &rarr; Simplify annotation shape_ or splitting larger annotations into smaller ones (since annotations outside the field of view do not need to be rendered). Or write a script that periodically converts annotations you won't need to change any more into detections. Or try to leave parts of the image that are particularly complex _unannotated_, and then interpret the unannotated region appropriately later. (I was actually looking into this today for completely different reasons, and may be able to improve the annotation handling somewhat... but it doesn't help you now)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461569891
https://github.com/qupath/qupath/issues/267#issuecomment-461569891:673,Usability,Simpl,Simplify,673,"It's hard to tell much here without a clearer idea of what 'a lot of rather large and complex annotations' means, but it may very well be that there are too many vertices that that slows down the rendering too much (on the JavaFX application thread, same as the menus and rest of the GUI). If so it isn't really a bug, but more pushing QuPath with a different application than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences in object types, and why it's not really intended to have very large numbers of annotations. You might try having fewer vertices somehow, perhaps with _Objects &rarr; Simplify annotation shape_ or splitting larger annotations into smaller ones (since annotations outside the field of view do not need to be rendered). Or write a script that periodically converts annotations you won't need to change any more into detections. Or try to leave parts of the image that are particularly complex _unannotated_, and then interpret the unannotated region appropriately later. (I was actually looking into this today for completely different reasons, and may be able to improve the annotation handling somewhat... but it doesn't help you now)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461569891
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:806,Availability,down,down,806,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:277,Energy Efficiency,monitor,monitor,277,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:489,Energy Efficiency,power,powerful,489,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:1041,Performance,optimiz,optimized,1041,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:110,Safety,Detect,Detections,110,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:1543,Safety,detect,detections,1543,"y to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://github.com/qupath/qupath/issues/267#issuecomment-461569891>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/Af9pL416T51gEDAwcX1cjYHyo1TwguiQks5vLIKAgaJpZM4anysq>; .",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:655,Usability,clear,clearer,655,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-461575920:1293,Usability,Simpl,Simplify,1293,"y to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://github.com/qupath/qupath/issues/267#issuecomment-461569891>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/Af9pL416T51gEDAwcX1cjYHyo1TwguiQks5vLIKAgaJpZM4anysq>; .",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920
https://github.com/qupath/qupath/issues/267#issuecomment-518634600:124,Performance,perform,performance,124,Closing this issue due to lack of activity and because it's not clear if there's actually a bug or if it's just an inherent performance limitation of using vector-based annotations.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-518634600
https://github.com/qupath/qupath/issues/267#issuecomment-518634600:64,Usability,clear,clear,64,Closing this issue due to lack of activity and because it's not clear if there's actually a bug or if it's just an inherent performance limitation of using vector-based annotations.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-518634600
https://github.com/qupath/qupath/issues/268#issuecomment-467658427:152,Safety,detect,detection,152,"It would help to have the script to go off of, but there's a good chance you aren't selecting the annotation as part of the script (before running cell detection). I am not sure why your annotation export would contain no results if you have annotations. More info!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467658427
https://github.com/qupath/qupath/issues/268#issuecomment-467675397:99,Testability,test,test,99,"Ah, that is possible. The script looks good otherwise. Unfortunately I don't have any SCN files to test things on. However, the fact that some of the thumbnails show whole slide images (including label) while others are only the tissue suggests there might be some different types of SCN files in play. . I am not sure how run for project works in these situations. Have to see what Pete thinks. I take it running that script on your current image both generates the *mostly empty text file, and an annotation plus a bunch of cell objects in the Hierarchy?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467675397
https://github.com/qupath/qupath/issues/268#issuecomment-467906370:479,Safety,detect,detecting,479,"scn file are pyramidal. I only selected the ""only tissue"" images (corresponding to the maximum magnification/resolution) to run the project on. ; ![selected for project](https://user-images.githubusercontent.com/47432131/53500012-2949e400-3a6f-11e9-8ebe-f29757c2d817.JPG); There are no objects in the Hierarchy or on the image; ![hierarchy](https://user-images.githubusercontent.com/47432131/53500109-50a0b100-3a6f-11e9-8577-d70b98b49a08.JPG); However, the script is running and detecting objects as you can see in the script editor. I added the ""merging annotation results"" script and now the merged txt file has all the annotations, although the single txt files still don't. Which is fine, since I only want the merged file.; ![exported txt file](https://user-images.githubusercontent.com/47432131/53500335-bbea8300-3a6f-11e9-9e55-76e6e881da5f.JPG); Now I want to know if there was a way to have the original image name exported with the annotations instead of the maximum resolution image name.; ![image name](https://user-images.githubusercontent.com/47432131/53500384-d45a9d80-3a6f-11e9-82ce-83c16e53627f.JPG); And if you could help me modify the merging annotation script so that instead of prompting for a directory file it saves the merged annotations on the project file directly. Do I have to replace; def dirResults = QuPathGUI.getSharedDialogHelper().promptForDirectory(); with; def dirResults = buildFilePath(PROJECT_BASE_DIR, 'annotation results'); ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467906370
https://github.com/qupath/qupath/issues/268#issuecomment-467951358:236,Availability,down,downstream,236,"Haha, I tried to do that too once! I never did pursue it though, since it only needed to be run once at the end of a project. The dirResults object is not a file path though, so manually selecting a directory means at least some of the downstream code needs to be rewritten. I will take another crack at it unless Pete gets to it first :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467951358
https://github.com/qupath/qupath/issues/268#issuecomment-467957281:267,Testability,test,tested,267,"Oh, that was actually easier than I thought. This shows the code that needs to change:; ```; //def dirResults = QuPathGUI.getSharedDialogHelper().promptForDirectory(); def dirResults = new File(buildFilePath(PROJECT_BASE_DIR, 'annotation results')); ```. I have only tested it once, so please let me know if that works for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467957281
https://github.com/qupath/qupath/issues/268#issuecomment-467970888:204,Testability,test,test,204,"And I'll do a quick poke @petebankhead as far as getting the whole slide file name rather than the current image name. All of my current images have the same names as their files, so I can't really run a test. Only suggestion I have there is to try this: ; https://gist.github.com/Svidro/5e4c29630e8d2ef36988184987d1028f#file-get-current-image-name-without-extension-groovy; and see if that gives you the correct result.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/268#issuecomment-467970888
https://github.com/qupath/qupath/issues/270#issuecomment-467853740:531,Availability,error,error,531,"The crashes on Mojave sound a lot like this: https://twitter.com/petebankhead/status/1080743299454025728; So if you upgrade your JDK and rebuild QuPath using Gradle then that might be enough. The inability to handle the .scn files would be because, if the preferences are reset, then the extensions directory gets reset also. Reinstalling Bio-Formats has the side-effect of also setting the extensions directory. For the not-opening issue, if you're able to start QuPath from the command line then you should get a more meaningful error message. It might be trouble in the extensions directory or some corrupting preference. Opening v0.1.2 and using it to reset the preferences again might help resolve the not-opening problem. Finally, if all else fails but you can wait a week, then I should have a bit more info to share then...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-467853740
https://github.com/qupath/qupath/issues/270#issuecomment-467853740:116,Deployability,upgrade,upgrade,116,"The crashes on Mojave sound a lot like this: https://twitter.com/petebankhead/status/1080743299454025728; So if you upgrade your JDK and rebuild QuPath using Gradle then that might be enough. The inability to handle the .scn files would be because, if the preferences are reset, then the extensions directory gets reset also. Reinstalling Bio-Formats has the side-effect of also setting the extensions directory. For the not-opening issue, if you're able to start QuPath from the command line then you should get a more meaningful error message. It might be trouble in the extensions directory or some corrupting preference. Opening v0.1.2 and using it to reset the preferences again might help resolve the not-opening problem. Finally, if all else fails but you can wait a week, then I should have a bit more info to share then...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-467853740
https://github.com/qupath/qupath/issues/270#issuecomment-467853740:537,Integrability,message,message,537,"The crashes on Mojave sound a lot like this: https://twitter.com/petebankhead/status/1080743299454025728; So if you upgrade your JDK and rebuild QuPath using Gradle then that might be enough. The inability to handle the .scn files would be because, if the preferences are reset, then the extensions directory gets reset also. Reinstalling Bio-Formats has the side-effect of also setting the extensions directory. For the not-opening issue, if you're able to start QuPath from the command line then you should get a more meaningful error message. It might be trouble in the extensions directory or some corrupting preference. Opening v0.1.2 and using it to reset the preferences again might help resolve the not-opening problem. Finally, if all else fails but you can wait a week, then I should have a bit more info to share then...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-467853740
https://github.com/qupath/qupath/issues/270#issuecomment-468670846:797,Availability,error,error,797,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846
https://github.com/qupath/qupath/issues/270#issuecomment-468670846:134,Deployability,install,installed,134,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846
https://github.com/qupath/qupath/issues/270#issuecomment-468670846:162,Deployability,install,installed,162,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846
https://github.com/qupath/qupath/issues/270#issuecomment-468670846:392,Deployability,install,install,392,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846
https://github.com/qupath/qupath/issues/270#issuecomment-468670846:589,Deployability,update,update,589,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846
https://github.com/qupath/qupath/issues/270#issuecomment-468670846:1028,Deployability,upgrade,upgrade,1028,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846
https://github.com/qupath/qupath/issues/270#issuecomment-468670846:694,Performance,load,load,694,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846
https://github.com/qupath/qupath/issues/270#issuecomment-468673689:138,Deployability,install,installed,138,"v0.0.6 had (accidentally!) a different name, `qupath-bioformats-extension.jar` rather than `qupath-extension-bioformats.jar`. Having both installed may be the cause of the trouble. It's not possible to install multiple copies of any other version of the extension (without renaming them). A couple of related .scn problems came up recently:; * https://github.com/qupath/qupath/issues/271; * https://github.com/qupath/qupath-bioformats-extension/issues/10. More info to come when I have time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468673689
https://github.com/qupath/qupath/issues/270#issuecomment-468673689:202,Deployability,install,install,202,"v0.0.6 had (accidentally!) a different name, `qupath-bioformats-extension.jar` rather than `qupath-extension-bioformats.jar`. Having both installed may be the cause of the trouble. It's not possible to install multiple copies of any other version of the extension (without renaming them). A couple of related .scn problems came up recently:; * https://github.com/qupath/qupath/issues/271; * https://github.com/qupath/qupath-bioformats-extension/issues/10. More info to come when I have time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468673689
https://github.com/qupath/qupath/issues/270#issuecomment-470479317:68,Deployability,install,installing,68,"Thanks Pete.; I removed the `qupath-extension-bioformats.jar`before installing the new version, so having 2 versions at the same time should be reason why I cannot open .scn file with the v0.0.6 and v0.0.7 version. If you have time and can find a solution for that it would be great. At the moment I am doing fine with v0.0.5. Many thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-470479317
https://github.com/qupath/qupath/issues/271#issuecomment-467942230:100,Availability,down,downloaded,100,"Not really a solution, but a thought... they just updated BioFormats to 6.0.0, so I am guessing you downloaded the newest version on the new computer. You might try copying the BioFormats jar files from your Extensions folder on the older PC, and using them instead to see if it allows you to open the files again. If that works, there was probably something in the update that either messed up the .scn reader on the BioFormats end, or broke some kind of connection in the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467942230
https://github.com/qupath/qupath/issues/271#issuecomment-467942230:50,Deployability,update,updated,50,"Not really a solution, but a thought... they just updated BioFormats to 6.0.0, so I am guessing you downloaded the newest version on the new computer. You might try copying the BioFormats jar files from your Extensions folder on the older PC, and using them instead to see if it allows you to open the files again. If that works, there was probably something in the update that either messed up the .scn reader on the BioFormats end, or broke some kind of connection in the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467942230
https://github.com/qupath/qupath/issues/271#issuecomment-467942230:366,Deployability,update,update,366,"Not really a solution, but a thought... they just updated BioFormats to 6.0.0, so I am guessing you downloaded the newest version on the new computer. You might try copying the BioFormats jar files from your Extensions folder on the older PC, and using them instead to see if it allows you to open the files again. If that works, there was probably something in the update that either messed up the .scn reader on the BioFormats end, or broke some kind of connection in the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467942230
https://github.com/qupath/qupath/issues/271#issuecomment-467955970:188,Testability,test,tests,188,"@petebankhead Might want to keep track of this one in case it is an extension thing rather than a BioFormats thing. If @asasama12 is willing to share a couple of the files I could do some tests and maybe open a ticket on the BioFormats forum, but without the files there isn't much I can do.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467955970
https://github.com/qupath/qupath/issues/272#issuecomment-469470464:153,Safety,detect,detection,153,"Not all commands currently show up in the workflow viewer. You would almost certainly want something like selectAnnotations() before your watershed cell detection (unless you want to manually select something before you run the script), and runClassifier(""classifierlocation"") for the classification. More on that here:; https://groups.google.com/d/msg/qupath-users/dgAabXK0eBU/W4Ex4KiQDAAJ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/272#issuecomment-469470464
https://github.com/qupath/qupath/issues/272#issuecomment-469559277:40,Testability,log,logged,40,"The appropriate classifier commands are logged when you first save it. So if you can find the image you had open at that time, you should find the commands in the workflow there. The scripts & explanations in the supplementary material [here](https://www.nature.com/articles/s41598-017-17204-5#Sec15) might also help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/272#issuecomment-469559277
https://github.com/qupath/qupath/issues/273#issuecomment-469974740:95,Testability,test,test,95,"Would need a bit more information on what you tried, or a copy of the file hosted somewhere to test. There are a few other posts you could search through about scn files as well.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/273#issuecomment-469974740
https://github.com/qupath/qupath/issues/274#issuecomment-477971675:43,Energy Efficiency,reduce,reduce-annotations,43,Discussion now at https://forum.image.sc/t/reduce-annotations/24305,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/274#issuecomment-477971675
https://github.com/qupath/qupath/issues/278#issuecomment-471602054:124,Deployability,release,release,124,According to this - https://github.com/qupath/qupath/issues/270 - the issue may already be resolved in the latest milestone release. See https://qupath.github.io/QuPath-v0.2.0. Also potential duplicate of the (somewhat vague...) https://github.com/qupath/qupath/issues/273,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471602054
https://github.com/qupath/qupath/issues/278#issuecomment-471603918:26,Deployability,upgrade,upgrade,26,"Thanks, I will attempt to upgrade and report if it helps (I admit I was afraid to upgrade so not to introduce new bugs 😄 )",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471603918
https://github.com/qupath/qupath/issues/278#issuecomment-471603918:82,Deployability,upgrade,upgrade,82,"Thanks, I will attempt to upgrade and report if it helps (I admit I was afraid to upgrade so not to introduce new bugs 😄 )",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471603918
https://github.com/qupath/qupath/issues/278#issuecomment-471605278:70,Deployability,update,updates,70,"Sounds like a healthy & commendable fear :) But there will be no more updates to v0.1.2, so any fix (if not already there) will be through that path.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471605278
https://github.com/qupath/qupath/issues/278#issuecomment-471611800:35,Deployability,upgrade,upgrade,35,Thanks @petebankhead following the upgrade it works like charm 👍,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471611800
https://github.com/qupath/qupath/issues/278#issuecomment-1072251008:146,Deployability,release,release,146,"@One-sixth this sounds like a duplicate of https://github.com/qupath/qupath/issues/904. The underlying bug has been fixed, but needs a new QuPath release. In the meantime, you can [add your images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) to open them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-1072251008
https://github.com/qupath/qupath/issues/278#issuecomment-1072298270:115,Deployability,release,release,115,"> @One-sixth this sounds like a duplicate of #904; > ; > The underlying bug has been fixed, but needs a new QuPath release. In the meantime, you can [add your images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) to open them. Thanks a lot, problem solved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-1072298270
https://github.com/qupath/qupath/issues/279#issuecomment-472005071:615,Deployability,install,installed,615,"Are you able to share an example file that doesn't work? It sounds like the problem is in either QuPath or Bio-Formats, and much has changed in both. Either way, since the log isn't recording anything very obviously wrong I'd need to test it with a failing file to identify where it is going wrong. If it's not possible to share a file, then I'd be trying to fix it through guesswork... to have a chance, I'd need to know more about how it works in v0.1.2, e.g.; * under the 'Image' tab, what is the 'Server type' when the image is correctly opened?; * if the type is 'Bio-Formats', which version of Bio-Formats is installed? v0.2.0 is using Bio-Formats v6.0.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472005071
https://github.com/qupath/qupath/issues/279#issuecomment-472005071:172,Testability,log,log,172,"Are you able to share an example file that doesn't work? It sounds like the problem is in either QuPath or Bio-Formats, and much has changed in both. Either way, since the log isn't recording anything very obviously wrong I'd need to test it with a failing file to identify where it is going wrong. If it's not possible to share a file, then I'd be trying to fix it through guesswork... to have a chance, I'd need to know more about how it works in v0.1.2, e.g.; * under the 'Image' tab, what is the 'Server type' when the image is correctly opened?; * if the type is 'Bio-Formats', which version of Bio-Formats is installed? v0.2.0 is using Bio-Formats v6.0.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472005071
https://github.com/qupath/qupath/issues/279#issuecomment-472005071:234,Testability,test,test,234,"Are you able to share an example file that doesn't work? It sounds like the problem is in either QuPath or Bio-Formats, and much has changed in both. Either way, since the log isn't recording anything very obviously wrong I'd need to test it with a failing file to identify where it is going wrong. If it's not possible to share a file, then I'd be trying to fix it through guesswork... to have a chance, I'd need to know more about how it works in v0.1.2, e.g.; * under the 'Image' tab, what is the 'Server type' when the image is correctly opened?; * if the type is 'Bio-Formats', which version of Bio-Formats is installed? v0.2.0 is using Bio-Formats v6.0.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472005071
https://github.com/qupath/qupath/issues/279#issuecomment-472017812:59,Deployability,Install,Installed,59,"Hi again,. In v0.1.2. the servertype is set as Openslide.; Installed Bio-Formats is 5.9.2. I could share a one-time link with you for an example file (due to privacy concerns).; Do you have a preference?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472017812
https://github.com/qupath/qupath/issues/279#issuecomment-472104490:23,Availability,error,error,23,I encountered the same error using generic tiled pyramidal tifs generated with ImageMagick or libvips. ; Here is an example file:; [Image](https://vanderbilt.box.com/s/s833k4t61ntwmrxu37p4edxpimqzzndm),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472104490
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:833,Availability,ERROR,ERROR,833,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3354,Availability,Down,Downloads,3354,"ication.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3537,Availability,Down,Downloads,3537,"pl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3612,Availability,Down,Downloads,3612,"cessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuP",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3685,Availability,Down,Downloads,3685,"PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:23",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3868,Availability,Down,Downloads,3868,"er.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3890,Availability,ERROR,ERROR,3890,"tion.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3409); at qupath.lib.gui.QuPathGUI$$Lambda$144/0x00000008401ef440.accept(Unknown Source); at org",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:6718,Availability,ERROR,ERROR,6718,tem.java:465); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1380); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.lambda$createChildren$12(ContextMenuContent.java:1333); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer$$Lambda$1392/0x0000000840654440.handle(Unknown Source); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.ba,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7773,Availability,ERROR,ERROR,7773,teSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:8879,Availability,Down,Downloads,8879,olorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9068,Availability,Down,Downloads,9068,th.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.securi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9149,Availability,Down,Downloads,9149,:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); ,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9177,Availability,ERROR,ERROR,9177,uPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9202,Availability,ERROR,ERROR,9202,uPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLa,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9306,Availability,ERROR,ERROR,9306,unLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplicati,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9361,Availability,ERROR,ERROR,9361,unLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplicati,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10467,Availability,Down,Downloads,10467,olorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10656,Availability,Down,Downloads,10656,th.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLo,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10684,Availability,ERROR,ERROR,10684,as(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3243,Deployability,update,update,3243,".java:473); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:4359,Deployability,update,updateHistogramMap,4359, INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:708); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:819); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:554); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1385); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2459); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2368); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3409); at qupath.lib.gui.QuPathGUI$$Lambda$144/0x00000008401ef440.accept(Unknown Source); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchE,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:6781,Deployability,update,updateSuggestedOverlayColorFromThumbnail,6781,ainer.doSelect(ContextMenuContent.java:1380); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.lambda$createChildren$12(ContextMenuContent.java:1333); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer$$Lambda$1392/0x0000000840654440.handle(Unknown Source); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7836,Deployability,update,updateSuggestedOverlayColorFromThumbnail,7836,.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9424,Deployability,update,updateSuggestedOverlayColorFromThumbnail,9424,thod); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10747,Deployability,update,updateSuggestedOverlayColorFromThumbnail,10747,i.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:850,Performance,load,load,850,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:918,Performance,load,loadLibrary,918,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:1047,Performance,load,loadLibrary,1047," ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:84);",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3232,Performance,Perform,Performing,3232,".java:473); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:410,Security,PASSWORD,PASSWORD,410,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:2579,Security,secur,security,2579,"tance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:84); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1198); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:723); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:473); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: B",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:2588,Security,Access,AccessController,2588,"ingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:84); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1198); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:723); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:473); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats fo",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7348,Security,secur,security,7348,EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runL,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7357,Security,Access,AccessController,7357,anager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Platf,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:8403,Security,secur,security,8403,om.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.view,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:8412,Security,Access,AccessController,8412,.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathView,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9991,Security,secur,security,9991,ating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.vie,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10000,Security,Access,AccessController,10000,adata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathVie,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:11314,Security,secur,security,11314,i.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:11323,Security,Access,AccessController,11323,i.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:198,Testability,log,log,198,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472375699:785,Testability,LOG,LOG,785,"Hi again,. I compiled the pete-java11 branch (after some ubuntu debugging). Sadly I had to compile it on a local laptop with low memory (until I get back to the lab). So take this into account (the log suggest that RAM is the problem on this machine). Here are my file links:. cropped : https://owncloud.ulb.ac.be/index.php/s/ReltLIepwxOZ2RK; fullsize : https://owncloud.ulb.ac.be/index.php/s/VhuHZheRNHgdUqk; PASSWORD: qupathBug ; Expires: march 17 2019. On my main machine I noticed that when opening the cropped version, qupath opens it after some minutes of intensive cpu calculations. This seems to suggest that qupath is precomputing something instead of directly opening the file. I tried opening my files and those from NHPatterson. As of yet it seems to still not be working. LOG DUMP; ```; INFO: Bio-Formats version 6.0.0; ERROR: Could not load OpenSlide native libraries; at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2660); at java.base/java.lang.Runtime.loadLibrary0(Runtime.java:829); at java.base/java.lang.System.loadLibrary(System.java:1867); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.openslide.OpenslideServerBuilder.<clinit>(OpenslideServerBuilder.java:87); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method); at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62); at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45); at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:779); at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:721); at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1394); at qupath.lib.images.servers.ImageServerProvider.getIn",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:656,Availability,avail,available,656,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1230,Availability,avail,available,1230,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1093,Deployability,install,installed,1093,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1126,Deployability,install,installing,1126,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1583,Deployability,install,installed,1583,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1039,Integrability,depend,dependent,1039,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1209,Integrability,depend,dependencies,1209,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1320,Integrability,depend,dependencies,1320,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1504,Modifiability,portab,portable,1504,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472470374:939,Performance,load,loaded,939,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:129,Availability,error,error,129,"Thanks @NHPatterson. @petebankhead I tried recompiling the java-11 branch on my main machine, but it keeps failing with the same error.; For my cursiosity, did you try loading the same files with the published 0.1.2 or 0.1.3-SNAPSHOT versions. For example using the later I have the following log after opening everything without issues:. ```; ./QuPath ; 12:25:42.077 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 12:25:42.710 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Open",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1677,Availability,ERROR,ERROR,1677,"avaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB stainin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1745,Availability,avail,available,1745,"Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1815,Availability,ERROR,ERROR,1815,"INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB),",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1883,Availability,avail,available,1883,"elrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1953,Availability,ERROR,ERROR,1953,"] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:2021,Availability,avail,available,2021,"Path/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work before... In any case thanks for trying to adress the issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:2512,Availability,Down,Downloads,2512,"Path/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work before... In any case thanks for trying to adress the issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1505,Deployability,update,update,1505,"athPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:2052,Energy Efficiency,power,power,2052,"Path/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work before... In any case thanks for trying to adress the issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:168,Performance,load,loading,168,"Thanks @NHPatterson. @petebankhead I tried recompiling the java-11 branch on my main machine, but it keeps failing with the same error.; For my cursiosity, did you try loading the same files with the published 0.1.2 or 0.1.3-SNAPSHOT versions. For example using the later I have the following log after opening everything without issues:. ```; ./QuPath ; 12:25:42.077 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 12:25:42.710 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Open",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:737,Performance,cache,cache,737,"Thanks @NHPatterson. @petebankhead I tried recompiling the java-11 branch on my main machine, but it keeps failing with the same error.; For my cursiosity, did you try loading the same files with the published 0.1.2 or 0.1.3-SNAPSHOT versions. For example using the later I have the following log after opening everything without issues:. ```; ./QuPath ; 12:25:42.077 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 12:25:42.710 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Open",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1494,Performance,Perform,Performing,1494,"athPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:293,Testability,log,log,293,"Thanks @NHPatterson. @petebankhead I tried recompiling the java-11 branch on my main machine, but it keeps failing with the same error.; For my cursiosity, did you try loading the same files with the published 0.1.2 or 0.1.3-SNAPSHOT versions. For example using the later I have the following log after opening everything without issues:. ```; ./QuPath ; 12:25:42.077 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 12:25:42.710 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Open",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472813709:2145,Testability,Test,Test,2145,"Path/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work before... In any case thanks for trying to adress the issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709
https://github.com/qupath/qupath/issues/279#issuecomment-472857161:315,Availability,down,downloaded,315,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161
https://github.com/qupath/qupath/issues/279#issuecomment-472857161:380,Availability,error,error,380,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161
https://github.com/qupath/qupath/issues/279#issuecomment-472857161:401,Availability,error,error,401,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161
https://github.com/qupath/qupath/issues/279#issuecomment-472857161:286,Deployability,release,release,286,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161
https://github.com/qupath/qupath/issues/279#issuecomment-472911851:275,Performance,load,loaded,275,"Finally, after source building openslide and openslide-java manually, and syslinking `/usr/lib/openslide.jar` and '/usr/lib/libopenslide-jni.so', JAVAFX was able to build the Openslide imageserver. So I confirm, that the Bug seems fixed under the condition that Openslide is loaded correctly. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472911851
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:609,Availability,error,error,609,"To begin, I disable the two lines:; ```; import qupath.imagej.images.servers.ImagePlusServer; import qupath.imagej.images.servers.ImagePlusServerBuilder. ```; Then I replace the two lines below:. ```; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(); // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```. to:. ```; // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(); ```. Then I run the acript again in QuPath 0.2.0. When import error was removed, the modified ""server"" now can give correct information:. ```; // get size of whole image; int H = server.getHeight(); int W = server.getWidth(); int Z = server.nZSlices() //usually 1; int C = server.nChannels(); int T = server.nTimepoints(); String TU = server.getTimeUnit(); int Magnification = server.getMagnification(); boolean HasPixelSizeMicrons = server.hasPixelSizeMicrons(); int BitsPerPixel = server.getBitsPerPixel(). print(""Height:"" + H) ; print(""Width:"" + W); print(""ZSlices:"" + Z); print(""nChannels:"" + C); print(""nTimepoints:"" + T); print(""TimeUnit:"" + TU); print(""Magnification:"" + Magnification); print(""HasPixelSizeMicrons:"" + HasPixelSizeMicrons). double PixelHeightMicrons; double PixelWidthMicrons; double PixelZSpacingMicrons. if (HasPixelSizeMicrons){; PixelHeightMicrons = server.getPixelHeightMicrons(); print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = server.getPixelWidthMicrons(); print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = server.getZSpacingMicrons(); print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }else{; PixelHeightMicrons = 1.0; print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = 1.0; print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2802,Availability,ERROR,ERROR,2802,"nt(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2809,Availability,Error,Error,2809,"nt(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2941,Availability,ERROR,ERROR,2941,"; }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.cod",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2955,Availability,error,error,2955,"; }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.cod",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4808,Availability,error,error,4808,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4953,Availability,error,error,4953,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4425,Performance,concurren,concurrent,4425,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4511,Performance,concurren,concurrent,4511,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4582,Performance,concurren,concurrent,4582,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4676,Performance,concurren,concurrent,4676,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:2255,Usability,clear,clear,2255,"icrons:"" + HasPixelSizeMicrons). double PixelHeightMicrons; double PixelWidthMicrons; double PixelZSpacingMicrons. if (HasPixelSizeMicrons){; PixelHeightMicrons = server.getPixelHeightMicrons(); print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = server.getPixelWidthMicrons(); print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = server.getZSpacingMicrons(); print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }else{; PixelHeightMicrons = 1.0; print(""PixelHeightMicrons:"" + PixelHeightMicrons); PixelWidthMicrons = 1.0; print(""PixelWidthMicrons:"" + PixelWidthMicrons); PixelZSpacingMicrons = 1.0; print(""PixelZSpacingMicrons:"" + PixelZSpacingMicrons); }. String imgpath = server.getPath(); print(imgpath); int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""). // make output folder; String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); print(""dirOutput="" + dirOutput); def subdir = new File(dirOutput); subdir.mkdir(); // clear the folder; subdir.eachFileMatch(~/.*.*/) { file ->; file.delete(); }; ```. The ourput was:. ```; INFO: Height:6338; INFO: Width:4737; INFO: ZSlices:1; INFO: nChannels:3; INFO: nTimepoints:1; INFO: TimeUnit:SECONDS; INFO: Magnification:20; INFO: HasPixelSizeMicrons:true; INFO: PixelHeightMicrons:0.5; INFO: PixelWidthMicrons:0.5; INFO: PixelZSpacingMicrons:NaN; INFO: file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1.scn#2; INFO: dirOutput=file:/D:/QMDownload/5/%5Bfailed_handOK%5DLeica_scn/Leica-Fluorescence-1_tif. ERROR: Error at line 99: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\%5Bfailed_handOK%5DLeica_scn\Leica-Fluorescence-1_tif. ERROR: Script error; at org.codehaus.groovy.runtime.ResourceGroovyMethods.checkDir(ResourceGroovyMethods.java:1160); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472886695:4833,Usability,clear,clear,4833,"achFileMatch(ResourceGroovyMethods.java:1534); at org.codehaus.groovy.runtime.ResourceGroovyMethods.eachFileMatch(ResourceGroovyMethods.java:1565); at org.codehaus.groovy.runtime.dgm$989.invoke(Unknown Source); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244); at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135); at Script2.run(Script2.groovy:100); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```. The error line was:; ```; // clear the folder; line 99: subdir.eachFileMatch(~/.*.*/) { file ->; line 100: file.delete(); line 101: }; ```. Here the error take place on the dir stuff, not related to server. But this runs OK in 0.1.2; I also found that the folder was not created at line 98:; `subdir.mkdir()`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472886695
https://github.com/qupath/qupath/issues/280#issuecomment-472889869:4,Availability,error,error,4,The error still exist even if I add a folder by hand:; D:\QMDownload\5\[failed_handOK]Leica_scn\Leica-Fluorescence-1_tif,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472889869
https://github.com/qupath/qupath/issues/280#issuecomment-472892770:227,Usability,simpl,simpler,227,"The server path is now a URI, not just a String (which helps support images that aren't local files). The problem seems to be the method of manually parsing the path in your script to create a directory name assumes the older, simpler paths (i.e. without URI scheme, or possibly query/fragment parts).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472892770
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:412,Availability,ERROR,ERROR,412,"Below is the command-line output if I run from command line instead of GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$Obje",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:5771,Availability,ERROR,ERROR,5771, 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:216) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179) ; 	at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53) ; 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166) ; 	at qupath.QuPath.main(QuPath.java:150) ; 23:18:19.945 [main] [WARN ] loci.formats.Memoizer - file deletion failed D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; 23:18:20.901 [main] [INFO ] loci.formats.ImageReader - LeicaSCNReader initializing D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1.scn ; 23:18:20.904 [main] [INFO ] loci.formats.in.MinimalTiffReader - Reading IFDs ; 23:18:20.917 [main] [INFO ] loci.formats.in.MinimalTiffReader - Populating metadata ; 23:18:20.957 [main] [INFO ] loci.formats.in.BaseTiffReader - Populating OME metadata ; 23:18:21.207 [main] [ERROR] loci.formats.Memoizer - temp file rename returned false: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo520701858290608434 ; 23:18:21.318 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: Bio-Formats for D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn ; Height:6338Width:4737ZSlices:1nChannels:3nTimepoints:1TimeUnit:SECONDSMagnification:20HasPixelSizeMicrons:truePixelHeightMicrons:0.5PixelWidthMicrons:0.5PixelZSpacingMicrons:NaNfile:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1.scn#2dirOutput=file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1_tifa Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]............bTop is:0a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:7007,Availability,error,error,7007,"oad\\5\\Leica_scn\\Leica-Fluorescence-1.scn ; Height:6338Width:4737ZSlices:1nChannels:3nTimepoints:1TimeUnit:SECONDSMagnification:20HasPixelSizeMicrons:truePixelHeightMicrons:0.5PixelWidthMicrons:0.5PixelZSpacingMicrons:NaNfile:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1.scn#2dirOutput=file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1_tifa Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]a Top break at idx from:[0+=1]............bTop is:0a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]............bLeft is:0a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]............bRight is:4736z =1 ; Y =0.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; Fil",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:7517,Availability,error,error,7517,"from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]a Bottom break at idx from:[0+=1]............bBottom is:6337a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]a Left break at idx from:[0+=1]............bLeft is:0a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]a Right break at idx from:[0+=1]............bRight is:4736z =1 ; Y =0.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:8033,Availability,error,error,8033,"Path-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 1 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=0, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:8556,Availability,error,error,8556,"\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; ...........Written tile 2 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=0, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:9072,Availability,error,error,9072,"\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; ...........Written tile 3 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=0, w=737, h=1500, z=0).tif ; Y =1500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:9594,Availability,error,error,9594,"1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 4 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).ti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:10123,Availability,error,error,10123,":\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; ...........Written tile 5 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:10639,Availability,error,error,10639,"ile:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; ...........Written tile 6 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=1500, w=737, h=1500, z=0).tif ; Y =3000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ;",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:11161,Availability,error,error,11161,"1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 7 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=3000, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:11690,Availability,error,error,11690,":\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; ...........Written tile 8 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=3000, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:12207,Availability,error,error,12207,"le:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; ...........Written tile 9 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=3000, w=737, h=1500, z=0).tif ; Y =4500.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:12730,Availability,error,error,12730,"app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 10 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=4500, w=2000, h=1500, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).ti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:13260,Availability,error,error,13260,"QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; ...........Written tile 11 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=4500, w=2000, h=1500, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 14 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; X =40",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:13775,Availability,error,error,13775,"p\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 14 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif ; ...........Written tile 15 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:14296,Availability,error,error,14296,"p\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; ...........Written tile 12 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=4500, w=737, h=1500, z=0).tif ; Y =6000.0 ; X =0.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 13 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=6000, w=2000, h=338, z=0).tif ; X =2000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; ...........Written tile 14 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=6000, w=2000, h=338, z=0).tif ; X =4000.0 ; File saving error (IOException):; ""C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-"" ; C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif ; ...........Written tile 15 to C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=4000, y=6000, w=737, h=338, z=0).tif",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:1152,Deployability,release,release,1152," GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.es",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:4223,Performance,load,loadReader,4223,6) ; 	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:679) ; 	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106) ; 	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:679) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:378) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:679) ; 	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106) ; 	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:657) ; 	at loci.formats.Memoizer$KryoDeser.loadReader(Memoizer.java:163) ; 	at loci.formats.Memoizer.loadMemo(Memoizer.java:888) ; 	at loci.formats.Memoizer.setId(Memoizer.java:666) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1141) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1083) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:997) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:216) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179) ; 	at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53) ; 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166) ; 	at qupath.QuPath.main(QuPath.java:150) ; 23:18,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:4281,Performance,load,loadMemo,4281,lizer.read(FieldSerializer.java:528) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:679) ; 	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106) ; 	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:679) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:378) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:679) ; 	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106) ; 	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:528) ; 	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:657) ; 	at loci.formats.Memoizer$KryoDeser.loadReader(Memoizer.java:163) ; 	at loci.formats.Memoizer.loadMemo(Memoizer.java:888) ; 	at loci.formats.Memoizer.setId(Memoizer.java:666) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1141) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1083) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:997) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:216) ; 	at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179) ; 	at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53) ; 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166) ; 	at qupath.QuPath.main(QuPath.java:150) ; 23:18:19.945 [main] [WARN ] loci.formats.Memoizer - file delet,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:732,Safety,Unsafe,UnsafeUtil,732,"Below is the command-line output if I run from command line instead of GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$Obje",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:969,Safety,Unsafe,UnsafeUtil,969," GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.es",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:631,Security,access,access,631,"Below is the command-line output if I run from command line instead of GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$Obje",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:691,Security,access,access,691,"Below is the command-line output if I run from command line instead of GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$Obje",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:1005,Security,access,access,1005," GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.es",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:1066,Security,access,access,1066," GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.es",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472915452:1107,Security,access,access,1107," GUI:; We can see that the path was a combination of two paths, this is the problem. >> RMD_slide2ims_Entry; 23:18:18.288 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\Leica_scn\\Leica-Fluorescence-1.scn, -script, D:\\QMDownload\\5\\tpc9321172_2c3b_4e82_b55c_7ae4380fda4b.groovy ; 23:18:18.368 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!! ; 23:18:18.428 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 23:18:19.436 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\Leica_scn\.Leica-Fluorescence-1.scn.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 458; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.es",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472915452
https://github.com/qupath/qupath/issues/280#issuecomment-472925432:541,Usability,clear,clear,541,"```; String imgpath = server.getPath(); print(imgpath); ```; // this retuens: file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1.scn#2. ```; int dotNich = imgpath.lastIndexOf("".""); int slashNich = imgpath.lastIndexOf(""\\""); int diColonNich = imgpath.lastIndexOf("":""). // ----make output folder; 	String dirOutput = (imgpath[0..dotNich-1] + ""_tif""); 	print(""dirOutput="" + dirOutput); ```. 	// this returns dirOutput=file:/D:/QMDownload/5/Leica_scn/Leica-Fluorescence-1_tif. ```; 	def subdir = new File(dirOutput); 	//subdir.mkdir(). // ----clear the folder; 	//subdir.eachFileMatch(~/.*.*/) { file ->; 	// file.delete(); 	//}. File file = new File(dirOutput, name); // ----Save the image; 	IJ.save(imp, file.getAbsolutePath()); ```; 	// file.getAbsolutePath() returns a weired path like: C:\Program Files\QuPath-0.2.0-m1\app\file:\D:\QMDownload\5\Leica_scn\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=0, y=1500, w=2000, h=1500, z=0).tif; ```; // ----Print progress; 	counter++; 	println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472925432
https://github.com/qupath/qupath/issues/280#issuecomment-472942759:176,Availability,down,downsample,176,"It works now if I use explicit strings:. String serverName = server.getShortServerName(); String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"",serverName,downsample, xi, yi, wi, hi, z, ext); IJ.save(imp, ""D:\\QMDownload\\5\\Leica\\Leica-Fluorescence-1_tif\\"" + name). INFO: Written tile 5 to D:\QMDownload\5\Leica\Leica-Fluorescence-1_tif\Leica-Fluorescence-1.scn (d=1.00, x=2000, y=1500, w=2000, h=1500, z=0).tif; INFO: X =4000.0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/280#issuecomment-472942759
https://github.com/qupath/qupath/issues/281#issuecomment-569884029:111,Deployability,update,updated,111,"can you help me to fix this problem , i were using flutter in vscode macos10.14, ; the problem happens after i updated the sdk , ; the problem faces even i created new project, ; it affects all of the code in flutter; <img width=""925"" alt=""Screen Shot 2019-12-31 at 10 53 48 AM"" src=""https://user-images.githubusercontent.com/58293521/71614299-e6d7c300-2bbb-11ea-9e1f-30c171196373.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/281#issuecomment-569884029
https://github.com/qupath/qupath/issues/282#issuecomment-473362480:15,Testability,test,tested,15,"Haven't really tested it on all versions, but I did have this snippet in a script when I needed to check version for functionality:; ```; if (!getQuPath().getClass().getPackage()?.getImplementationVersion()){; params.getParameters().get('getOverlayAs').setValue('Annotations'); }; ```; I think it failed for version 0.1.3",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473362480
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:27,Availability,error,error,27,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:81,Availability,ERROR,ERROR,81,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:88,Availability,Error,Error,88,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:298,Availability,ERROR,ERROR,298,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:312,Availability,error,error,312,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:1672,Performance,concurren,concurrent,1672," I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:1748,Performance,concurren,concurrent,1748," I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:1809,Performance,concurren,concurrent,1809," I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:1893,Performance,concurren,concurrent,1893," I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:470,Security,access,access,470,"When I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:7",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473503394:1535,Security,access,access,1535," I run in QuPath 0.1.2,error appeared:. print(getQuPath().getBuildString()). ERROR: Error at line 15: No signature of method: org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getQuPath() is applicable for argument types: () values: []; Possible solutions: getAt(java.lang.String), getClass(). ERROR: Script error; at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.callGlobal(GroovyScriptEngineImpl.java:415); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.access$000(GroovyScriptEngineImpl.java:97); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl$2.invokeMethod(GroovyScriptEngineImpl.java:329); at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:158); at Script7.run(Script7.groovy:15); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:343); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:765); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:695); at qupath.lib.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.scripting.DefaultScriptEditor.access$400(DefaultScriptEditor.java:136); at qupath.lib.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473503394
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:64,Availability,error,error,64,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:302,Availability,ERROR,ERROR,302,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:309,Availability,Error,Error,309,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:483,Availability,error,error,483,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:490,Availability,ERROR,ERROR,490,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:504,Availability,error,error,504,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:542,Availability,Error,ErrorCollector,542,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:570,Availability,Error,ErrorCollector,570,"Further more, if I put the import... into if block, it gives an error:. ```; String version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:1289,Performance,Concurren,ConcurrentCommonCache,1289,"; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.bas",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:1321,Performance,Concurren,ConcurrentCommonCache,1321,"led:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Thre",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:2155,Performance,concurren,concurrent,2155,y.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:2241,Performance,concurren,concurrent,2241,y.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:2312,Performance,concurren,concurrent,2312,y.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:2406,Performance,concurren,concurrent,2406,y.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834). ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473504477:1067,Security,access,access,1067,"ng version = ""0.2.0""; if (version.equals(""0.2.0"")){; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; import qupath.imagej.helpers.IJTools; }; ```. ```; ERROR: Error: startup failed:; Script7.groovy: 25: Unknown type: IMPORT at line: 25 column: 1. File: Script7.groovy @ line 25, column 1.; import qupath.imagej.helpers.IJTools; ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.processPhaseOperations(CompilationUnit.java:623); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:600); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultS",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473504477
https://github.com/qupath/qupath/issues/282#issuecomment-473505073:19,Availability,error,error,19,"I solve the import error by this way:; ```; def IJTools,ImagePlusServer,ImagePlusServerBuilder; try {; //import qupath.imagej.helpers.IJTools; IJTools = ""qupath.imagej.helpers.IJTools"" as Class; } catch(Exception ex) {; //import qupath.imagej.images.servers.ImagePlusServer; //import qupath.imagej.images.servers.ImagePlusServerBuilder; ImagePlusServer = ""qupath.imagej.images.servers.ImagePlusServer"" as Class; ImagePlusServerBuilder = ""qupath.imagej.images.servers.ImagePlusServerBuilder"" as Class; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/282#issuecomment-473505073
https://github.com/qupath/qupath/issues/284#issuecomment-562845276:417,Deployability,release,released,417,"I made two recent commits:; * https://github.com/petebankhead/qupath/commit/a0e1ec253dd790dfceb89b845848c037183d46e7; * https://github.com/petebankhead/qupath/commit/05aaf8f83b8de9166832d64fa6cdba53163e8d92. I'm not entirely sure if the issues have been resolved, but I haven't been able to reproduce any viewer synchronization issues since then. If you have a chance to build m8-SNAPSHOT (or wait until v0.2.0-m8 is released) please let me know if you can replicate the problems (or find new ones) connected to multiple viewers.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562845276
https://github.com/qupath/qupath/issues/284#issuecomment-562845276:312,Integrability,synchroniz,synchronization,312,"I made two recent commits:; * https://github.com/petebankhead/qupath/commit/a0e1ec253dd790dfceb89b845848c037183d46e7; * https://github.com/petebankhead/qupath/commit/05aaf8f83b8de9166832d64fa6cdba53163e8d92. I'm not entirely sure if the issues have been resolved, but I haven't been able to reproduce any viewer synchronization issues since then. If you have a chance to build m8-SNAPSHOT (or wait until v0.2.0-m8 is released) please let me know if you can replicate the problems (or find new ones) connected to multiple viewers.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562845276
https://github.com/qupath/qupath/issues/284#issuecomment-562880040:120,Availability,mask,masks,120,"I haven't been able to reproduce the issue either in m8. I can now add a duplicate image and look at one image with the masks on while looking at a second image with no objects. Miniviewer for masks! Except not mini. I guess. I used to be able to do some other stuff like turn the masks off or on or color them differently per viewer, but that no longer seems to be possible. Not a big deal though, not not really relevant to this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562880040
https://github.com/qupath/qupath/issues/284#issuecomment-562880040:193,Availability,mask,masks,193,"I haven't been able to reproduce the issue either in m8. I can now add a duplicate image and look at one image with the masks on while looking at a second image with no objects. Miniviewer for masks! Except not mini. I guess. I used to be able to do some other stuff like turn the masks off or on or color them differently per viewer, but that no longer seems to be possible. Not a big deal though, not not really relevant to this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562880040
https://github.com/qupath/qupath/issues/284#issuecomment-562880040:281,Availability,mask,masks,281,"I haven't been able to reproduce the issue either in m8. I can now add a duplicate image and look at one image with the masks on while looking at a second image with no objects. Miniviewer for masks! Except not mini. I guess. I used to be able to do some other stuff like turn the masks off or on or color them differently per viewer, but that no longer seems to be possible. Not a big deal though, not not really relevant to this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562880040
https://github.com/qupath/qupath/issues/285#issuecomment-514593091:54,Deployability,release,releases,54,Fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; (Please reopen if this has caused any other unwelcome behavior...),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/285#issuecomment-514593091
https://github.com/qupath/qupath/issues/287#issuecomment-473682408:484,Deployability,install,install,484,"Aside from the messages in the log, is this causing any problems? As you describe, Bio-Formats tries to delete the file - in which case it isn't really a fixable QuPath bug if this fails. bfmemo files are not expected to be deleted after closing QuPath, but rather retained so that the image can be opened more quickly later. You can turn of the use of memoization in the QuPath preferences. There is further info at https://github.com/qupath/qupath-bioformats-extension - but _don't install this extension with v0.2.0!_ It doesn't work, isn't necessary and can cause conflicts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/287#issuecomment-473682408
https://github.com/qupath/qupath/issues/287#issuecomment-473682408:15,Integrability,message,messages,15,"Aside from the messages in the log, is this causing any problems? As you describe, Bio-Formats tries to delete the file - in which case it isn't really a fixable QuPath bug if this fails. bfmemo files are not expected to be deleted after closing QuPath, but rather retained so that the image can be opened more quickly later. You can turn of the use of memoization in the QuPath preferences. There is further info at https://github.com/qupath/qupath-bioformats-extension - but _don't install this extension with v0.2.0!_ It doesn't work, isn't necessary and can cause conflicts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/287#issuecomment-473682408
https://github.com/qupath/qupath/issues/287#issuecomment-473682408:31,Testability,log,log,31,"Aside from the messages in the log, is this causing any problems? As you describe, Bio-Formats tries to delete the file - in which case it isn't really a fixable QuPath bug if this fails. bfmemo files are not expected to be deleted after closing QuPath, but rather retained so that the image can be opened more quickly later. You can turn of the use of memoization in the QuPath preferences. There is further info at https://github.com/qupath/qupath-bioformats-extension - but _don't install this extension with v0.2.0!_ It doesn't work, isn't necessary and can cause conflicts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/287#issuecomment-473682408
https://github.com/qupath/qupath/issues/288#issuecomment-514592598:54,Deployability,release,releases,54,Fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/288#issuecomment-514592598
https://github.com/qupath/qupath/issues/289#issuecomment-474156600:1103,Integrability,interface,interface,1103,"The path is now a URI, which is useful in distinguishing between a local file and something else (e.g. image hosted with OMERO). Additionally, a URI might have some additional info (query or fragment) necessary to distinguish a specific image found within the same file. The critical thing is that the path should be unique for each image because it is used for caching image tiles, but it isn't safe to assume that it is a valid path to a local file. Probably `buildFilePath` happened to work before because the path _was_ usually a path to a local file (albeit sometimes with an extra identifier appended for Bio-Formats) but it wasn't really intended to. Its main purpose was to build paths relative to the project directory*. I'm not sure what the purpose of `buildFilePath(path)` is in your script, but it probably now needs replaced with something else. Otherwise, even if the URI thing was dealt with your script wouldn't work with OMERO-hosted files (and probably others read by Bio-Formats). > *-Although projects aren't now guaranteed to be local directories either, since a project is now an interface which would be implemented in some other way...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-474156600
https://github.com/qupath/qupath/issues/289#issuecomment-474156600:396,Safety,safe,safe,396,"The path is now a URI, which is useful in distinguishing between a local file and something else (e.g. image hosted with OMERO). Additionally, a URI might have some additional info (query or fragment) necessary to distinguish a specific image found within the same file. The critical thing is that the path should be unique for each image because it is used for caching image tiles, but it isn't safe to assume that it is a valid path to a local file. Probably `buildFilePath` happened to work before because the path _was_ usually a path to a local file (albeit sometimes with an extra identifier appended for Bio-Formats) but it wasn't really intended to. Its main purpose was to build paths relative to the project directory*. I'm not sure what the purpose of `buildFilePath(path)` is in your script, but it probably now needs replaced with something else. Otherwise, even if the URI thing was dealt with your script wouldn't work with OMERO-hosted files (and probably others read by Bio-Formats). > *-Although projects aren't now guaranteed to be local directories either, since a project is now an interface which would be implemented in some other way...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-474156600
https://github.com/qupath/qupath/issues/289#issuecomment-474395987:3,Integrability,depend,depends,3,It depends what `path` is... if it's the result of `server.getPath()` then probably not. But if it's some other path in your local file system then yes.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-474395987
https://github.com/qupath/qupath/issues/289#issuecomment-474436557:66,Performance,load,load,66,Yes it was just a file to save the objects in order to be able to load them later on. I'll try with the ```new File(path)``` and let you know !,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-474436557
https://github.com/qupath/qupath/issues/289#issuecomment-476099497:312,Availability,ERROR,ERROR,312,"Hi @petebankhead,. I just tried . ```groovy; objects_to_save = getAnnotationObjects(). def out_muscle_path = getCurrentImageData().getServer().getPath() +'_muscle_objects'. println(out_muscle_path). new File(out_muscle_path).withObjectOutputStream {; it.writeObject(objects_to_save); }; ```. and just got . ```; ERROR: Error at line 272: file:\network\path\to\the\file.ome.tiff_muscle_objects (The specified path is invalid); ```. Anything I can improve to make it work ?. Thanks :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-476099497
https://github.com/qupath/qupath/issues/289#issuecomment-476099497:319,Availability,Error,Error,319,"Hi @petebankhead,. I just tried . ```groovy; objects_to_save = getAnnotationObjects(). def out_muscle_path = getCurrentImageData().getServer().getPath() +'_muscle_objects'. println(out_muscle_path). new File(out_muscle_path).withObjectOutputStream {; it.writeObject(objects_to_save); }; ```. and just got . ```; ERROR: Error at line 272: file:\network\path\to\the\file.ome.tiff_muscle_objects (The specified path is invalid); ```. Anything I can improve to make it work ?. Thanks :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/289#issuecomment-476099497
https://github.com/qupath/qupath/issues/290#issuecomment-474537267:40,Performance,load,load,40,"I don't think the pixel classifier save/load/run for project/macro functionality is in yet. This is just the first version of it. There are two classes that do not work for the pixel classifier, Region and Ignore. Other than those I have used up to 5-6 classes without any problems. Not that I have run into any problems with higher numbers of classes, I just have not tried :); Edit: That was poorly worded. Ignore works great for the pixel classifier, in that it teaches it what to ignore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/290#issuecomment-474537267
https://github.com/qupath/qupath/issues/290#issuecomment-564311923:3,Integrability,depend,depends,3,It depends on which versions are you switching between. More information would be needed. I recommend starting a post on the forum for non-bug issues.; https://forum.image.sc/tags/qupath,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/290#issuecomment-564311923
https://github.com/qupath/qupath/issues/291#issuecomment-475032443:158,Security,access,access,158,"Ok. So this is intended. I guess there is no plan for a ""convert to 0.2.0"" for older projects that may benefit from the new features. Is there an easy way to access the x, y dimensions of the whole slide image without the bounding box in order to calculate the translation?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/291#issuecomment-475032443
https://github.com/qupath/qupath/issues/291#issuecomment-477356033:633,Integrability,interface,interface,633,"It should be possible to do the conversion. In v0.2.0-m2 you can get the key information with; ```groovy; print getCurrentServer().dumpMetadata(); ```; or, very unofficially (i.e. by accessing private fields...), this:; ```groovy; def x = getCurrentServer().boundsX; def y = getCurrentServer().boundsY; ```. The next step would be to apply a translation... the affine transform [here](https://forum.image.sc/t/interactive-image-alignment/23745/9?u=petebankhead) shows one way to approach that. Although in general you can translate a ROI with; ```groovy; translated = roi.translate(-100, -200); ```; so long as the `TranslatableROI` interface is implemented (I think it always is....)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/291#issuecomment-477356033
https://github.com/qupath/qupath/issues/291#issuecomment-477356033:183,Security,access,accessing,183,"It should be possible to do the conversion. In v0.2.0-m2 you can get the key information with; ```groovy; print getCurrentServer().dumpMetadata(); ```; or, very unofficially (i.e. by accessing private fields...), this:; ```groovy; def x = getCurrentServer().boundsX; def y = getCurrentServer().boundsY; ```. The next step would be to apply a translation... the affine transform [here](https://forum.image.sc/t/interactive-image-alignment/23745/9?u=petebankhead) shows one way to approach that. Although in general you can translate a ROI with; ```groovy; translated = roi.translate(-100, -200); ```; so long as the `TranslatableROI` interface is implemented (I think it always is....)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/291#issuecomment-477356033
https://github.com/qupath/qupath/issues/292#issuecomment-475308624:119,Usability,clear,clear,119,There are warnings on startup and at the [bottom of the info page](https://qupath.github.io/QuPath-v0.2.0)... It's not clear from your description did you open a project or work with .qpdata files directly?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-475308624
https://github.com/qupath/qupath/issues/292#issuecomment-484711187:374,Performance,load,loaded,374,"After trying v0.2.0-m2 on both Windows and Linux, I saw observed on:; #### WINDOWS; - While working directly with .qpdata files, it behaves as expected. Which means, I could open an image, make annotations, save, close Qupath ... Reopen Qupath, go to File in the menu bar, click open, locate the .qpdata file and select the qpdata file, select the image file and once it is loaded, I can see the previously saved annotations. **(Expected behavior, no issues here)**; _I did not test Projects on the Windows version_. #### LINUX; - I tried doing the same on Linux but lost data (both saved on disk as .qpdata and the annotations on the application which I was about to save) :; - Clicking Save on the linux version of QuPath v0.2.0-m2 after some changes (or even without changes) deletes the original qpdata file itself ( by original qpdata file, I mean the .qpdata file I moved from windows machine for testing, along with the corresponding image) **(issue)**; - There is no way I could reopen existing annotations which were made purely using the Linux version because no annotations were saved in a qpdata file in the first place. **(issue)**; - When I use Projects, I can save and reopen the annotations purely made using the Linux version. **(Expected behavior, no issues here)**. Hopefully that helps. Thank you! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-484711187
https://github.com/qupath/qupath/issues/292#issuecomment-484711187:478,Testability,test,test,478,"After trying v0.2.0-m2 on both Windows and Linux, I saw observed on:; #### WINDOWS; - While working directly with .qpdata files, it behaves as expected. Which means, I could open an image, make annotations, save, close Qupath ... Reopen Qupath, go to File in the menu bar, click open, locate the .qpdata file and select the qpdata file, select the image file and once it is loaded, I can see the previously saved annotations. **(Expected behavior, no issues here)**; _I did not test Projects on the Windows version_. #### LINUX; - I tried doing the same on Linux but lost data (both saved on disk as .qpdata and the annotations on the application which I was about to save) :; - Clicking Save on the linux version of QuPath v0.2.0-m2 after some changes (or even without changes) deletes the original qpdata file itself ( by original qpdata file, I mean the .qpdata file I moved from windows machine for testing, along with the corresponding image) **(issue)**; - There is no way I could reopen existing annotations which were made purely using the Linux version because no annotations were saved in a qpdata file in the first place. **(issue)**; - When I use Projects, I can save and reopen the annotations purely made using the Linux version. **(Expected behavior, no issues here)**. Hopefully that helps. Thank you! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-484711187
https://github.com/qupath/qupath/issues/292#issuecomment-484711187:903,Testability,test,testing,903,"After trying v0.2.0-m2 on both Windows and Linux, I saw observed on:; #### WINDOWS; - While working directly with .qpdata files, it behaves as expected. Which means, I could open an image, make annotations, save, close Qupath ... Reopen Qupath, go to File in the menu bar, click open, locate the .qpdata file and select the qpdata file, select the image file and once it is loaded, I can see the previously saved annotations. **(Expected behavior, no issues here)**; _I did not test Projects on the Windows version_. #### LINUX; - I tried doing the same on Linux but lost data (both saved on disk as .qpdata and the annotations on the application which I was about to save) :; - Clicking Save on the linux version of QuPath v0.2.0-m2 after some changes (or even without changes) deletes the original qpdata file itself ( by original qpdata file, I mean the .qpdata file I moved from windows machine for testing, along with the corresponding image) **(issue)**; - There is no way I could reopen existing annotations which were made purely using the Linux version because no annotations were saved in a qpdata file in the first place. **(issue)**; - When I use Projects, I can save and reopen the annotations purely made using the Linux version. **(Expected behavior, no issues here)**. Hopefully that helps. Thank you! :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-484711187
https://github.com/qupath/qupath/issues/292#issuecomment-484796939:96,Testability,test,test,96,"@vipulnj Thanks very much for this, I think I understand the problem now and have a fix. I will test it later. In the meantime, if you really do need to write a .qpdata file on Linux outside a project, then after the initial failed attempt running this script should succeed:; ```groovy; import qupath.lib.io.PathIO. def imageData = getCurrentImageData(). // Choose a location (here, the one QuPath thinks it wrote to... but didn't); file = new File(imageData.lastSavedPath). // Write directly to a stream; file.withOutputStream {; PathIO.writeImageData(it, imageData); }. // Check we do have a file now; print file; print file.exists(); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-484796939
https://github.com/qupath/qupath/issues/292#issuecomment-514591501:69,Deployability,release,releases,69,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) - please reopen if it isn't!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-514591501
https://github.com/qupath/qupath/issues/293#issuecomment-475304459:534,Integrability,interface,interface,534,"The current limited rotation is intentional and not a bug. There are several discussions about it, including here: https://forum.image.sc/t/rotating-view-in-qupath/23925. I have changed the label to enhancement as it is really a feature request. I do intend QuPath to support rotating images in 90 degree increments where this is decided at the beginning (i.e. before doing any annotations or creating any objects), as I think this is often needed. I've written most of the code but have a bit more work to do to get it into the user interface as a usable feature. In the meantime, for publication images you can always rotate the resulting image in other software (e.g. ImageJ).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-475304459
https://github.com/qupath/qupath/issues/293#issuecomment-475304459:199,Modifiability,enhance,enhancement,199,"The current limited rotation is intentional and not a bug. There are several discussions about it, including here: https://forum.image.sc/t/rotating-view-in-qupath/23925. I have changed the label to enhancement as it is really a feature request. I do intend QuPath to support rotating images in 90 degree increments where this is decided at the beginning (i.e. before doing any annotations or creating any objects), as I think this is often needed. I've written most of the code but have a bit more work to do to get it into the user interface as a usable feature. In the meantime, for publication images you can always rotate the resulting image in other software (e.g. ImageJ).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-475304459
https://github.com/qupath/qupath/issues/293#issuecomment-475304459:549,Usability,usab,usable,549,"The current limited rotation is intentional and not a bug. There are several discussions about it, including here: https://forum.image.sc/t/rotating-view-in-qupath/23925. I have changed the label to enhancement as it is really a feature request. I do intend QuPath to support rotating images in 90 degree increments where this is decided at the beginning (i.e. before doing any annotations or creating any objects), as I think this is often needed. I've written most of the code but have a bit more work to do to get it into the user interface as a usable feature. In the meantime, for publication images you can always rotate the resulting image in other software (e.g. ImageJ).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-475304459
https://github.com/qupath/qupath/issues/293#issuecomment-475308947:700,Integrability,interface,interface,700,"Thank you for all the efforts made!!!; Great software!; Best; Mark. Am 21.03.2019 um 17:31 schrieb Pete <notifications@github.com<mailto:notifications@github.com>>:. The current limited rotation is intentional and not a bug. There are several discussions about it, including here: https://forum.image.sc/t/rotating-view-in-qupath/23925. I have changed the label to enhancement as it is really a feature request. I do intend QuPath to support rotating images in 90 degree increments where this is decided at the beginning (i.e. before doing any annotations or creating any objects), as I think this is often needed. I've written most of the code but have a bit more work to do to get it into the user interface as a usable feature. In the meantime, for publication images you can always rotate the resulting image in other software (e.g. ImageJ). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/293#issuecomment-475304459>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AuilfNnzXk1GVc4-ge5_v30DpTB5ZAJ6ks5vY7PcgaJpZM4cBwau>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-475308947
https://github.com/qupath/qupath/issues/293#issuecomment-475308947:365,Modifiability,enhance,enhancement,365,"Thank you for all the efforts made!!!; Great software!; Best; Mark. Am 21.03.2019 um 17:31 schrieb Pete <notifications@github.com<mailto:notifications@github.com>>:. The current limited rotation is intentional and not a bug. There are several discussions about it, including here: https://forum.image.sc/t/rotating-view-in-qupath/23925. I have changed the label to enhancement as it is really a feature request. I do intend QuPath to support rotating images in 90 degree increments where this is decided at the beginning (i.e. before doing any annotations or creating any objects), as I think this is often needed. I've written most of the code but have a bit more work to do to get it into the user interface as a usable feature. In the meantime, for publication images you can always rotate the resulting image in other software (e.g. ImageJ). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/293#issuecomment-475304459>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AuilfNnzXk1GVc4-ge5_v30DpTB5ZAJ6ks5vY7PcgaJpZM4cBwau>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-475308947
https://github.com/qupath/qupath/issues/293#issuecomment-475308947:715,Usability,usab,usable,715,"Thank you for all the efforts made!!!; Great software!; Best; Mark. Am 21.03.2019 um 17:31 schrieb Pete <notifications@github.com<mailto:notifications@github.com>>:. The current limited rotation is intentional and not a bug. There are several discussions about it, including here: https://forum.image.sc/t/rotating-view-in-qupath/23925. I have changed the label to enhancement as it is really a feature request. I do intend QuPath to support rotating images in 90 degree increments where this is decided at the beginning (i.e. before doing any annotations or creating any objects), as I think this is often needed. I've written most of the code but have a bit more work to do to get it into the user interface as a usable feature. In the meantime, for publication images you can always rotate the resulting image in other software (e.g. ImageJ). —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/293#issuecomment-475304459>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AuilfNnzXk1GVc4-ge5_v30DpTB5ZAJ6ks5vY7PcgaJpZM4cBwau>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-475308947
https://github.com/qupath/qupath/issues/293#issuecomment-514591068:80,Deployability,release,releases,80,"This should have been addressed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3)... but unfortunately it seems it wasn't. There's a 'rotate image' option when importing images, but at some point late fixes appear to have broken this. Targeted again for v0.2.0-m4...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-514591068
https://github.com/qupath/qupath/issues/294#issuecomment-475407873:34,Availability,error,error,34,"If there is nothing really in the error log, I would start with upping the memory available to QuPath. The m1 and m2 have their own independent max memory settings, and default to something like 1/4 of the total available. . **which can be found in the Help menu under Show Setup Options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/294#issuecomment-475407873
https://github.com/qupath/qupath/issues/294#issuecomment-475407873:82,Availability,avail,available,82,"If there is nothing really in the error log, I would start with upping the memory available to QuPath. The m1 and m2 have their own independent max memory settings, and default to something like 1/4 of the total available. . **which can be found in the Help menu under Show Setup Options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/294#issuecomment-475407873
https://github.com/qupath/qupath/issues/294#issuecomment-475407873:212,Availability,avail,available,212,"If there is nothing really in the error log, I would start with upping the memory available to QuPath. The m1 and m2 have their own independent max memory settings, and default to something like 1/4 of the total available. . **which can be found in the Help menu under Show Setup Options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/294#issuecomment-475407873
https://github.com/qupath/qupath/issues/294#issuecomment-475407873:40,Testability,log,log,40,"If there is nothing really in the error log, I would start with upping the memory available to QuPath. The m1 and m2 have their own independent max memory settings, and default to something like 1/4 of the total available. . **which can be found in the Help menu under Show Setup Options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/294#issuecomment-475407873
https://github.com/qupath/qupath/issues/296#issuecomment-475876274:137,Safety,detect,detected,137,"I have tried to write several lines of code to get the subimage:. def imagelist = server.getSubImageList(); print(""Note: .vsi image list detected"" +imagelist); def project = getProject() //usually is null if no project opened; print(project); if (project != null){; def entries = project.getImageList(); }; def aSubImg = imagelist.getAt(4) ; print(aSubImg) //Series 4 (20x_04); def aSubImgPath = server.getSubImagePath(aSubImg); print(aSubImgPath) //file:/D:/QMDownload/6/BatchII%2024%20h%206%23_20190314.vsi#4. But now I can not find a way to set the subimage as active, so as to use the server to do further stuff on current active subimage",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/296#issuecomment-475876274
https://github.com/qupath/qupath/issues/296#issuecomment-475879781:267,Performance,load,load,267,"I have to run the script from command line in this way. >QuPath -image imahepath -script scriptpath. The script only deals with the current opened images, and no GUI was involved in from beginning to end. I can get the current file path in script, then how can I add load the current file path to the project in this headless mode?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/296#issuecomment-475879781
https://github.com/qupath/qupath/issues/298#issuecomment-476237704:868,Deployability,install,installed,868,"It's intentional to have a 'user directory' rather than an 'extensions directory', as described here: https://qupath.github.io/QuPath-v0.2.0 (no direct links to headings yet...). The idea is much the same though. Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... Does setting it to _any_ other location fail, or does it fail _only_ if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. > Note that it's not a good idea to use an existing directory extension because older extensions can be horribly incompatible because of the many code changes. I could look at failing more elegantly in this case, but I only know of a couple of other people who had installed extensions other than Bio-Formats or Weka...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476237704
https://github.com/qupath/qupath/issues/298#issuecomment-476237704:450,Usability,learn,learned,450,"It's intentional to have a 'user directory' rather than an 'extensions directory', as described here: https://qupath.github.io/QuPath-v0.2.0 (no direct links to headings yet...). The idea is much the same though. Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... Does setting it to _any_ other location fail, or does it fail _only_ if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. > Note that it's not a good idea to use an existing directory extension because older extensions can be horribly incompatible because of the many code changes. I could look at failing more elegantly in this case, but I only know of a couple of other people who had installed extensions other than Bio-Formats or Weka...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476237704
https://github.com/qupath/qupath/issues/298#issuecomment-476258374:839,Deployability,update,updated,839,">Does setting it to any other location fail, or does it fail only if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. Setting it to another location simply does not load the extension. But I have not tested whether this is because QuPath does not read the preference (which cannot be set anymore in the Preferences menu).; This was the case when the extension was going to be added to a local disk. No network drive. > Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... We created an extension which you can found here https://github.com/BIOP/qupath-biop-extensions which we have been using sucessfully (and which is not updated to work with our little modifications to QuPath 0.2.2-m2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476258374
https://github.com/qupath/qupath/issues/298#issuecomment-476258374:310,Performance,load,load,310,">Does setting it to any other location fail, or does it fail only if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. Setting it to another location simply does not load the extension. But I have not tested whether this is because QuPath does not read the preference (which cannot be set anymore in the Preferences menu).; This was the case when the extension was going to be added to a local disk. No network drive. > Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... We created an extension which you can found here https://github.com/BIOP/qupath-biop-extensions which we have been using sucessfully (and which is not updated to work with our little modifications to QuPath 0.2.2-m2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476258374
https://github.com/qupath/qupath/issues/298#issuecomment-476258374:345,Testability,test,tested,345,">Does setting it to any other location fail, or does it fail only if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. Setting it to another location simply does not load the extension. But I have not tested whether this is because QuPath does not read the preference (which cannot be set anymore in the Preferences menu).; This was the case when the extension was going to be added to a local disk. No network drive. > Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... We created an extension which you can found here https://github.com/BIOP/qupath-biop-extensions which we have been using sucessfully (and which is not updated to work with our little modifications to QuPath 0.2.2-m2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476258374
https://github.com/qupath/qupath/issues/298#issuecomment-476258374:110,Usability,learn,learned,110,">Does setting it to any other location fail, or does it fail only if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. Setting it to another location simply does not load the extension. But I have not tested whether this is because QuPath does not read the preference (which cannot be set anymore in the Preferences menu).; This was the case when the extension was going to be added to a local disk. No network drive. > Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... We created an extension which you can found here https://github.com/BIOP/qupath-biop-extensions which we have been using sucessfully (and which is not updated to work with our little modifications to QuPath 0.2.2-m2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476258374
https://github.com/qupath/qupath/issues/298#issuecomment-476258374:294,Usability,simpl,simply,294,">Does setting it to any other location fail, or does it fail only if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. Setting it to another location simply does not load the extension. But I have not tested whether this is because QuPath does not read the preference (which cannot be set anymore in the Preferences menu).; This was the case when the extension was going to be added to a local disk. No network drive. > Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... We created an extension which you can found here https://github.com/BIOP/qupath-biop-extensions which we have been using sucessfully (and which is not updated to work with our little modifications to QuPath 0.2.2-m2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476258374
https://github.com/qupath/qupath/issues/298#issuecomment-476286936:315,Security,sanitiz,sanitize,315,"This commit aims to fix the use of non-default directories: https://github.com/petebankhead/qupath/commit/8d7693b22c79446b0d92b6dac1afab6ccb2b0745. Note that you can set the directory in the preferences, but search for 'user' rather than 'extensions'. Note that this is in a particular branch of my fork; I plan to sanitize the various branches/forks in the near future to make it a bit clearer where everything is/should be.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476286936
https://github.com/qupath/qupath/issues/298#issuecomment-476286936:387,Usability,clear,clearer,387,"This commit aims to fix the use of non-default directories: https://github.com/petebankhead/qupath/commit/8d7693b22c79446b0d92b6dac1afab6ccb2b0745. Note that you can set the directory in the preferences, but search for 'user' rather than 'extensions'. Note that this is in a particular branch of my fork; I plan to sanitize the various branches/forks in the near future to make it a bit clearer where everything is/should be.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476286936
https://github.com/qupath/qupath/issues/298#issuecomment-514590532:69,Deployability,release,releases,69,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) - please reopen if it turns out not to be!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-514590532
https://github.com/qupath/qupath/issues/300#issuecomment-478049060:254,Modifiability,plugin,plugin,254,"I haven't had a chance to test this, but if you have a log file and which; ImageServer is being used (in the image tab) that would be helpful. If it; is a BioFormats server, you should also try opening the file with FIJI; through the BioFormats importer plugin to see if you get the same behavior.; If you do, it is a problem that likely needs to be dealt with through the; BioFormats people. I had a similar sounding issue with 8bit CZI brightfield; images where only one tile would open, and that turned out to be a; BioFormats thing. On Fri, Mar 29, 2019 at 4:11 AM Renaud Mvl <notifications@github.com> wrote:. > *Describe the bug*; > Some fluorescent .scn images scanned on Leica Aperio Versa do not open; > properly on QuPath. Not sure where the problem is. I can open them just; > fine in ImageScope on windows, but for some reason in certain cases, QuPath; > opens the individual images instead of recognising it as stiched/pyramidal; > images?; >; > *To Reproduce*; > 2 example images:; > image that do not open properly; > <https://www.dropbox.com/s/4281rsnql1wc3k0/bug.scn?dl=0>; > image that opens fine; > <https://www.dropbox.com/s/x8zaexcb8rx3j69/fine.scn?dl=0>; >; > *Desktop (please complete the following information):*; >; > - OS: macOS; > - QuPath Version 0.1.3 and 0.2.0-m2; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/300>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-WFefqnhB7JcU8BmgDqfmmOHzcvoks5vbfTVgaJpZM4cSKYc>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/300#issuecomment-478049060
https://github.com/qupath/qupath/issues/300#issuecomment-478049060:26,Testability,test,test,26,"I haven't had a chance to test this, but if you have a log file and which; ImageServer is being used (in the image tab) that would be helpful. If it; is a BioFormats server, you should also try opening the file with FIJI; through the BioFormats importer plugin to see if you get the same behavior.; If you do, it is a problem that likely needs to be dealt with through the; BioFormats people. I had a similar sounding issue with 8bit CZI brightfield; images where only one tile would open, and that turned out to be a; BioFormats thing. On Fri, Mar 29, 2019 at 4:11 AM Renaud Mvl <notifications@github.com> wrote:. > *Describe the bug*; > Some fluorescent .scn images scanned on Leica Aperio Versa do not open; > properly on QuPath. Not sure where the problem is. I can open them just; > fine in ImageScope on windows, but for some reason in certain cases, QuPath; > opens the individual images instead of recognising it as stiched/pyramidal; > images?; >; > *To Reproduce*; > 2 example images:; > image that do not open properly; > <https://www.dropbox.com/s/4281rsnql1wc3k0/bug.scn?dl=0>; > image that opens fine; > <https://www.dropbox.com/s/x8zaexcb8rx3j69/fine.scn?dl=0>; >; > *Desktop (please complete the following information):*; >; > - OS: macOS; > - QuPath Version 0.1.3 and 0.2.0-m2; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/300>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-WFefqnhB7JcU8BmgDqfmmOHzcvoks5vbfTVgaJpZM4cSKYc>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/300#issuecomment-478049060
https://github.com/qupath/qupath/issues/300#issuecomment-478049060:55,Testability,log,log,55,"I haven't had a chance to test this, but if you have a log file and which; ImageServer is being used (in the image tab) that would be helpful. If it; is a BioFormats server, you should also try opening the file with FIJI; through the BioFormats importer plugin to see if you get the same behavior.; If you do, it is a problem that likely needs to be dealt with through the; BioFormats people. I had a similar sounding issue with 8bit CZI brightfield; images where only one tile would open, and that turned out to be a; BioFormats thing. On Fri, Mar 29, 2019 at 4:11 AM Renaud Mvl <notifications@github.com> wrote:. > *Describe the bug*; > Some fluorescent .scn images scanned on Leica Aperio Versa do not open; > properly on QuPath. Not sure where the problem is. I can open them just; > fine in ImageScope on windows, but for some reason in certain cases, QuPath; > opens the individual images instead of recognising it as stiched/pyramidal; > images?; >; > *To Reproduce*; > 2 example images:; > image that do not open properly; > <https://www.dropbox.com/s/4281rsnql1wc3k0/bug.scn?dl=0>; > image that opens fine; > <https://www.dropbox.com/s/x8zaexcb8rx3j69/fine.scn?dl=0>; >; > *Desktop (please complete the following information):*; >; > - OS: macOS; > - QuPath Version 0.1.3 and 0.2.0-m2; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/300>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-WFefqnhB7JcU8BmgDqfmmOHzcvoks5vbfTVgaJpZM4cSKYc>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/300#issuecomment-478049060
https://github.com/qupath/qupath/issues/300#issuecomment-483588755:433,Safety,detect,detect,433,"Thanks for your answers and trying to open them. I think I have always used bioformats to open .scn images. Regarding the different ROIs, I have to say that previously, I have managed to open .scn images with different ROIs. In QuPath, they would open as different images in the image list tab, which is fine to work with. But the bug.scn file is not >300 ROIs, it is meant to be a normal slide scan, and for some reason it seems to detect each tile as an individual ROI. It is frustrating to see that it opens fine in ImageScope, but not in QuPath... if this is a bioformat issue perhaps I should post on the bioformat page then... ps: I appreciate that mrx and scn files are annoying to work with, but there are unfortunately very common file types in the research/academic world at least...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/300#issuecomment-483588755
https://github.com/qupath/qupath/issues/300#issuecomment-483601172:566,Security,access,access,566,"QuPath tries to have as few customizations as possible for specific file formats (almost none...), relying only on what OpenSlide and Bio-Formats provide. If images in the same format end up opening differently in QuPath, then it is most likely because there is something in the file that causes OpenSlide or Bio-Formats to handle them differently*. The Bio-Formats and OpenSlide teams have done an incredible job in support many formats to date, but of course they are under no obligation to do so. Unlike the software developed by the vendors themselves, who have access to the full details of their proprietary formats, open projects often need to make educated guesses to try to figure out how to read the files. In my opinion, if someone has a proprietary file format then it should be up to them to help ensure it is supported in open software... _if_ they want that to be possible. It's perfectly legitimate for them to decide that they don't want their format to be open, but in that case potential customers for whom this matters need to find this out.... ideally before paying a lot of money for something they will be unable to use fully. Presumably Bio-Formats don't have a specification for the .scn format (on the website it is listed as [something they would like to have](https://docs.openmicroscopy.org/bio-formats/6.0.1/formats/leica-scn.html)) and they have also [blogged on mrxs](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/). It seems really unfortunate that formats that are common in the research community aren't always well supported in open software. Ultimately it's really only the people behind the formats that can change this... I hope that greater awareness of the underlying reasons might help the research community exert pressure in the right direction - in the way that the Bio-Formats blog post describes. >*-Although it is always possible that there is a bug in QuPath causing the trouble... but if some work and some don't, wit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/300#issuecomment-483601172
https://github.com/qupath/qupath/issues/301#issuecomment-479346732:402,Deployability,update,updated,402,"Thanks, this definitely needs changed. My guess is it happened while I was trying to lift the limit of measured channels (previously it was fixed at 8). Now that channel names can be stored, do you think this should be used in the measurements, e.g. 'DAPI (C1)' rather than the number alone? If so, I'd say this should be consistent between intensity measurements & cell detection and both ought to be updated. Any classifiers that use older names would break, but that may not be so bad... inasmuch as it's not a good idea to reuse classifiers across versions (at least where there has been major changes in between). It _does_ mean that channel names must be correct from the start. So they should be more easily fix-able than they currently are. One concern I had about doing this was that channel names could be weird, or wrong, or duplicated, or empty... but perhaps appending 'C1', 'C2' etc. is enough to mitigate this potential issue. Or 'Channel 1' etc. but the names risk becoming even more long and unwieldy. > Additionally, I am not sure if this feature could be parallelized?. It already is... should should see a difference if you reduce the number of parallel threads to 1. Or is there something I've missed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479346732
https://github.com/qupath/qupath/issues/301#issuecomment-479346732:1144,Energy Efficiency,reduce,reduce,1144,"Thanks, this definitely needs changed. My guess is it happened while I was trying to lift the limit of measured channels (previously it was fixed at 8). Now that channel names can be stored, do you think this should be used in the measurements, e.g. 'DAPI (C1)' rather than the number alone? If so, I'd say this should be consistent between intensity measurements & cell detection and both ought to be updated. Any classifiers that use older names would break, but that may not be so bad... inasmuch as it's not a good idea to reuse classifiers across versions (at least where there has been major changes in between). It _does_ mean that channel names must be correct from the start. So they should be more easily fix-able than they currently are. One concern I had about doing this was that channel names could be weird, or wrong, or duplicated, or empty... but perhaps appending 'C1', 'C2' etc. is enough to mitigate this potential issue. Or 'Channel 1' etc. but the names risk becoming even more long and unwieldy. > Additionally, I am not sure if this feature could be parallelized?. It already is... should should see a difference if you reduce the number of parallel threads to 1. Or is there something I've missed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479346732
https://github.com/qupath/qupath/issues/301#issuecomment-479346732:371,Safety,detect,detection,371,"Thanks, this definitely needs changed. My guess is it happened while I was trying to lift the limit of measured channels (previously it was fixed at 8). Now that channel names can be stored, do you think this should be used in the measurements, e.g. 'DAPI (C1)' rather than the number alone? If so, I'd say this should be consistent between intensity measurements & cell detection and both ought to be updated. Any classifiers that use older names would break, but that may not be so bad... inasmuch as it's not a good idea to reuse classifiers across versions (at least where there has been major changes in between). It _does_ mean that channel names must be correct from the start. So they should be more easily fix-able than they currently are. One concern I had about doing this was that channel names could be weird, or wrong, or duplicated, or empty... but perhaps appending 'C1', 'C2' etc. is enough to mitigate this potential issue. Or 'Channel 1' etc. but the names risk becoming even more long and unwieldy. > Additionally, I am not sure if this feature could be parallelized?. It already is... should should see a difference if you reduce the number of parallel threads to 1. Or is there something I've missed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479346732
https://github.com/qupath/qupath/issues/301#issuecomment-479346732:976,Safety,risk,risk,976,"Thanks, this definitely needs changed. My guess is it happened while I was trying to lift the limit of measured channels (previously it was fixed at 8). Now that channel names can be stored, do you think this should be used in the measurements, e.g. 'DAPI (C1)' rather than the number alone? If so, I'd say this should be consistent between intensity measurements & cell detection and both ought to be updated. Any classifiers that use older names would break, but that may not be so bad... inasmuch as it's not a good idea to reuse classifiers across versions (at least where there has been major changes in between). It _does_ mean that channel names must be correct from the start. So they should be more easily fix-able than they currently are. One concern I had about doing this was that channel names could be weird, or wrong, or duplicated, or empty... but perhaps appending 'C1', 'C2' etc. is enough to mitigate this potential issue. Or 'Channel 1' etc. but the names risk becoming even more long and unwieldy. > Additionally, I am not sure if this feature could be parallelized?. It already is... should should see a difference if you reduce the number of parallel threads to 1. Or is there something I've missed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479346732
https://github.com/qupath/qupath/issues/301#issuecomment-479350523:63,Performance,perform,performance,63,"Regarding parallelization, I suspect you're rather suffering a performance issue that emerges when requesting many small regions from a multichannel fluorescence image. Cropping the requested region is... not fast. I'll investigate that too.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479350523
https://github.com/qupath/qupath/issues/301#issuecomment-479535516:218,Integrability,interface,interface,218,"I can very easily see the concerns regarding included channel names, and that was one of my concerns! I think the ability to edit the names, and, potentially, copy measurement names out of the measurements list in the interface would go some ways to helping mitigate that. For dialog boxes and convenience sake, I was thinking that it might help to keep Channel1/2/3 etc, but also include a little square showing each channel's display color, which should help with defining the dimensions and not having text run all over the place. That would probably stop working well around 10+ channels though. Oh, or maybe for the dialog boxes, restrict the length of the text for the channel name, and use a separate column for the Channel 1/C1/Ch1, or whatever, so regardless of what gets chopped off for the name, that part is always visible? Kind of early morning stream of consciousness here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479535516
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:123,Availability,error,error,123,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:130,Availability,ERROR,ERROR,130,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:137,Availability,Error,Error,137,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:0,Deployability,Update,Update,0,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:151,Modifiability,plugin,plugin,151,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:386,Modifiability,plugin,plugins,386,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:477,Modifiability,plugin,plugins,477,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:565,Modifiability,plugin,plugins,565,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:573,Modifiability,Plugin,PluginRunnerFX,573,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:597,Modifiability,Plugin,PluginRunnerFX,597,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:636,Modifiability,plugin,plugins,636,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:807,Modifiability,plugin,plugins,807,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:994,Modifiability,plugin,plugins,994,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:1091,Modifiability,plugin,plugins,1091,"still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:260,Performance,concurren,concurrent,260,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:329,Performance,concurren,concurrent,329,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:1530,Performance,concurren,concurrent,1530,"still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:1612,Performance,concurren,concurrent,1612,"still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:1678,Performance,concurren,concurrent,1678,"still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:1760,Performance,concurren,concurrent,1760,"still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:1826,Performance,concurren,concurrent,1826,"still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482720:1906,Performance,concurren,concurrent,1906,"still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720
https://github.com/qupath/qupath/issues/301#issuecomment-514482912:12,Availability,error,error,12,When is the error generated?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482912
https://github.com/qupath/qupath/issues/301#issuecomment-514484941:421,Availability,error,error,421,"Any time I click Run for Add Intensity Features and have a one channel; selected and am running at least the mean. But so far only in the LuCa; image (of the few I have tested). Fairly regular cell generation parameters.; ![image](https://user-images.githubusercontent.com/23145209/61767453-2a224000-ad99-11e9-9422-582c1f37723a.png). On Tue, Jul 23, 2019 at 10:16 PM Pete <notifications@github.com> wrote:. > When is the error generated?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/301?email_source=notifications&email_token=AFQSV6KEL332YBYM5ENN5ATQA7QRPA5CNFSM4HDEAJ5KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2VGFYA#issuecomment-514482912>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AFQSV6I7Q5KND67GRIGVTQLQA7QRPANCNFSM4HDEAJ5A>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514484941
https://github.com/qupath/qupath/issues/301#issuecomment-514484941:169,Testability,test,tested,169,"Any time I click Run for Add Intensity Features and have a one channel; selected and am running at least the mean. But so far only in the LuCa; image (of the few I have tested). Fairly regular cell generation parameters.; ![image](https://user-images.githubusercontent.com/23145209/61767453-2a224000-ad99-11e9-9422-582c1f37723a.png). On Tue, Jul 23, 2019 at 10:16 PM Pete <notifications@github.com> wrote:. > When is the error generated?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/301?email_source=notifications&email_token=AFQSV6KEL332YBYM5ENN5ATQA7QRPA5CNFSM4HDEAJ5KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2VGFYA#issuecomment-514482912>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AFQSV6I7Q5KND67GRIGVTQLQA7QRPANCNFSM4HDEAJ5A>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514484941
https://github.com/qupath/qupath/issues/301#issuecomment-520137423:37,Integrability,message,message,37,"Forgot to reference if in the commit message, but this deals with the problem by using the stored channel names instead: https://github.com/petebankhead/qupath/commit/0caf3c68a766035a9c77a64c6a6d8b65464fd2b2. And here the channel names are applied within the cell detection command, rather than 'Channel 1', 'Channel 2' etc.:; https://github.com/petebankhead/qupath/commit/79228883d06e4cf36ed6477cc0e226522c3de1d8",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-520137423
https://github.com/qupath/qupath/issues/301#issuecomment-520137423:264,Safety,detect,detection,264,"Forgot to reference if in the commit message, but this deals with the problem by using the stored channel names instead: https://github.com/petebankhead/qupath/commit/0caf3c68a766035a9c77a64c6a6d8b65464fd2b2. And here the channel names are applied within the cell detection command, rather than 'Channel 1', 'Channel 2' etc.:; https://github.com/petebankhead/qupath/commit/79228883d06e4cf36ed6477cc0e226522c3de1d8",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-520137423
https://github.com/qupath/qupath/issues/303#issuecomment-487908711:58,Availability,down,download,58,You shouldn't have to do any of that just to run QuPath - download a release by following the links on the homepage at https://qupath.github.io/ or directly from https://github.com/qupath/qupath/releases,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-487908711
https://github.com/qupath/qupath/issues/303#issuecomment-487908711:69,Deployability,release,release,69,You shouldn't have to do any of that just to run QuPath - download a release by following the links on the homepage at https://qupath.github.io/ or directly from https://github.com/qupath/qupath/releases,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-487908711
https://github.com/qupath/qupath/issues/303#issuecomment-487908711:195,Deployability,release,releases,195,You shouldn't have to do any of that just to run QuPath - download a release by following the links on the homepage at https://qupath.github.io/ or directly from https://github.com/qupath/qupath/releases,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-487908711
https://github.com/qupath/qupath/issues/303#issuecomment-489080862:5,Deployability,update,updated,5,I've updated the ReadMe to remove the (out-of-date) reference to needing to build it yourself.; https://github.com/qupath/qupath/commit/3d2331fb2f0f169c35a3bd04f6026bd0d7bfecc9,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-489080862
https://github.com/qupath/qupath/issues/304#issuecomment-518016965:672,Safety,detect,detect,672,"I haven't been able to replicate this issue. If I set the stains with the following script; ```groovy; setImageType('BRIGHTFIELD_OTHER');; setColorDeconvolutionStains('{""Name"" : ""My strange stains"", ""Stain 1"" : ""Orange"", ""Values 1"" : ""0.012 0.276 0.961"", ""Stain 2"" : ""Black"", ""Values 2"" : ""0.631 0.631 0.451 "", ""Stain 3"" : ""Purple"", ""Values 3"" : ""0.304 0.922 0.239"", ""Background"" : "" 255 255 255 ""}');; ```; Then all three turn up under _Subcellular spot detection_ as options. There is some logic for identifying which stains to show/hide:; https://github.com/qupath/qupath/blob/b4a442535b2bd8169aacf16ecf6aac61004971b0/qupath-core-processing/src/main/java/qupath/imagej/detect/cells/SubcellularDetection.java#L673-L681; But I don't see why black is failing in your case, unless it has wrongly been identified as a 'residual' stain (i.e. there are only two stains, and it represents what is left over).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-518016965
https://github.com/qupath/qupath/issues/304#issuecomment-518016965:492,Testability,log,logic,492,"I haven't been able to replicate this issue. If I set the stains with the following script; ```groovy; setImageType('BRIGHTFIELD_OTHER');; setColorDeconvolutionStains('{""Name"" : ""My strange stains"", ""Stain 1"" : ""Orange"", ""Values 1"" : ""0.012 0.276 0.961"", ""Stain 2"" : ""Black"", ""Values 2"" : ""0.631 0.631 0.451 "", ""Stain 3"" : ""Purple"", ""Values 3"" : ""0.304 0.922 0.239"", ""Background"" : "" 255 255 255 ""}');; ```; Then all three turn up under _Subcellular spot detection_ as options. There is some logic for identifying which stains to show/hide:; https://github.com/qupath/qupath/blob/b4a442535b2bd8169aacf16ecf6aac61004971b0/qupath-core-processing/src/main/java/qupath/imagej/detect/cells/SubcellularDetection.java#L673-L681; But I don't see why black is failing in your case, unless it has wrongly been identified as a 'residual' stain (i.e. there are only two stains, and it represents what is left over).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-518016965
https://github.com/qupath/qupath/issues/304#issuecomment-518018293:136,Safety,detect,detect,136,"Would it be possible to allow all 3 stain vectors in Brightfield Other regardless of what they are named? Occasionally I have wanted to detect Hematoxylin within more complex samples as well, though I can get away with renaming it Htx. The logic isn't listed anywhere other than the code, so anyone else trying to get Hematoxylin subcellular detections in a 3-4 color brightfield image could struggle. Also, I _think_ black was actually the residual channel (there was a large amount of silver stain in the image), I renamed it thinking that I might get around ignoring the residual channel that way. If the program can somehow tell that was the residual channel without the name Residual or being in the 3rd position, that might have been it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-518018293
https://github.com/qupath/qupath/issues/304#issuecomment-518018293:342,Safety,detect,detections,342,"Would it be possible to allow all 3 stain vectors in Brightfield Other regardless of what they are named? Occasionally I have wanted to detect Hematoxylin within more complex samples as well, though I can get away with renaming it Htx. The logic isn't listed anywhere other than the code, so anyone else trying to get Hematoxylin subcellular detections in a 3-4 color brightfield image could struggle. Also, I _think_ black was actually the residual channel (there was a large amount of silver stain in the image), I renamed it thinking that I might get around ignoring the residual channel that way. If the program can somehow tell that was the residual channel without the name Residual or being in the 3rd position, that might have been it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-518018293
https://github.com/qupath/qupath/issues/304#issuecomment-518018293:240,Testability,log,logic,240,"Would it be possible to allow all 3 stain vectors in Brightfield Other regardless of what they are named? Occasionally I have wanted to detect Hematoxylin within more complex samples as well, though I can get away with renaming it Htx. The logic isn't listed anywhere other than the code, so anyone else trying to get Hematoxylin subcellular detections in a 3-4 color brightfield image could struggle. Also, I _think_ black was actually the residual channel (there was a large amount of silver stain in the image), I renamed it thinking that I might get around ignoring the residual channel that way. If the program can somehow tell that was the residual channel without the name Residual or being in the 3rd position, that might have been it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-518018293
https://github.com/qupath/qupath/issues/304#issuecomment-518301395:416,Usability,simpl,simplicity,416,"Oof, only a couple years since I started all this, but I'm not sure I would trust myself to do that at this point.; I feel like it is one of those situations where it would either best be hidden as a preference or ""Advanced"" option, or, with a single line of text at the top of the dialog stating something along the lines of ""Only change the values for the stains you are interested in, leave the rest at -1."". For simplicity's sake I would opt for the single line of text, but I think that would help a lot of users looking at that dialog for the first time, without being too much of a pain to code or bothersome to more experienced users.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-518301395
https://github.com/qupath/qupath/issues/304#issuecomment-632234331:81,Safety,detect,detection,81,"Closing this as it has gone quiet... and because I think the days of subcellular detection are/should be numbered. There will be no further changes for v0.2.0, and in future versions I think the command ought to be replaced rather than incrementally improved. From v0.2.0-m12 it should also now be possible to add object measurements based upon pixel classifications to cells. This has the aim of reducing the frequency with which subcellular detections are required.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-632234331
https://github.com/qupath/qupath/issues/304#issuecomment-632234331:443,Safety,detect,detections,443,"Closing this as it has gone quiet... and because I think the days of subcellular detection are/should be numbered. There will be no further changes for v0.2.0, and in future versions I think the command ought to be replaced rather than incrementally improved. From v0.2.0-m12 it should also now be possible to add object measurements based upon pixel classifications to cells. This has the aim of reducing the frequency with which subcellular detections are required.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/304#issuecomment-632234331
https://github.com/qupath/qupath/issues/305#issuecomment-483056585:298,Energy Efficiency,meter,meters,298,"I think the main problem is that your TIFF file was saved with incorrect pixel size information. Without that information it is very difficult to find settings that will work, though it is possible. Note that each one of your pixels is expected to be 163 um in size. Your entire image is about 0.2 meters in size. If you are using the ImageJ server, everything needs to be in pixels instead, though since you have a requestedPixelSize entry, I am guessing that is not the case here. If you are using a BioFormats server (see Image tab), you can get started with these settings, though I have not optimized them at all. ```; setImageType('BRIGHTFIELD_H_DAB');; createSelectAllObject(true);; setColorDeconvolutionStains('{""Name"" : ""H-DAB"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.81041 0.56974 0.13652 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26524 0.50132 0.8236 "", ""Background"" : "" 254 190 154 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 300.0, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 600.0, ""minAreaMicrons"": 10000.0, ""maxAreaMicrons"": 8.0E7, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 1000.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; ```. Note the extremely large values in most measurements. It would be better to fix the pixel sizes in ImageJ, though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-483056585
https://github.com/qupath/qupath/issues/305#issuecomment-483056585:596,Performance,optimiz,optimized,596,"I think the main problem is that your TIFF file was saved with incorrect pixel size information. Without that information it is very difficult to find settings that will work, though it is possible. Note that each one of your pixels is expected to be 163 um in size. Your entire image is about 0.2 meters in size. If you are using the ImageJ server, everything needs to be in pixels instead, though since you have a requestedPixelSize entry, I am guessing that is not the case here. If you are using a BioFormats server (see Image tab), you can get started with these settings, though I have not optimized them at all. ```; setImageType('BRIGHTFIELD_H_DAB');; createSelectAllObject(true);; setColorDeconvolutionStains('{""Name"" : ""H-DAB"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.81041 0.56974 0.13652 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26524 0.50132 0.8236 "", ""Background"" : "" 254 190 154 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 300.0, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 600.0, ""minAreaMicrons"": 10000.0, ""maxAreaMicrons"": 8.0E7, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 1000.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; ```. Note the extremely large values in most measurements. It would be better to fix the pixel sizes in ImageJ, though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-483056585
https://github.com/qupath/qupath/issues/305#issuecomment-483056585:948,Safety,detect,detect,948,"I think the main problem is that your TIFF file was saved with incorrect pixel size information. Without that information it is very difficult to find settings that will work, though it is possible. Note that each one of your pixels is expected to be 163 um in size. Your entire image is about 0.2 meters in size. If you are using the ImageJ server, everything needs to be in pixels instead, though since you have a requestedPixelSize entry, I am guessing that is not the case here. If you are using a BioFormats server (see Image tab), you can get started with these settings, though I have not optimized them at all. ```; setImageType('BRIGHTFIELD_H_DAB');; createSelectAllObject(true);; setColorDeconvolutionStains('{""Name"" : ""H-DAB"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.81041 0.56974 0.13652 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26524 0.50132 0.8236 "", ""Background"" : "" 254 190 154 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 300.0, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 600.0, ""minAreaMicrons"": 10000.0, ""maxAreaMicrons"": 8.0E7, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 1000.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; ```. Note the extremely large values in most measurements. It would be better to fix the pixel sizes in ImageJ, though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-483056585
https://github.com/qupath/qupath/issues/305#issuecomment-483056585:989,Safety,detect,detectionImageBrightfield,989,"I think the main problem is that your TIFF file was saved with incorrect pixel size information. Without that information it is very difficult to find settings that will work, though it is possible. Note that each one of your pixels is expected to be 163 um in size. Your entire image is about 0.2 meters in size. If you are using the ImageJ server, everything needs to be in pixels instead, though since you have a requestedPixelSize entry, I am guessing that is not the case here. If you are using a BioFormats server (see Image tab), you can get started with these settings, though I have not optimized them at all. ```; setImageType('BRIGHTFIELD_H_DAB');; createSelectAllObject(true);; setColorDeconvolutionStains('{""Name"" : ""H-DAB"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.81041 0.56974 0.13652 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26524 0.50132 0.8236 "", ""Background"" : "" 254 190 154 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 300.0, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 600.0, ""minAreaMicrons"": 10000.0, ""maxAreaMicrons"": 8.0E7, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 1000.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; ```. Note the extremely large values in most measurements. It would be better to fix the pixel sizes in ImageJ, though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-483056585
https://github.com/qupath/qupath/issues/305#issuecomment-483056604:735,Safety,detect,detection-not-working-prob-because,735,"I looked at the image and there are two main problems:; * The pixel size is completely off (169.3 μm). It looks like it was converted from a 'dots per inch' value used for printing resolution, but doesn't relate to the actual size of anything in the image.; * The background is values in your script are much too low. Draw a rectangle in one of the small 'white' areas and double-click on the 'Background' values under the 'Image' tab to set them. The first of these is the bigger problem. I don't know the source of your image, but ideally you'd be able to go back to it and save the file in a format that preserves the pixel size information properly. > Note: **Please** do not post [the same question](https://forum.image.sc/t/cell-detection-not-working-prob-because/24807) in multiple places. As described [here](https://github.com/qupath/qupath/wiki/Getting-help) and [here](https://github.com/qupath/qupath/issues/new/choose), GitHub issues is intended for bug reports and not for questions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-483056604
https://github.com/qupath/qupath/issues/305#issuecomment-483056828:68,Safety,detect,detection-not-working-prob-because,68,Any follow-up discussion should be at https://forum.image.sc/t/cell-detection-not-working-prob-because/24807,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-483056828
https://github.com/qupath/qupath/issues/305#issuecomment-874790067:163,Availability,down,download,163,"Github issues are really for bugs. Please post on the [community forum](https://forum.image.sc/tag/qupath) :). Also if you have a sample image for other people to download and a clearer description of what you've tried so far it'll be easier. Pete mentioned above some options, that's probably a good start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-874790067
https://github.com/qupath/qupath/issues/305#issuecomment-874790067:178,Usability,clear,clearer,178,"Github issues are really for bugs. Please post on the [community forum](https://forum.image.sc/tag/qupath) :). Also if you have a sample image for other people to download and a clearer description of what you've tried so far it'll be easier. Pete mentioned above some options, that's probably a good start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-874790067
https://github.com/qupath/qupath/issues/307#issuecomment-484602478:32,Availability,error,error,32,"That looks eerily similar to an error I think @Svidro mentioned once. It's related to painting the cell overlay on top of the image. Painting errors are annoying, but shouldn't generally be really critical. I believe it occurs because a change in selected objects happens to occur at the same time that the objects are being painted. I have made a change in the code that should address this. If you can find a way to reproduce the error consistently I will check it... otherwise if you find it continues to happen in the next milestone please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484602478
https://github.com/qupath/qupath/issues/307#issuecomment-484602478:142,Availability,error,errors,142,"That looks eerily similar to an error I think @Svidro mentioned once. It's related to painting the cell overlay on top of the image. Painting errors are annoying, but shouldn't generally be really critical. I believe it occurs because a change in selected objects happens to occur at the same time that the objects are being painted. I have made a change in the code that should address this. If you can find a way to reproduce the error consistently I will check it... otherwise if you find it continues to happen in the next milestone please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484602478
https://github.com/qupath/qupath/issues/307#issuecomment-484602478:432,Availability,error,error,432,"That looks eerily similar to an error I think @Svidro mentioned once. It's related to painting the cell overlay on top of the image. Painting errors are annoying, but shouldn't generally be really critical. I believe it occurs because a change in selected objects happens to occur at the same time that the objects are being painted. I have made a change in the code that should address this. If you can find a way to reproduce the error consistently I will check it... otherwise if you find it continues to happen in the next milestone please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484602478
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:229,Availability,error,error,229,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:461,Availability,error,error,461,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:1046,Availability,ERROR,ERROR,1046,"ut the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.Platform",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:956,Energy Efficiency,adapt,adaptRegularization,956,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:524,Modifiability,plugin,plugins,524,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:956,Modifiability,adapt,adaptRegularization,956,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:1955,Security,secur,security,1955,"FO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Thread.java:834); INFO: ; qupath.lib.algorithms.IntensityFeaturesPlugin {""pixelSizeMicrons"": 0.227, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""channel1"": true, ""channel2"": true, ""channel3"": true, ""doMean"": true, ""doStdDev"": false, ""doMinMax"": false, ""doMedian"": true, ""doHaralick"": false, ""haralickMin"": 0.0, ""haralickMax"": 1.0, ""haralickDistance"": 1, ""haralickBins"": 32}; INFO: Processing complete in 0.34 seconds; INFO: Completed!`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484610786:1964,Security,Access,AccessController,1964,"FO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Thread.java:834); INFO: ; qupath.lib.algorithms.IntensityFeaturesPlugin {""pixelSizeMicrons"": 0.227, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""channel1"": true, ""channel2"": true, ""channel3"": true, ""doMean"": true, ""doStdDev"": false, ""doMinMax"": false, ""doMedian"": true, ""doHaralick"": false, ""haralickMin"": 0.0, ""haralickMax"": 1.0, ""haralickDistance"": 1, ""haralickBins"": 32}; INFO: Processing complete in 0.34 seconds; INFO: Completed!`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:55,Availability,error,error,55,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:1127,Availability,ERROR,ERROR,1127,"decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShape(BreadCrumbBarSkin.java:324); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.updateShape(BreadCrumbBarSkin.jav",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:2097,Deployability,update,updateShape,2097,"ers"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShape(BreadCrumbBarSkin.java:324); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.updateShape(BreadCrumbBarSkin.java:298); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton$1.invalidated(BreadCrumbBarSkin.java:290); > at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:321); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155); > at java.base/java.util.AbstractList.add(AbstractList.java:111); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.createCrumb(BreadCrumbBarSkin.java:219); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.updateBreadCrumbs(BreadCrum",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:3085,Deployability,update,updateBreadCrumbs,3085,Shape(BreadCrumbBarSkin.java:298); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton$1.invalidated(BreadCrumbBarSkin.java:290); > at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:321); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155); > at java.base/java.util.AbstractList.add(AbstractList.java:111); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.createCrumb(BreadCrumbBarSkin.java:219); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.updateBreadCrumbs(BreadCrumbBarSkin.java:161); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.lambda$new$1(BreadCrumbBarSkin.java:147); > at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at co,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:4313,Deployability,update,updateChildren,4313,ventHandler.java:218); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:6526,Deployability,update,updateChildren,6526,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:8739,Deployability,update,updateChildren,8739,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:10952,Deployability,update,updateChildren,10952,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:13165,Deployability,update,updateChildren,13165,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:15378,Deployability,update,updateChildren,15378,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:17591,Deployability,update,updateChildren,17591,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:19804,Deployability,update,updateChildren,19804,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:22017,Deployability,update,updateChildren,22017,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:24230,Deployability,update,updateChildren,24230,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:26443,Deployability,update,updateChildren,26443,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:28656,Deployability,update,updateChildren,28656,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:30869,Deployability,update,updateChildren,30869,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:33082,Deployability,update,updateChildren,33082,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:35295,Deployability,update,updateChildren,35295,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:37508,Deployability,update,updateChildren,37508,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:39721,Deployability,update,updateChildren,39721,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:41934,Deployability,update,updateChildren,41934,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:44147,Deployability,update,updateChildren,44147,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:46360,Deployability,update,updateChildren,46360,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:48573,Deployability,update,updateChildren,48573,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:50786,Deployability,update,updateChildren,50786,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:52999,Deployability,update,updateChildren,52999,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:55212,Deployability,update,updateChildren,55212,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:57425,Deployability,update,updateChildren,57425,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:59638,Deployability,update,updateChildren,59638,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:61851,Deployability,update,updateChildren,61851,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:64064,Deployability,update,updateChildren,64064,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:66277,Deployability,update,updateChildren,66277,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:68490,Deployability,update,updateChildren,68490,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:70703,Deployability,update,updateChildren,70703,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:72916,Deployability,update,updateChildren,72916,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:75129,Deployability,update,updateChildren,75129,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:77342,Deployability,update,updateChildren,77342,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:79555,Deployability,update,updateChildren,79555,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:81768,Deployability,update,updateChildren,81768,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:83981,Deployability,update,updateChildren,83981,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:86194,Deployability,update,updateChildren,86194,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:159,Safety,detect,detections,159,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:425,Safety,detect,detect,425,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:461,Safety,detect,detection,461,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:493,Safety,detect,detection,493,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:525,Safety,detect,detection,525,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:821,Safety,detect,detect,821,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:857,Safety,detect,detection,857,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:889,Safety,detect,detection,889,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:921,Safety,detect,detection,921,"I can start a new thread for this if you want, but the error I was referring to earlier I could replicate quickly by generating a decent number of subcellular detections... and then trying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShap",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484622516:1175,Security,access,access,1175,"rying to double click on a cell in the viewer to see values. After this happens, any interaction with the viewer results in the same Exception spam popup in the corner of the program. The popup itself says Stack Overflow. > ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > INFO: Processing complete in 34.46 seconds; > INFO: Completed!; > INFO: ; > qupath.imagej.detect.cells.SubcellularDetection {""detection[Channel 1]"": 2000.0, ""detection[Channel 2]"": 2000.0, ""detection[Channel 3]"": -1.0, ""doSmoothing"": false, ""splitByIntensity"": false, ""splitByShape"": true, ""spotSizeMicrons"": 1.0, ""minSpotSizeMicrons"": 0.5, ""maxSpotSizeMicrons"": 2.0, ""includeClusters"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShape(BreadCrumbBarSkin.java:324); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.updateShape(BreadCrumbBarSkin.java:298); > at impl.org.controlsfx.skin.BreadCrumbBarSk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516
https://github.com/qupath/qupath/issues/307#issuecomment-484627853:27,Availability,error,error,27,"@Svidro That's a different error. I couldn't replicate it, but my idea of a 'decent number' may be lower. If you are displaying all detections under the 'Hierarchy' tab, you can right-click on it and choose to hide them. That might help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484627853
https://github.com/qupath/qupath/issues/307#issuecomment-484627853:132,Safety,detect,detections,132,"@Svidro That's a different error. I couldn't replicate it, but my idea of a 'decent number' may be lower. If you are displaying all detections under the 'Hierarchy' tab, you can right-click on it and choose to hide them. That might help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484627853
https://github.com/qupath/qupath/issues/307#issuecomment-484630072:89,Availability,error,error,89,"Hmm, I had already forgotten about that... and I have not yet been able to replicate the error with those turned off. *Places head into contact with table repeatedly*",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484630072
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:60,Availability,error,error,60,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:75,Availability,ERROR,ERROR,75,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:82,Availability,Error,Error,82,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:294,Availability,error,error,294,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:301,Availability,ERROR,ERROR,301,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:315,Availability,error,error,315,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:353,Availability,Error,ErrorCollector,353,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:381,Availability,Error,ErrorCollector,381,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:1003,Performance,Concurren,ConcurrentCommonCache,1003,"ode to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.bas",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:1035,Performance,Concurren,ConcurrentCommonCache,1035," got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Thre",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:1869,Performance,concurren,concurrent,1869,".java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834) `. These are the relevant lines: . `; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). def imp = IJTools.convertToImagePlus(server, request).getImage(); `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:1955,Performance,concurren,concurrent,1955,".java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834) `. These are the relevant lines: . `; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). def imp = IJTools.convertToImagePlus(server, request).getImage(); `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:2026,Performance,concurren,concurrent,2026,".java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834) `. These are the relevant lines: . `; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). def imp = IJTools.convertToImagePlus(server, request).getImage(); `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:2120,Performance,concurren,concurrent,2120,".java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834) `. These are the relevant lines: . `; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). def imp = IJTools.convertToImagePlus(server, request).getImage(); `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484643330:781,Security,access,access,781,"I edited the code to try that but I still got the following error: . ````; ERROR: Error: startup failed:; Script53.groovy: 45: unable to resolve class ImagePlusServer ; @ line 45, column 17.; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ^. 1 error. ERROR: Script error; at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:980); at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:647); at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:596); at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:390); at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:330); at groovy.lang.GroovyClassLoader$5.provide(GroovyClassLoader.java:327); at org.codehaus.groovy.runtime.memoize.ConcurrentCommonCache.getAndPut(ConcurrentCommonCache.java:147); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:325); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:309); at groovy.lang.GroovyClassLoader.parseClass(GroovyClassLoader.java:251); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.getScriptClass(GroovyScriptEngineImpl.java:331); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:153); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1034); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484643330
https://github.com/qupath/qupath/issues/309#issuecomment-484671442:433,Availability,error,error,433,"Sorry, I didn't read closely enough.; ```groovy; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```; should be removed entirely. Then you can try this; ```groovy; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(); ```; The previous error was because you were using `server` before it was defined. But actually with the update in v0.2.0 you don't need to define `server` separately from `serverOriginal` at all. Note that v0.2.0 is a work in progress and will change further in various ways. I wouldn't really recommending switching to it and spending much time updating scripts yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484671442
https://github.com/qupath/qupath/issues/309#issuecomment-484671442:520,Deployability,update,update,520,"Sorry, I didn't read closely enough.; ```groovy; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```; should be removed entirely. Then you can try this; ```groovy; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(); ```; The previous error was because you were using `server` before it was defined. But actually with the update in v0.2.0 you don't need to define `server` separately from `serverOriginal` at all. Note that v0.2.0 is a work in progress and will change further in various ways. I wouldn't really recommending switching to it and spending much time updating scripts yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484671442
https://github.com/qupath/qupath/issues/309#issuecomment-486769907:76,Availability,error,error,76,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907
https://github.com/qupath/qupath/issues/309#issuecomment-486769907:350,Availability,error,error,350,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907
https://github.com/qupath/qupath/issues/309#issuecomment-486769907:381,Availability,ERROR,ERROR,381,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907
https://github.com/qupath/qupath/issues/309#issuecomment-486769907:388,Availability,Error,Error,388,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907
https://github.com/qupath/qupath/issues/309#issuecomment-486769907:452,Availability,ERROR,ERROR,452,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907
https://github.com/qupath/qupath/issues/309#issuecomment-486769907:466,Availability,error,error,466,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907
https://github.com/qupath/qupath/issues/309#issuecomment-486769907:356,Integrability,message,message,356,"Hi Pete, thanks for all your help so far! I am getting a somewhat different error now. . Here are the relevant lines of code: ; `// Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(). `. And here is the error message I am getting. ; `ERROR: Error at line 71: No such property: request for class: Script1. ERROR: Script error` . With a long following, which I can attach if you want. . Sorry if this is a silly question, I appreciate the help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486769907
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:578,Availability,down,downsample,578,"Sorry, I again answered too quickly without time to test the code. This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's norm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:597,Availability,Down,Downsampling,597,"Sorry, I again answered too quickly without time to test the code. This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's norm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:923,Availability,error,errors,923,"Sorry, I again answered too quickly without time to test the code. This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's norm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1190,Availability,error,errors,1190,". This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1422,Availability,error,error,1422,"dthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1866,Availability,down,downsample,1866,"irs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1917,Availability,down,downsample,1917,"irs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2364,Availability,down,downsample,2364,"e!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2773,Availability,down,downsample,2773," String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:2871,Availability,down,downsample,2871,"oop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:3408,Availability,down,downsample,3408,"// Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```; The original version contained quite a bit of ImageJ-related stuff but on closer inspection I'm not sure why since it actually writes JPEGs instead of ImageJ TIFFs. If the above script doesn't work, I think it would be best to start a new discussion at https://forum.image.sc/tags/qupath describing what it should do and perhaps there is an easier way to get there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:3763,Availability,error,errors,3763,"// Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```; The original version contained quite a bit of ImageJ-related stuff but on closer inspection I'm not sure why since it actually writes JPEGs instead of ImageJ TIFFs. If the above script doesn't work, I think it would be best to start a new discussion at https://forum.image.sc/tags/qupath describing what it should do and perhaps there is an easier way to get there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:3854,Availability,error,errors,3854,"// Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```; The original version contained quite a bit of ImageJ-related stuff but on closer inspection I'm not sure why since it actually writes JPEGs instead of ImageJ TIFFs. If the above script doesn't work, I think it would be best to start a new discussion at https://forum.image.sc/tags/qupath describing what it should do and perhaps there is an easier way to get there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1384,Modifiability,variab,variable,1384,"ng.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1737,Modifiability,variab,variables,1737,"zes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.nZSlices(); z++) {; for (double y = 0; y < server.getHeight(); y += tileHeight) {. // Compute integer y coordinates; int yi = (int)(y + 0.5); int y2i = (int)Math.min((int)(y + tileHeight + 0.5), server.getHeight());; int hi = y2i - yi. // Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = Region",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:936,Safety,avoid,avoid,936,". This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:1105,Safety,avoid,avoid,1105,". This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's normally only one...); int counter = 0;; for (int z = 0; z < server.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:3872,Safety,abort,aborting,3872,"// Check if we requesting a region that is too small; if (hi / downsample < minImageDimension) {; println(""Image dimension < "" + minImageDimension + "" - skipping row""); continue; }. for (double x = 0; x < server.getWidth(); x += tileWidth) {. // Compute integer x coordinates; int xi = (int)(x + 0.5); int x2i = (int)Math.min((int)(x + tileWidth + 0.5), server.getWidth());; int wi = x2i - xi. // Create request; RegionRequest request = RegionRequest.createInstance(path, downsample, xi, yi, wi, hi, z, 0). // Check if we requesting a region that is too small; if (wi / downsample < minImageDimension) {; // Only print warning if we've not skipped this before; if (y > 0); println(""Image dimension < "" + minImageDimension + "" - skipping column""); continue; }. // Surround with try/catch in case the server gives us trouble; try {; // Put at top of file for neater code...; ext = "".jpg""; imageData = getCurrentImageData(); overlayOptions = getCurrentViewer().getOverlayOptions(); ; // Write out the region with overlay; String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); File file = new File(dirOutput, name); ImageWriterTools.writeImageRegionWithOverlay(imageData, overlayOptions, request, file.getAbsolutePath()). // Print progress; counter++; println(""Written tile "" + counter + "" to "" + file.getAbsolutePath()); }; catch (Exception e) {; // Check if we have had a sufficient number of errors to just give up; nErrors++;; if (nErrors > maxErrors) {; println(""Maximum number of errors exceeded - aborting...""); return; }; e.printStackTrace(); }; }; }; }; ```; The original version contained quite a bit of ImageJ-related stuff but on closer inspection I'm not sure why since it actually writes JPEGs instead of ImageJ TIFFs. If the above script doesn't work, I think it would be best to start a new discussion at https://forum.image.sc/tags/qupath describing what it should do and perhaps there is an easier way to get there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/309#issuecomment-486778605:52,Testability,test,test,52,"Sorry, I again answered too quickly without time to test the code. This script at least runs, although I'm not sure if it's what you want or not:; ```groovy; //Exporting Image as .tif files; import qupath.lib.gui.ImageWriterTools. import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput = buildFilePath(PROJECT_BASE_DIR, 'something else') // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!; mkdirs(dirOutput). int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> server = QP.getCurrentImageData().getServer(). // Ensure convert the format to a file extension; String ext; if (format.startsWith(""."")); ext = format.substring(1).toLowerCase(); else; ext = format.toLowerCase(). // Extract useful variables; String path = server.getPath(); String serverName = server.getShortServerName(); double tileWidth = tileWidthPixels * downsample; double tileHeight = tileHeightPixels * downsample. // Loop through the image - including z-slices (even though there's norm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-486778605
https://github.com/qupath/qupath/issues/311#issuecomment-487145110:423,Availability,error,error,423,"Following up with my solution:. - The latest version of JPackage (Build 49) has renamed the `create-image` parameter to `create-app-image`, so this line needs to be changed accordingly to `params << 'create-app-image'`:. https://github.com/qupath/qupath/blob/da83ef9e809e18e4a99bf8510c03f42217bc1579/build.gradle#L415-L419. - Running the gradle build after doing this raised the ""Invalid Option: [--strip-native-commands]"" error, which I resolved by commenting out this line:. https://github.com/qupath/qupath/blob/da83ef9e809e18e4a99bf8510c03f42217bc1579/build.gradle#L439-L440. My understanding from [here](https://openjdk.java.net/jeps/343) is that `--strip-native-commands` is a jlink flag, and not a jpackage one?. Let me know if you have any questions!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/311#issuecomment-487145110
https://github.com/qupath/qupath/issues/311#issuecomment-487147127:282,Deployability,update,updates,282,"I've made changes on my fork at https://github.com/petebankhead/qupath/commit/bfaa0bc7aed21c28497be064da3cd2009db249cb#diff-c197962302397baf3a4cc36463dce5ea but haven't merged these back yet. For now, jpackage remains a moving target and the build script will probably need further updates as it develops...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/311#issuecomment-487147127
https://github.com/qupath/qupath/issues/314#issuecomment-491329554:87,Deployability,install,installation,87,"If you remove the jar file with 'qupath-extension-script-editor' in the name from your installation, QuPath is supposed to fall back to use a simpler script editor that lacks any kind of syntax highlighting. This may be worth trying as a workaround if the bug is more problematic than the loss of highlighting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/314#issuecomment-491329554
https://github.com/qupath/qupath/issues/314#issuecomment-491329554:142,Usability,simpl,simpler,142,"If you remove the jar file with 'qupath-extension-script-editor' in the name from your installation, QuPath is supposed to fall back to use a simpler script editor that lacks any kind of syntax highlighting. This may be worth trying as a workaround if the bug is more problematic than the loss of highlighting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/314#issuecomment-491329554
https://github.com/qupath/qupath/issues/315#issuecomment-514590018:72,Deployability,release,releases,72,New color maps included in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3). Further information in [this tweet](https://twitter.com/petebankhead/status/1145616588823040000).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/315#issuecomment-514590018
https://github.com/qupath/qupath/issues/316#issuecomment-493929710:314,Integrability,depend,depending,314,"Oh dear, could it be this? https://github.com/qupath/qupath/issues/292. It seems that on Linux/Mac if .qpdata files are opened and saved externally (i.e. not from within a project) then they end up 'disappearing'. I don't think it should happen when everything is done within a project, but the outcome may differ depending up whether it is a project that was created with v0.1.2 or v0.2.0-m1/2.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493929710
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:374,Availability,error,error,374,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:635,Availability,ERROR,ERROR,635,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:642,Availability,Error,Error,642,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3982,Availability,error,error,3982,"detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5177,Availability,ERROR,ERROR,5177,", ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Loca",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5355,Availability,down,downsample,5355,"llExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.co",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8447,Availability,ERROR,ERROR,8447,"gePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at l",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8625,Availability,down,downsample,8625,"t qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.co",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5745,Energy Efficiency,allocate,allocateDirect,5745,"ition=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.Read",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5830,Energy Efficiency,allocate,allocate,5830,"tor[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageRead",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:9015,Energy Efficiency,allocate,allocateDirect,9015,"eTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.Read",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:9100,Energy Efficiency,allocate,allocate,9100,"Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageRead",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:380,Integrability,message,message,380,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:656,Modifiability,plugin,plugin,656,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:868,Modifiability,plugin,plugins,868,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:959,Modifiability,plugin,plugins,959,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:1043,Modifiability,plugin,plugins,1043,"nly, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(De",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3324,Modifiability,plugin,plugins,3324,"); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProce",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:7810,Modifiability,plugin,plugins,7810,"ci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11080,Modifiability,plugin,plugins,11080,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:732,Performance,concurren,concurrent,732,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:806,Performance,concurren,concurrent,806,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:2280,Performance,concurren,concurrent,2280,rce); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedC,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:2354,Performance,concurren,concurrent,2354,tic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$Detecti,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:2425,Performance,concurren,concurrent,2425,tractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.c,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:2511,Performance,concurren,concurrent,2511,llsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.c,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:2582,Performance,concurren,concurrent,2582,t3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.c,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:2676,Performance,concurren,concurrent,2676,ptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurren,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3430,Performance,concurren,concurrent,3430,".Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"":",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3516,Performance,concurren,concurrent,3516,".FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3587,Performance,concurren,concurrent,3587,".ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Poin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3673,Performance,concurren,concurrent,3673,"ncurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; IN",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3744,Performance,concurren,concurrent,3744," java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x608",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3838,Performance,concurren,concurrent,3838,"tProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDealloc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:7916,Performance,concurren,concurrent,7916,"formats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8002,Performance,concurren,concurrent,8002,"images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferPr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8073,Performance,concurren,concurrent,8073,"eServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.N",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8159,Performance,concurren,concurrent,8159,"dImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileH",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8230,Performance,concurren,concurrent,8230,"ers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<ini",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:8324,Performance,concurren,concurrent,8324,"ath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at lo",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11186,Performance,concurren,concurrent,11186,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11272,Performance,concurren,concurrent,11272,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11343,Performance,concurren,concurrent,11343,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11429,Performance,concurren,concurrent,11429,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11500,Performance,concurren,concurrent,11500,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11594,Performance,concurren,concurrent,11594,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:463,Safety,detect,detected,463,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:524,Safety,detect,detected,524,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:558,Safety,detect,detected,558,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:619,Safety,detect,detected,619,"Hm, perhaps.. In my case I worked on 0.2.0-m2 only, and within a project, so there must be more to it... I've tried again with different images this morning after my post, and I found that processing 1 image worked, but running the analysis on a batch of 3 images did not... with a similar outcome (analysis stopped and lost all annotations).; Except this time I did get an error message (maybe I missed it last time). Here is part of it:. ```; INFO: 2159 nuclei detected (processing time: 21.18 seconds); INFO: 2159 nuclei detected (10%); INFO: 1803 nuclei detected (processing time: 19.79 seconds); INFO: 1803 nuclei detected (11%); ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:191); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:237); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:201); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:258); at qupath.lib.gui.scripting.QPEx.runPlugin(QPEx.java:278); at qupath.lib.gui.scripting.QPEx$runPlugin.callStatic(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196); at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216); at Script3.run(Script3.groovy:6); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:317); at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:767); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:697); at qupath.lib.gui.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:2971,Safety,detect,detect,2971,va:697); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:677); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Complete,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3092,Safety,detect,detect,3092,"cripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1288); at qupath.lib.gui.scripting.DefaultScriptEditor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""det",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3214,Safety,detect,detect,3214,"tor$ProjectTask.call(DefaultScriptEditor.java:1237); at javafx.concurrent.Task$TaskCallable.call(Task.java:1425); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3332,Safety,Detect,DetectionPluginTools,3332,"il.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansio",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3353,Safety,Detect,DetectionRunnable,3353,"il.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansio",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:3375,Safety,Detect,DetectionPluginTools,3375,"ureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); Caused by Java heap space at ij.process.FloatProcessor.snapshot(FloatProcessor.java:240); at ij.process.FloatProcessor.convolve(FloatProcessor.java:1069); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.doDetection(WatershedCellDetection.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"":",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:4055,Safety,detect,detect,4055,"ction.java:600); at qupath.imagej.detect.cells.WatershedCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,dea",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:4093,Safety,detect,detectionImageFluorescence,4093,"edCellDetection$WatershedCellDetector.runDetection(WatershedCellDetection.java:997); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:362); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.cells.WatershedCellDetection {""detectionImageFluorescence"": 1, ""requestedPixelSizeMicrons"": 0.1, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 0.9, ""minAreaMicrons"": 6.0, ""maxAreaMicrons"": 150.0, ""threshold"": 2000.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 3.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; INFO: Training size: org.bytedeco.javacpp.opencv_core$Size[address=0x608000811620,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000811620,deallocatorAddress=0x13aaec9c0]]; INFO: Responses size: org.bytedeco.javacpp.opencv_core$Size[address=0x60800080d2a0,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:7700,Safety,detect,detect,7700,"apper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.e",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:7818,Safety,Detect,DetectionPluginTools,7818,"ImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:7839,Safety,Detect,DetectionRunnable,7839,"ImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:7861,Safety,Detect,DetectionPluginTools,7861,"ageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.read",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:10970,Safety,detect,detect,10970,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11088,Safety,Detect,DetectionPluginTools,11088,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11109,Safety,Detect,DetectionRunnable,11109,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493938867:11131,Safety,Detect,DetectionPluginTools,11131,odeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.readTile(BioFormatsImageServer.java:648); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:61); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:166); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:536); at qupath.imagej.helpers.IJTools.convertToImagePlus(IJTools.java:573); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:156); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:120); at qupath.imagej.objects.PathImagePlus.getImage(PathImagePlus.java:47); at qupath.imagej.detect.cells.WatershedCellDetection$CellDetector.runDetection(WatershedCellDetection.java:269); at qupath.lib.plugins.DetectionPluginTools$DetectionRunnable.run(DetectionPluginTools.java:123); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867
https://github.com/qupath/qupath/issues/316#issuecomment-493945197:108,Availability,error,error,108,"Ah, seems not to be the issue I linked to then... but rather a 'normal' (albeit very poorly handled) memory error. Do you have more memory that you could make available to QuPath, or try reducing parallelization? ; There are some suggestions at https://github.com/qupath/qupath/wiki/Troubleshooting. Out-of-memory errors are (somewhat) inevitable when pushing things particularly hard, but if this results in completely losing .qpdata files then that definitely sounds like a bug that needs fixed. I will try to reproduce the problem and see if I can make it at least fail less catastrophically... and ideally not at all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493945197
https://github.com/qupath/qupath/issues/316#issuecomment-493945197:159,Availability,avail,available,159,"Ah, seems not to be the issue I linked to then... but rather a 'normal' (albeit very poorly handled) memory error. Do you have more memory that you could make available to QuPath, or try reducing parallelization? ; There are some suggestions at https://github.com/qupath/qupath/wiki/Troubleshooting. Out-of-memory errors are (somewhat) inevitable when pushing things particularly hard, but if this results in completely losing .qpdata files then that definitely sounds like a bug that needs fixed. I will try to reproduce the problem and see if I can make it at least fail less catastrophically... and ideally not at all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493945197
https://github.com/qupath/qupath/issues/316#issuecomment-493945197:314,Availability,error,errors,314,"Ah, seems not to be the issue I linked to then... but rather a 'normal' (albeit very poorly handled) memory error. Do you have more memory that you could make available to QuPath, or try reducing parallelization? ; There are some suggestions at https://github.com/qupath/qupath/wiki/Troubleshooting. Out-of-memory errors are (somewhat) inevitable when pushing things particularly hard, but if this results in completely losing .qpdata files then that definitely sounds like a bug that needs fixed. I will try to reproduce the problem and see if I can make it at least fail less catastrophically... and ideally not at all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493945197
https://github.com/qupath/qupath/issues/316#issuecomment-493948324:137,Availability,error,error,137,"Fair enough. Thanks for looking in to this. It would be great if ""at least"" the annotations could be kept 👍 ; Seeing the java heap space error I thought it might be that... but I have been able to run larger batches/images in the past so I wasn't expecting to have such problem. Can't remember if I actually did a larger analysis using this version though... and I don't get an error when not running it slide by slide (outside batch mode).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493948324
https://github.com/qupath/qupath/issues/316#issuecomment-493948324:378,Availability,error,error,378,"Fair enough. Thanks for looking in to this. It would be great if ""at least"" the annotations could be kept 👍 ; Seeing the java heap space error I thought it might be that... but I have been able to run larger batches/images in the past so I wasn't expecting to have such problem. Can't remember if I actually did a larger analysis using this version though... and I don't get an error when not running it slide by slide (outside batch mode).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493948324
https://github.com/qupath/qupath/issues/316#issuecomment-493950996:570,Availability,avail,available,570,"Yes, there may be an extra memory leak in there causing trouble... I've also seen some Bio-Formats readers be rather more 'heavyweight' than others, meaning that if the image reading is parallelized this can be much more memory-hungry (since a separate reader is required per thread). In one case, the size of a .bfmemo file for a Zeiss .czi image revealed each reader was taking 1GB... and multichannel fluorescence images also need potentially much more memory to cache tiles suitably. But whatever the cause, it shouldn't fail as badly as it does. How much memory is available to QuPath?. This may also be of some use: https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493950996
https://github.com/qupath/qupath/issues/316#issuecomment-493950996:695,Energy Efficiency,monitor,monitor,695,"Yes, there may be an extra memory leak in there causing trouble... I've also seen some Bio-Formats readers be rather more 'heavyweight' than others, meaning that if the image reading is parallelized this can be much more memory-hungry (since a separate reader is required per thread). In one case, the size of a .bfmemo file for a Zeiss .czi image revealed each reader was taking 1GB... and multichannel fluorescence images also need potentially much more memory to cache tiles suitably. But whatever the cause, it shouldn't fail as badly as it does. How much memory is available to QuPath?. This may also be of some use: https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493950996
https://github.com/qupath/qupath/issues/316#issuecomment-493950996:466,Performance,cache,cache,466,"Yes, there may be an extra memory leak in there causing trouble... I've also seen some Bio-Formats readers be rather more 'heavyweight' than others, meaning that if the image reading is parallelized this can be much more memory-hungry (since a separate reader is required per thread). In one case, the size of a .bfmemo file for a Zeiss .czi image revealed each reader was taking 1GB... and multichannel fluorescence images also need potentially much more memory to cache tiles suitably. But whatever the cause, it shouldn't fail as badly as it does. How much memory is available to QuPath?. This may also be of some use: https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493950996
https://github.com/qupath/qupath/issues/316#issuecomment-632235419:152,Deployability,release,release,152,Closing this because it has gone quiet and the issue could not be reproduced... hopefully the issue has been fixed along the path to v0.2.0 as a stable release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-632235419
https://github.com/qupath/qupath/issues/317#issuecomment-494027815:59,Availability,down,downsampling,59,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815
https://github.com/qupath/qupath/issues/317#issuecomment-494027815:306,Availability,down,downsample,306,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815
https://github.com/qupath/qupath/issues/317#issuecomment-494027815:767,Availability,down,downsample,767,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815
https://github.com/qupath/qupath/issues/317#issuecomment-494027815:1091,Deployability,install,install,1091,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815
https://github.com/qupath/qupath/issues/317#issuecomment-494029538:83,Availability,down,downsample,83,"No need to install anything extra to run scripts, but you can also just change the downsample for TMA export in the preferences. > Please use the forum at https://forum.image.sc/tags/qupath for questions as described whenever you try to create an issue here... it helps keep the answers in one, searchable place. GitHub issues is intended just for bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494029538
https://github.com/qupath/qupath/issues/317#issuecomment-494029538:11,Deployability,install,install,11,"No need to install anything extra to run scripts, but you can also just change the downsample for TMA export in the preferences. > Please use the forum at https://forum.image.sc/tags/qupath for questions as described whenever you try to create an issue here... it helps keep the answers in one, searchable place. GitHub issues is intended just for bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494029538
https://github.com/qupath/qupath/issues/317#issuecomment-494035194:426,Deployability,update,updated,426,"I think so, it's probably the most relevant link. But it can vary depending on what exactly you want, e.g.; * if you are working with brightfield/fluorescence images; * if you need the pixel size to be stored in microns within the image or not; * if you want compressed images or not; * if you're using QuPath v0.1.2 (the stable one) or the more recent milestones (which are a work in progress and requires some scripts to be updated). I'd suggest giving it a try, and starting a thread at https://forum.image.sc/tags/qupath if more customization is needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494035194
https://github.com/qupath/qupath/issues/317#issuecomment-494035194:66,Integrability,depend,depending,66,"I think so, it's probably the most relevant link. But it can vary depending on what exactly you want, e.g.; * if you are working with brightfield/fluorescence images; * if you need the pixel size to be stored in microns within the image or not; * if you want compressed images or not; * if you're using QuPath v0.1.2 (the stable one) or the more recent milestones (which are a work in progress and requires some scripts to be updated). I'd suggest giving it a try, and starting a thread at https://forum.image.sc/tags/qupath if more customization is needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494035194
https://github.com/qupath/qupath/issues/317#issuecomment-494337218:105,Modifiability,refactor,refactoring,105,"It's certainly possible by scripting, but it involves digging deeper into the code - which I'm currently refactoring extensively, so a script written now might not work without changed when the refactoring is done. Also, the color deconvolution in QuPath produces a 32-bit result so the file format would need to be changed accordingly (e.g. to ImageJ TIFF). I'll close this issue: please do post any further questions on the forum so that any answers are easier to find. I will soon go through all the GitHub issues that are not active issues/bugs to close them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494337218
https://github.com/qupath/qupath/issues/317#issuecomment-494337218:194,Modifiability,refactor,refactoring,194,"It's certainly possible by scripting, but it involves digging deeper into the code - which I'm currently refactoring extensively, so a script written now might not work without changed when the refactoring is done. Also, the color deconvolution in QuPath produces a 32-bit result so the file format would need to be changed accordingly (e.g. to ImageJ TIFF). I'll close this issue: please do post any further questions on the forum so that any answers are easier to find. I will soon go through all the GitHub issues that are not active issues/bugs to close them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494337218
https://github.com/qupath/qupath/issues/318#issuecomment-494726466:115,Safety,detect,detection,115,"Thanks for the the snapshot, it looks like this issue: https://github.com/qupath/qupath/issues/80. If so, then the detection is bad but the actual counts of what is detected should be correct. I'm afraid this is an inherent limitation of the background estimation used by QuPath's cell detection. I describe the reason in some more detail and make suggestions at https://github.com/qupath/qupath/issues/80#issuecomment-305385370",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/318#issuecomment-494726466
https://github.com/qupath/qupath/issues/318#issuecomment-494726466:165,Safety,detect,detected,165,"Thanks for the the snapshot, it looks like this issue: https://github.com/qupath/qupath/issues/80. If so, then the detection is bad but the actual counts of what is detected should be correct. I'm afraid this is an inherent limitation of the background estimation used by QuPath's cell detection. I describe the reason in some more detail and make suggestions at https://github.com/qupath/qupath/issues/80#issuecomment-305385370",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/318#issuecomment-494726466
https://github.com/qupath/qupath/issues/318#issuecomment-494726466:286,Safety,detect,detection,286,"Thanks for the the snapshot, it looks like this issue: https://github.com/qupath/qupath/issues/80. If so, then the detection is bad but the actual counts of what is detected should be correct. I'm afraid this is an inherent limitation of the background estimation used by QuPath's cell detection. I describe the reason in some more detail and make suggestions at https://github.com/qupath/qupath/issues/80#issuecomment-305385370",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/318#issuecomment-494726466
https://github.com/qupath/qupath/issues/319#issuecomment-495094339:182,Usability,learn,learn,182,"Sorry to put the question in the wrong place. Thank you for making QuPath.; It is amazingly useful, and I am just starting to get the hang of some of; the features... I have much to learn. All the best!. Andrew. On Wed, May 22, 2019 at 11:50 PM Pete <notifications@github.com> wrote:. > Please use https://forum.image.sc/tags/qupath for questions about using; > the software and other related discussions - GitHub issues is intended just; > for issues & bugs.; >; > Anything else here will be closed to try to keep things organized and; > easier to find as the project gets bigger.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/319?email_source=notifications&email_token=AJTPPDUGBSIIMOYSZHM5L23PWY5DNA5CNFSM4HO2JLM2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWBHWDQ#issuecomment-495090446>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AJTPPDQJW6I2MKUA5ZIHDFLPWY5DNANCNFSM4HO2JLMQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/319#issuecomment-495094339
https://github.com/qupath/qupath/issues/320#issuecomment-495929397:15,Usability,clear,clear,15,"Thanks for the clear description, I can reproduce the problem but it's not clear to me where exactly the character is getting messed up. Consequently, I can't tell it's something that can be properly resolved within QuPath or not. Specifically, if I launch QuPath from the command line passing a path containing ø then it works as it should. However, if I double-click on the same file, then somewhere the character becomes Ã˜. It appears that QuPath 'receives' the wrong version, and I don't know if this is thanks to Windows, jpackage or something else. There is a known bug in jpackage (used to create the .exe) whereby the application cannot be started if it is in a path that contains a non-ASCII character, and this impacts QuPath: https://bugs.openjdk.java.net/browse/JDK-8205991. I suspect therefore this isn't a QuPath bug, but rather a jpackage-related one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-495929397
https://github.com/qupath/qupath/issues/320#issuecomment-495929397:75,Usability,clear,clear,75,"Thanks for the clear description, I can reproduce the problem but it's not clear to me where exactly the character is getting messed up. Consequently, I can't tell it's something that can be properly resolved within QuPath or not. Specifically, if I launch QuPath from the command line passing a path containing ø then it works as it should. However, if I double-click on the same file, then somewhere the character becomes Ã˜. It appears that QuPath 'receives' the wrong version, and I don't know if this is thanks to Windows, jpackage or something else. There is a known bug in jpackage (used to create the .exe) whereby the application cannot be started if it is in a path that contains a non-ASCII character, and this impacts QuPath: https://bugs.openjdk.java.net/browse/JDK-8205991. I suspect therefore this isn't a QuPath bug, but rather a jpackage-related one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-495929397
https://github.com/qupath/qupath/issues/320#issuecomment-496139825:167,Availability,error,error,167,"I see your point and agree - maybe you can add a warning in case a user chooses to save a project in a folder with a special character in its path?; Same goes for the error message when trying to open from a ""dangerous"" path.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-496139825
https://github.com/qupath/qupath/issues/320#issuecomment-496139825:173,Integrability,message,message,173,"I see your point and agree - maybe you can add a warning in case a user chooses to save a project in a folder with a special character in its path?; Same goes for the error message when trying to open from a ""dangerous"" path.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-496139825
https://github.com/qupath/qupath/issues/320#issuecomment-497790956:266,Usability,simpl,simple,266,Assuming the reason is the bug you mentioned (https://bugs.openjdk.java.net/browse/JDK-8205991) you could filter for non ASCII and for OS - if Windows 10 and non-ASCII = true -> warn.; I do not think it is intrusive. Better warn the user and point him directly to a simple solution rather than dealing with annoyed and clueless users. Special characters in words and names are not so rare (especially in the Windows world ;) ) and for example in hospital settings the usage of Windows is quite common.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-497790956
https://github.com/qupath/qupath/issues/320#issuecomment-645185707:423,Testability,test,tested,423,"The pull request above contains a proposed fix. Upon reflection, I'm not sure where exactly the encoding issue arises (Java, jpackage, Wix used to create the exe, the Windows command prompt... or somewhere between them) so I haven't been able to find any clear documentation of expected behavior. I hope the suggested fix is sufficiently modest that it can fix most issues without creating new ones, but that remains to be tested. Feedback/fixes/suggestions welcome. If it looks basically ok, it will be included in v0.2.1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-645185707
https://github.com/qupath/qupath/issues/320#issuecomment-645185707:255,Usability,clear,clear,255,"The pull request above contains a proposed fix. Upon reflection, I'm not sure where exactly the encoding issue arises (Java, jpackage, Wix used to create the exe, the Windows command prompt... or somewhere between them) so I haven't been able to find any clear documentation of expected behavior. I hope the suggested fix is sufficiently modest that it can fix most issues without creating new ones, but that remains to be tested. Feedback/fixes/suggestions welcome. If it looks basically ok, it will be included in v0.2.1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-645185707
https://github.com/qupath/qupath/issues/320#issuecomment-645185707:431,Usability,Feedback,Feedback,431,"The pull request above contains a proposed fix. Upon reflection, I'm not sure where exactly the encoding issue arises (Java, jpackage, Wix used to create the exe, the Windows command prompt... or somewhere between them) so I haven't been able to find any clear documentation of expected behavior. I hope the suggested fix is sufficiently modest that it can fix most issues without creating new ones, but that remains to be tested. Feedback/fixes/suggestions welcome. If it looks basically ok, it will be included in v0.2.1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-645185707
https://github.com/qupath/qupath/issues/320#issuecomment-645200298:51,Testability,test,test,51,Sounds great - I'll see if I can find some time to test it and report back :),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-645200298
https://github.com/qupath/qupath/issues/320#issuecomment-648053675:45,Availability,avail,available,45,Closing this because the proposed fix is now available in v0.2.1. Feel free to reopen or create a new issue if a related problem remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/320#issuecomment-648053675
https://github.com/qupath/qupath/issues/321#issuecomment-495874974:759,Availability,avail,available,759,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974
https://github.com/qupath/qupath/issues/321#issuecomment-495874974:209,Deployability,install,installation,209,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974
https://github.com/qupath/qupath/issues/321#issuecomment-495874974:675,Energy Efficiency,monitor,monitor,675,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974
https://github.com/qupath/qupath/issues/321#issuecomment-495874974:110,Performance,load,loaded,110,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974
https://github.com/qupath/qupath/issues/321#issuecomment-495922615:147,Deployability,upgrade,upgraded,147,"Thanks to you both. Off for a long weekend, but will try command line and let you know how that goes. I suspect there's something there from being upgraded so often that's causing issues. Thanks again!!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495922615
https://github.com/qupath/qupath/issues/321#issuecomment-497471530:3,Deployability,update,update,3,"An update on this. Ended up re-installing Win10 x64 and the problem was resolved. There must have been something preventing this from working correctly before; looks like it was upgraded from win8 home to win10 home, and then multiple upgrades since then. Thank you both for your input!; running into a different problem, but will try to replicate before posting that one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-497471530
https://github.com/qupath/qupath/issues/321#issuecomment-497471530:31,Deployability,install,installing,31,"An update on this. Ended up re-installing Win10 x64 and the problem was resolved. There must have been something preventing this from working correctly before; looks like it was upgraded from win8 home to win10 home, and then multiple upgrades since then. Thank you both for your input!; running into a different problem, but will try to replicate before posting that one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-497471530
https://github.com/qupath/qupath/issues/321#issuecomment-497471530:178,Deployability,upgrade,upgraded,178,"An update on this. Ended up re-installing Win10 x64 and the problem was resolved. There must have been something preventing this from working correctly before; looks like it was upgraded from win8 home to win10 home, and then multiple upgrades since then. Thank you both for your input!; running into a different problem, but will try to replicate before posting that one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-497471530
https://github.com/qupath/qupath/issues/321#issuecomment-497471530:235,Deployability,upgrade,upgrades,235,"An update on this. Ended up re-installing Win10 x64 and the problem was resolved. There must have been something preventing this from working correctly before; looks like it was upgraded from win8 home to win10 home, and then multiple upgrades since then. Thank you both for your input!; running into a different problem, but will try to replicate before posting that one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-497471530
https://github.com/qupath/qupath/issues/322#issuecomment-497035914:167,Availability,error,error,167,"That usually happens when the path is broken to the image. 0.2.0 is not as.. mobile as the earlier versions. If you check ""View->show log,"" I suspect you will find an error showing that it cannot find the image. You would need to move the project or images back to the original location.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/322#issuecomment-497035914
https://github.com/qupath/qupath/issues/322#issuecomment-497035914:134,Testability,log,log,134,"That usually happens when the path is broken to the image. 0.2.0 is not as.. mobile as the earlier versions. If you check ""View->show log,"" I suspect you will find an error showing that it cannot find the image. You would need to move the project or images back to the original location.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/322#issuecomment-497035914
https://github.com/qupath/qupath/issues/323#issuecomment-497089158:76,Testability,test,tested,76,"Is the Image server listed on the Image tab BioFormats? And if so, have you tested opening the image in FIJI using the BioFormats import? I saw similar issues with 8bit CZI files that had been tiled, and it turned out to be on the BioFormats end.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/323#issuecomment-497089158
https://github.com/qupath/qupath/pull/324#issuecomment-497262635:139,Deployability,install,install,139,Because I have built-in dependencies in pom.xml(in my extension for QuPath) from qupath-gui-fx. For resolving these dependencies I need to install qupath libraries to local maven repository. But last QuPath version built on gradle and I can't do this without maven plugin in build.gradle.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497262635
https://github.com/qupath/qupath/pull/324#issuecomment-497262635:24,Integrability,depend,dependencies,24,Because I have built-in dependencies in pom.xml(in my extension for QuPath) from qupath-gui-fx. For resolving these dependencies I need to install qupath libraries to local maven repository. But last QuPath version built on gradle and I can't do this without maven plugin in build.gradle.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497262635
https://github.com/qupath/qupath/pull/324#issuecomment-497262635:116,Integrability,depend,dependencies,116,Because I have built-in dependencies in pom.xml(in my extension for QuPath) from qupath-gui-fx. For resolving these dependencies I need to install qupath libraries to local maven repository. But last QuPath version built on gradle and I can't do this without maven plugin in build.gradle.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497262635
https://github.com/qupath/qupath/pull/324#issuecomment-497262635:265,Modifiability,plugin,plugin,265,Because I have built-in dependencies in pom.xml(in my extension for QuPath) from qupath-gui-fx. For resolving these dependencies I need to install qupath libraries to local maven repository. But last QuPath version built on gradle and I can't do this without maven plugin in build.gradle.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497262635
https://github.com/qupath/qupath/pull/324#issuecomment-497588046:313,Deployability,install,install,313,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046
https://github.com/qupath/qupath/pull/324#issuecomment-497588046:413,Deployability,install,install,413,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046
https://github.com/qupath/qupath/pull/324#issuecomment-497588046:555,Energy Efficiency,reduce,reduce,555,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046
https://github.com/qupath/qupath/pull/324#issuecomment-497588046:529,Modifiability,refactor,refactoring,529,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046
https://github.com/qupath/qupath/pull/324#issuecomment-497588046:622,Modifiability,maintainab,maintainable,622,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046
https://github.com/qupath/qupath/pull/324#issuecomment-497588046:469,Usability,guid,guides,469,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046
https://github.com/qupath/qupath/pull/324#issuecomment-497588046:481,Usability,guid,guide-,481,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046
https://github.com/qupath/qupath/issues/325#issuecomment-498024391:498,Usability,clear,clear,498,"Not a feature, just a lack of time... this commit aims to restore an improved check for relative paths https://github.com/petebankhead/qupath/commit/309d6e58560791d17af0580fbad2b6a5d24100b2. This should be better than the old behavior, since it _always_ checks relative paths regardless of where the original images were relative to the project (previously the images needed to be inside the project directory). But much more work remains to be done on updating projects, and it's not yet entirely clear how they'll look on the other side.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/325#issuecomment-498024391
https://github.com/qupath/qupath/issues/325#issuecomment-514589547:12,Availability,avail,available,12,"Changes now available [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Absolute paths are stored, but QuPath checks relative path if the image is not found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/325#issuecomment-514589547
https://github.com/qupath/qupath/issues/325#issuecomment-514589547:67,Deployability,release,releases,67,"Changes now available [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Absolute paths are stored, but QuPath checks relative path if the image is not found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/325#issuecomment-514589547
https://github.com/qupath/qupath/issues/326#issuecomment-514593645:69,Deployability,release,releases,69,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Please reopen this issue if problems arise.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/326#issuecomment-514593645
https://github.com/qupath/qupath/issues/327#issuecomment-549053462:292,Deployability,release,releases,292,"Closing this issue because I'm afraid I don't see it as possible - at least not with the current cell detection. It might be more feasible in a future incarnation, but that may need to be radically different (e.g. like how the simple threshold in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) can potentially replace simple tissue detection). Of course, feel free to prove me wrong with a pull request :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/327#issuecomment-549053462
https://github.com/qupath/qupath/issues/327#issuecomment-549053462:102,Safety,detect,detection,102,"Closing this issue because I'm afraid I don't see it as possible - at least not with the current cell detection. It might be more feasible in a future incarnation, but that may need to be radically different (e.g. like how the simple threshold in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) can potentially replace simple tissue detection). Of course, feel free to prove me wrong with a pull request :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/327#issuecomment-549053462
https://github.com/qupath/qupath/issues/327#issuecomment-549053462:354,Safety,detect,detection,354,"Closing this issue because I'm afraid I don't see it as possible - at least not with the current cell detection. It might be more feasible in a future incarnation, but that may need to be radically different (e.g. like how the simple threshold in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) can potentially replace simple tissue detection). Of course, feel free to prove me wrong with a pull request :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/327#issuecomment-549053462
https://github.com/qupath/qupath/issues/327#issuecomment-549053462:227,Usability,simpl,simple,227,"Closing this issue because I'm afraid I don't see it as possible - at least not with the current cell detection. It might be more feasible in a future incarnation, but that may need to be radically different (e.g. like how the simple threshold in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) can potentially replace simple tissue detection). Of course, feel free to prove me wrong with a pull request :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/327#issuecomment-549053462
https://github.com/qupath/qupath/issues/327#issuecomment-549053462:340,Usability,simpl,simple,340,"Closing this issue because I'm afraid I don't see it as possible - at least not with the current cell detection. It might be more feasible in a future incarnation, but that may need to be radically different (e.g. like how the simple threshold in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) can potentially replace simple tissue detection). Of course, feel free to prove me wrong with a pull request :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/327#issuecomment-549053462
https://github.com/qupath/qupath/issues/328#issuecomment-499254844:118,Availability,error,error,118,"I'm quite sure my file has no metadata (might have been given to me from a crop on photoshop). That could explain the error, I'm trying to get metadata info (px to um). I'm using version 0.1.2. I'm actually trying what was suggested here but with no success. Dimensions get updated on FIJI but not on QuPath; https://github.com/qupath/qupath/issues/163",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/328#issuecomment-499254844
https://github.com/qupath/qupath/issues/328#issuecomment-499254844:274,Deployability,update,updated,274,"I'm quite sure my file has no metadata (might have been given to me from a crop on photoshop). That could explain the error, I'm trying to get metadata info (px to um). I'm using version 0.1.2. I'm actually trying what was suggested here but with no success. Dimensions get updated on FIJI but not on QuPath; https://github.com/qupath/qupath/issues/163",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/328#issuecomment-499254844
https://github.com/qupath/qupath/issues/329#issuecomment-500507167:272,Deployability,release,release,272,"The problem may be that the file format you are using results in a large black region that is probably confusing the dearrayer threshold. If you try in v0.2.0-m2 you may find that this background not included and the problem is resolved. If so, it should work in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/329#issuecomment-500507167
https://github.com/qupath/qupath/issues/329#issuecomment-500643829:36,Deployability,update,updated,36,"Thank you for prompt reply.; I have updated Qupath and tried TMA dearryer again, as same as I mentioned above.; But it still doesn't work. ![new version QuPath TMA dearrayer work flow](https://user-images.githubusercontent.com/51498119/59235646-39fa1200-8ba7-11e9-9c6b-aea5593b341b.PNG); ![new version QuPath TMA dearrayer](https://user-images.githubusercontent.com/51498119/59235653-40888980-8ba7-11e9-9291-27aee29b9e84.PNG)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/329#issuecomment-500643829
https://github.com/qupath/qupath/issues/330#issuecomment-501888323:93,Usability,guid,guideliness,93,"What do you mean with the information in the initial form?; Actually, I already followed the guideliness of that site.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/330#issuecomment-501888323
https://github.com/qupath/qupath/issues/330#issuecomment-501890102:275,Availability,ERROR,ERROR,275,"The most useful bits of information there are probably the version, OS, and any information on what you have attempted so far.; And yep, it's probably what Pete is suggesting :) Though you said you followed the instructions at the site, I wasn't sure which site you meant.; `ERROR: java.lang.UnsatisfiedLinkError: ome.jxrlib.JXRJNI.new_DecodeContext()J`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/330#issuecomment-501890102
https://github.com/qupath/qupath/issues/330#issuecomment-501900222:33,Deployability,install,install,33,@AnesthesiaNeurotoxicity did you install the _Visual Studio 2015 C++ Redistributable_ as specified in the [link I posted above](https://github.com/qupath/qupath/issues/330#issuecomment-501853968)?. The Bio-Formats website mentions the need for this to handle CZI files with JPEG-XR compression: https://docs.openmicroscopy.org/bio-formats/6.1.0/formats/zeiss-czi.html,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/330#issuecomment-501900222
https://github.com/qupath/qupath/issues/331#issuecomment-501902237:84,Safety,detect,detect,84,"@takakono this looks like confusion over the purpose of the classifier. You need to detect cells first before there can be anything to classify. Running the classifier won't do anything if you haven't already detected cells on the image. The supplementary material in the [Scientific Reports paper](https://www.nature.com/articles/s41598-017-17204-5) may be helpful, especially the PDF, as it describes step-by-step how I applied some similar analyses. I will close this because it doesn't appear to be a bug in QuPath after all. The forum is the right place for questions about using the software: https://forum.image.sc/tags/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/331#issuecomment-501902237
https://github.com/qupath/qupath/issues/331#issuecomment-501902237:209,Safety,detect,detected,209,"@takakono this looks like confusion over the purpose of the classifier. You need to detect cells first before there can be anything to classify. Running the classifier won't do anything if you haven't already detected cells on the image. The supplementary material in the [Scientific Reports paper](https://www.nature.com/articles/s41598-017-17204-5) may be helpful, especially the PDF, as it describes step-by-step how I applied some similar analyses. I will close this because it doesn't appear to be a bug in QuPath after all. The forum is the right place for questions about using the software: https://forum.image.sc/tags/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/331#issuecomment-501902237
https://github.com/qupath/qupath/issues/336#issuecomment-507201659:379,Availability,avail,availability,379,"You should be able to double-click anywhere on the welcome message to close it (as it suggests... slightly non-obviously, as a reward for people who read it :). Apart from that, I agree that QuPath probably ought to have _File &rarr; Quit_ option as well but the main issue seems to be more JavaFX than QuPath - see https://github.com/javafxports/openjdk-jfx/issues/222. General availability of OpenJDK 13 is currently listed for 17 September. Current plans are to use this for v0.2.0 and hopefully the issue will be addressed then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507201659
https://github.com/qupath/qupath/issues/336#issuecomment-507201659:59,Integrability,message,message,59,"You should be able to double-click anywhere on the welcome message to close it (as it suggests... slightly non-obviously, as a reward for people who read it :). Apart from that, I agree that QuPath probably ought to have _File &rarr; Quit_ option as well but the main issue seems to be more JavaFX than QuPath - see https://github.com/javafxports/openjdk-jfx/issues/222. General availability of OpenJDK 13 is currently listed for 17 September. Current plans are to use this for v0.2.0 and hopefully the issue will be addressed then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507201659
https://github.com/qupath/qupath/issues/336#issuecomment-507203591:52,Integrability,message,message,52,"Seems like the 'double click' works for the welcome message, but not for other dialogues (as the ""system info""). Once I click it, I can't go back to the app again :'(. So, probably, some shortcuts would be handy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507203591
https://github.com/qupath/qupath/issues/336#issuecomment-507206796:206,Safety,avoid,avoid,206,I think it requires the fix in JavaFX - which appears to be coming soon. Adding shortcuts to the dialogs throughout QuPath would be a rather large task and add further messiness to the code that I'd rather avoid... Does v0.1.2 have the same problem?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507206796
https://github.com/qupath/qupath/issues/336#issuecomment-507208870:14,Testability,test,testing,14,"Yes. I'm just testing it and no combination of buttons (that I've tested: q, x, Esc, Ctr+x, Ctrl+w, Ctrl+q) seem to make it close. Being a ""real"" modal window, I can't click on anything back in the app. (I say ""real modal"", because the welcome window doesn't capture the action, and you can keep clicking back in the app, so that isn't so critical for me)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507208870
https://github.com/qupath/qupath/issues/336#issuecomment-507208870:66,Testability,test,tested,66,"Yes. I'm just testing it and no combination of buttons (that I've tested: q, x, Esc, Ctr+x, Ctrl+w, Ctrl+q) seem to make it close. Being a ""real"" modal window, I can't click on anything back in the app. (I say ""real modal"", because the welcome window doesn't capture the action, and you can keep clicking back in the app, so that isn't so critical for me)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507208870
https://github.com/qupath/qupath/issues/336#issuecomment-507274428:248,Availability,avail,available,248,"Yes, I explicitly coded the startup message to respond to a double-click because it was so annoying to need to click more precisely. In any case, the link I posted suggests it should be fixed in JavaFX 13, which QuPath will switch to whenever it's available in September. I wouldn't _really_ fancy trying to track down all modal dialogs in QuPath to add shortcuts to close them if a fix is imminent anyway. In the meantime, I'd suggest trying v0.1.2. This might have other issues, but at least it uses JavaFX with JDK 8 and therefore may not suffer this specific problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507274428
https://github.com/qupath/qupath/issues/336#issuecomment-507274428:314,Availability,down,down,314,"Yes, I explicitly coded the startup message to respond to a double-click because it was so annoying to need to click more precisely. In any case, the link I posted suggests it should be fixed in JavaFX 13, which QuPath will switch to whenever it's available in September. I wouldn't _really_ fancy trying to track down all modal dialogs in QuPath to add shortcuts to close them if a fix is imminent anyway. In the meantime, I'd suggest trying v0.1.2. This might have other issues, but at least it uses JavaFX with JDK 8 and therefore may not suffer this specific problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507274428
https://github.com/qupath/qupath/issues/336#issuecomment-507274428:36,Integrability,message,message,36,"Yes, I explicitly coded the startup message to respond to a double-click because it was so annoying to need to click more precisely. In any case, the link I posted suggests it should be fixed in JavaFX 13, which QuPath will switch to whenever it's available in September. I wouldn't _really_ fancy trying to track down all modal dialogs in QuPath to add shortcuts to close them if a fix is imminent anyway. In the meantime, I'd suggest trying v0.1.2. This might have other issues, but at least it uses JavaFX with JDK 8 and therefore may not suffer this specific problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-507274428
https://github.com/qupath/qupath/issues/336#issuecomment-549051596:46,Deployability,update,update,46,I'd be very interested to know if the [JavaFX update v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) has resolved this.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-549051596
https://github.com/qupath/qupath/issues/336#issuecomment-549051596:97,Deployability,release,releases,97,I'd be very interested to know if the [JavaFX update v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) has resolved this.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-549051596
https://github.com/qupath/qupath/issues/336#issuecomment-549070799:5,Testability,test,test,5,I'll test it next week :),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-549070799
https://github.com/qupath/qupath/issues/336#issuecomment-558638519:5,Availability,down,downloaded,5,"I've downloaded _m6_ and it seems like I still have the same problem. Also, when I click on the menus (File, Edit, Tools...) they close when I release the mouse button, they don't stay open to allow clicking on them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-558638519
https://github.com/qupath/qupath/issues/336#issuecomment-558638519:143,Deployability,release,release,143,"I've downloaded _m6_ and it seems like I still have the same problem. Also, when I click on the menus (File, Edit, Tools...) they close when I release the mouse button, they don't stay open to allow clicking on them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-558638519
https://github.com/qupath/qupath/issues/336#issuecomment-641999427:5,Deployability,install,installed,5,"I've installed Debian + i3 in VirtualBox to experience the issue and can conclude... QuPath really doesn't seem to work very nicely under these conditions, but it's not clear to me if/how this can be resolved. It also might be my lack of familiarity with i3 that is causing the trouble. QuPath v0.2.0 includes a *File &rarr; Quit* option and removes the startup screen... so this should at least address some of the problems reported. Otherwise, it uses standard JavaFX windows. If most of these work, but an identifiable minority do not, then these is something that could potentially be fixed by providing other ways to close these windows. But if there is a more fundamental issue with i3 and JavaFX then this likely cannot be handled in QuPath alone. Is this issue still of sufficient interest to anyone to explore in more detail what does/doesn't work and help try to construct a plan to resolve it? If so, please let me know what issues remain.; If not, or if the changes in v0.2.0 have been enough, I'd like to close the issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-641999427
https://github.com/qupath/qupath/issues/336#issuecomment-641999427:169,Usability,clear,clear,169,"I've installed Debian + i3 in VirtualBox to experience the issue and can conclude... QuPath really doesn't seem to work very nicely under these conditions, but it's not clear to me if/how this can be resolved. It also might be my lack of familiarity with i3 that is causing the trouble. QuPath v0.2.0 includes a *File &rarr; Quit* option and removes the startup screen... so this should at least address some of the problems reported. Otherwise, it uses standard JavaFX windows. If most of these work, but an identifiable minority do not, then these is something that could potentially be fixed by providing other ways to close these windows. But if there is a more fundamental issue with i3 and JavaFX then this likely cannot be handled in QuPath alone. Is this issue still of sufficient interest to anyone to explore in more detail what does/doesn't work and help try to construct a plan to resolve it? If so, please let me know what issues remain.; If not, or if the changes in v0.2.0 have been enough, I'd like to close the issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-641999427
https://github.com/qupath/qupath/issues/336#issuecomment-642199331:6,Testability,test,test,6,I can test some things but sadly my development knowledge is quite limited :(,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-642199331
https://github.com/qupath/qupath/issues/336#issuecomment-642210602:190,Deployability,release,release,190,"No worries, thanks for the reply. I revived the thread because so far only you and @evan-bailey have reported this issue and that was before various further changes were made for the v0.2.0 release. In general, I try to employ a utilitarian approach to QuPath development, and prioritise things that will benefit as many people as possible. In this case I don't have a very clear idea of what remains to be solved - and whether or not it remains important to anyone. The overwhelming majority of QuPath users use Windows or Mac, and most Linux users also shouldn't be affected by this... so if it's not terribly important to either you or Evan, it's probably not worth spending time on.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-642210602
https://github.com/qupath/qupath/issues/336#issuecomment-642210602:374,Usability,clear,clear,374,"No worries, thanks for the reply. I revived the thread because so far only you and @evan-bailey have reported this issue and that was before various further changes were made for the v0.2.0 release. In general, I try to employ a utilitarian approach to QuPath development, and prioritise things that will benefit as many people as possible. In this case I don't have a very clear idea of what remains to be solved - and whether or not it remains important to anyone. The overwhelming majority of QuPath users use Windows or Mac, and most Linux users also shouldn't be affected by this... so if it's not terribly important to either you or Evan, it's probably not worth spending time on.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-642210602
https://github.com/qupath/qupath/issues/337#issuecomment-509283482:255,Availability,error,error,255,"If it is an image or BioFormats based issue, I doubt there is much that can be done on the QuPath end. **Have you tried opening the file in FIJI using the BioFormats importer?** If it works there and doesn't in QuPath, it might be a QuPath interpretation error, otherwise it would need to be handled on the BioFormats issues page/Image.sc forum. Also, thank you for taking the time to fill out the whole form :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509283482
https://github.com/qupath/qupath/issues/337#issuecomment-509303832:292,Deployability,release,release,292,"I can confirm this is a QuPath problem, not a Bio-Formats one. It actually seems to already be fixed in my code (without realising it was ever broken...), so should work in the next milestone. Thanks for reporting this, it helps to remind me I need to check this specifically before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509303832
https://github.com/qupath/qupath/issues/337#issuecomment-509559753:1311,Deployability,update,updates,1311,"Thank you very much for looking into this problem so quickly!. In the meantime, I was able to open the TMA (multi-scene) file in Fiji - at least partially. . The Bio-Formats import dialog asked ""Please specify the image series you wish to import. Use commas ... There are 690 total series."" I requested all 690 series to be imported. I indeed got the stitched (!) version of all the scenes in the *.czi file. So, finally, the Bio-Formats importer is able to do the stitching!. However, so far I have only imported one channel, because I did not check the ""Open all series"" option. When I do check ""Open all series"", the import dialogue tells me that I don't have enough memory. (I need around 80 GB, have 24). I tried it anyway and it failed. ![image](https://user-images.githubusercontent.com/23238491/60874753-ccd6ac80-a238-11e9-85d0-22e268bfef8b.png). @Svidro Thank you very much! I am aware of the option to split the scenes and I have made extensive use of that possibility in projects with TMA specimens back when QuPath was not able to read multi-scene *.czi at all. I have also tried hard to convince the guys at Zeiss to include a ""merge all scenes"" option in ZEN because for us the scenes offer no benefit. Unfortunately, this does not seem to be a priory for them although I have not checked for ZEN updates in a while. Also, if Bio-Formats can now stitch the scenes and the latest development version of QuPath already works with multi-scene *.czi files, as Pete stated, the request is obsolete anyway. So, thanks again. I'm looking forward to 0.2.0-m3!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509559753
https://github.com/qupath/qupath/issues/337#issuecomment-509669310:766,Availability,down,downsampled,766,"My thought was that with the addition of merging the data set (links below), you can still end up with a final sheet that represents the data points from your cores. It would be one project per TMA, but at least you could fairly easily get the results right now, rather than waiting for m3. Or I guess you could continue to use 1.3, that works as well :); https://forum.image.sc/t/h-score-by-object-class/27490/2?u=research_associate; If you want the visualization of your cores, that wouldn't help at all, of course. If you are in Zen (not sure which all versions), you can uncheck ""show scenes individually"" (I might not be remembering the exact wording, it is just below the image area, slightly to the left) to get an overview image. We have used that to create downsampled overviews of multiple wells on a 6 well plate, for example.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509669310
https://github.com/qupath/qupath/issues/337#issuecomment-509982536:1784,Availability,error,error,1784,"writing a new pyramidal OME-TIFF file... but that rather increases the amount of data involved, and requires knowing the coordinates where each core comes from. A practical issue here is that I have seen a .czi TMA (I believe yours, @arnmayer :) ) that Bio-Formats has several problems with. This thwarts any plan we might develop to resolve this independently of Zeiss or the Bio-Formats team. Specifically:; * Sometimes the co-ordinates defining the TMA core locations accessed through Bio-Formats appears simply to be wrong, so it's not possible to figure out where they _should_ be; * The size of the Bio-Formats reader is astronomically large (> 1 GB), which makes opening files slow. You can see this in the size of the .bfmemo files if they are created. This also means that it's not possible to create multiple readers (which QuPath normally does for performance).; * The low resolution 'overview' image seems to be corrupt. It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of different pieces. They can also do extra fancy things like apply color transforms or concatenate channels. It will take some time to make this to become a fully-usable part of the software, but it relates to the problem as follows:; * if your cores are as separate images, QuPath should be able to merge them together to _act_ like they are in the same image; * if you have multiple TMA slides, QuPath could dynamically crop out the cores and assemble pseudo-s",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536
https://github.com/qupath/qupath/issues/337#issuecomment-509982536:1615,Performance,perform,performance,1615,"e improvements over relying only on Bio-Formats... but it would _definitely_ be a lot more work to develop and support cross-platform. Option 2 (merging) is 'easiest' if that involves writing a new pyramidal OME-TIFF file... but that rather increases the amount of data involved, and requires knowing the coordinates where each core comes from. A practical issue here is that I have seen a .czi TMA (I believe yours, @arnmayer :) ) that Bio-Formats has several problems with. This thwarts any plan we might develop to resolve this independently of Zeiss or the Bio-Formats team. Specifically:; * Sometimes the co-ordinates defining the TMA core locations accessed through Bio-Formats appears simply to be wrong, so it's not possible to figure out where they _should_ be; * The size of the Bio-Formats reader is astronomically large (> 1 GB), which makes opening files slow. You can see this in the size of the .bfmemo files if they are created. This also means that it's not possible to create multiple readers (which QuPath normally does for performance).; * The low resolution 'overview' image seems to be corrupt. It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of different pieces. They can also do extra fancy things like apply color transforms or concatenate channels. It will take some time to make this to become a fully-usable part of the software, but it relates to the problem as follows:; * if your cores are as separate images, Qu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536
https://github.com/qupath/qupath/issues/337#issuecomment-509982536:3191,Performance,perform,performance,3191," It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of different pieces. They can also do extra fancy things like apply color transforms or concatenate channels. It will take some time to make this to become a fully-usable part of the software, but it relates to the problem as follows:; * if your cores are as separate images, QuPath should be able to merge them together to _act_ like they are in the same image; * if you have multiple TMA slides, QuPath could dynamically crop out the cores and assemble pseudo-slides that position the cores however you like. This means, for example, your image might group samples from a patient side by side for easy comparison - even if they were actually spread across multiple slides originally. This has some limitations, e.g. if your cores aren't in a pyramidal format (but rather one 5000x5000 pixel image, for example) then combining these together dynamically won't end well. To get any kind of usable performance, it will be necessary to convert the files to make them pyramidal. I hope that makes some kind of sense, describing what's possible now, what problematic, and what's coming... > **Important PS.** There's currently a post advertised to join me at work on QuPath [here](https://www.vacancies.ed.ac.uk/pls/corehrrecruit/erq_jobspec_version_4.jobspec?p_id=048500). With more than me working on it, things should be _much_ faster - please pass on the link to anyone who might be interested!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536
https://github.com/qupath/qupath/issues/337#issuecomment-509982536:1227,Security,access,accessed,1227,"ps://github.com/zeiss-microscopy/libCZI. I think Option 1 has additional advantages and is probably needed in the longer term.; Option 3 involves more work to support one particular format than I'm able to take on myself, but perhaps someone would like to try. It _might_ give improvements over relying only on Bio-Formats... but it would _definitely_ be a lot more work to develop and support cross-platform. Option 2 (merging) is 'easiest' if that involves writing a new pyramidal OME-TIFF file... but that rather increases the amount of data involved, and requires knowing the coordinates where each core comes from. A practical issue here is that I have seen a .czi TMA (I believe yours, @arnmayer :) ) that Bio-Formats has several problems with. This thwarts any plan we might develop to resolve this independently of Zeiss or the Bio-Formats team. Specifically:; * Sometimes the co-ordinates defining the TMA core locations accessed through Bio-Formats appears simply to be wrong, so it's not possible to figure out where they _should_ be; * The size of the Bio-Formats reader is astronomically large (> 1 GB), which makes opening files slow. You can see this in the size of the .bfmemo files if they are created. This also means that it's not possible to create multiple readers (which QuPath normally does for performance).; * The low resolution 'overview' image seems to be corrupt. It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536
https://github.com/qupath/qupath/issues/337#issuecomment-509982536:1264,Usability,simpl,simply,1264,"ps://github.com/zeiss-microscopy/libCZI. I think Option 1 has additional advantages and is probably needed in the longer term.; Option 3 involves more work to support one particular format than I'm able to take on myself, but perhaps someone would like to try. It _might_ give improvements over relying only on Bio-Formats... but it would _definitely_ be a lot more work to develop and support cross-platform. Option 2 (merging) is 'easiest' if that involves writing a new pyramidal OME-TIFF file... but that rather increases the amount of data involved, and requires knowing the coordinates where each core comes from. A practical issue here is that I have seen a .czi TMA (I believe yours, @arnmayer :) ) that Bio-Formats has several problems with. This thwarts any plan we might develop to resolve this independently of Zeiss or the Bio-Formats team. Specifically:; * Sometimes the co-ordinates defining the TMA core locations accessed through Bio-Formats appears simply to be wrong, so it's not possible to figure out where they _should_ be; * The size of the Bio-Formats reader is astronomically large (> 1 GB), which makes opening files slow. You can see this in the size of the .bfmemo files if they are created. This also means that it's not possible to create multiple readers (which QuPath normally does for performance).; * The low resolution 'overview' image seems to be corrupt. It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of d",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536
https://github.com/qupath/qupath/issues/337#issuecomment-509982536:2458,Usability,usab,usable,2458,"ly does for performance).; * The low resolution 'overview' image seems to be corrupt. It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of different pieces. They can also do extra fancy things like apply color transforms or concatenate channels. It will take some time to make this to become a fully-usable part of the software, but it relates to the problem as follows:; * if your cores are as separate images, QuPath should be able to merge them together to _act_ like they are in the same image; * if you have multiple TMA slides, QuPath could dynamically crop out the cores and assemble pseudo-slides that position the cores however you like. This means, for example, your image might group samples from a patient side by side for easy comparison - even if they were actually spread across multiple slides originally. This has some limitations, e.g. if your cores aren't in a pyramidal format (but rather one 5000x5000 pixel image, for example) then combining these together dynamically won't end well. To get any kind of usable performance, it will be necessary to convert the files to make them pyramidal. I hope that makes some kind of sense, describing what's possible now, what problematic, and what's coming... > **Important PS.** There's currently a post advertised to join me at work on QuPath [here](https://www.vacancies.ed.ac.uk/pls/corehrrecruit/erq_jobspec_version_4.jobspec?p_id=048500). With more than me working on it, things ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536
https://github.com/qupath/qupath/issues/337#issuecomment-509982536:3184,Usability,usab,usable,3184," It is somehow interpreted by Bio-Formats as a single-channel non-pyramidal image yet throws an error when one tries to open it directly. However the image itself must be ok, as it looks fine in the Zeiss software. If this image can be shared with the Bio-Formats team, they may be able to address these issues. Finally, one of the delays to m3 is I've been doing the groundwork to make image servers smarter. The relevance here is that it means that an image server is able to dynamically crop and/or reposition parts of an image to generate 'pseudo' whole slide images in QuPath, which might be composed of different pieces. They can also do extra fancy things like apply color transforms or concatenate channels. It will take some time to make this to become a fully-usable part of the software, but it relates to the problem as follows:; * if your cores are as separate images, QuPath should be able to merge them together to _act_ like they are in the same image; * if you have multiple TMA slides, QuPath could dynamically crop out the cores and assemble pseudo-slides that position the cores however you like. This means, for example, your image might group samples from a patient side by side for easy comparison - even if they were actually spread across multiple slides originally. This has some limitations, e.g. if your cores aren't in a pyramidal format (but rather one 5000x5000 pixel image, for example) then combining these together dynamically won't end well. To get any kind of usable performance, it will be necessary to convert the files to make them pyramidal. I hope that makes some kind of sense, describing what's possible now, what problematic, and what's coming... > **Important PS.** There's currently a post advertised to join me at work on QuPath [here](https://www.vacancies.ed.ac.uk/pls/corehrrecruit/erq_jobspec_version_4.jobspec?p_id=048500). With more than me working on it, things should be _much_ faster - please pass on the link to anyone who might be interested!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509982536
https://github.com/qupath/qupath/issues/337#issuecomment-632241436:101,Deployability,release,release,101,"Closing this because it has been quiet, and because the original issue should be fixed in the latest release. Positioning scenes in 2D remains a possible future improvement, but is a little tricky/risky because of uncertainty in how exactly to interpret position information consistently across formats. See https://forum.image.sc/t/improve-bio-formats-image-position-metadata/30770",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-632241436
https://github.com/qupath/qupath/issues/337#issuecomment-632241436:197,Safety,risk,risky,197,"Closing this because it has been quiet, and because the original issue should be fixed in the latest release. Positioning scenes in 2D remains a possible future improvement, but is a little tricky/risky because of uncertainty in how exactly to interpret position information consistently across formats. See https://forum.image.sc/t/improve-bio-formats-image-position-metadata/30770",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-632241436
https://github.com/qupath/qupath/issues/338#issuecomment-511680035:106,Deployability,release,release,106,"Hi, the instructions are for QuPath v0.1.2 (which uses Maven) but the repo contains the code for the next release (which uses Gradle and has a build.gradle instead of pom.xml). As part of that, the API is also changing rather considerably. The goal is to stabilize things to make it easier to add extensions, but limited by a chronic lack of time and the fact I'm the only person working on the software (although there's [a position being advertised to join me](https://www.vacancies.ed.ac.uk/pls/corehrrecruit/erq_jobspec_version_4.jobspec?p_id=048500)...). I don't know what's the goal of your extension, but my advice would be to focus on scripting first. It's generally much faster to get things working, and you can convert your Groovy script to a Java extension at some point in the future. I often prototype extensions first as scripts (and usually never actually need to convert the scripts to extensions). My instructions for getting started with IntelliJ are on the Wiki, which you've seen. I don't know what specifically 'I was unsuccessful' means, so really can't expand on that without knowing _exactly_ where or how it went wrong. Note that the instructions were written for v0.1.2 and need updated, but this won't happen until v0.2.0 is ready. Note also that the Q&A forum is at https://forum.image.sc/tags/qupath and this is the place to ask questions that are not directly related to a bug in the software.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/338#issuecomment-511680035
https://github.com/qupath/qupath/issues/338#issuecomment-511680035:1206,Deployability,update,updated,1206,"Hi, the instructions are for QuPath v0.1.2 (which uses Maven) but the repo contains the code for the next release (which uses Gradle and has a build.gradle instead of pom.xml). As part of that, the API is also changing rather considerably. The goal is to stabilize things to make it easier to add extensions, but limited by a chronic lack of time and the fact I'm the only person working on the software (although there's [a position being advertised to join me](https://www.vacancies.ed.ac.uk/pls/corehrrecruit/erq_jobspec_version_4.jobspec?p_id=048500)...). I don't know what's the goal of your extension, but my advice would be to focus on scripting first. It's generally much faster to get things working, and you can convert your Groovy script to a Java extension at some point in the future. I often prototype extensions first as scripts (and usually never actually need to convert the scripts to extensions). My instructions for getting started with IntelliJ are on the Wiki, which you've seen. I don't know what specifically 'I was unsuccessful' means, so really can't expand on that without knowing _exactly_ where or how it went wrong. Note that the instructions were written for v0.1.2 and need updated, but this won't happen until v0.2.0 is ready. Note also that the Q&A forum is at https://forum.image.sc/tags/qupath and this is the place to ask questions that are not directly related to a bug in the software.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/338#issuecomment-511680035
https://github.com/qupath/qupath/issues/340#issuecomment-513528764:113,Deployability,update,update,113,"Yes, this is important and should be addressed to avoid confusion. (I think _File &rarr; Revert_ can be used to 'update' the data by reading it from the [now changed] data file, but this isn't documented...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-513528764
https://github.com/qupath/qupath/issues/340#issuecomment-513528764:50,Safety,avoid,avoid,50,"Yes, this is important and should be addressed to avoid confusion. (I think _File &rarr; Revert_ can be used to 'update' the data by reading it from the [now changed] data file, but this isn't documented...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-513528764
https://github.com/qupath/qupath/issues/340#issuecomment-549053056:45,Deployability,release,releases,45,[v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) now shows a warning message whenever using _Run for project_ on the current image.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-549053056
https://github.com/qupath/qupath/issues/340#issuecomment-549053056:89,Integrability,message,message,89,[v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) now shows a warning message whenever using _Run for project_ on the current image.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-549053056
https://github.com/qupath/qupath/issues/343#issuecomment-515174436:397,Deployability,update,updates,397,"Yes, this is a known issue and intended behavior... but only because of a bug in OpenCV's Java bindings when QuPath was originally being developed, which meant any attempt to serialize a classifier was doomed to fail badly. Serializing the full training data and parameters required to rebuild the classifier was the only workaround I could find at the time. This is no longer a blocker thanks to updates in OpenCV and the switch to use JavaCPP. I've started to create entirely separate wrappers to support serializing/deserializing classifiers using JSON in the context of pixel classification. My proposed/intended fix is to use these with the detection classifier as well, but of course this will break backwards compatibility and I would therefore like to combine it with more thorough changes to how the detection classification works. Also, since the current approach is not critically broken I didn't want to start the task until everything was aligned to see it through to completion. Making the pixel classifier serializable/deserializable is a higher priority.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515174436
https://github.com/qupath/qupath/issues/343#issuecomment-515174436:487,Integrability,wrap,wrappers,487,"Yes, this is a known issue and intended behavior... but only because of a bug in OpenCV's Java bindings when QuPath was originally being developed, which meant any attempt to serialize a classifier was doomed to fail badly. Serializing the full training data and parameters required to rebuild the classifier was the only workaround I could find at the time. This is no longer a blocker thanks to updates in OpenCV and the switch to use JavaCPP. I've started to create entirely separate wrappers to support serializing/deserializing classifiers using JSON in the context of pixel classification. My proposed/intended fix is to use these with the detection classifier as well, but of course this will break backwards compatibility and I would therefore like to combine it with more thorough changes to how the detection classification works. Also, since the current approach is not critically broken I didn't want to start the task until everything was aligned to see it through to completion. Making the pixel classifier serializable/deserializable is a higher priority.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515174436
https://github.com/qupath/qupath/issues/343#issuecomment-515174436:646,Safety,detect,detection,646,"Yes, this is a known issue and intended behavior... but only because of a bug in OpenCV's Java bindings when QuPath was originally being developed, which meant any attempt to serialize a classifier was doomed to fail badly. Serializing the full training data and parameters required to rebuild the classifier was the only workaround I could find at the time. This is no longer a blocker thanks to updates in OpenCV and the switch to use JavaCPP. I've started to create entirely separate wrappers to support serializing/deserializing classifiers using JSON in the context of pixel classification. My proposed/intended fix is to use these with the detection classifier as well, but of course this will break backwards compatibility and I would therefore like to combine it with more thorough changes to how the detection classification works. Also, since the current approach is not critically broken I didn't want to start the task until everything was aligned to see it through to completion. Making the pixel classifier serializable/deserializable is a higher priority.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515174436
https://github.com/qupath/qupath/issues/343#issuecomment-515174436:809,Safety,detect,detection,809,"Yes, this is a known issue and intended behavior... but only because of a bug in OpenCV's Java bindings when QuPath was originally being developed, which meant any attempt to serialize a classifier was doomed to fail badly. Serializing the full training data and parameters required to rebuild the classifier was the only workaround I could find at the time. This is no longer a blocker thanks to updates in OpenCV and the switch to use JavaCPP. I've started to create entirely separate wrappers to support serializing/deserializing classifiers using JSON in the context of pixel classification. My proposed/intended fix is to use these with the detection classifier as well, but of course this will break backwards compatibility and I would therefore like to combine it with more thorough changes to how the detection classification works. Also, since the current approach is not critically broken I didn't want to start the task until everything was aligned to see it through to completion. Making the pixel classifier serializable/deserializable is a higher priority.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515174436
https://github.com/qupath/qupath/issues/343#issuecomment-515175616:254,Performance,Load,Load,254,"If you're still at the 'building' stage, under the 'Advanced options' and 'More...' you can try the _Classify project images_ option. From recollection, I believe this doesn't rebuild the classifier per image. Unfortunately there is no such option with 'Load classifier'. Conceivably it could be scripted to load the classifier once and apply it to all images in a project, but it would take some effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515175616
https://github.com/qupath/qupath/issues/343#issuecomment-515175616:308,Performance,load,load,308,"If you're still at the 'building' stage, under the 'Advanced options' and 'More...' you can try the _Classify project images_ option. From recollection, I believe this doesn't rebuild the classifier per image. Unfortunately there is no such option with 'Load classifier'. Conceivably it could be scripted to load the classifier once and apply it to all images in a project, but it would take some effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515175616
https://github.com/qupath/qupath/issues/343#issuecomment-515295378:181,Performance,load,loaded,181,"@petebankhead Thanks for the quick response! This seems like a major piece of technical debt. Retraining a random forest would lead to a different model each time the classifier is loaded. The expectation as a user is that if I save a model I will have a deterministic result each time that model is loaded. This could have a nontrivial effect on reproducibility of results. Are all of the classifiers retrained upon reloading, or just random forests?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515295378
https://github.com/qupath/qupath/issues/343#issuecomment-515295378:300,Performance,load,loaded,300,"@petebankhead Thanks for the quick response! This seems like a major piece of technical debt. Retraining a random forest would lead to a different model each time the classifier is loaded. The expectation as a user is that if I save a model I will have a deterministic result each time that model is loaded. This could have a nontrivial effect on reproducibility of results. Are all of the classifiers retrained upon reloading, or just random forests?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515295378
https://github.com/qupath/qupath/issues/343#issuecomment-515309402:130,Availability,error,error-while-saving-trained-svm-in-opencv-,130,"The bug was in the base class, therefore affected all OpenCV classifiers (see [here](https://stackoverflow.com/questions/42484908/error-while-saving-trained-svm-in-opencv-3-2-0-java) for a mention). Do you actually find cases where classifiers are different upon reloading, or only expect that would be the case?. This is something I considered at the time and to the best of my knowledge all random number generators involved are seeded when necessary (within QuPath and OpenCV) and the classifiers _are_ reproducible. I have memories of running end-to-end analysis of TMAs via scripts, including reloading classifiers, and obtaining identical results. If this is not the case that would of course be a more serious issue, but I am not aware of any instances where your expectation as a user would not be met for this reason.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515309402
https://github.com/qupath/qupath/issues/345#issuecomment-549052690:72,Deployability,release,releases,72,This should be improved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) but isn't fully resolved... so the issue remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/345#issuecomment-549052690
https://github.com/qupath/qupath/issues/345#issuecomment-617734843:51,Availability,avail,available,51,Closing this issue because the proposed fix is now available in v0.2.0-m10 - please feel free to open it if you find the problem remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/345#issuecomment-617734843
https://github.com/qupath/qupath/issues/346#issuecomment-517615463:110,Safety,avoid,avoids,110,"Have you tried creating a new project with m3 and seeing how it behaves, without any extra modifications?. m3 avoids the use of `{$PROJECT_DIR}` as a QuPath-specific solution is rather hard to maintain, and switches to URIs to overcome backslash/forward slash issues and also support OMERO-hosted images as well as local files. Rather, what m3 should do is:; * Always store the absolute URI for the image; * Store the last known URI for any project file; * Check for the existence of the absolute URI; * If that succeeds, good!; * If that fails, relativize the URI based on the last known project file URI and try it; * Show a dialog box to confirm any required URI changes / missing URIs requiring manual correction",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-517615463
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:88,Deployability,install,install,88,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:311,Performance,load,load,311,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:387,Safety,detect,detection,387,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:61,Testability,test,tested,61,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:135,Testability,test,testing,135,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:175,Testability,Test,TestFolder,175,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:558,Testability,Test,TestFolder,558,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:583,Testability,test,tested,583,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518195636:45,Usability,feedback,feedback,45,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636
https://github.com/qupath/qupath/issues/346#issuecomment-518200990:784,Deployability,update,updated,784,"Ah ok, the prompt _should_ appear but it should be pre-populated with the correct URIs. However agreeing to the changes will result in the absolute paths being overwritten. Consequently, one might wish to copy the '.qpproj' file first if it's desirable to have a project file with both sets of absolute URIs - updating one and leaving the other untouched. This does however become more complicated if images are later added or removed for one project. This is the intended behavior, although would be good to discuss if there is a better choice. My concern with depending upon relative paths _only_ is that if the project moves - but images remain in the same place - then the project will also break. It becomes essential to move both together. Also, if the absolute paths are _not_ updated whenever relative paths 'work' then this means that QuPath needs to silently make adjustments to URIs - and _potentially_ could end up selecting a wrong image that happens to have the same name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518200990
https://github.com/qupath/qupath/issues/346#issuecomment-518200990:562,Integrability,depend,depending,562,"Ah ok, the prompt _should_ appear but it should be pre-populated with the correct URIs. However agreeing to the changes will result in the absolute paths being overwritten. Consequently, one might wish to copy the '.qpproj' file first if it's desirable to have a project file with both sets of absolute URIs - updating one and leaving the other untouched. This does however become more complicated if images are later added or removed for one project. This is the intended behavior, although would be good to discuss if there is a better choice. My concern with depending upon relative paths _only_ is that if the project moves - but images remain in the same place - then the project will also break. It becomes essential to move both together. Also, if the absolute paths are _not_ updated whenever relative paths 'work' then this means that QuPath needs to silently make adjustments to URIs - and _potentially_ could end up selecting a wrong image that happens to have the same name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518200990
https://github.com/qupath/qupath/issues/346#issuecomment-518206588:757,Integrability,depend,depending,757,"Indeed, the prompt does not prepopulate new suggested paths in my case. While I don't see an easy fit-all solution, in my case the simple fact to be able to specify the path based on the current location of the project folder (for example storing it in a variable at the moment of opening) would already solve the problem (like it used to in v0.2.0 using $PROJECT_DIR). This means that before sharing the project I could manually modify the JSON if needed. . My ideal scenario would be :; 1) Test specified path using current project folder absolute path as a starting point (using a $PROJECT_DIR); 2) Test relative path if 1) fails; 3) Make user manually specify URI if all fails. This being said, It might not be as straightforward to implement code-wise depending on how you are currently rehauling your code base and the fact that there might be other fires to tackle first.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518206588
https://github.com/qupath/qupath/issues/346#issuecomment-518206588:255,Modifiability,variab,variable,255,"Indeed, the prompt does not prepopulate new suggested paths in my case. While I don't see an easy fit-all solution, in my case the simple fact to be able to specify the path based on the current location of the project folder (for example storing it in a variable at the moment of opening) would already solve the problem (like it used to in v0.2.0 using $PROJECT_DIR). This means that before sharing the project I could manually modify the JSON if needed. . My ideal scenario would be :; 1) Test specified path using current project folder absolute path as a starting point (using a $PROJECT_DIR); 2) Test relative path if 1) fails; 3) Make user manually specify URI if all fails. This being said, It might not be as straightforward to implement code-wise depending on how you are currently rehauling your code base and the fact that there might be other fires to tackle first.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518206588
https://github.com/qupath/qupath/issues/346#issuecomment-518206588:492,Testability,Test,Test,492,"Indeed, the prompt does not prepopulate new suggested paths in my case. While I don't see an easy fit-all solution, in my case the simple fact to be able to specify the path based on the current location of the project folder (for example storing it in a variable at the moment of opening) would already solve the problem (like it used to in v0.2.0 using $PROJECT_DIR). This means that before sharing the project I could manually modify the JSON if needed. . My ideal scenario would be :; 1) Test specified path using current project folder absolute path as a starting point (using a $PROJECT_DIR); 2) Test relative path if 1) fails; 3) Make user manually specify URI if all fails. This being said, It might not be as straightforward to implement code-wise depending on how you are currently rehauling your code base and the fact that there might be other fires to tackle first.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518206588
https://github.com/qupath/qupath/issues/346#issuecomment-518206588:602,Testability,Test,Test,602,"Indeed, the prompt does not prepopulate new suggested paths in my case. While I don't see an easy fit-all solution, in my case the simple fact to be able to specify the path based on the current location of the project folder (for example storing it in a variable at the moment of opening) would already solve the problem (like it used to in v0.2.0 using $PROJECT_DIR). This means that before sharing the project I could manually modify the JSON if needed. . My ideal scenario would be :; 1) Test specified path using current project folder absolute path as a starting point (using a $PROJECT_DIR); 2) Test relative path if 1) fails; 3) Make user manually specify URI if all fails. This being said, It might not be as straightforward to implement code-wise depending on how you are currently rehauling your code base and the fact that there might be other fires to tackle first.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518206588
https://github.com/qupath/qupath/issues/346#issuecomment-518206588:131,Usability,simpl,simple,131,"Indeed, the prompt does not prepopulate new suggested paths in my case. While I don't see an easy fit-all solution, in my case the simple fact to be able to specify the path based on the current location of the project folder (for example storing it in a variable at the moment of opening) would already solve the problem (like it used to in v0.2.0 using $PROJECT_DIR). This means that before sharing the project I could manually modify the JSON if needed. . My ideal scenario would be :; 1) Test specified path using current project folder absolute path as a starting point (using a $PROJECT_DIR); 2) Test relative path if 1) fails; 3) Make user manually specify URI if all fails. This being said, It might not be as straightforward to implement code-wise depending on how you are currently rehauling your code base and the fact that there might be other fires to tackle first.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518206588
https://github.com/qupath/qupath/issues/346#issuecomment-518279991:20,Testability,test,test,20,"Well I do rename my test directory from PDA_SHOWCASE to PDA_SHOWCASE2, without changing anything, I get this:; ![image](https://user-images.githubusercontent.com/18205832/62475608-a52a2400-b7a5-11e9-89e6-bde75f930c43.png). As I see there is no replacement suggestion. Is this possibly linked with being on a Linux based system?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518279991
https://github.com/qupath/qupath/issues/347#issuecomment-517716299:329,Testability,test,tested,329,"I expect that this is a difference in how line breaks are represented on Windows. It's not clear which operating system you used to write the zip, or which operating system/software you used to read the text file. It's also not clear for what purpose you are exporting. If it is to import the points again within QuPath have you tested to confirm if this works? If for some other purpose, can you please specify?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/347#issuecomment-517716299
https://github.com/qupath/qupath/issues/347#issuecomment-517716299:91,Usability,clear,clear,91,"I expect that this is a difference in how line breaks are represented on Windows. It's not clear which operating system you used to write the zip, or which operating system/software you used to read the text file. It's also not clear for what purpose you are exporting. If it is to import the points again within QuPath have you tested to confirm if this works? If for some other purpose, can you please specify?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/347#issuecomment-517716299
https://github.com/qupath/qupath/issues/347#issuecomment-517716299:228,Usability,clear,clear,228,"I expect that this is a difference in how line breaks are represented on Windows. It's not clear which operating system you used to write the zip, or which operating system/software you used to read the text file. It's also not clear for what purpose you are exporting. If it is to import the points again within QuPath have you tested to confirm if this works? If for some other purpose, can you please specify?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/347#issuecomment-517716299
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:144,Availability,error,error,144,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:661,Deployability,update,update,661,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:150,Integrability,message,message,150,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:252,Performance,Load,Loaded,252,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:331,Performance,Load,Loaded,331,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:384,Performance,Load,Loaded,384,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:433,Performance,Load,Loaded,433,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:480,Performance,Load,Loaded,480,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:529,Performance,Load,Loaded,529,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:650,Performance,Perform,Performing,650,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518022687:1538,Security,access,access,1538,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687
https://github.com/qupath/qupath/issues/348#issuecomment-518033169:49,Availability,error,errors,49,"Only other thought I have regarding intermittent errors is that some people storing image files, especially large ones, on network locations have run into trouble at times. And with active directory, your desktop might be a network location. If all of your files are on your hard drive, I'm out of ideas, good luck!. *and I see that the error log images are on the C drive.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518033169
https://github.com/qupath/qupath/issues/348#issuecomment-518033169:337,Availability,error,error,337,"Only other thought I have regarding intermittent errors is that some people storing image files, especially large ones, on network locations have run into trouble at times. And with active directory, your desktop might be a network location. If all of your files are on your hard drive, I'm out of ideas, good luck!. *and I see that the error log images are on the C drive.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518033169
https://github.com/qupath/qupath/issues/348#issuecomment-518033169:343,Testability,log,log,343,"Only other thought I have regarding intermittent errors is that some people storing image files, especially large ones, on network locations have run into trouble at times. And with active directory, your desktop might be a network location. If all of your files are on your hard drive, I'm out of ideas, good luck!. *and I see that the error log images are on the C drive.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518033169
https://github.com/qupath/qupath/issues/348#issuecomment-518040729:169,Availability,reliab,reliably,169,Yes I originally thought that could be the reason then I moved all images to the hard drive and got similar behaviours... I realise this is not very helpful as I cannot reliably reproduce it myself 100% of the time.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518040729
https://github.com/qupath/qupath/issues/348#issuecomment-518120494:1739,Modifiability,plugin,plugin,1739,"> Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images.... There's an explanation [here](https://forum.image.sc/t/third-milestone-on-the-path-to-qupath-v0-2-0/27953/7). > Yes forcing doesn't really change anything. Something odd going on... I eventually manage to open things and create a project to work on but sometimes it requires several attempts of closing the software and opening it again.. bit random.; I've tried the same files on 0.2.0 m2 and m3. This happens only in m3. I might have seen similar behavior some weeks ago, but rarely and it hasn't reappeared for me so that I thought it was resolved. Basically, QuPath wasn't using Bio-Formats when it should have been... sometimes. I haven't managed to find a way to reproduce it, but will keep looking. In m3, the type of the ImageServer is stored in the project to ensure that the same one is used again in the future (i.e. not OpenSlide once, then Bio-Formats the next time). Therefore if it fails to get the right type the first time, the image won't open the next time either. > Regarding the projects, would it not be possible for QuPath to create some sort of temporary project automatically when it requires it? which would be deleted if the image gets closed. I think this has the potential to make things more confusing... in this case, I think a better solution is to present a dialog enabling the image to be selected whenever multiple images are in the same file _and_ a project is not being used (like when the Bio-Formats plugin is used with Fiji). But implementing this takes time I don't currently have.... and I'd rather encourage people to use projects anyway in general (although of course these need to work...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518120494
https://github.com/qupath/qupath/issues/348#issuecomment-518120494:261,Security,access,access,261,"> Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images.... There's an explanation [here](https://forum.image.sc/t/third-milestone-on-the-path-to-qupath-v0-2-0/27953/7). > Yes forcing doesn't really change anything. Something odd going on... I eventually manage to open things and create a project to work on but sometimes it requires several attempts of closing the software and opening it again.. bit random.; I've tried the same files on 0.2.0 m2 and m3. This happens only in m3. I might have seen similar behavior some weeks ago, but rarely and it hasn't reappeared for me so that I thought it was resolved. Basically, QuPath wasn't using Bio-Formats when it should have been... sometimes. I haven't managed to find a way to reproduce it, but will keep looking. In m3, the type of the ImageServer is stored in the project to ensure that the same one is used again in the future (i.e. not OpenSlide once, then Bio-Formats the next time). Therefore if it fails to get the right type the first time, the image won't open the next time either. > Regarding the projects, would it not be possible for QuPath to create some sort of temporary project automatically when it requires it? which would be deleted if the image gets closed. I think this has the potential to make things more confusing... in this case, I think a better solution is to present a dialog enabling the image to be selected whenever multiple images are in the same file _and_ a project is not being used (like when the Bio-Formats plugin is used with Fiji). But implementing this takes time I don't currently have.... and I'd rather encourage people to use projects anyway in general (although of course these need to work...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518120494
https://github.com/qupath/qupath/issues/348#issuecomment-518131563:312,Availability,avail,available,312,"@r-mvl You could try the following script to investigate; ```groovy; import qupath.lib.images.servers.*. FileFormatInfo.cache.clear(). // Directory containing files; def path = 'path/to/scn/files'. // Filter only scn files; def files = new File(path).listFiles().findAll{it.getName().endsWith('.scn')}. // Print available readers; for (builder in ImageServerProvider.getInstalledImageServerBuilders()); print builder. for (f in files) {; def uri = f.toURI(); // Print all possible readers for the current file; print ImageServerProvider.getServerBuilders(java.awt.image.BufferedImage, uri.toString()).size(); // Print preferred reader; print ImageServerProvider.getPreferredUriImageSupport(java.awt.image.BufferedImage, uri.toString()); }; ```; I've tried a lot of files this morning and haven't been able to find any that fail... it remains mysterious :/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518131563
https://github.com/qupath/qupath/issues/348#issuecomment-518131563:120,Performance,cache,cache,120,"@r-mvl You could try the following script to investigate; ```groovy; import qupath.lib.images.servers.*. FileFormatInfo.cache.clear(). // Directory containing files; def path = 'path/to/scn/files'. // Filter only scn files; def files = new File(path).listFiles().findAll{it.getName().endsWith('.scn')}. // Print available readers; for (builder in ImageServerProvider.getInstalledImageServerBuilders()); print builder. for (f in files) {; def uri = f.toURI(); // Print all possible readers for the current file; print ImageServerProvider.getServerBuilders(java.awt.image.BufferedImage, uri.toString()).size(); // Print preferred reader; print ImageServerProvider.getPreferredUriImageSupport(java.awt.image.BufferedImage, uri.toString()); }; ```; I've tried a lot of files this morning and haven't been able to find any that fail... it remains mysterious :/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518131563
https://github.com/qupath/qupath/issues/348#issuecomment-518131563:126,Usability,clear,clear,126,"@r-mvl You could try the following script to investigate; ```groovy; import qupath.lib.images.servers.*. FileFormatInfo.cache.clear(). // Directory containing files; def path = 'path/to/scn/files'. // Filter only scn files; def files = new File(path).listFiles().findAll{it.getName().endsWith('.scn')}. // Print available readers; for (builder in ImageServerProvider.getInstalledImageServerBuilders()); print builder. for (f in files) {; def uri = f.toURI(); // Print all possible readers for the current file; print ImageServerProvider.getServerBuilders(java.awt.image.BufferedImage, uri.toString()).size(); // Print preferred reader; print ImageServerProvider.getPreferredUriImageSupport(java.awt.image.BufferedImage, uri.toString()); }; ```; I've tried a lot of files this morning and haven't been able to find any that fail... it remains mysterious :/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518131563
https://github.com/qupath/qupath/issues/348#issuecomment-520551709:898,Availability,avail,available,898,"I happened to me again today and your explanation is sound. It occurs somewhat randomly, and eventually would work after repetitive attempts to put the files in the project... not ideal! For example I had 7 images and it would only load 5 the first time, and then I'd have to add the 2 others subsequently. ; Also, for some reason it seems to never load any file if I do the following steps:; - create directory outside of QuPath (which will become the project directory); - open qupath, create a project and select the directory just created; - drag and drop the files to the project in qupath . But if I dont ""pre-create"" the folder and only create it while creating the project, and use the ""add images"" button, then it seems to accept the files (or more files at a time at least). I didn't get the chance to try the script you posted sorry (forgot really), but will definitely try m4 when it's available!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-520551709
https://github.com/qupath/qupath/issues/348#issuecomment-520551709:232,Performance,load,load,232,"I happened to me again today and your explanation is sound. It occurs somewhat randomly, and eventually would work after repetitive attempts to put the files in the project... not ideal! For example I had 7 images and it would only load 5 the first time, and then I'd have to add the 2 others subsequently. ; Also, for some reason it seems to never load any file if I do the following steps:; - create directory outside of QuPath (which will become the project directory); - open qupath, create a project and select the directory just created; - drag and drop the files to the project in qupath . But if I dont ""pre-create"" the folder and only create it while creating the project, and use the ""add images"" button, then it seems to accept the files (or more files at a time at least). I didn't get the chance to try the script you posted sorry (forgot really), but will definitely try m4 when it's available!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-520551709
https://github.com/qupath/qupath/issues/348#issuecomment-520551709:349,Performance,load,load,349,"I happened to me again today and your explanation is sound. It occurs somewhat randomly, and eventually would work after repetitive attempts to put the files in the project... not ideal! For example I had 7 images and it would only load 5 the first time, and then I'd have to add the 2 others subsequently. ; Also, for some reason it seems to never load any file if I do the following steps:; - create directory outside of QuPath (which will become the project directory); - open qupath, create a project and select the directory just created; - drag and drop the files to the project in qupath . But if I dont ""pre-create"" the folder and only create it while creating the project, and use the ""add images"" button, then it seems to accept the files (or more files at a time at least). I didn't get the chance to try the script you posted sorry (forgot really), but will definitely try m4 when it's available!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-520551709
https://github.com/qupath/qupath/issues/348#issuecomment-623494686:467,Testability,log,log,467,"@reynoldscem the source of this issue has been fixed. If you have a definite bug, please create an issue [here](https://github.com/qupath/qupath/issues/new?assignees=&labels=bug&template=bug_report.md&title=) following the template. If you are unsure if you have found a bug or not, please open a discussion on http://forum.image.sc/tag/qupath with clear description fo precisely what you have tried and what happens (including any information from *View &rarr; Show log*).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-623494686
https://github.com/qupath/qupath/issues/348#issuecomment-623494686:349,Usability,clear,clear,349,"@reynoldscem the source of this issue has been fixed. If you have a definite bug, please create an issue [here](https://github.com/qupath/qupath/issues/new?assignees=&labels=bug&template=bug_report.md&title=) following the template. If you are unsure if you have found a bug or not, please open a discussion on http://forum.image.sc/tag/qupath with clear description fo precisely what you have tried and what happens (including any information from *View &rarr; Show log*).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-623494686
https://github.com/qupath/qupath/issues/349#issuecomment-518238493:121,Availability,error,error,121,I'm unable to reproduce this on Windows 10; using _Automate &rarr; Shared scripts &rarr; ..._ my script opens without an error.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518238493
https://github.com/qupath/qupath/issues/349#issuecomment-518300141:18,Availability,error,error,18,It looks like the error occurs rather deep in the JavaFX code [here](https://github.com/javafxports/openjdk-jfx/blob/4f0addff16de7182752bc60541f44baeb0e99d2a/modules/javafx.controls/src/main/java/javafx/scene/control/skin/MenuButtonSkinBase.java#L188).; Does it happen consistently? At first glance it doesn't look like it's something that can be resolved within QuPath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518300141
https://github.com/qupath/qupath/issues/349#issuecomment-518388476:202,Deployability,install,install,202,"It does happen constantly. It didn't at first, and then started to appear. I don't know why,... but thought it might be worst reporting in case it had anything to do with QuPath. I might just try to re-install QuPath and see if it comes back.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518388476
https://github.com/qupath/qupath/issues/349#issuecomment-518576771:23,Usability,simpl,simple,23,"Thanks Pete, it was as simple as that, issue solved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518576771
https://github.com/qupath/qupath/issues/350#issuecomment-518597688:5,Deployability,update,updated,5,"I've updated the page to clarify that it refers to v0.1.2. Everything will need to be revised for v0.2.0, but the priority for now is to work on the code. You'll need to clone the repository to get the code, the sources are no longer included in the distribution.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/350#issuecomment-518597688
https://github.com/qupath/qupath/issues/351#issuecomment-519087329:108,Deployability,upgrade,upgrade,108,"It looks like the root problem is that OpenSlide can't be loaded, which I presume is somehow related to the upgrade - but I don't know how. I would suggest trying the zipped version of QuPath v0.1.2 and running it from your desktop (or at least a folder where you definitely have full write permissions): https://github.com/qupath/qupath/releases/tag/v0.1.2; (You will need to extract all the files from the zipped file and the .exe you need to run will be among them.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519087329
https://github.com/qupath/qupath/issues/351#issuecomment-519087329:338,Deployability,release,releases,338,"It looks like the root problem is that OpenSlide can't be loaded, which I presume is somehow related to the upgrade - but I don't know how. I would suggest trying the zipped version of QuPath v0.1.2 and running it from your desktop (or at least a folder where you definitely have full write permissions): https://github.com/qupath/qupath/releases/tag/v0.1.2; (You will need to extract all the files from the zipped file and the .exe you need to run will be among them.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519087329
https://github.com/qupath/qupath/issues/351#issuecomment-519087329:58,Performance,load,loaded,58,"It looks like the root problem is that OpenSlide can't be loaded, which I presume is somehow related to the upgrade - but I don't know how. I would suggest trying the zipped version of QuPath v0.1.2 and running it from your desktop (or at least a folder where you definitely have full write permissions): https://github.com/qupath/qupath/releases/tag/v0.1.2; (You will need to extract all the files from the zipped file and the .exe you need to run will be among them.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519087329
https://github.com/qupath/qupath/issues/351#issuecomment-519191277:105,Deployability,install,installation,105,"I would start by using another computer temporarily and ensuring you can open your data set with another installation of QuPath on that computer. Even better if it is a Win10 computer where you had not installed QuPath before. If it is a time crunch, using another computer might be the best short term bet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519191277
https://github.com/qupath/qupath/issues/351#issuecomment-519191277:202,Deployability,install,installed,202,"I would start by using another computer temporarily and ensuring you can open your data set with another installation of QuPath on that computer. Even better if it is a Win10 computer where you had not installed QuPath before. If it is a time crunch, using another computer might be the best short term bet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519191277
https://github.com/qupath/qupath/issues/351#issuecomment-519550791:30,Deployability,install,installing,30,"For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage. Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; But I wanted to answer here quickly in empathy for the impending submission deadline...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519550791
https://github.com/qupath/qupath/issues/351#issuecomment-519633891:308,Deployability,install,installing,308,"Thank you very much for your replies. I’m going to try what you have suggested tomorrow and will definitely report back. Apologies for posting in the wrong bit and thanks again for the very fast replies!. > On 8 Aug 2019, at 15:47, Pete <notifications@github.com> wrote:; > ; > For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; > This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage.; > ; > Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; > But I wanted to answer here quickly in empathy for the impending submission deadline...; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519633891
https://github.com/qupath/qupath/issues/351#issuecomment-521570540:296,Deployability,install,installing,296,"Hi, . I got IT to reinstall as you suggested and it solved the problem. I was looking for my post to close it but can’t find it, can you close it for me please?. Thanks for your help. . Rivka. > On 8 Aug 2019, at 15:47, Pete <notifications@github.com> wrote:; > ; > For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; > This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage.; > ; > Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; > But I wanted to answer here quickly in empathy for the impending submission deadline...; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-521570540
https://github.com/qupath/qupath/issues/352#issuecomment-520907454:637,Availability,avail,available,637,"It's intended behavior, albeit with room for improvement. You can adjust the settings beyond what the slider permits by double-clicking on the label displaying the min/max display value: https://github.com/qupath/qupath/issues/26. For 8-bit it is straightforward and the range should be 0-255. For 16-bit and 32-bit it is not so straightforward; the actual range of the data can be much less than the range permitted by the bit-depth, and a slider from 0-65,535 would be extremely difficult to adjust with any level of accuracy. Also, for 16-bit images the actual camera may well be 12 or 14-bit - but that information isn't necessarily available in the image metadata. When an image is being opened, QuPath generates a histogram per channel and the default min/max values are taken from this. For large images, this must be calculated from a lower-resolution image. Because decreasing resolution likely involves smoothing, the maximum of the low-resolution image may well be less than the maximum of the full-resolution image.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/352#issuecomment-520907454
https://github.com/qupath/qupath/issues/354#issuecomment-523307868:508,Modifiability,maintainab,maintainable,508,"If you reset the classes, you should see `Ignore*` is the new name. This change was partly in response to a request to make it more visually obvious which classes will be ignored, and partly to give the opportunity to create other 'ignoreable' classes (e.g.'Artefact*', 'Background*'). There's also now a method: https://github.com/qupath/qupath/blob/835edddbc9c74fa4b78e4fe1cd1d437f18b6102a/qupath-core/src/main/java/qupath/lib/objects/classes/PathClassTools.java#L29-L31. I don't know if this is a good or maintainable design choice... but I think it's better than the previous way of just treating 'Ignore' differently. :point_down:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/354#issuecomment-523307868
https://github.com/qupath/qupath/issues/354#issuecomment-523526830:45,Usability,feedback,feedback,45,"Yes, the change was made in response to user feedback but I didn't want to point fingers :point_up: :point_up:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/354#issuecomment-523526830
https://github.com/qupath/qupath/issues/355#issuecomment-527233194:379,Deployability,install,installation,379,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194
https://github.com/qupath/qupath/issues/355#issuecomment-527233194:432,Deployability,update,update,432,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194
https://github.com/qupath/qupath/issues/355#issuecomment-527233194:863,Deployability,install,installation,863,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194
https://github.com/qupath/qupath/issues/355#issuecomment-527233194:953,Deployability,install,installation,953,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194
https://github.com/qupath/qupath/issues/355#issuecomment-527233194:411,Integrability,depend,dependency,411,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194
https://github.com/qupath/qupath/issues/355#issuecomment-527233194:535,Integrability,depend,dependencies,535,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194
https://github.com/qupath/qupath/issues/355#issuecomment-527239383:76,Deployability,install,installation,76,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383
https://github.com/qupath/qupath/issues/355#issuecomment-527239383:541,Deployability,integrat,integrated,541,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383
https://github.com/qupath/qupath/issues/355#issuecomment-527239383:815,Deployability,Update,Update,815,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383
https://github.com/qupath/qupath/issues/355#issuecomment-527239383:108,Integrability,depend,dependency,108,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383
https://github.com/qupath/qupath/issues/355#issuecomment-527239383:541,Integrability,integrat,integrated,541,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383
https://github.com/qupath/qupath/issues/355#issuecomment-527240543:736,Deployability,release,release,736,"Yep, somehow the libpixman used is the one from my system:; ```; $ cat /proc/30668/maps | grep pixman; 7f0c393d0000-7f0c393db000 r--p 00000000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c393db000-7f0c39461000 r-xp 0000b000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39461000-7f0c39471000 r--p 00091000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39471000-7f0c39479000 r--p 000a0000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39479000-7f0c3947a000 rw-p 000a8000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; ```; On both QuPath 0.1.2 and QuPath 0.2.0. Now I have no idea with 0.1.2 works fine while 0.2.0 doesn't... that doesn't make sense...; Ideally it would be great if it could ship with a QuPath release with the fix.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527240543
https://github.com/qupath/qupath/issues/355#issuecomment-527253897:874,Deployability,release,release,874,"Perhaps this is related to the bounding box?. man. 2. sep. 2019, 22:46 skrev Tuatini Godard <notifications@github.com>:. > Yep, somehow the libpixman used is the one from my system:; >; > $ cat /proc/30668/maps | grep pixman; > 7f0c393d0000-7f0c393db000 r--p 00000000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c393db000-7f0c39461000 r-xp 0000b000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39461000-7f0c39471000 r--p 00091000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39471000-7f0c39479000 r--p 000a0000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39479000-7f0c3947a000 rw-p 000a8000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; >; > On both QuPath 0.1.2 and QuPath 0.2.0. Now I have no idea with 0.1.2 works; > fine while 0.2.0 doesn't... that doesn't make sense...; > Ideally it would be great if it could ship with a QuPath release with the; > fix.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/355?email_source=notifications&email_token=AH7WSL7NBM4OQKNC45FLTKTQHV3THA5CNFSM4IS736B2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5WQ2XY#issuecomment-527240543>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AH7WSL5AXNFIGZVZNNQDLOTQHV3THANCNFSM4IS736BQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527253897
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:672,Availability,mask,masked,672,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:913,Availability,avail,available,913,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:715,Deployability,install,installed,715,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:1224,Deployability,update,updated,1224,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:1459,Deployability,install,installation,1459,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:292,Integrability,depend,dependencies,292,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:457,Integrability,depend,dependencies,457,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:1095,Integrability,depend,dependencies,1095,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:1151,Modifiability,maintainab,maintainable,1151,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:1760,Modifiability,portab,portable,1760,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:279,Performance,load,loading,279,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:448,Performance,load,load,448,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527339421:1082,Performance,load,load,1082,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421
https://github.com/qupath/qupath/issues/355#issuecomment-527622981:157,Integrability,depend,dependencies,157,"> Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. Yes, that's correct. I'm not sure how I'm supposed to load the dependencies ""backward"" tho. I'll try a few things and come back if I find a solution for this. Thanks a lot!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527622981
https://github.com/qupath/qupath/issues/355#issuecomment-527622981:148,Performance,load,load,148,"> Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. Yes, that's correct. I'm not sure how I'm supposed to load the dependencies ""backward"" tho. I'll try a few things and come back if I find a solution for this. Thanks a lot!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527622981
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:470,Availability,avail,available,470,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:265,Integrability,depend,dependency,265,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:348,Integrability,depend,dependencies,348,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:376,Integrability,depend,dependent,376,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:429,Integrability,depend,dependencies,429,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:607,Integrability,depend,dependent,607,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:692,Integrability,depend,dependencies,692,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:713,Integrability,depend,dependencies,713,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:733,Integrability,depend,dependencies,733,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:121,Performance,load,loadLibrary,121,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:161,Performance,load,loaded,161,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:416,Performance,load,load,416,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:497,Performance,load,loadLibrary,497,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:800,Performance,load,loaded,800,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-527729451:631,Safety,avoid,avoided,631,"You can see the awkward way I do this on Windows via the link in my last post. Basically, as far as I can recall `System.loadLibrary` will check if a library is loaded, and if not then it will look on the Java library path for it. However if that library has a sub-dependency then the Java library path becomes irrelevant... and the search for sub-dependencies will be system dependent*. Therefore if you explicitly load the sub-dependencies first, they will already be available whenever `System.loadLibrary` is needed for the main library you wanted in the first place - and the less controllable, system-dependent search can be avoided. Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. It feels like there should be a far more elegant way to do this, but I haven't found it. *-This may mean searching in the directory from which QuPath was launched, so copying the library files there could be an easy workaround - I'm not entirely sure.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527729451
https://github.com/qupath/qupath/issues/355#issuecomment-529156559:103,Integrability,depend,dependencies,103,"Hi, sorry for the late reply. Ok I understand. . > Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. Yep it's something that I noticed when looking for what lib uses what lol. I was wondering if you plan to drop Openslide entirely from the dependency tree and use [libvips](https://libvips.github.io/libvips/) instead? It uses Openslide internally for cetain formats but accept much more format, automatically fixes the unmaitained bugs Openslide didn't (as the support for this lib is non-existent since a while now) and is much faster than Openslide.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529156559
https://github.com/qupath/qupath/issues/355#issuecomment-529156559:124,Integrability,depend,dependencies,124,"Hi, sorry for the late reply. Ok I understand. . > Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. Yep it's something that I noticed when looking for what lib uses what lol. I was wondering if you plan to drop Openslide entirely from the dependency tree and use [libvips](https://libvips.github.io/libvips/) instead? It uses Openslide internally for cetain formats but accept much more format, automatically fixes the unmaitained bugs Openslide didn't (as the support for this lib is non-existent since a while now) and is much faster than Openslide.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529156559
https://github.com/qupath/qupath/issues/355#issuecomment-529156559:144,Integrability,depend,dependencies,144,"Hi, sorry for the late reply. Ok I understand. . > Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. Yep it's something that I noticed when looking for what lib uses what lol. I was wondering if you plan to drop Openslide entirely from the dependency tree and use [libvips](https://libvips.github.io/libvips/) instead? It uses Openslide internally for cetain formats but accept much more format, automatically fixes the unmaitained bugs Openslide didn't (as the support for this lib is non-existent since a while now) and is much faster than Openslide.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529156559
https://github.com/qupath/qupath/issues/355#issuecomment-529156559:389,Integrability,depend,dependency,389,"Hi, sorry for the late reply. Ok I understand. . > Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. Yep it's something that I noticed when looking for what lib uses what lol. I was wondering if you plan to drop Openslide entirely from the dependency tree and use [libvips](https://libvips.github.io/libvips/) instead? It uses Openslide internally for cetain formats but accept much more format, automatically fixes the unmaitained bugs Openslide didn't (as the support for this lib is non-existent since a while now) and is much faster than Openslide.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529156559
https://github.com/qupath/qupath/issues/355#issuecomment-529156559:211,Performance,load,loaded,211,"Hi, sorry for the late reply. Ok I understand. . > Somewhat inconveniently, in this case there are sub-dependencies and sub-dependencies of sub-dependencies... so figuring out the order in which they need to be loaded isn't entirely straightforward. Yep it's something that I noticed when looking for what lib uses what lol. I was wondering if you plan to drop Openslide entirely from the dependency tree and use [libvips](https://libvips.github.io/libvips/) instead? It uses Openslide internally for cetain formats but accept much more format, automatically fixes the unmaitained bugs Openslide didn't (as the support for this lib is non-existent since a while now) and is much faster than Openslide.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529156559
https://github.com/qupath/qupath/issues/355#issuecomment-529201022:245,Availability,avail,available,245,"I hadn't really thought of libvips for this purpose as it seems much more than an image-reading library - but if it could offer a more extensive and maintainable alternative to OpenSlide alone that would be fantastic. I notice that bindings are available for multiple languages, but Java isn't listed as one of them. I can also only see binaries provided for Windows. Therefore, assuming it can be used in a similar way to OpenSlide (i.e. open an image, retaining a reference to it and requesting tiles on demand) then to get it into QuPath I think it would need:; * Binaries for Windows, Linux and Mac (including OpenSlide and potentially other optional dependencies - assuming the licenses all fit); * Java bindings, presumably with JNI (or [can JavaCPP help...?](https://github.com/bytedeco/javacpp/wiki/Mapping-Recipes)); * A QuPath extension to bridge the gap. The last one of these should be quite straightforward. I'm afraid I don't have the time or skills for the first two, but they can be treated entirely separately from QuPath. Do you know of a solution to the first two requirements / have any interest in coming up with one to make libvips available in a cross-platform way that could be distributed through QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529201022
https://github.com/qupath/qupath/issues/355#issuecomment-529201022:1154,Availability,avail,available,1154,"I hadn't really thought of libvips for this purpose as it seems much more than an image-reading library - but if it could offer a more extensive and maintainable alternative to OpenSlide alone that would be fantastic. I notice that bindings are available for multiple languages, but Java isn't listed as one of them. I can also only see binaries provided for Windows. Therefore, assuming it can be used in a similar way to OpenSlide (i.e. open an image, retaining a reference to it and requesting tiles on demand) then to get it into QuPath I think it would need:; * Binaries for Windows, Linux and Mac (including OpenSlide and potentially other optional dependencies - assuming the licenses all fit); * Java bindings, presumably with JNI (or [can JavaCPP help...?](https://github.com/bytedeco/javacpp/wiki/Mapping-Recipes)); * A QuPath extension to bridge the gap. The last one of these should be quite straightforward. I'm afraid I don't have the time or skills for the first two, but they can be treated entirely separately from QuPath. Do you know of a solution to the first two requirements / have any interest in coming up with one to make libvips available in a cross-platform way that could be distributed through QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529201022
https://github.com/qupath/qupath/issues/355#issuecomment-529201022:655,Integrability,depend,dependencies,655,"I hadn't really thought of libvips for this purpose as it seems much more than an image-reading library - but if it could offer a more extensive and maintainable alternative to OpenSlide alone that would be fantastic. I notice that bindings are available for multiple languages, but Java isn't listed as one of them. I can also only see binaries provided for Windows. Therefore, assuming it can be used in a similar way to OpenSlide (i.e. open an image, retaining a reference to it and requesting tiles on demand) then to get it into QuPath I think it would need:; * Binaries for Windows, Linux and Mac (including OpenSlide and potentially other optional dependencies - assuming the licenses all fit); * Java bindings, presumably with JNI (or [can JavaCPP help...?](https://github.com/bytedeco/javacpp/wiki/Mapping-Recipes)); * A QuPath extension to bridge the gap. The last one of these should be quite straightforward. I'm afraid I don't have the time or skills for the first two, but they can be treated entirely separately from QuPath. Do you know of a solution to the first two requirements / have any interest in coming up with one to make libvips available in a cross-platform way that could be distributed through QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529201022
https://github.com/qupath/qupath/issues/355#issuecomment-529201022:850,Integrability,bridg,bridge,850,"I hadn't really thought of libvips for this purpose as it seems much more than an image-reading library - but if it could offer a more extensive and maintainable alternative to OpenSlide alone that would be fantastic. I notice that bindings are available for multiple languages, but Java isn't listed as one of them. I can also only see binaries provided for Windows. Therefore, assuming it can be used in a similar way to OpenSlide (i.e. open an image, retaining a reference to it and requesting tiles on demand) then to get it into QuPath I think it would need:; * Binaries for Windows, Linux and Mac (including OpenSlide and potentially other optional dependencies - assuming the licenses all fit); * Java bindings, presumably with JNI (or [can JavaCPP help...?](https://github.com/bytedeco/javacpp/wiki/Mapping-Recipes)); * A QuPath extension to bridge the gap. The last one of these should be quite straightforward. I'm afraid I don't have the time or skills for the first two, but they can be treated entirely separately from QuPath. Do you know of a solution to the first two requirements / have any interest in coming up with one to make libvips available in a cross-platform way that could be distributed through QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529201022
https://github.com/qupath/qupath/issues/355#issuecomment-529201022:149,Modifiability,maintainab,maintainable,149,"I hadn't really thought of libvips for this purpose as it seems much more than an image-reading library - but if it could offer a more extensive and maintainable alternative to OpenSlide alone that would be fantastic. I notice that bindings are available for multiple languages, but Java isn't listed as one of them. I can also only see binaries provided for Windows. Therefore, assuming it can be used in a similar way to OpenSlide (i.e. open an image, retaining a reference to it and requesting tiles on demand) then to get it into QuPath I think it would need:; * Binaries for Windows, Linux and Mac (including OpenSlide and potentially other optional dependencies - assuming the licenses all fit); * Java bindings, presumably with JNI (or [can JavaCPP help...?](https://github.com/bytedeco/javacpp/wiki/Mapping-Recipes)); * A QuPath extension to bridge the gap. The last one of these should be quite straightforward. I'm afraid I don't have the time or skills for the first two, but they can be treated entirely separately from QuPath. Do you know of a solution to the first two requirements / have any interest in coming up with one to make libvips available in a cross-platform way that could be distributed through QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-529201022
https://github.com/qupath/qupath/issues/355#issuecomment-549052997:125,Integrability,depend,dependency,125,"I'll close this issue because of lack of activity, and because the practical solution lies outside QuPath (i.e. updating the dependency). The question remains of how best to continue using OpenSlide within QuPath, and especially how (or whether) to try to package it up more portably for Linux - but that's probably best considered in a separate issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-549052997
https://github.com/qupath/qupath/issues/355#issuecomment-549052997:275,Modifiability,portab,portably,275,"I'll close this issue because of lack of activity, and because the practical solution lies outside QuPath (i.e. updating the dependency). The question remains of how best to continue using OpenSlide within QuPath, and especially how (or whether) to try to package it up more portably for Linux - but that's probably best considered in a separate issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-549052997
https://github.com/qupath/qupath/issues/357#issuecomment-527537199:222,Availability,down,downsampling,222,"It will only show up when your pixels have a size. Your previous post showed that your images were missing metadata indicating what size each pixel was, so that option would not have been useful. Also, it is essentially a downsampling option, to make the cell detection run more smoothly.; https://www.youtube.com/watch?v=Hh-53Uqik-Y; Another description:; https://forum.image.sc/t/qupath-intro-choose-your-own-analysis-adventure/27906/12. Finally, questions like this should be directed to the forum, not the issues page.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/357#issuecomment-527537199
https://github.com/qupath/qupath/issues/357#issuecomment-527537199:260,Safety,detect,detection,260,"It will only show up when your pixels have a size. Your previous post showed that your images were missing metadata indicating what size each pixel was, so that option would not have been useful. Also, it is essentially a downsampling option, to make the cell detection run more smoothly.; https://www.youtube.com/watch?v=Hh-53Uqik-Y; Another description:; https://forum.image.sc/t/qupath-intro-choose-your-own-analysis-adventure/27906/12. Finally, questions like this should be directed to the forum, not the issues page.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/357#issuecomment-527537199
https://github.com/qupath/qupath/issues/358#issuecomment-549052324:72,Deployability,release,releases,72,This should be resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) - if not please feel free to reopen the issue.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/358#issuecomment-549052324
https://github.com/qupath/qupath/issues/359#issuecomment-529030048:60,Safety,detect,detections,60,"And if you delete all of the annotations, select all of the detections, and run it, it plugs along for a while and ends up doing nothing. But successfully. In a lightly modified m4.; ![image](https://user-images.githubusercontent.com/23145209/64463124-bc677480-d0b7-11e9-91b6-bee324dc50df.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/359#issuecomment-529030048
https://github.com/qupath/qupath/issues/359#issuecomment-549052239:72,Deployability,release,releases,72,This should be resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) - please reopen if you find it isn't.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/359#issuecomment-549052239
https://github.com/qupath/qupath/issues/360#issuecomment-530506385:13,Performance,load,load,13,"When you say load training objects, do you mean the Rebuild Training from Project option under More, or something else?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530506385
https://github.com/qupath/qupath/issues/360#issuecomment-530510840:184,Safety,detect,detection,184,"I missed that, I don't understand the workflow enough and there may be a bug here. But there may also be a workaround through the link I posted. The medium-term plan is to replace the detection classifier (building on the milestones, not v0.1.2) so if there's a workaround at all for training across images then I would not plan to fix this issue but rather invest the time in developing the improved command (both for reasons outlined in https://github.com/qupath/qupath/issues/343 and to better unify the code with the pixel classifier).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530510840
https://github.com/qupath/qupath/issues/360#issuecomment-530538010:55,Performance,load,load,55,@petebankhead so then it is expected that whenever you load .qptrain objects it they will be overwritten? Doesn't that make them impossible to use? Also I seem to recall being able to do load these saved training points in the past through creating a new detection classifier which is why I am also confused. I do have a feeling this is a bug and not the way the code is written because of that.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530538010
https://github.com/qupath/qupath/issues/360#issuecomment-530538010:187,Performance,load,load,187,@petebankhead so then it is expected that whenever you load .qptrain objects it they will be overwritten? Doesn't that make them impossible to use? Also I seem to recall being able to do load these saved training points in the past through creating a new detection classifier which is why I am also confused. I do have a feeling this is a bug and not the way the code is written because of that.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530538010
https://github.com/qupath/qupath/issues/360#issuecomment-530538010:255,Safety,detect,detection,255,@petebankhead so then it is expected that whenever you load .qptrain objects it they will be overwritten? Doesn't that make them impossible to use? Also I seem to recall being able to do load these saved training points in the past through creating a new detection classifier which is why I am also confused. I do have a feeling this is a bug and not the way the code is written because of that.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530538010
https://github.com/qupath/qupath/issues/360#issuecomment-530540408:43,Performance,load,load,43,"> so then it is expected that whenever you load .qptrain objects it they will be overwritten? . _If_ the image currently open is the same as the one with the old points. > Doesn't that make them impossible to use?. It shouldn't if the saved annotations are for different images. The logic is: Use the 'retained' objects (from other images), _unless_ the retained objects relate to the image currently opened, in which case use the current objects instead. That is the intended behavior.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530540408
https://github.com/qupath/qupath/issues/360#issuecomment-530540408:283,Testability,log,logic,283,"> so then it is expected that whenever you load .qptrain objects it they will be overwritten? . _If_ the image currently open is the same as the one with the old points. > Doesn't that make them impossible to use?. It shouldn't if the saved annotations are for different images. The logic is: Use the 'retained' objects (from other images), _unless_ the retained objects relate to the image currently opened, in which case use the current objects instead. That is the intended behavior.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530540408
https://github.com/qupath/qupath/issues/360#issuecomment-530540608:5,Usability,Learn,Learn,5,"Huh. Learn something new every day. I didn't even realize that file type existed. But really, rebuilding from project is probably the way to go, and it is best to train a classifier across multiple images anyway to account for the most variation you can. I would also recommend always keeping a classifier ""version"" of the project (either save the qpdata files or make two projects) so that once you start running scripts, you can always go back to the exact project and objects you were using to create the classifier.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530540608
https://github.com/qupath/qupath/issues/360#issuecomment-530543289:215,Availability,reliab,reliable,215,@petebankhead is there any way to work around this so that I can use saved training points on the same image that they were created in. . @Svidro I agree it does seem after some research like this might be the most reliable method. At the same time however doesn't this make it harder to train on a very large number of images? In order to train on 50 images I would need to create a project with 50 images and save the data in each project. It is my understanding and experience that these large project are much slower than smaller ones and frequently crash.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530543289
https://github.com/qupath/qupath/issues/360#issuecomment-530545951:449,Security,access,access,449,"If you wanted to use all of the images. I would generally use either a random sub-selection, or eyeball it and include as much variation as possible. Strongly positive, strongly negative, a few weird ones. Then build the training from that, and save it as a .qpclassifier. Then start a new project for the whole set of images. At that point you only need to use runClassifier(""C:\\here is my path\\here is my classifier.qpclassifier) in a script to access the classification. . The primary reason to keep the old project separate is in case you decide the classifier needs tweaking or an additional class, or whatever. Then you can go back to the classifier project, add in some new training objects, rebuild training from project, and create another classifier file. Run that file on the ""real"" project, and compare results.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530545951
https://github.com/qupath/qupath/issues/360#issuecomment-530547422:152,Energy Efficiency,adapt,adapting,152,> @petebankhead is there any way to work around this so that I can use saved training points on the same image that they were created in. You could try adapting the script linked to above to merge the maps. Note that you'll need to handle duplicate keys. Or try importing the training points to the same image instead. > It is my understanding and experience that these large project are much slower than smaller ones and frequently crash. This could be because the way your images are converted as described in https://github.com/qupath/qupath/issues/356 is very much _not_ the right way for QuPath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530547422
https://github.com/qupath/qupath/issues/360#issuecomment-530547422:152,Modifiability,adapt,adapting,152,> @petebankhead is there any way to work around this so that I can use saved training points on the same image that they were created in. You could try adapting the script linked to above to merge the maps. Note that you'll need to handle duplicate keys. Or try importing the training points to the same image instead. > It is my understanding and experience that these large project are much slower than smaller ones and frequently crash. This could be because the way your images are converted as described in https://github.com/qupath/qupath/issues/356 is very much _not_ the right way for QuPath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530547422
https://github.com/qupath/qupath/issues/361#issuecomment-530792826:762,Usability,clear,clear,762,"Try opening the image in a project. This has been discussed elsewhere for other file formats:; https://forum.image.sc/t/third-milestone-on-the-path-to-qupath-v0-2-0/27953/7. You can request to auto-estimate the image type in the preferences (the default for v0.1.2). See also https://petebankhead.github.io/qupath/2019/08/20/fourth-milestone.html for more information about how to set the image type when importing images for a project. The channel colors in QuPath are/should be read directly from Bio-Formats; the relevant code is at https://github.com/qupath/qupath/blob/master/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L514; If it doesn't, then it's a bug in QuPath. But at this point it's not clear to me if the colors differ because of something in QuPath, something in Bio-Formats or something in the software that wrote the file in the first place.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-530792826
https://github.com/qupath/qupath/issues/361#issuecomment-531148137:39,Usability,feedback,feedback,39,"Hi again and thanks a lot for the fast feedback. ; Opening the VSI files works fine when a project is created, and choosing fluorescence as the image type when importing images helps on the flow. ; Petes suggestion of changing colors once for all images of the same type once in a project works, and is remembered when opening the project again (except with a few glitches). Just to show you how the channels appear by default, see attached image. The naming (Dapi, Fitc etc.) is correct, but the colors always comes up in this order R G B Y, regardless of which channels the image consists of. ; ![color vs channel](https://user-images.githubusercontent.com/55238250/64848050-aa825600-d610-11e9-8baa-49af6501c8d4.PNG)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531148137
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:204,Energy Efficiency,green,green,204,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:340,Safety,Detect,DetectorSettings,340,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:375,Safety,Detect,Detector,375,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:526,Safety,Detect,DetectorSettings,526,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:561,Safety,Detect,Detector,561,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:713,Safety,Detect,DetectorSettings,713,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:748,Safety,Detect,Detector,748,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/361#issuecomment-531192852:843,Safety,Detect,DetectorSettings,843,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852
https://github.com/qupath/qupath/issues/363#issuecomment-534106040:62,Availability,error,error,62,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040
https://github.com/qupath/qupath/issues/363#issuecomment-534106040:2311,Availability,FAILURE,FAILURE,2311,"qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > A problem occurred starting process 'command '/public/home/yangzhzh/tools/jdk-14/bin''. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 11s; 41 actionable tasks: 3 executed, 38 up-to-date. Any idea of why?; Thanks,; Zhenzhen",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040
https://github.com/qupath/qupath/issues/363#issuecomment-534106040:406,Deployability,install,installed,406,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040
https://github.com/qupath/qupath/issues/363#issuecomment-534106040:257,Modifiability,Config,Configure,257,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040
https://github.com/qupath/qupath/issues/363#issuecomment-534106040:91,Testability,log,login-,91,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040
https://github.com/qupath/qupath/issues/363#issuecomment-534106040:2614,Testability,log,log,2614,"qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > A problem occurred starting process 'command '/public/home/yangzhzh/tools/jdk-14/bin''. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 11s; 41 actionable tasks: 3 executed, 38 up-to-date. Any idea of why?; Thanks,; Zhenzhen",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040
https://github.com/qupath/qupath/issues/363#issuecomment-534115250:93,Availability,error,error,93,"Thanks for your quick reply. My bad, how could I forget to add jpackage. Yet I tried it, the error seems to be different:; ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin/jpackage. > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250
https://github.com/qupath/qupath/issues/363#issuecomment-534115250:2344,Availability,error,error,2344,"licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre; /public/home/yangzhzh/tools/jdk-14/bin/jpackage: symbol lookup error: /public/home/yangzhzh/tools/jdk-14/bin/jpackage: undefined symbol: JLI_InitArgProcessing. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > Process 'command '/public/home/yangzhzh/tools/jdk-14/bin/jpackage'' finished with non-zero exit value 127. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 8s; 41 actionable tasks: 5 executed, 36 up-to-date",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250
https://github.com/qupath/qupath/issues/363#issuecomment-534115250:2441,Availability,FAILURE,FAILURE,2441,"licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre; /public/home/yangzhzh/tools/jdk-14/bin/jpackage: symbol lookup error: /public/home/yangzhzh/tools/jdk-14/bin/jpackage: undefined symbol: JLI_InitArgProcessing. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > Process 'command '/public/home/yangzhzh/tools/jdk-14/bin/jpackage'' finished with non-zero exit value 127. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 8s; 41 actionable tasks: 5 executed, 36 up-to-date",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250
https://github.com/qupath/qupath/issues/363#issuecomment-534115250:358,Deployability,install,installed,358,"Thanks for your quick reply. My bad, how could I forget to add jpackage. Yet I tried it, the error seems to be different:; ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin/jpackage. > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250
https://github.com/qupath/qupath/issues/363#issuecomment-534115250:209,Modifiability,Config,Configure,209,"Thanks for your quick reply. My bad, how could I forget to add jpackage. Yet I tried it, the error seems to be different:; ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin/jpackage. > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250
https://github.com/qupath/qupath/issues/363#issuecomment-534115250:2763,Testability,log,log,2763,"licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist --main-jar qupath-0.2.0-m4.jar --name QuPath-0.2.0-m4 --java-options -XX:MaxRAMPercentage=50 --app-version 0.2.0-m4 --icon /public/home/yangzhzh/tools/qupath-master/build/resources/main/package/linux/QuPath.png --runtime-image /public/home/yangzhzh/tools/qupath-master/build/jre; /public/home/yangzhzh/tools/jdk-14/bin/jpackage: symbol lookup error: /public/home/yangzhzh/tools/jdk-14/bin/jpackage: undefined symbol: JLI_InitArgProcessing. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':createPackage'.; > Process 'command '/public/home/yangzhzh/tools/jdk-14/bin/jpackage'' finished with non-zero exit value 127. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. BUILD FAILED in 8s; 41 actionable tasks: 5 executed, 36 up-to-date",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250
https://github.com/qupath/qupath/issues/363#issuecomment-534118216:74,Availability,error,error,74,"I'm afraid `undefined symbol: JLI_InitArgProcessing` looks like some deep error independent of QuPath. I know that jpackage is also a work in progress. I've build QuPath successfully on Windows, Mac & Ubuntu but don't know how well it works anywhere else. The build script does sometimes need to be updated whenever jpackage is updated because the command line arguments it requires change. I'll close this issue as there doesn't seem to be a QuPath problem to solve - hope you find a solution that lets you do what you need to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534118216
https://github.com/qupath/qupath/issues/363#issuecomment-534118216:299,Deployability,update,updated,299,"I'm afraid `undefined symbol: JLI_InitArgProcessing` looks like some deep error independent of QuPath. I know that jpackage is also a work in progress. I've build QuPath successfully on Windows, Mac & Ubuntu but don't know how well it works anywhere else. The build script does sometimes need to be updated whenever jpackage is updated because the command line arguments it requires change. I'll close this issue as there doesn't seem to be a QuPath problem to solve - hope you find a solution that lets you do what you need to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534118216
https://github.com/qupath/qupath/issues/363#issuecomment-534118216:328,Deployability,update,updated,328,"I'm afraid `undefined symbol: JLI_InitArgProcessing` looks like some deep error independent of QuPath. I know that jpackage is also a work in progress. I've build QuPath successfully on Windows, Mac & Ubuntu but don't know how well it works anywhere else. The build script does sometimes need to be updated whenever jpackage is updated because the command line arguments it requires change. I'll close this issue as there doesn't seem to be a QuPath problem to solve - hope you find a solution that lets you do what you need to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534118216
https://github.com/qupath/qupath/issues/363#issuecomment-606369334:101,Availability,error,error,101,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334
https://github.com/qupath/qupath/issues/363#issuecomment-606369334:2229,Availability,FAILURE,FAILURE,2229,"on-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradlew createPackage -Ppackager=/full/path/to/jpackage; Current value of -Ppackager is /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/jdk-13/bin/jpackage; Note: You can also specify this in a gradle.properties file; -------. FAILURE: Build failed with an exception. * Where:; Build file '/Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/build.gradle' line: 622. * What went wrong:; Execution failed for task ':createPackage'.; > Please specify where I can find a suitable jpackage!. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.0/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 9s; 41 actionable tasks: 16 executed, 25 up-to-date. Looking forward fro your response ; Brijeshwar,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334
https://github.com/qupath/qupath/issues/363#issuecomment-606369334:20,Deployability,install,install,20,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334
https://github.com/qupath/qupath/issues/363#issuecomment-606369334:63,Deployability,install,installing,63,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334
https://github.com/qupath/qupath/issues/363#issuecomment-606369334:391,Deployability,install,installed,391,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334
https://github.com/qupath/qupath/issues/363#issuecomment-606369334:118,Modifiability,Config,Configure,118,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334
https://github.com/qupath/qupath/issues/363#issuecomment-606369334:2599,Testability,log,log,2599,"on-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradlew createPackage -Ppackager=/full/path/to/jpackage; Current value of -Ppackager is /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/jdk-13/bin/jpackage; Note: You can also specify this in a gradle.properties file; -------. FAILURE: Build failed with an exception. * Where:; Build file '/Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/build.gradle' line: 622. * What went wrong:; Execution failed for task ':createPackage'.; > Please specify where I can find a suitable jpackage!. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. * Get more help at https://help.gradle.org. Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.; Use '--warning-mode all' to show the individual deprecation warnings.; See https://docs.gradle.org/6.0/userguide/command_line_interface.html#sec:command_line_warnings. BUILD FAILED in 9s; 41 actionable tasks: 16 executed, 25 up-to-date. Looking forward fro your response ; Brijeshwar,",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334
https://github.com/qupath/qupath/issues/363#issuecomment-606409716:164,Deployability,release,release,164,"@brijeshwar2002 you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606409716
https://github.com/qupath/qupath/issues/364#issuecomment-534121388:91,Usability,learn,learning,91,"Got it, thanks for your reply! It's very helpful.; It looks like it has to do a supervised learning. Oh, I meant calculating tumor purity for H&E slides.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/364#issuecomment-534121388
https://github.com/qupath/qupath/issues/365#issuecomment-534219812:70,Energy Efficiency,Green,Green,70,"Attempting to swap image servers from BioFormats to ImageJ, or to use Green/Blue/Hue (or even just Green/Blue in an effort to circumvent the Normalized OD channel) were not successful as work arounds.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/365#issuecomment-534219812
https://github.com/qupath/qupath/issues/365#issuecomment-534219812:99,Energy Efficiency,Green,Green,99,"Attempting to swap image servers from BioFormats to ImageJ, or to use Green/Blue/Hue (or even just Green/Blue in an effort to circumvent the Normalized OD channel) were not successful as work arounds.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/365#issuecomment-534219812
https://github.com/qupath/qupath/issues/369#issuecomment-541389834:410,Availability,avail,available,410,"The issue looks to be the same as https://github.com/qupath/qupath/issues/336, in which case the switch to use OpenJFX 13 in the next release of QuPath will hopefully resolve it. If you want to try building it from the `dev-m5` branch (some guidance [here](https://petebankhead.github.io/qupath/2019/10/01/building-qupath.html)) please do let me know if it does work or not. Otherwise I hope v0.2.0-m5 will be available within the next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-541389834
https://github.com/qupath/qupath/issues/369#issuecomment-541389834:134,Deployability,release,release,134,"The issue looks to be the same as https://github.com/qupath/qupath/issues/336, in which case the switch to use OpenJFX 13 in the next release of QuPath will hopefully resolve it. If you want to try building it from the `dev-m5` branch (some guidance [here](https://petebankhead.github.io/qupath/2019/10/01/building-qupath.html)) please do let me know if it does work or not. Otherwise I hope v0.2.0-m5 will be available within the next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-541389834
https://github.com/qupath/qupath/issues/369#issuecomment-541389834:241,Usability,guid,guidance,241,"The issue looks to be the same as https://github.com/qupath/qupath/issues/336, in which case the switch to use OpenJFX 13 in the next release of QuPath will hopefully resolve it. If you want to try building it from the `dev-m5` branch (some guidance [here](https://petebankhead.github.io/qupath/2019/10/01/building-qupath.html)) please do let me know if it does work or not. Otherwise I hope v0.2.0-m5 will be available within the next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-541389834
https://github.com/qupath/qupath/issues/369#issuecomment-549051719:148,Deployability,release,releases,148,"I'll close this issue, would be good to continue any discussion at #336 ; I hope that it's resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) through the update in the JavaFX dependency, but I haven't got a way to test it myself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-549051719
https://github.com/qupath/qupath/issues/369#issuecomment-549051719:184,Deployability,update,update,184,"I'll close this issue, would be good to continue any discussion at #336 ; I hope that it's resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) through the update in the JavaFX dependency, but I haven't got a way to test it myself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-549051719
https://github.com/qupath/qupath/issues/369#issuecomment-549051719:205,Integrability,depend,dependency,205,"I'll close this issue, would be good to continue any discussion at #336 ; I hope that it's resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) through the update in the JavaFX dependency, but I haven't got a way to test it myself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-549051719
https://github.com/qupath/qupath/issues/369#issuecomment-549051719:244,Testability,test,test,244,"I'll close this issue, would be good to continue any discussion at #336 ; I hope that it's resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) through the update in the JavaFX dependency, but I haven't got a way to test it myself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-549051719
https://github.com/qupath/qupath/issues/372#issuecomment-549435406:126,Availability,error,error,126,"Hi Tobias,. Everything in the stack trace relates to JavaFX - so I don't see anywhere where QuPath would be able to catch the error and do anything about it. A similar error was reported as a JavaFX bug but is apparently resolved [here](https://bugs.openjdk.java.net/browse/JDK-8095826). I'll leave the issue open for a while in case any new info comes to light, but since I don't have a Dell Active Pen to test with, and it doesn't _seem_ to be a problem in QuPath itself, I'm not sure whether anything can be done about it on the QuPath side. (If you could write a minimal JavaFX application that replicates the problem then it could be submitted as a JavaFX bug)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549435406
https://github.com/qupath/qupath/issues/372#issuecomment-549435406:168,Availability,error,error,168,"Hi Tobias,. Everything in the stack trace relates to JavaFX - so I don't see anywhere where QuPath would be able to catch the error and do anything about it. A similar error was reported as a JavaFX bug but is apparently resolved [here](https://bugs.openjdk.java.net/browse/JDK-8095826). I'll leave the issue open for a while in case any new info comes to light, but since I don't have a Dell Active Pen to test with, and it doesn't _seem_ to be a problem in QuPath itself, I'm not sure whether anything can be done about it on the QuPath side. (If you could write a minimal JavaFX application that replicates the problem then it could be submitted as a JavaFX bug)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549435406
https://github.com/qupath/qupath/issues/372#issuecomment-549435406:407,Testability,test,test,407,"Hi Tobias,. Everything in the stack trace relates to JavaFX - so I don't see anywhere where QuPath would be able to catch the error and do anything about it. A similar error was reported as a JavaFX bug but is apparently resolved [here](https://bugs.openjdk.java.net/browse/JDK-8095826). I'll leave the issue open for a while in case any new info comes to light, but since I don't have a Dell Active Pen to test with, and it doesn't _seem_ to be a problem in QuPath itself, I'm not sure whether anything can be done about it on the QuPath side. (If you could write a minimal JavaFX application that replicates the problem then it could be submitted as a JavaFX bug)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549435406
https://github.com/qupath/qupath/issues/372#issuecomment-549459616:450,Deployability,release,releases,450,"Dear Pete,. Thanks a lot for the fast response!; You are right it seems related to that issue. As the problem only occurs after labeling for quite a while ; (and is resolved by a new start of QuPath); i thought QuPath might hand over to Java a variable on when to ""forget"" old points; or ""how many to store"". . If not, I just stick to the two workarounds described above.; I can not write Java, but I guess the problem might be solved in future Java releases. Thanks again & Kind regards. Tobias",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549459616
https://github.com/qupath/qupath/issues/372#issuecomment-549459616:244,Modifiability,variab,variable,244,"Dear Pete,. Thanks a lot for the fast response!; You are right it seems related to that issue. As the problem only occurs after labeling for quite a while ; (and is resolved by a new start of QuPath); i thought QuPath might hand over to Java a variable on when to ""forget"" old points; or ""how many to store"". . If not, I just stick to the two workarounds described above.; I can not write Java, but I guess the problem might be solved in future Java releases. Thanks again & Kind regards. Tobias",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549459616
https://github.com/qupath/qupath/issues/372#issuecomment-549576562:127,Availability,error,error,127,I think the 'points' it is referring to is completely separate from the points (vertices) that make up the shape - because the error seems to occur _before_ the input reaches QuPath. Although in saying that I'm not entirely sure what it _is_ referring to.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549576562
https://github.com/qupath/qupath/issues/373#issuecomment-549758228:279,Availability,error,error,279,"Hi Georgia,; Could you try using _Edit &rarr; Reset Preferences_?; If that resolves the issue then I think the QuPath isn't able to find some path to scripts. I'm not sure why (maybe a directory is missing or located on a server that isn't accessible?) and it shouldn't cause an error like this so I'll investigate anyway on the QuPath side.; If the doesn't resolve it then I'm not sure what the problem could be.... does it happen with all projects or just one?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/373#issuecomment-549758228
https://github.com/qupath/qupath/issues/373#issuecomment-549758228:240,Security,access,accessible,240,"Hi Georgia,; Could you try using _Edit &rarr; Reset Preferences_?; If that resolves the issue then I think the QuPath isn't able to find some path to scripts. I'm not sure why (maybe a directory is missing or located on a server that isn't accessible?) and it shouldn't cause an error like this so I'll investigate anyway on the QuPath side.; If the doesn't resolve it then I'm not sure what the problem could be.... does it happen with all projects or just one?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/373#issuecomment-549758228
https://github.com/qupath/qupath/issues/374#issuecomment-551070262:128,Modifiability,variab,variable,128,"If the images are being rescanned, can they be saved as .ndpi? Or what is the scanner being used?. As a format .tif can be very variable inside, and I'm afraid I can't really predict what may have gone wrong without a sample image. Different software can write .tif images in very different ways. However, there have been discussions here about Leica images (usually .scn) that appear pink, and this seems to be an issue with Bio-Formats, e.g. https://github.com/qupath/qupath/issues/141 and https://github.com/ome/bioformats/issues/2811. I think it is likely that the issue is related to this, and not actually a bug in QuPath itself. If it worked in v0.1.2 then perhaps QuPath was at that time using OpenSlide rather than Bio-Formats to open the image (or else an earlier version of Bio-Formats with different behavior). I suggest three possible options:; * Try to use a different file format, or write the .tif image in a different way; * Add the image to a project in v0.2.0-m5, and when doing so specify the 'server'. Try both Bio-Formats and OpenSlide to see if either works.; * If under the 'Image' tab in QuPath, you see the words 'Bio-Formats server' then you can report it to the Bio-Formats team",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/374#issuecomment-551070262
https://github.com/qupath/qupath/issues/374#issuecomment-551070262:175,Safety,predict,predict,175,"If the images are being rescanned, can they be saved as .ndpi? Or what is the scanner being used?. As a format .tif can be very variable inside, and I'm afraid I can't really predict what may have gone wrong without a sample image. Different software can write .tif images in very different ways. However, there have been discussions here about Leica images (usually .scn) that appear pink, and this seems to be an issue with Bio-Formats, e.g. https://github.com/qupath/qupath/issues/141 and https://github.com/ome/bioformats/issues/2811. I think it is likely that the issue is related to this, and not actually a bug in QuPath itself. If it worked in v0.1.2 then perhaps QuPath was at that time using OpenSlide rather than Bio-Formats to open the image (or else an earlier version of Bio-Formats with different behavior). I suggest three possible options:; * Try to use a different file format, or write the .tif image in a different way; * Add the image to a project in v0.2.0-m5, and when doing so specify the 'server'. Try both Bio-Formats and OpenSlide to see if either works.; * If under the 'Image' tab in QuPath, you see the words 'Bio-Formats server' then you can report it to the Bio-Formats team",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/374#issuecomment-551070262
https://github.com/qupath/qupath/issues/376#issuecomment-554792060:135,Availability,down,download,135,"The milestone versions aren't really intended to be completely inter-compatible. See the very beginning of the linked blog post on the download site:; https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html; ""Warning! It’s generally not a good idea to switch between different QuPath versions. You should be able to read older data files within v0.2.0-m6, but the reverse might not be true. Backup often!"". I would recommend creating a new project and importing any scripts or classifiers you might have had into the new project, rather than trying to resuse it. Especially if you are using images without any objects. That mostly consists of copying the folders named things like ""classifiers"" and ""scripts"" into the new project folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554792060
https://github.com/qupath/qupath/issues/376#issuecomment-554797379:15,Availability,error,error,15,"Hi @ozen . The error message sounds like it is connected to drawing shapes, but to further diagnose the problem I would need the original .qpdata files - or at least the full error trace (usually under _View &rarr; Show log_). However as @Svidro says, the milestones aren't/can't be fully inter-compatible, and there can be no guarantee that an m5 project will work in m6 (although any that I've tried myself have worked ok). I've written about some of the major changes in v0.2.0-m6 [here](https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html). I don't know why these would give an error in your case, but really I'm not able to do anything about it without further information and the ability to reproduce the problem myself. Can you reproduce the issue using a project created entirely in m6, and describe the steps required?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554797379
https://github.com/qupath/qupath/issues/376#issuecomment-554797379:175,Availability,error,error,175,"Hi @ozen . The error message sounds like it is connected to drawing shapes, but to further diagnose the problem I would need the original .qpdata files - or at least the full error trace (usually under _View &rarr; Show log_). However as @Svidro says, the milestones aren't/can't be fully inter-compatible, and there can be no guarantee that an m5 project will work in m6 (although any that I've tried myself have worked ok). I've written about some of the major changes in v0.2.0-m6 [here](https://petebankhead.github.io/qupath/2019/11/17/sixth-milestone.html). I don't know why these would give an error in your case, but really I'm not able to do anything about it without further information and the ability to reproduce the problem myself. Can you reproduce the issue using a project created entirely in m6, and describe the steps required?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554797379
