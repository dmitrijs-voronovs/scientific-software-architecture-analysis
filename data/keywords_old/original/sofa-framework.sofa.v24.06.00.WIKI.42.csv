id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html:302,Modifiability,inherit,inherited,302,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Quad > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Quad >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Quad >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_quad_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Tetrahedron >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_tetrahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyChangeElementInfo< Topology::Triangle > Member List . This is the complete list of members for sofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >, including all inherited members. AncestorElem typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EAdded typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EIndicesSwap typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EMoved_Adding typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; EMoved_Removing typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; ERemoved typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; ERenumbering typedefsofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED_ADDING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >; USE_EMOVED_REMOVING enum valuesofa::core::topology::TopologyChangeElementInfo< Topology::Triangle >. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_change_element_info_3_01_topology_1_1_triangle_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::topology::TopologyElemID Member List . This is the complete list of members for sofa::core::topology::TopologyElemID, including all inherited members. indexsofa::core::topology::TopologyElemID; TopologyElemID()sofa::core::topology::TopologyElemIDinline; TopologyElemID(geometry::ElementType _type, Topology::ElemID _index)sofa::core::topology::TopologyElemIDinline; typesofa::core::topology::TopologyElemID. Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1topology_1_1_topology_elem_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html:228,Modifiability,inherit,inherited,228,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::tristate Member List . This is the complete list of members for sofa::core::visual::tristate, including all inherited members. difference_tristate(const tristate &previous, const tristate &current)sofa::core::visual::tristatefriend; false_value enum valuesofa::core::visual::tristate; fusion_tristate(const tristate &lhs, const tristate &rhs)sofa::core::visual::tristatefriend; merge_tristate(const tristate &previous, const tristate &current)sofa::core::visual::tristatefriend; neutral_value enum valuesofa::core::visual::tristate; operator bool() constsofa::core::visual::tristateinline; operator!=(const tristate &t) constsofa::core::visual::tristateinline; operator!=(const state_t &s) constsofa::core::visual::tristateinline; operator==(const tristate &t) constsofa::core::visual::tristateinline; operator==(const state_t &s) constsofa::core::visual::tristateinline; statesofa::core::visual::tristate; state_t enum namesofa::core::visual::tristate; tristate(bool b)sofa::core::visual::tristateinline; tristate()sofa::core::visual::tristateinline; tristate(state_t state)sofa::core::visual::tristateinline; true_value enum valuesofa::core::visual::tristate. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1tristate-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::FlagTreeItem::ci_comparison Member List . This is the complete list of members for sofa::core::visual::FlagTreeItem::ci_comparison, including all inherited members. operator()(const std::string &s1, const std::string &s2) constsofa::core::visual::FlagTreeItem::ci_comparisoninline. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::visual::FlagTreeItem::ci_comparison::nocase_compare Member List . This is the complete list of members for sofa::core::visual::FlagTreeItem::ci_comparison::nocase_compare, including all inherited members. operator()(const unsigned char &c1, const unsigned char &c2) constsofa::core::visual::FlagTreeItem::ci_comparison::nocase_compareinline. Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1visual_1_1_flag_tree_item_1_1ci__comparison_1_1nocase__compare-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Member List . This is the complete list of members for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >, including all inherited members. AccumulationVecId(const State< TDataTypes > &state)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >inlineexplicit; AccumulationVecId()=deletesofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; addToContributingVecIds(core::ConstVecDerivId vecDerivId)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; DataTypes typedefsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Deriv typedefsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; operator[](Size i) constsofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; removeFromContributingVecIds(core::ConstVecDerivId vecDerivId)sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:680,Integrability,interface,interface,680,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1811,Integrability,interface,interface,1811,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:359,Security,access,accessing,359,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:694,Security,access,accessing,694,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:844,Security,access,accessing,844,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1490,Security,access,accessing,1490,"her containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1825,Security,access,accessing,1825,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1975,Security,access,accessing,1975,"dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationVecId() [1/2]. template<class TDataTypes , VecType vtype, VecAccess vaccess> . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >::AccumulationVecId ; (; const State< TDataTypes > & ; state). inlineexplicit . ◆ ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:669,Usability,simpl,simplified,669,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1800,Usability,simpl,simplified,1800,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DataTracker Member List . This is the complete list of members for sofa::core::DataTracker, including all inherited members. clean(const objectmodel::BaseData &data)sofa::core::DataTracker; clean()sofa::core::DataTracker; DataTrackers typedefsofa::core::DataTrackerprotected; getMapTrackedData()sofa::core::DataTrackerinline; hasChanged(const objectmodel::BaseData &data) constsofa::core::DataTracker; hasChanged() constsofa::core::DataTracker; m_dataTrackerssofa::core::DataTrackerprotected; trackData(const objectmodel::BaseData &data)sofa::core::DataTracker. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html:2336,Security,access,access,2336,"whether or not the data is up-to-date with its parent values while DataTracker::hasChanged(myData) checks whether the data has been modified since it has last been checked . Protected Attributes; DataTrackers m_dataTrackers;  . Public Member Functions; void trackData (const objectmodel::BaseData &data);  ; bool hasChanged (const objectmodel::BaseData &data) const;  ; bool hasChanged () const;  Did one of the tracked data change since the last call to clean()? More...;  ; void clean (const objectmodel::BaseData &data);  ; void clean ();  comparison point is cleaned for all tracked Data More...;  ; const std::map< const objectmodel::BaseData *, int > & getMapTrackedData ();  Provide the map of tracked Data. More...;  . Attribute details. ◆ m_dataTrackers. DataTrackers sofa::core::DataTracker::m_dataTrackers. protected . Function details. ◆ clean() [1/2]. void sofa::core::DataTracker::clean ; (; ). comparison point is cleaned for all tracked Data . ◆ clean() [2/2]. void sofa::core::DataTracker::clean ; (; const objectmodel::BaseData & ; data). comparison point is cleaned for the specified tracked Data Warningdata must be a tracked Data ; See alsotrackData . ◆ getMapTrackedData(). const std::map<const objectmodel::BaseData*,int>& sofa::core::DataTracker::getMapTrackedData ; (; ). inline . Provide the map of tracked Data. . ◆ hasChanged() [1/2]. bool sofa::core::DataTracker::hasChanged ; (; ); const. Did one of the tracked data change since the last call to clean()? . ◆ hasChanged() [2/2]. bool sofa::core::DataTracker::hasChanged ; (; const objectmodel::BaseData & ; data); const. Did the data change since its last access? Warningdata must be a tracked Data ; See alsotrackData . ◆ trackData(). void sofa::core::DataTracker::trackData ; (; const objectmodel::BaseData & ; data). select a Data to track to be able to check if it was dirtied since the previous clean. See alsoisTrackedDataDirty . sofacoreDataTracker; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_data_tracker.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html:262,Modifiability,inherit,inherited,262,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DerivativeMatrix< c >::Derivative Member List . This is the complete list of members for sofa::core::DerivativeMatrix< c >::Derivative, including all inherited members. checkValidity(const objectmodel::BaseObject *object) constsofa::core::DerivativeMatrix< c >::Derivativeinline; Derivative(BaseState *_mstate1, BaseState *_mstate2, DerivativeMatrix *_mat)sofa::core::DerivativeMatrix< c >::Derivativeinline; isValid() constsofa::core::DerivativeMatrix< c >::Derivativeinline; operator bool() constsofa::core::DerivativeMatrix< c >::Derivativeinline; operator()(sofa::SignedIndex row, sofa::SignedIndex col) constsofa::core::DerivativeMatrix< c >::Derivativeinline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::DerivativeMatrix< c >::DerivativeElement Member List . This is the complete list of members for sofa::core::DerivativeMatrix< c >::DerivativeElement, including all inherited members. DerivativeElement(sofa::SignedIndex _row, sofa::SignedIndex _col, MatrixAccumulator *_mat)sofa::core::DerivativeMatrix< c >::DerivativeElementinline; isValid() constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator bool() constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const float value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const double value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< L, C, real > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 1, 1, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 1, 1, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 2, 2, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 2, 2, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 3, 3, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 3, 3, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 6, 6, float > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline; operator+=(const sofa::type::Mat< 6, 6, double > &value) constsofa::core::DerivativeMatrix< c >::DerivativeElementinline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_derivative_matrix_1_1_derivative_element-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::GeometricStiffnessMatrix::DJ Member List . This is the complete list of members for sofa::core::GeometricStiffnessMatrix::DJ, including all inherited members. DJ(BaseState *_mstate1, GeometricStiffnessMatrix *_mat)sofa::core::GeometricStiffnessMatrix::DJinline; withRespectToPositionsIn(BaseState *mstate2) constsofa::core::GeometricStiffnessMatrix::DJinline. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_geometric_stiffness_matrix_1_1_d_j-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html:230,Modifiability,inherit,inherited,230,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectFactoryJson Member List . This is the complete list of members for sofa::core::ObjectFactoryJson, including all inherited members. dump(ObjectFactory *factory)sofa::core::ObjectFactoryJsonstatic. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_factory_json-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ObjectRegistrationEntry Member List . This is the complete list of members for sofa::core::ObjectRegistrationEntry, including all inherited members. funcsofa::core::ObjectRegistrationEntry; FuncPtr typedefsofa::core::ObjectRegistrationEntry; ObjectRegistrationEntry()sofa::core::ObjectRegistrationEntryinline; operator()(sofa::core::ObjectFactory *data)sofa::core::ObjectRegistrationEntryinline; symbolsofa::core::ObjectRegistrationEntryinlinestatic. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_object_registration_entry-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type.html:434,Modifiability,variab,variables,434,"﻿. SOFA API: sofa::core::StateType< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateType< DataTypes, vtype >; Maps a VecType to a DataTypes member typedef representing the state variables Example: StateType_t<DataTypes, core::V_COORD> returns the type DataTypes::Coord . sofacoreStateType; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateType< DataTypes, core::V_COORD >, including all inherited members. type typedefsofa::core::StateType< DataTypes, core::V_COORD >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateType< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateType< DataTypes, core::V_DERIV >, including all inherited members. type typedefsofa::core::StateType< DataTypes, core::V_DERIV >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html:422,Modifiability,variab,variable,422,"﻿. SOFA API: sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateTypeSize< DataTypes, vtype >; Maps a VecType to a DataTypes member static variable representing the size of the state variables Example: StateTypeSize_v<DataTypes, core::V_COORD> is the value of DataTypes::coord_total_size . sofacoreStateTypeSize; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html:466,Modifiability,variab,variables,466,"﻿. SOFA API: sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateTypeSize< DataTypes, vtype >; Maps a VecType to a DataTypes member static variable representing the size of the state variables Example: StateTypeSize_v<DataTypes, core::V_COORD> is the value of DataTypes::coord_total_size . sofacoreStateTypeSize; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateTypeSize< DataTypes, core::V_COORD >, including all inherited members. total_sizesofa::core::StateTypeSize< DataTypes, core::V_COORD >static. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateTypeSize< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateTypeSize< DataTypes, core::V_DERIV >, including all inherited members. total_sizesofa::core::StateTypeSize< DataTypes, core::V_DERIV >static. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_type_size_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html:274,Security,access,access,274,"﻿. SOFA API: sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference . Helper class to access vectors of a given type in a given State. ; More...; Detailed Description; template<class DataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::StateVecAccessor< DataTypes, vtype, vaccess >; Helper class to access vectors of a given type in a given State. . sofacoreStateVecAccessor; Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html:499,Security,access,access,499,"﻿. SOFA API: sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, vtype, vaccess > Struct Template Reference . Helper class to access vectors of a given type in a given State. ; More...; Detailed Description; template<class DataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::StateVecAccessor< DataTypes, vtype, vaccess >; Helper class to access vectors of a given type in a given State. . sofacoreStateVecAccessor; Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >protected; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_ALL, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html:286,Modifiability,inherit,inherited,286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >protected; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_ALL, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___a_l_l_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_COORD, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_COORD, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___c_o_o_r_d_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_DERIV, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline; statesofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >protected; StateVecAccessor(const State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_READ >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___r_e_a_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html:296,Modifiability,inherit,inherited,296,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE > Member List . This is the complete list of members for sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >, including all inherited members. idsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >protected; MyDataVec typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >; MyVecId typedefsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >; operator MyVecId() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; read() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; statesofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >protected; StateVecAccessor(State< DataTypes > *state, const MyVecId &id)sofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline; write() constsofa::core::StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >inline. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_accessor_3_01_data_types_00_01_v___m_a_t_d_e_r_i_v_00_01_v___w_r_i_t_e_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html:451,Modifiability,variab,variables,451,"﻿. SOFA API: sofa::core::StateVecType< DataTypes, vtype > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, vtype > Struct Template Reference . #include <VecId.h>; Detailed Description; template<class DataTypes, core::VecType vtype>; struct sofa::core::StateVecType< DataTypes, vtype >; Maps a VecType to a DataTypes member typedef representing a vector of state variables Example: StateVecType_t<DataTypes, core::V_COORD> returns the type DataTypes::VecCoord . sofacoreStateVecType; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, core::V_COORD > Member List . This is the complete list of members for sofa::core::StateVecType< DataTypes, core::V_COORD >, including all inherited members. type typedefsofa::core::StateVecType< DataTypes, core::V_COORD >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___c_o_o_r_d_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::StateVecType< DataTypes, core::V_DERIV > Member List . This is the complete list of members for sofa::core::StateVecType< DataTypes, core::V_DERIV >, including all inherited members. type typedefsofa::core::StateVecType< DataTypes, core::V_DERIV >. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_state_vec_type_3_01_data_types_00_01core_1_1_v___d_e_r_i_v_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::VecIdProperties Member List . This is the complete list of members for sofa::core::VecIdProperties, including all inherited members. groupsofa::core::VecIdProperties; labelsofa::core::VecIdProperties. Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_vec_id_properties-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::BoolTypeInfo Member List . This is the complete list of members for sofa::defaulttype::BoolTypeInfo, including all inherited members. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; size()sofa::defaulttype::BoolTypeInfoinlinestatic; size(const DataType &)sofa::defaulttype::BoolTypeInfoinlinestatic; Size enum valuesofa::defaulttype::BoolTypeInfo; Text enum valueso",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bool_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html:248,Modifiability,inherit,inherited,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::BoundingBoxTypeInfo Member List . This is the complete list of members for sofa::defaulttype::BoundingBoxTypeInfo, including all inherited members. BaseType typedefsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoundingBoxTypeInfo; Size enum valuesofa::defaulttype::BoundingBoxTypeInfo; size()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; size(const DataType &)sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_bounding_box_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; byteSize()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::DefaultDataTypeInfo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html:2501,Modifiability,inherit,inherited,2501,"getValue(data, i, value);; // [...] Do something with 'value'; }; }; sofa::helper::dimSReal SReal SReal SReal int SReal int dimDefinition: LCPcalc.h:100; sofa::defaulttype::DefaultDataTypeInfo::DataTypeTDataType DataTypeTemplate parameter.Definition: DataTypeInfo.h:77; sofa::defaulttype::DefaultDataTypeInfo::ValueTypeDataType ValueTypeType of the final atomic values (i.e. the values indexed by getValue()).Definition: DataTypeInfo.h:82; sofa::defaulttype::DefaultDataTypeInfo::sizestatic sofa::Size size()Definition: DataTypeInfo.h:104; sofa::defaulttype::DefaultDataTypeInfo::getValuestatic void getValue(const DataType &, Index, T &)Definition: DataTypeInfo.h:110; Note about size and indices; The getValue() and setValue() methods take an index as a parameter, with the following conventions:. If a type is not a container, then the index must be 0.; Multi-dimensional containers are abstracted to a single dimension. This allows iterating over any container using a single index, at the price of some limitations. See alsoAbstractTypeInfo provides similar mechanisms to manipulate Data objects generically in non-template code. . Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::DefaultDataTypeInfo< TDataType >; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; template<typename T > ; static void getValue (const DataType &, Index, T &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void setValue (DataType &, Index, const T &);  ; static void getValueString (const DataType &, Index, std::string &);  ; static void setValueString (DataType &, Index, const std::string &);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . sofadefaulttypeDataTypeInfo; Generated on Mon Nov 11 2024 03:17:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< bool > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< bool >, including all inherited members. BaseType typedefsofa::defaulttype::BoolTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoolTypeInfo; byteSize()sofa::defaulttype::BoolTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoolTypeInfo; ConvType typedefsofa::defaulttype::BoolTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoolTypeInfo; DataType typedefsofa::defaulttype::BoolTypeInfo; FixedSize enum valuesofa::defaulttype::BoolTypeInfo; GetTypeName()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValuePtr(DataType &data)sofa::defaulttype::BoolTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoolTypeInfo; name()sofa::defaulttype::DataTypeInfo< bool >inlinestatic; Scalar enum valuesofa::defaulttype::BoolTypeInfo; setSize(DataType &, sofa::Size)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValue(std::vector< DataType >::reference data, sofa::Size index, const T &v)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; setValueString(std::vector< DataType >::reference data, sofa::Size index, const std::string &value)sofa::defaulttype::BoolTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoolTypeInfo; SimpleLayout enum valuesofa::defaulttype::BoolTypeInfo; Size enum valuesofa::defaulttype::BoolType",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html:509,Modifiability,inherit,inherited,509,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< bool > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< bool > Struct Reference . #include <TypeInfo_Bool.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< bool >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoolTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; template<typename T > ; static void setValue (std::vector< DataType >::reference data, sofa::Size index, const T &v);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static void setValueString (std::vector< DataType >::reference data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< bool >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< bool >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01bool_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< char > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< char >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< char >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< char >; byteSize()sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< char >; GetTypeName()sofa::defaulttype::DataTypeInfo< char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< char >; name()sofa::defaulttype::DataTypeInfo< char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< char >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< char >; Size enum valuesofa::defaulttype::IntegerTypeInfo< char >; size()sofa::defaulttype::IntegerTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html:512,Modifiability,inherit,inherited,512,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01char_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< double > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< double >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< double >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< double >; byteSize()sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< double >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< double >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< double >; DataType typedefsofa::defaulttype::ScalarTypeInfo< double >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< double >; GetTypeName()sofa::defaulttype::DataTypeInfo< double >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< double >; name()sofa::defaulttype::DataTypeInfo< double >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< double >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< double >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< double >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< double >; Size enum valuesofa::defaulttype::ScalarTypeInfo< double >; size()sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html:517,Modifiability,inherit,inherited,517,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< double > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< double > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< double >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< double >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< double >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< double >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< double >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01double_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< float > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< float >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< float >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< float >; byteSize()sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< float >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< float >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< float >; DataType typedefsofa::defaulttype::ScalarTypeInfo< float >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< float >; GetTypeName()sofa::defaulttype::DataTypeInfo< float >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< float >; name()sofa::defaulttype::DataTypeInfo< float >inlinestatic; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< float >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< float >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< float >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< float >; Size enum valuesofa::defaulttype::ScalarTypeInfo< float >; size()sofa::defaulttype::ScalarTypeInf",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html:514,Modifiability,inherit,inherited,514,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< float > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< float > Struct Reference . #include <TypeInfo_Scalar.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< float >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::ScalarTypeInfo< float >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< float >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< float >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< float >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01float_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html:248,Modifiability,inherit,inherited,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< int > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< int >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< int >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< int >; byteSize()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< int >; GetTypeName()sofa::defaulttype::DataTypeInfo< int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< int >; name()sofa::defaulttype::DataTypeInfo< int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< int >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< int >; Size enum valuesofa::defaulttype::IntegerTypeInfo< int >; size()sofa::defaulttype::IntegerTypeInfo< int >inlinestatic; size(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html:509,Modifiability,inherit,inherited,509,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< int >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01int_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< long long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< long long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< long long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long long >; byteSize()sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long long >; name()sofa::defaulttype::DataTypeInfo< long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo<",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html:527,Modifiability,inherit,inherited,527,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< long >; byteSize()sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< long >; GetTypeName()sofa::defaulttype::DataTypeInfo< long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< long >; name()sofa::defaulttype::DataTypeInfo< long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< long >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< long >; Size enum valuesofa::defaulttype::IntegerTypeInfo< long >; size()sofa::defaulttype::IntegerTypeInfo< ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html:512,Modifiability,inherit,inherited,512,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< short > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< short >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< short >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< short >; byteSize()sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< short >; GetTypeName()sofa::defaulttype::DataTypeInfo< short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< short >; name()sofa::defaulttype::DataTypeInfo< short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< short >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< short >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< short >; Size enum valuesofa::defaulttype::IntegerTypeInfo< short >; size()sofa::defaul",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html:515,Modifiability,inherit,inherited,515,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01short_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; byteSize()sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; ConvType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; DataType typedefsofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >inlinestatic; setValueString(DataType &data",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html:522,Modifiability,inherit,inherited,522,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag > Struct Reference . #include <Tag.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< sofa::core::objectmodel::Tag >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::Tag >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::Tag >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; byteSize()sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; DataType typedefsofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; name()sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html:534,Modifiability,inherit,inherited,534,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet > Struct Reference . #include <TagSet.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >:. [legend]. Static Public Member Functions; static const char * name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< sofa::core::objectmodel::TagSet >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ name(). static const char* sofa::defaulttype::DataTypeInfo< sofa::core::objectmodel::TagSet >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::core::objectmodel::TagSet >; Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1core_1_1objectmodel_1_1_tag_set_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html:629,Modifiability,inherit,inherited,629,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidCoord< N, real >, sofa::defaulttype::RigidCoord< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidCoord< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::de",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html:629,Modifiability,inherit,inherited,629,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::defaulttype::RigidDeriv< N, real >, sofa::defaulttype::RigidDeriv< N, real >::total_size >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidDeriv< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_deriv_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html:320,Modifiability,inherit,inherited,320,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; byteSize()sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(const RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValuePtr(RigidMass< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >inlinestatic; setValueString(Data",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html:626,Modifiability,inherit,inherited,626,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< RigidMass< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const RigidMass< N, real > &data);  ; static void * getValuePtr (RigidMass< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::RigidMass< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::RigidMass< N, real > >; Generated on Mon Nov 11 2024 03:18:49 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html:328,Modifiability,inherit,inherited,328,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; byteSize()sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValuePtr(const sofa::defaulttype::StdRigidTypes< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValuePtr(sofa::defaulttype::StdRigidTypes< N, real > &data)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html:638,Modifiability,inherit,inherited,638,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference . #include <TypeInfo_RigidTypes.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IncompleteTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static void getValue (const DataType &, sofa::Size, T &);  ; static bool setSize (DataType &, sofa::Size);  ; static void setValue (DataType &, sofa::Size, const T &);  ; static void getValueString (const DataType &, sofa::Size, std::string &);  ; static const void * getValuePtr (const sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void * getValuePtr (sofa::defaulttype::StdRigidTypes< N, real > &data);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const std::string name ();  ; static const std::string GetTypeName ();  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::defaulttype::StdRigidTypes< N, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1defaulttype_1_1_std_rigid_types_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >inlinestatic",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html:511,Modifiability,inherit,inherited,511,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Edge > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Edge >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Edge >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Edge >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_edge_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >inlinestatic; setValueString(DataType &data, sofa::Si",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html:529,Modifiability,inherit,inherited,529,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Hexahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Hexahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Hexahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_hexahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html:296,Modifiability,inherit,inherited,296,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >inlinestatic; setValueString(DataTy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html:532,Modifiability,inherit,inherited,532,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pentahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pentahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pentahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pentahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html:520,Modifiability,inherit,inherited,520,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Pyramid >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Pyramid >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Pyramid >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_pyramid_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; setSize(DataType &data, sofa::Size size)sofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html:511,Modifiability,inherit,inherited,511,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Quad > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Element< sofa::geometry::Quad > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Quad >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Quad >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_quad_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html:296,Modifiability,inherit,inherited,296,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >inlinestatic; setValueString(DataTy",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html:532,Modifiability,inherit,inherited,532,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Tetrahedron >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Tetrahedron >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:18:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_tetrahedron_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; name()sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html:523,Modifiability,inherit,inherited,523,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle > Struct Reference . #include <TypeInfo_Topology.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >:. [legend]. Static Public Member Functions; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::topology::Triangle >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< sofa::topology::Triangle >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::topology::Triangle >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1topology_1_1_triangle_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html:304,Modifiability,inherit,inherited,304,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >inlinestatic; ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html:602,Modifiability,inherit,inherited,602,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > > Struct Template Reference . #include <TypeInfo_FixedArray.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::fixed_array< T, N > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , sofa::Size N> . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::fixed_array< T, N > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::fixed_array< T, N > >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html:308,Modifiability,inherit,inherited,308,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(const sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValuePtr(sofa::type::vector< bool, Alloc > &)sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, A",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html:683,Modifiability,inherit,inherited,683,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >:. [legend]. Static Public Member Functions; static const void * getValuePtr (const sofa::type::vector< bool, Alloc > &);  ; static void * getValuePtr (sofa::type::vector< bool, Alloc > &);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< bool, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValuePtr() [1/2]. template<class Alloc > . static const void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; const sofa::type::vector< bool, Alloc > & ; ). inlinestatic . ◆ getValuePtr() [2/2]. template<class Alloc > . static void* sofa::defaulttype::DataTypeInfo< sofa::type::vector< bool, Alloc > >::getValuePtr ; (; sofa::type::vector< bool, Alloc > & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class Alloc > . anonymous enum. EnumeratorSimpleLayout . sofadefaultt",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01bool_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html:322,Modifiability,inherit,inherited,322,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; getValueString(const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value)sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; VectorTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< so",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html:1008,Modifiability,inherit,inherited,1008,". Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size size (const sofa::type::vector< std::string, Alloc > &data);  ; static bool setSize (sofa::type::vector< std::string, Alloc > &data, sofa::Size size);  ; static void setValueString (sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value);  ; static void getValueString (const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValueString(). template<class Alloc > . static void sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString ; (; const sofa::type::vector< std::string, Alloc > & ; data, . sofa::Index ; index, . std::string & ; value . ). inlinestatic . ◆ setSize(). template<class Alloc > . static bool sofa::d",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html:302,Modifiability,inherit,inherited,302,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; byteSize()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; DataType typedefsofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; GetTypeName()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; name()sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaul",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html:490,Modifiability,inherit,inherited,490,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< T, Alloc > >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< T, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . sofadefaulttypeDataTypeInfo< sofa::type::vector< T, Alloc > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01_t_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >inlinestatic; setValue(DataType &data, sofa::Size ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html:589,Modifiability,inherit,inherited,589,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > > Struct Template Reference . #include <TypeInfo_Mat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Mat< L, C, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size L, sofa::Size C, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Mat< L, C, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Mat< L, C, real > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html:284,Modifiability,inherit,inherited,284,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >inlinestatic; setValueString(DataType &data, sofa::Size inde",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html:566,Modifiability,inherit,inherited,566,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > > Struct Template Reference . #include <TypeInfo_Quat.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Quat< T > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Quat< T > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Quat< T > >; Generated on Mon Nov 11 2024 03:18:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_quat_3_01_t_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTyp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html:580,Modifiability,inherit,inherited,580,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >:. [legend]. Static Public Member Functions; static std::string GetTypeName ();  ; static std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::Vec< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::Vec< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::Vec< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; GetTypeName()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; name()sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >inlinestatic; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html:598,Modifiability,inherit,inherited,598,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > > Struct Template Reference . #include <TypeInfo_Vec.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::FixedArrayTypeInfo< sofa::type::VecNoInit< N, real > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<sofa::Size N, typename real > . static std::string sofa::defaulttype::DataTypeInfo< sofa::type::VecNoInit< N, real > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< sofa::type::VecNoInit< N, real > >; Generated on Mon Nov 11 2024 03:18:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1_vec_no_init_3_01_n_00_01real_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; byteSize()sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; DataType typedefsofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; name()sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; Scalar enum valuesofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >inlinestatic; setValueString(Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html:589,Modifiability,inherit,inherited,589,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > > Struct Template Reference . #include <TypeInfo_Set.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::SetTypeInfo< std::set< T, Compare, Alloc > >; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::GetTypeName ; (; ). inlinestatic . ◆ name(). template<class T , class Compare , class Alloc > . static std::string sofa::defaulttype::DataTypeInfo< std::set< T, Compare, Alloc > >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::set< T, Compare, Alloc > >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1set_3_01_t_00_01_compare_00_01_alloc_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< std::string > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< std::string >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< std::string >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< std::string >; byteSize()sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< std::string >; ConvType typedefsofa::defaulttype::TextTypeInfo< std::string >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< std::string >; DataType typedefsofa::defaulttype::TextTypeInfo< std::string >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< std::string >; GetTypeName()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; getValuePtr(const std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValuePtr(std::string &data)sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< std::string >; name()sofa::defaulttype::DataTypeInfo< std::string >inlinestatic; Scalar enum valuesofa::defaulttype::TextTypeInfo< std::string >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< std::string >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< std::string >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< std::s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html:642,Modifiability,inherit,inherited,642,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< std::string > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< std::string > Struct Reference . #include <TypeInfo_Text.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< std::string >:. [legend]. Static Public Member Functions; static const std::string name ();  ; static const std::string GetTypeName ();  ; static const void * getValuePtr (const std::string &data);  ; static void * getValuePtr (std::string &data);  ;  Static Public Member Functions inherited from sofa::defaulttype::TextTypeInfo< std::string >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &);  ; static void * getValuePtr (DataType &);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::GetTypeName ; (; ). inlinestatic . ◆ getValuePtr() [1/2]. static const void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; const std::string & ; data). inlinestatic . ◆ getValuePtr() [2/2]. static void* sofa::defaulttype::DataTypeInfo< std::string >::getValuePtr ; (; std::string & ; data). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< std::string >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< std::string >; Generated on Mon Nov 11 2024 03:18:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01std_1_1string_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< type::BoundingBox > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< type::BoundingBox >, including all inherited members. BaseType typedefsofa::defaulttype::BoundingBoxTypeInfo; BaseTypeInfo typedefsofa::defaulttype::BoundingBoxTypeInfo; byteSize()sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Container enum valuesofa::defaulttype::BoundingBoxTypeInfo; CopyOnWrite enum valuesofa::defaulttype::BoundingBoxTypeInfo; DataType typedefsofa::defaulttype::BoundingBoxTypeInfo; FixedSize enum valuesofa::defaulttype::BoundingBoxTypeInfo; getScalarValue(const void *data, sofa::Size index)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; GetTypeName()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(const DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValuePtr(DataType &bbox)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; Integer enum valuesofa::defaulttype::BoundingBoxTypeInfo; name()sofa::defaulttype::DataTypeInfo< type::BoundingBox >inlinestatic; Scalar enum valuesofa::defaulttype::BoundingBoxTypeInfo; setScalarValue(const void *data, sofa::Size index, SReal value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setSize(DataType &, sofa::Size)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::BoundingBoxTypeInfoinlinestatic; SimpleCopy enum valuesofa::defaulttype::BoundingBoxTypeInfo; SimpleLayout enum valuesofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html:543,Modifiability,inherit,inherited,543,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< type::BoundingBox > Struct Reference . #include <TypeInfo_BoundingBox.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< type::BoundingBox >:. [legend]. Static Public Member Functions; static std::string name ();  ; static std::string GetTypeName ();  ;  Static Public Member Functions inherited from sofa::defaulttype::BoundingBoxTypeInfo; static sofa::Size size ();  ; static sofa::Size byteSize ();  ; static sofa::Size size (const DataType &);  ; static bool setSize (DataType &, sofa::Size);  ; template<typename T > ; static void getValue (const DataType &data, sofa::Size index, T &value);  since TypeInfos abstract all containers as 1D arrays, T here is of ValueType More...;  ; template<typename T > ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static double getScalarValue (const void *data, sofa::Size index);  ; static void setScalarValue (const void *data, sofa::Size index, SReal value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &bbox);  ; static void * getValuePtr (DataType &bbox);  . Function details. ◆ GetTypeName(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::GetTypeName ; (; ). inlinestatic . ◆ name(). static std::string sofa::defaulttype::DataTypeInfo< type::BoundingBox >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< type::BoundingBox >; Generated on Mon Nov 11 2024 03:18:45 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01type_1_1_bounding_box_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned char > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned char >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned char >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; name()sofa::defaulttype::DataTypeInfo< unsigned char >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned char >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned char >inlinestatic; SimpleCopy enum valuesofa::defaulttype::Inte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html:539,Modifiability,inherit,inherited,539,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned char > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned char >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned char >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned char >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned char >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01char_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned int > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned int >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned int >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; name()sofa::defaulttype::DataTypeInfo< unsigned int >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned int >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned int >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< unsigned",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html:536,Modifiability,inherit,inherited,536,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned int > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned int >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned int >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned int >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned int >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01int_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned long long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned long long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; name()sofa::defaulttype::DataTypeInfo< unsigned long long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::def",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html:554,Modifiability,inherit,inherited,554,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned long > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned long >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned long >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; name()sofa::defaulttype::DataTypeInfo< unsigned long >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned long >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned long >inlinestatic; SimpleCopy enum valuesofa::defaulttype::Inte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html:539,Modifiability,inherit,inherited,539,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned long > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned long >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned long >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned long >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned long >; Generated on Mon Nov 11 2024 03:18:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01long_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DataTypeInfo< unsigned short > Member List . This is the complete list of members for sofa::defaulttype::DataTypeInfo< unsigned short >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; byteSize()sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; DataType typedefsofa::defaulttype::IntegerTypeInfo< unsigned short >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; GetTypeName()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; name()sofa::defaulttype::DataTypeInfo< unsigned short >inlinestatic; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< unsigned short >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< unsigned short >inlinestatic; SimpleCopy enum valueso",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html:542,Modifiability,inherit,inherited,542,"﻿. SOFA API: sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< unsigned short > Struct Reference . #include <TypeInfo_Integer.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< unsigned short >:. [legend]. Static Public Member Functions; static const std::string GetTypeName ();  ; static const std::string name ();  ;  Static Public Member Functions inherited from sofa::defaulttype::IntegerTypeInfo< unsigned short >; static sofa::Size size ();  ; static sofa::Size size (const DataType &);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &, sofa::Size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ GetTypeName(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::GetTypeName ; (; ). inlinestatic . ◆ name(). static const std::string sofa::defaulttype::DataTypeInfo< unsigned short >::name ; (; ). inlinestatic . sofadefaulttypeDataTypeInfo< unsigned short >; Generated on Mon Nov 11 2024 03:18:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01unsigned_01short_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html:274,Modifiability,inherit,inherited,274,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::DefaultDataTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::DefaultDataTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; byteSize()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; DataType typedefsofa::defaulttype::DefaultDataTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValue(const DataType &, Index, T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, Index, std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; name()sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValue(DataType &, Index, const T &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; setValueString(DataType &, Index, const std::string &)sofa::defaulttype::DefaultDataTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::DefaultDataTypeInfo< TDataType >; Size enum valuesofa::defaulttype::Defau",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:4821,Energy Efficiency,allocate,allocate,4821,"peInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest known fixed size for this type, as returned by size() . sofadefaulttypeDefaultDataTypeInfo; Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:4104,Usability,simpl,simply,4104,"Index ; , . const std::string & ;  . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real > Member List . This is the complete list of members for sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >, including all inherited members. EigenSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >; operator()(const EigenSparseMatrix &eigenMat)sofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >inline; TMapMapSparseMatrix typedefsofa::defaulttype::EigenSparseToMapMapSparseMatrixVec< TVec, Real >. Generated on Mon Nov 11 2024 03:18:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_eigen_sparse_to_map_map_sparse_matrix_vec-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size > Member List . This is the complete list of members for sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >, including all inherited members. BaseType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; BaseTypeInfo typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; byteSize()sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Container enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; CopyOnWrite enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; DataType typedefsofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; FixedSize enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; Integer enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; Scalar enum valuesofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::FixedArrayTypeInfo< TDataType, static_size >inlinestatic; SimpleCopy enum valuesofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_fixed_array_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::IncompleteTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::IncompleteTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; byteSize()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IncompleteTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValue(const DataType &, sofa::Size, T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(const TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValuePtr(TDataType &data)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; getValueString(const DataType &, sofa::Size, std::string &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; name()sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValue(DataType &, sofa::Size, const T &)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IncompleteTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IncompleteTypeInfo< TDataType >; Size enum values",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html:4651,Energy Efficiency,allocate,allocate,4651,"TypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest known fixed size for this type, as returned by size() . sofadefaulttypeIncompleteTypeInfo; Generated on Mon Nov 11 2024 03:18:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html:3934,Usability,simpl,simply,3934,"index, . const std::string & ; value . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html:266,Modifiability,inherit,inherited,266,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::IntegerTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::IntegerTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; byteSize()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; DataType typedefsofa::defaulttype::IntegerTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::IntegerTypeInfo< TDataType >; size()sofa::defaulttype::IntegerTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::Integer",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_integer_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::ScalarTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::ScalarTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; byteSize()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; DataType typedefsofa::defaulttype::ScalarTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::ScalarTypeInfo< TDataType >; size()sofa::defaulttype::ScalarTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::ScalarTypeInfo< TDataType >in",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_scalar_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::SetTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::SetTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::SetTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::SetTypeInfo< TDataType >; byteSize()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::SetTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::SetTypeInfo< TDataType >; DataType typedefsofa::defaulttype::SetTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::SetTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::SetTypeInfo< TDataType >; setSize(DataType &data, sofa::Size)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size, const T &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size, const std::string &value)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::SetTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::SetTypeInfo< TDataType >; size()sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; size(const DataType &data)sofa::defaulttype::SetTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::SetTypeInfo< TDataType >; Text enum valuesofa::defaulttype::SetTypeInfo< TDataType >; ValidInfo ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_set_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html:316,Modifiability,inherit,inherited,316,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T > Member List . This is the complete list of members for sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >, including all inherited members. add(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic; get(T &x, T &y, T &z, const Coord &c)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic; set(Coord &c, T x, T y, T z)sofa::defaulttype::StdVectorTypes< TCoord, TDeriv, TReal >::Impl< N, T >inlinestatic. Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_std_vector_types_1_1_impl-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::TextTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::TextTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::TextTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::TextTypeInfo< TDataType >; byteSize()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::TextTypeInfo< TDataType >; ConvType typedefsofa::defaulttype::TextTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::TextTypeInfo< TDataType >; DataType typedefsofa::defaulttype::TextTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::TextTypeInfo< TDataType >; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::TextTypeInfo< TDataType >; Scalar enum valuesofa::defaulttype::TextTypeInfo< TDataType >; setSize(DataType &, sofa::Size)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::TextTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::TextTypeInfo< TDataType >; size()sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; size(const DataType &)sofa::defaulttype::TextTypeInfo< TDataType >inlinestatic; Size enum valuesofa::defaulttype::TextType",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_text_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::VectorTypeInfo< TDataType > Member List . This is the complete list of members for sofa::defaulttype::VectorTypeInfo< TDataType >, including all inherited members. BaseType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; BaseTypeInfo typedefsofa::defaulttype::VectorTypeInfo< TDataType >; byteSize()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Container enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; CopyOnWrite enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; DataType typedefsofa::defaulttype::VectorTypeInfo< TDataType >; FixedSize enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; GetTypeName()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValue(const DataType &data, sofa::Size index, T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(const DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValuePtr(DataType &data)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; getValueString(const DataType &data, sofa::Size index, std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Integer enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; name()sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; Scalar enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; setSize(DataType &data, sofa::Size size)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValue(DataType &data, sofa::Size index, const T &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; setValueString(DataType &data, sofa::Size index, const std::string &value)sofa::defaulttype::VectorTypeInfo< TDataType >inlinestatic; SimpleCopy enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; SimpleLayout enum valuesofa::defaulttype::VectorTypeInfo< TDataType >; Size enum valuesofa::defaulttype::VectorTypeInfo< TD",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_vector_type_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html:212,Modifiability,inherit,inherited,212,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Edge Member List . This is the complete list of members for sofa::geometry::Edge, including all inherited members. Edge()=deletesofa::geometry::Edge; Element_typesofa::geometry::Edgestatic; getBarycentricCoordinates(const Node &point, const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; intersectionWithEdge(const Node &pA, const Node &pB, const Node &pC, const Node &pD, sofa::type::Vec< 2, T > &intersectionBaryCoord)sofa::geometry::Edgeinlinestatic; intersectionWithPlane(const Node &n0, const Node &n1, const sofa::type::Vec< 3, T > &planeP0, const sofa::type::Vec< 3, T > &normal, sofa::type::Vec< 3, T > &intersection)sofa::geometry::Edgeinlinestatic; isPointOnEdge(const Node &p0, const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; length(const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic; NumberOfNodessofa::geometry::Edgestatic; squaredLength(const Node &n0, const Node &n1)sofa::geometry::Edgeinlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:6504,Performance,optimiz,optimized,6504,") between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 20",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:7173,Performance,optimiz,optimized,7173,"eturnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:6043,Testability,test,test,6043,"sofa::type::Vec< 3, T > & ; planeP0, . const sofa::type::Vec< 3, T > & ; normal, . sofa::type::Vec< 3, T > & ; intersection . ). inlinestaticconstexpr . Compute the intersection between a plane (defined by a point and a normal) and the Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1nodes of the edge ; planeP0,normalposition and normal defining the plan ; intersectionposition of the intersection (if one) between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inline",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::ElementInfo< GeometryElement > Member List . This is the complete list of members for sofa::geometry::ElementInfo< GeometryElement >, including all inherited members. name()sofa::geometry::ElementInfo< GeometryElement >inlinestatic; type()sofa::geometry::ElementInfo< GeometryElement >inlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html:308,Modifiability,inherit,inherited,308,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point > Member List . This is the complete list of members for sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >, including all inherited members. name()sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >inlinestatic; type()sofa::geometry::ElementInfo< sofa::core::topology::Topology::Point >inlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_element_info_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_point_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Hexahedron Member List . This is the complete list of members for sofa::geometry::Hexahedron, including all inherited members. barycentricCoefficients(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const Node &pos)sofa::geometry::Hexahedroninlinestatic; center(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7)sofa::geometry::Hexahedroninlinestatic; Element_typesofa::geometry::Hexahedronstatic; getPositionFromBarycentricCoefficients(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const sofa::type::fixed_array< SReal, 3 > &baryC)sofa::geometry::Hexahedroninlinestatic; Hexahedron()=deletesofa::geometry::Hexahedron; NumberOfNodessofa::geometry::Hexahedronstatic; squaredDistanceTo(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7, const Node &pos)sofa::geometry::Hexahedroninlinestatic; volume(const Node &n0, const Node &n1, const Node &n2, const Node &n3, const Node &n4, const Node &n5, const Node &n6, const Node &n7)sofa::geometry::Hexahedroninlinestatic. Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html:3516,Performance,optimiz,optimizations,3516,"st Node &n7);  Compute the volume of a hexahedron. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Hexahedron::Element_type = ElementType::HEXAHEDRON. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Hexahedron::NumberOfNodes = 8. staticconstexpr . Constructor details. ◆ Hexahedron(). sofa::geometry::Hexahedron::Hexahedron ; (; ). delete . Function details. ◆ barycentricCoefficients(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::barycentricCoefficients ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7, . const Node & ; pos . ). inlinestaticconstexpr . Compute the barycentric coefficients of a node in a hexahedron. ; RemarksDue to some optimizations, the order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; posposition of the node from which the coefficients will be computed . ReturnsA Vec3 container with the barycentric coefficients of the given node . ◆ center(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::center ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7 . ). inlinestaticconstexpr . Compute the center of a hexahedron. ; RemarksThe order of nodes given as parameter is not necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron . ReturnsCenter of",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html:6094,Performance,optimiz,optimizations,6094,"expr . Compute a position from a given set of barycentric coefficients and the associated hexahedron. ; RemarksThe order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator* applicable with a scalar ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; baryCbarycentric coefficients . ReturnsPosition computed from the coefficients, as a Node type . ◆ squaredDistanceTo(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::squaredDistanceTo ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7, . const Node & ; pos . ). inlinestaticconstexpr . Compute the squared distance between a node and the center of a hexahedron. ; RemarksDue to some optimizations, the order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; posposition of the node from which the distance will be computed . ReturnsDistance from the node and the center of the hexahedron, as a T scalar . ◆ volume(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::volume ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7 . ). inlinestaticconstexpr . Compute the volume of a hexahedron. ; Remarksnon optimized version: just return the sum of the 6 inner-tetrahedra ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron . ReturnsVolume of the h",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html:6910,Performance,optimiz,optimized,6910,"e order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator* applicable with a scalar ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; baryCbarycentric coefficients . ReturnsPosition computed from the coefficients, as a Node type . ◆ squaredDistanceTo(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::squaredDistanceTo ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7, . const Node & ; pos . ). inlinestaticconstexpr . Compute the squared distance between a node and the center of a hexahedron. ; RemarksDue to some optimizations, the order of nodes given as parameter is necessary. ; Template Parameters. Nodeiterable container, with operator[] ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron ; posposition of the node from which the distance will be computed . ReturnsDistance from the node and the center of the hexahedron, as a T scalar . ◆ volume(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Hexahedron::volume ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . const Node & ; n3, . const Node & ; n4, . const Node & ; n5, . const Node & ; n6, . const Node & ; n7 . ). inlinestaticconstexpr . Compute the volume of a hexahedron. ; Remarksnon optimized version: just return the sum of the 6 inner-tetrahedra ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. n0,n1,n2,n3,n4,n5,n6,n7nodes of the hexahedron . ReturnsVolume of the hexahedron, as a T scalar . sofageometryHexahedron; Generated on Mon Nov 11 2024 03:18:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_hexahedron.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Pentahedron Member List . This is the complete list of members for sofa::geometry::Pentahedron, including all inherited members. Element_typesofa::geometry::Pentahedronstatic; NumberOfNodessofa::geometry::Pentahedronstatic; Pentahedron()=deletesofa::geometry::Pentahedron. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pentahedron-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html:214,Modifiability,inherit,inherited,214,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Point Member List . This is the complete list of members for sofa::geometry::Point, including all inherited members. Element_typesofa::geometry::Pointstatic; NumberOfNodessofa::geometry::Pointstatic; Point()=deletesofa::geometry::Point. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Pyramid Member List . This is the complete list of members for sofa::geometry::Pyramid, including all inherited members. Element_typesofa::geometry::Pyramidstatic; NumberOfNodessofa::geometry::Pyramidstatic; Pyramid()=deletesofa::geometry::Pyramid. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_pyramid-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html:212,Modifiability,inherit,inherited,212,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Quad Member List . This is the complete list of members for sofa::geometry::Quad, including all inherited members. area(const Node &n0, const Node &n1, const Node &n2, const Node &n3)sofa::geometry::Quadinlinestatic; Element_typesofa::geometry::Quadstatic; NumberOfNodessofa::geometry::Quadstatic; Quad()=deletesofa::geometry::Quad. Generated on Mon Nov 11 2024 03:18:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_quad-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Tetrahedron Member List . This is the complete list of members for sofa::geometry::Tetrahedron, including all inherited members. Element_typesofa::geometry::Tetrahedronstatic; NumberOfNodessofa::geometry::Tetrahedronstatic; Tetrahedron()=deletesofa::geometry::Tetrahedron; volume(const Node &n0, const Node &n1, const Node &n2, const Node &n3)sofa::geometry::Tetrahedroninlinestatic. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_tetrahedron-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html:220,Modifiability,inherit,inherited,220,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::geometry::Triangle Member List . This is the complete list of members for sofa::geometry::Triangle, including all inherited members. area(const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; Element_typesofa::geometry::Trianglestatic; getBarycentricCoordinates(const Node &p0, const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; isPointInTriangle(const Node &p0, const Node &n0, const Node &n1, const Node &n2, sofa::type::Vec< 3, T > &baryCoefs)sofa::geometry::Triangleinlinestatic; normal(const Node &n0, const Node &n1, const Node &n2)sofa::geometry::Triangleinlinestatic; NumberOfNodessofa::geometry::Trianglestatic; rayIntersection(const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction, TReal &t, TReal &u, TReal &v)sofa::geometry::Triangleinlinestatic; rayIntersection(const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction)sofa::geometry::Triangleinlinestatic; Triangle()=deletesofa::geometry::Triangle. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:3432,Performance,optimiz,optimized,3432,"tersection (const sofa::type::Vec< 3, TReal > &n0, const sofa::type::Vec< 3, TReal > &n1, const sofa::type::Vec< 3, TReal > &n2, const sofa::type::Vec< 3, TReal > &origin, const sofa::type::Vec< 3, TReal > &direction);  Test if a ray intersects a triangle. More...;  . Attribute details. ◆ Element_type. constexpr ElementType sofa::geometry::Triangle::Element_type = ElementType::TRIANGLE. staticconstexpr . ◆ NumberOfNodes. constexpr sofa::Size sofa::geometry::Triangle::NumberOfNodes = 3. staticconstexpr . Constructor details. ◆ Triangle(). sofa::geometry::Triangle::Triangle ; (; ). delete . Function details. ◆ area(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::area ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the area of a triangle. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec and the dimension (2D or 3D) ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsArea of the triangle (a T scalar) . ◆ getBarycentricCoordinates(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::getBarycentricCoordinates ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the barycentric coordinates of the input point in the Triangle. It can be interpreted as masses placed at the vertices of Triangle (n0, n1, n2), such that the point is the center of mass of these masses. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the input point to c",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html:5355,Testability,test,test,5355," point to compute the coefficients ; n0,n1,n2nodes of the triangle . Returnssofa::type::Vec<3, T> barycentric coefficients of each vertex of the Triangle. These masses can be zero or negative; they are all positive if and only if the point is inside the Triangle. . ◆ isPointInTriangle(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Triangle::isPointInTriangle ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1, . const Node & ; n2, . sofa::type::Vec< 3, T > & ; baryCoefs . ). inlinestaticconstexpr . Test if input point is inside Triangle (n0, n1, n2) using Triangle. ; See alsogetBarycentricCoordinates . The point is inside the Triangle if and only if Those coordinates are all positive. ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1,n2nodes of the triangle ; outputparameter: sofa::type::Vec<3, T> barycentric coordinates of the input point in Triangle . Returnsbool result if point is inside Triangle. . ◆ normal(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Triangle::normal ; (; const Node & ; n0, . const Node & ; n1, . const Node & ; n2 . ). inlinestaticconstexpr . Compute the normal of a triangle. ; Remarkstriangle normal computation is only possible in 3D . normal returned is not normalized ; Template Parameters. Nodeiterable container (or sofa::type::Vec with cross() and norm()) ; Tscalar . Parameters. n0,n1,n2nodes of the triangle . ReturnsVec3 normal of this triangle . ◆ rayIntersection() [1/2]. template<typename TReal > . static constexpr bool sofa::geometry::Triangle::rayIntersection ; (; const sofa::type::Vec< 3, TReal > & ; n0, . const sofa::type::Vec< 3, TReal > & ; n1, . const sofa::type::Vec< 3, TReal",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_triangle.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::fboParameters Member List . This is the complete list of members for sofa::gl::fboParameters, including all inherited members. colorFormatsofa::gl::fboParameters; colorInternalformatsofa::gl::fboParameters; colorTypesofa::gl::fboParameters; depthInternalformatsofa::gl::fboParameters; fboParameters()sofa::gl::fboParametersinline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1fbo_parameters-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL::CustomGLBuffer Member List . This is the complete list of members for sofa::gl::BasicShapesGL::CustomGLBuffer, including all inherited members. bufferSizesofa::gl::BasicShapesGL::CustomGLBuffer; locationsofa::gl::BasicShapesGL::CustomGLBuffer; VBOsofa::gl::BasicShapesGL::CustomGLBuffer. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_custom_g_l_buffer-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL::GLBuffers Member List . This is the complete list of members for sofa::gl::BasicShapesGL::GLBuffers, including all inherited members. IBOsofa::gl::BasicShapesGL::GLBuffers; indicesSizesofa::gl::BasicShapesGL::GLBuffers; normalsBufferSizesofa::gl::BasicShapesGL::GLBuffers; texcoordsBufferSizesofa::gl::BasicShapesGL::GLBuffers; totalSizesofa::gl::BasicShapesGL::GLBuffers; VBOsofa::gl::BasicShapesGL::GLBuffers; verticesBufferSizesofa::gl::BasicShapesGL::GLBuffers. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l_1_1_g_l_buffers-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription Member List . This is the complete list of members for sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription, including all inherited members. operator<(const SphereDescription &d) constsofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescriptioninline; ringssofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription; sectorssofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescription; SphereDescription(unsigned int r, unsigned int s)sofa::gl::BasicShapesGL_Sphere< VertexType >::SphereDescriptioninline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_basic_shapes_g_l___sphere_1_1_sphere_description-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html:222,Modifiability,inherit,inherited,222,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Disable< Flag > Member List . This is the complete list of members for sofa::gl::Disable< Flag >, including all inherited members. Disable()sofa::gl::Disable< Flag >inline; statesofa::gl::Disable< Flag >; ~Disable()sofa::gl::Disable< Flag >inline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_disable-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html:220,Modifiability,inherit,inherited,220,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Enable< Flag > Member List . This is the complete list of members for sofa::gl::Enable< Flag >, including all inherited members. Enable()sofa::gl::Enable< Flag >inline; statesofa::gl::Enable< Flag >; ~Enable()sofa::gl::Enable< Flag >inline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_enable-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::GLSLShader::ShaderContents Member List . This is the complete list of members for sofa::gl::GLSLShader::ShaderContents, including all inherited members. filenamesofa::gl::GLSLShader::ShaderContents; ShaderContents()sofa::gl::GLSLShader::ShaderContentsinline; textsofa::gl::GLSLShader::ShaderContents. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html:338,Performance,load,loaded,338,"﻿. SOFA API: sofa::gl::GLSLShader::ShaderContents Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::GLSLShader::ShaderContents Struct Reference . #include <GLSLShader.h>; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) ; More...; Detailed Description; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) . Public Attributes; std::string filename;  ; std::string text;  . Public Member Functions;  ShaderContents ();  . Attribute details. ◆ filename. std::string sofa::gl::GLSLShader::ShaderContents::filename. ◆ text. std::string sofa::gl::GLSLShader::ShaderContents::text. Constructor details. ◆ ShaderContents(). sofa::gl::GLSLShader::ShaderContents::ShaderContents ; (; ). inline . sofaglGLSLShaderShaderContents; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html:491,Performance,load,loaded,491,"﻿. SOFA API: sofa::gl::GLSLShader::ShaderContents Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::GLSLShader::ShaderContents Struct Reference . #include <GLSLShader.h>; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) ; More...; Detailed Description; A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) . Public Attributes; std::string filename;  ; std::string text;  . Public Member Functions;  ShaderContents ();  . Attribute details. ◆ filename. std::string sofa::gl::GLSLShader::ShaderContents::filename. ◆ text. std::string sofa::gl::GLSLShader::ShaderContents::text. Constructor details. ◆ ShaderContents(). sofa::gl::GLSLShader::ShaderContents::ShaderContents ; (; ). inline . sofaglGLSLShaderShaderContents; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gl_1_1_g_l_s_l_shader_1_1_shader_contents.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::GUIManager::GUICreator Member List . This is the complete list of members for sofa::gui::common::GUIManager::GUICreator, including all inherited members. creatorsofa::gui::common::GUIManager::GUICreator; namesofa::gui::common::GUIManager::GUICreator; parameterssofa::gui::common::GUIManager::GUICreator; prioritysofa::gui::common::GUIManager::GUICreator. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_g_u_i_manager_1_1_g_u_i_creator-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::MousePosition Member List . This is the complete list of members for sofa::gui::common::MousePosition, including all inherited members. screenHeightsofa::gui::common::MousePosition; screenWidthsofa::gui::common::MousePosition; xsofa::gui::common::MousePosition; ysofa::gui::common::MousePosition. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1common_1_1_mouse_position-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:122,Performance,perform,performer,122,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:221,Performance,perform,performer,221,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:303,Performance,perform,performer,303,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:360,Performance,perform,performer,360,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:415,Performance,perform,performer,415,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:481,Performance,perform,performer,481,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:532,Performance,perform,performer,532,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:592,Performance,perform,performer,592,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:648,Performance,perform,performer,648,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html:702,Performance,perform,performer,702,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BodyPicked Member List . This is the complete list of members for sofa::gui::component::performer::BodyPicked, including all inherited members. bodysofa::gui::component::performer::BodyPicked; BodyPicked()sofa::gui::component::performer::BodyPickedinline; distsofa::gui::component::performer::BodyPicked; indexCollisionElementsofa::gui::component::performer::BodyPicked; mstatesofa::gui::component::performer::BodyPicked; operator bool()sofa::gui::component::performer::BodyPickedinline; pointsofa::gui::component::performer::BodyPicked; rayLengthsofa::gui::component::performer::BodyPicked. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:35,Performance,perform,performer,35,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:241,Performance,perform,performer,241,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:852,Performance,perform,performer,852,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:917,Performance,perform,performer,917,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1005,Performance,perform,performer,1005,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1126,Performance,perform,performer,1126,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1199,Performance,perform,performer,1199,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1270,Performance,perform,performer,1270,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1363,Performance,perform,performer,1363,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html:1473,Performance,perform,performer,1473,"﻿. SOFA API: sofa::gui::component::performer::BodyPicked Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BodyPicked Struct Reference . #include <MouseInteractor.h>; Represents a point on an object. ; More...; Detailed Description; Represents a point on an object. ; This requires not only the 3D location, but also the MechanicalState it is attached to. . Public Attributes; sofa::core::CollisionModel * body;  ; sofa::core::behavior::BaseMechanicalState * mstate;  ; sofa::Index indexCollisionElement;  ; type::Vec3 point;  ; SReal dist;  ; SReal rayLength;  . Public Member Functions;  BodyPicked ();  ;  operator bool ();  . Attribute details. ◆ body. sofa::core::CollisionModel* sofa::gui::component::performer::BodyPicked::body. ◆ dist. SReal sofa::gui::component::performer::BodyPicked::dist. ◆ indexCollisionElement. sofa::Index sofa::gui::component::performer::BodyPicked::indexCollisionElement. ◆ mstate. sofa::core::behavior::BaseMechanicalState* sofa::gui::component::performer::BodyPicked::mstate. ◆ point. type::Vec3 sofa::gui::component::performer::BodyPicked::point. ◆ rayLength. SReal sofa::gui::component::performer::BodyPicked::rayLength. Constructor details. ◆ BodyPicked(). sofa::gui::component::performer::BodyPicked::BodyPicked ; (; ). inline . Function details. ◆ operator bool(). sofa::gui::component::performer::BodyPicked::operator bool ; (; ). inline . sofaguicomponentperformerBodyPicked; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1component_1_1performer_1_1_body_picked.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::dataTime Member List . This is the complete list of members for sofa::gui::qt::dataTime, including all inherited members. dataTime(double t, std::string n, std::string ty=std::string(), std::string address=std::string())sofa::gui::qt::dataTimeinline; namesofa::gui::qt::dataTime; operator==(const dataTime &other)sofa::gui::qt::dataTimeinline; ptrsofa::gui::qt::dataTime; timesofa::gui::qt::dataTime; typesofa::gui::qt::dataTime. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1data_time-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ActivationFunctor Member List . This is the complete list of members for sofa::gui::qt::ActivationFunctor, including all inherited members. ActivationFunctor(bool act, GraphListenerQListView *l)sofa::gui::qt::ActivationFunctorinlinesignal; activesofa::gui::qt::ActivationFunctorprotected; listenersofa::gui::qt::ActivationFunctorprotected; operator()(core::objectmodel::BaseNode *n)sofa::gui::qt::ActivationFunctorinline; pixmap_filenamesofa::gui::qt::ActivationFunctorprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_activation_functor-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DataWidget::CreatorArgument Member List . This is the complete list of members for sofa::gui::qt::DataWidget::CreatorArgument, including all inherited members. datasofa::gui::qt::DataWidget::CreatorArgument; namesofa::gui::qt::DataWidget::CreatorArgument; parentsofa::gui::qt::DataWidget::CreatorArgument; readOnlysofa::gui::qt::DataWidget::CreatorArgument. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_data_widget_1_1_creator_argument-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::LinkWidget::CreatorArgument Member List . This is the complete list of members for sofa::gui::qt::LinkWidget::CreatorArgument, including all inherited members. linksofa::gui::qt::LinkWidget::CreatorArgument; namesofa::gui::qt::LinkWidget::CreatorArgument; parentsofa::gui::qt::LinkWidget::CreatorArgument; readOnlysofa::gui::qt::LinkWidget::CreatorArgument. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_link_widget_1_1_creator_argument-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html:236,Modifiability,inherit,inherited,236,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ModifyObjectFlags Member List . This is the complete list of members for sofa::gui::qt::ModifyObjectFlags, including all inherited members. EMPTY_FLAGsofa::gui::qt::ModifyObjectFlags; HIDE_FLAGsofa::gui::qt::ModifyObjectFlags; LINKPATH_MODIFIABLE_FLAGsofa::gui::qt::ModifyObjectFlags; MODELER_FLAGsofa::gui::qt::ModifyObjectFlags; ModifyObjectFlags()sofa::gui::qt::ModifyObjectFlagsinline; PROPERTY_WIDGET_FLAGsofa::gui::qt::ModifyObjectFlags; READONLY_FLAGsofa::gui::qt::ModifyObjectFlags; REINIT_FLAGsofa::gui::qt::ModifyObjectFlags; RESIZABLE_FLAGsofa::gui::qt::ModifyObjectFlags; setFlagsForModeler()sofa::gui::qt::ModifyObjectFlagsinline; setFlagsForSofa()sofa::gui::qt::ModifyObjectFlagsinline. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_modify_object_flags-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::MovieOptionsWidget::Codec Member List . This is the complete list of members for sofa::gui::qt::MovieOptionsWidget::Codec, including all inherited members. codecsofa::gui::qt::MovieOptionsWidget::Codec; Codec(std::string e, std::string c, std::string d)sofa::gui::qt::MovieOptionsWidget::Codecinline; Codec(std::string e, std::string d)sofa::gui::qt::MovieOptionsWidget::Codecinline; descriptionsofa::gui::qt::MovieOptionsWidget::Codec; extensionsofa::gui::qt::MovieOptionsWidget::Codec. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_movie_options_widget_1_1_codec-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ObjectModel Member List . This is the complete list of members for sofa::gui::qt::ObjectModel, including all inherited members. asBase()sofa::gui::qt::ObjectModelinline; isBase()sofa::gui::qt::ObjectModelinline; isData()sofa::gui::qt::ObjectModelinline; isNode()sofa::gui::qt::ObjectModelinline; isObject()sofa::gui::qt::ObjectModelinline; ptrsofa::gui::qt::ObjectModel; typesofa::gui::qt::ObjectModel. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_object_model-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowProfiler::CheckedSeries Member List . This is the complete list of members for sofa::gui::qt::SofaWindowProfiler::CheckedSeries, including all inherited members. checkedParentStepsofa::gui::qt::SofaWindowProfiler::CheckedSeries; lineSeriessofa::gui::qt::SofaWindowProfiler::CheckedSeries. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1gui_1_1qt_1_1_sofa_window_profiler_1_1_checked_series-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::console::Background Member List . This is the complete list of members for sofa::helper::console::Background, including all inherited members. Bright enum namesofa::helper::console::Background; Normal enum namesofa::helper::console::Background. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_background-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::console::Foreground Member List . This is the complete list of members for sofa::helper::console::Foreground, including all inherited members. Bright enum namesofa::helper::console::Foreground; Normal enum namesofa::helper::console::Foreground. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1console_1_1_foreground-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html:226,Modifiability,inherit,inherited,226,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader Member List . This is the complete list of members for sofa::helper::io::DDSHeader, including all inherited members. ddpfPixelFormatsofa::helper::io::DDSHeader; ddsCapssofa::helper::io::DDSHeader; dwDepthsofa::helper::io::DDSHeader; dwFlagssofa::helper::io::DDSHeader; dwHeightsofa::helper::io::DDSHeader; dwMagicsofa::helper::io::DDSHeader; dwMipMapCountsofa::helper::io::DDSHeader; dwPitchOrLinearSizesofa::helper::io::DDSHeader; dwReservedsofa::helper::io::DDSHeader; dwReserved2sofa::helper::io::DDSHeader; dwSizesofa::helper::io::DDSHeader; dwWidthsofa::helper::io::DDSHeader. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader::DDSCaps Member List . This is the complete list of members for sofa::helper::io::DDSHeader::DDSCaps, including all inherited members. dwCaps1sofa::helper::io::DDSHeader::DDSCaps; dwCaps2sofa::helper::io::DDSHeader::DDSCaps; Reservedsofa::helper::io::DDSHeader::DDSCaps. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_caps-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::io::DDSHeader::DDSPixelFormat Member List . This is the complete list of members for sofa::helper::io::DDSHeader::DDSPixelFormat, including all inherited members. dwBBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwFlagssofa::helper::io::DDSHeader::DDSPixelFormat; dwFourCCsofa::helper::io::DDSHeader::DDSPixelFormat; dwGBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRGBAlphaBitMasksofa::helper::io::DDSHeader::DDSPixelFormat; dwRGBBitCountsofa::helper::io::DDSHeader::DDSPixelFormat; dwSizesofa::helper::io::DDSHeader::DDSPixelFormat. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1io_1_1_d_d_s_header_1_1_d_d_s_pixel_format-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::kdTree< Coord >::TREENODE Member List . This is the complete list of members for sofa::helper::kdTree< Coord >::TREENODE, including all inherited members. leftsofa::helper::kdTree< Coord >::TREENODE; rightsofa::helper::kdTree< Coord >::TREENODE; splitdirsofa::helper::kdTree< Coord >::TREENODE. Generated on Mon Nov 11 2024 03:30:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1kd_tree_1_1_t_r_e_e_n_o_d_e-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:206,Testability,log,logging,206,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:292,Testability,log,logging,292,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:368,Testability,log,logging,368,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:414,Testability,log,logging,414,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:516,Testability,log,logging,516,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:615,Testability,log,logging,615,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:673,Testability,log,logging,673,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:723,Testability,log,logging,723,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:794,Testability,log,logging,794,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html:855,Testability,log,logging,855,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ComponentInfo Member List . This is the complete list of members for sofa::helper::logging::ComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; operator<<(std::ostream &out, const ComponentInfo &nfo)sofa::helper::logging::ComponentInfofriend; operator<<(std::ostream &out, const ComponentInfo *nfo)sofa::helper::logging::ComponentInfofriend; sender() constsofa::helper::logging::ComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::ComponentInfovirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:467,Integrability,message,message,467,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:575,Integrability,message,message,575,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:838,Integrability,message,message,838,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1648,Integrability,message,message,1648,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1880,Modifiability,inherit,inheriting,1880,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:27,Testability,log,logging,27,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:240,Testability,log,logging,240,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:348,Testability,log,logging,348,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1139,Testability,log,logging,1139,"Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1245,Testability,log,logging,1245,"fo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingCompone",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1330,Testability,log,logging,1330,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1436,Testability,log,logging,1436,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1557,Testability,log,logging,1557,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1702,Testability,log,logging,1702,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1959,Testability,log,logging,1959,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:239,Testability,log,logging,239,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:366,Testability,log,logging,366,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:455,Testability,log,logging,455,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:378,Availability,error,error,378,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:556,Availability,error,error,556,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:27,Testability,log,logging,27,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:238,Testability,log,logging,238,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:439,Testability,log,logging,439,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:737,Testability,log,logging,737,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:895,Testability,log,logging,895,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:201,Testability,log,logging,201,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:297,Testability,log,logging,297,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:346,Testability,log,logging,346,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:402,Testability,log,logging,402,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:439,Testability,log,logging,439,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:484,Testability,log,logging,484,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:444,Integrability,message,message,444,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:522,Integrability,message,message,522,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:27,Testability,log,logging,27,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:251,Testability,log,logging,251,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:349,Testability,log,logging,349,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:859,Testability,log,logging,859,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:924,Testability,log,logging,924,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:1008,Testability,log,logging,1008,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:1117,Testability,log,logging,1117,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:262,Modifiability,inherit,inherited,262,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:114,Testability,log,logging,114,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:215,Testability,log,logging,215,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:325,Testability,log,logging,325,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:374,Testability,log,logging,374,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:466,Testability,log,logging,466,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:570,Testability,log,logging,570,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:631,Testability,log,logging,631,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:668,Testability,log,logging,668,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:713,Testability,log,logging,713,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:771,Testability,log,logging,771,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:331,Integrability,message,message,331,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:515,Integrability,message,message,515,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:735,Modifiability,inherit,inherited,735,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:869,Modifiability,inherit,inherited,869,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:998,Modifiability,inherit,inherited,998,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:27,Testability,log,logging,27,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:214,Testability,log,logging,214,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:406,Testability,log,logging,406,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:764,Testability,log,logging,764,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:898,Testability,log,logging,898,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:1027,Testability,log,logging,1027,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:1132,Testability,log,logging,1132,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:1283,Testability,log,logging,1283,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:1436,Testability,log,logging,1436,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error-members.html:230,Modifiability,inherit,inherited,230,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::narrowing_error Member List . This is the complete list of members for sofa::helper::narrowing_error, including all inherited members. what() const noexcept overridesofa::helper::narrowing_errorinline. Generated on Mon Nov 11 2024 03:30:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::AlignPow2< N > Member List . This is the complete list of members for sofa::helper::system::thread::AlignPow2< N >, including all inherited members. prev enum valuesofa::helper::system::thread::AlignPow2< N >; val enum valuesofa::helper::system::thread::AlignPow2< N >. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_010_01_4-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::AlignPow2< 0 > Member List . This is the complete list of members for sofa::helper::system::thread::AlignPow2< 0 >, including all inherited members. val enum valuesofa::helper::system::thread::AlignPow2< 0 >. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_010_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_010_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_011_01_4-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::AlignPow2< 1 > Member List . This is the complete list of members for sofa::helper::system::thread::AlignPow2< 1 >, including all inherited members. val enum valuesofa::helper::system::thread::AlignPow2< 1 >. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_011_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_align_pow2_3_011_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size.html:486,Energy Efficiency,power,power,486,﻿. SOFA API: sofa::helper::system::thread::FixedPower2Size< N > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::system::thread::FixedPower2Size< N > Struct Template Reference . #include <CircularQueue.h>; Detailed Description; template<int N>; struct sofa::helper::system::thread::FixedPower2Size< N >; This is a storage policy for CircularQueue that uses a compile-time fixed-size array aligned on the upper power of 2 of the specified template parameter. . Classes; class  type;  . sofahelpersystemthreadFixedPower2Size; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list-members.html:276,Modifiability,inherit,inherited,276,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleComponentList Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleComponentList, including all inherited members. funcsofa::helper::system::Plugin::GetModuleComponentList; FuncPtr typedefsofa::helper::system::Plugin::GetModuleComponentList; GetModuleComponentList()sofa::helper::system::Plugin::GetModuleComponentListinline; operator()() constsofa::helper::system::Plugin::GetModuleComponentListinline; symbolsofa::helper::system::Plugin::GetModuleComponentListstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleDescription Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleDescription, including all inherited members. funcsofa::helper::system::Plugin::GetModuleDescription; FuncPtr typedefsofa::helper::system::Plugin::GetModuleDescription; GetModuleDescription()sofa::helper::system::Plugin::GetModuleDescriptioninline; operator()() constsofa::helper::system::Plugin::GetModuleDescriptioninline; symbolsofa::helper::system::Plugin::GetModuleDescriptionstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleLicense Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleLicense, including all inherited members. funcsofa::helper::system::Plugin::GetModuleLicense; FuncPtr typedefsofa::helper::system::Plugin::GetModuleLicense; GetModuleLicense()sofa::helper::system::Plugin::GetModuleLicenseinline; operator()() constsofa::helper::system::Plugin::GetModuleLicenseinline; symbolsofa::helper::system::Plugin::GetModuleLicensestatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name-members.html:258,Modifiability,inherit,inherited,258,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleName Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleName, including all inherited members. funcsofa::helper::system::Plugin::GetModuleName; FuncPtr typedefsofa::helper::system::Plugin::GetModuleName; GetModuleName()sofa::helper::system::Plugin::GetModuleNameinline; operator()() constsofa::helper::system::Plugin::GetModuleNameinline; symbolsofa::helper::system::Plugin::GetModuleNamestatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::GetModuleVersion Member List . This is the complete list of members for sofa::helper::system::Plugin::GetModuleVersion, including all inherited members. funcsofa::helper::system::Plugin::GetModuleVersion; FuncPtr typedefsofa::helper::system::Plugin::GetModuleVersion; GetModuleVersion()sofa::helper::system::Plugin::GetModuleVersioninline; operator()() constsofa::helper::system::Plugin::GetModuleVersioninline; symbolsofa::helper::system::Plugin::GetModuleVersionstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module-members.html:268,Modifiability,inherit,inherited,268,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::InitExternalModule Member List . This is the complete list of members for sofa::helper::system::Plugin::InitExternalModule, including all inherited members. funcsofa::helper::system::Plugin::InitExternalModule; FuncPtr typedefsofa::helper::system::Plugin::InitExternalModule; InitExternalModule()sofa::helper::system::Plugin::InitExternalModuleinline; operator()()sofa::helper::system::Plugin::InitExternalModuleinline; symbolsofa::helper::system::Plugin::InitExternalModulestatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::Plugin::ModuleIsInitialized Member List . This is the complete list of members for sofa::helper::system::Plugin::ModuleIsInitialized, including all inherited members. funcsofa::helper::system::Plugin::ModuleIsInitialized; FuncPtr typedefsofa::helper::system::Plugin::ModuleIsInitialized; ModuleIsInitialized()sofa::helper::system::Plugin::ModuleIsInitializedinline; operator()() constsofa::helper::system::Plugin::ModuleIsInitializedinline; symbolsofa::helper::system::Plugin::ModuleIsInitializedstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::CompareIndirect< Container > Member List . This is the complete list of members for sofa::helper::CompareIndirect< Container >, including all inherited members. CompareIndirect(const Container &v)sofa::helper::CompareIndirect< Container >inline; operator()(unsigned i, unsigned j) constsofa::helper::CompareIndirect< Container >inline; valuessofa::helper::CompareIndirect< Container >. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect.html:626,Security,access,access,626,"﻿. SOFA API: sofa::helper::CompareIndirect< Container > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::CompareIndirect< Container > Struct Template Reference . #include <SortedPermutation.h>; Detailed Description; template<class Container>; struct sofa::helper::CompareIndirect< Container >; Comparison operator used to compute sorted permutations of a container. The comparison operator of two indices compares the corresponding entries of the container. The container must allow random access. . Public Attributes; const Container & values;  . Public Member Functions;  CompareIndirect (const Container &v);  ; bool operator() (unsigned i, unsigned j) const;  . Attribute details. ◆ values. template<class Container > . const Container& sofa::helper::CompareIndirect< Container >::values. Constructor details. ◆ CompareIndirect(). template<class Container > . sofa::helper::CompareIndirect< Container >::CompareIndirect ; (; const Container & ; v). inline . Function details. ◆ operator()(). template<class Container > . bool sofa::helper::CompareIndirect< Container >::operator() ; (; unsigned ; i, . unsigned ; j . ); const. inline . sofahelperCompareIndirect; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_compare_indirect.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_generate_rigid_info-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::GenerateRigidInfo Member List . This is the complete list of members for sofa::helper::GenerateRigidInfo, including all inherited members. comsofa::helper::GenerateRigidInfo; inertiasofa::helper::GenerateRigidInfo; inertia_diagonalsofa::helper::GenerateRigidInfo; inertia_rotationsofa::helper::GenerateRigidInfo; masssofa::helper::GenerateRigidInfo. Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_generate_rigid_info-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_generate_rigid_info-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_index_open_m_p-members.html:232,Modifiability,inherit,inherited,232,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IndexOpenMP< T > Member List . This is the complete list of members for sofa::helper::IndexOpenMP< T >, including all inherited members. type typedefsofa::helper::IndexOpenMP< T >. Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_index_open_m_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_index_open_m_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< is_integer > Member List . This is the complete list of members for sofa::helper::IsEqual< is_integer >, including all inherited members. test(T x, T y, T threshold)sofa::helper::IsEqual< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html:261,Testability,test,test,261,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< is_integer > Member List . This is the complete list of members for sofa::helper::IsEqual< is_integer >, including all inherited members. test(T x, T y, T threshold)sofa::helper::IsEqual< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html:358,Testability,test,test,358,"﻿. SOFA API: sofa::helper::IsEqual< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsEqual< is_integer >::test ; (; T ; x, . T ; y, . T ; threshold . ). inlinestatic . sofahelperIsEqual; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html:411,Testability,test,test,411,"﻿. SOFA API: sofa::helper::IsEqual< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsEqual< is_integer >::test ; (; T ; x, . T ; y, . T ; threshold . ). inlinestatic . sofahelperIsEqual; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html:528,Testability,test,test,528,"﻿. SOFA API: sofa::helper::IsEqual< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsEqual< is_integer >::test ; (; T ; x, . T ; y, . T ; threshold . ). inlinestatic . sofahelperIsEqual; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html:230,Modifiability,inherit,inherited,230,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< true > Member List . This is the complete list of members for sofa::helper::IsEqual< true >, including all inherited members. test(T x, T y, T)sofa::helper::IsEqual< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html:249,Testability,test,test,249,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsEqual< true > Member List . This is the complete list of members for sofa::helper::IsEqual< true >, including all inherited members. test(T x, T y, T)sofa::helper::IsEqual< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html:328,Testability,test,test,328,"﻿. SOFA API: sofa::helper::IsEqual< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsEqual< true >::test ; (; T ; x, . T ; y, . T ;  . ). inlinestatic . sofahelperIsEqual< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html:371,Testability,test,test,371,"﻿. SOFA API: sofa::helper::IsEqual< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsEqual< true >::test ; (; T ; x, . T ; y, . T ;  . ). inlinestatic . sofahelperIsEqual< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html:446,Testability,test,test,446,"﻿. SOFA API: sofa::helper::IsEqual< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsEqual< true >::test ; (; T ; x, . T ; y, . T ;  . ). inlinestatic . sofahelperIsEqual< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< is_integer > Member List . This is the complete list of members for sofa::helper::IsNull< is_integer >, including all inherited members. test(T x, T threshold)sofa::helper::IsNull< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html:259,Testability,test,test,259,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< is_integer > Member List . This is the complete list of members for sofa::helper::IsNull< is_integer >, including all inherited members. test(T x, T threshold)sofa::helper::IsNull< is_integer >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html:356,Testability,test,test,356,"﻿. SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsNull< is_integer >::test ; (; T ; x, . T ; threshold . ). inlinestatic . sofahelperIsNull; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html:404,Testability,test,test,404,"﻿. SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsNull< is_integer >::test ; (; T ; x, . T ; threshold . ). inlinestatic . sofahelperIsNull; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html:520,Testability,test,test,520,"﻿. SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsNull< is_integer >::test ; (; T ; x, . T ; threshold . ). inlinestatic . sofahelperIsNull; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html:228,Modifiability,inherit,inherited,228,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< true > Member List . This is the complete list of members for sofa::helper::IsNull< true >, including all inherited members. test(T x, T)sofa::helper::IsNull< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html:247,Testability,test,test,247,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::IsNull< true > Member List . This is the complete list of members for sofa::helper::IsNull< true >, including all inherited members. test(T x, T)sofa::helper::IsNull< true >inlinestatic. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html:326,Testability,test,test,326,"﻿. SOFA API: sofa::helper::IsNull< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsNull< true >::test ; (; T ; x, . T ;  . ). inlinestatic . sofahelperIsNull< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html:364,Testability,test,test,364,"﻿. SOFA API: sofa::helper::IsNull< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsNull< true >::test ; (; T ; x, . T ;  . ). inlinestatic . sofahelperIsNull< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html:438,Testability,test,test,438,"﻿. SOFA API: sofa::helper::IsNull< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsNull< true >::test ; (; T ; x, . T ;  . ). inlinestatic . sofahelperIsNull< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html:377,Integrability,message,message,377,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::ScopedAdvancedTimer Member List . This is the complete list of members for sofa::helper::ScopedAdvancedTimer, including all inherited members. m_idsofa::helper::ScopedAdvancedTimer; m_objIdsofa::helper::ScopedAdvancedTimer; ScopedAdvancedTimer(const std::string &message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message, T *obj)sofa::helper::ScopedAdvancedTimerexplicit; ~ScopedAdvancedTimer()sofa::helper::ScopedAdvancedTimer. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html:460,Integrability,message,message,460,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::ScopedAdvancedTimer Member List . This is the complete list of members for sofa::helper::ScopedAdvancedTimer, including all inherited members. m_idsofa::helper::ScopedAdvancedTimer; m_objIdsofa::helper::ScopedAdvancedTimer; ScopedAdvancedTimer(const std::string &message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message, T *obj)sofa::helper::ScopedAdvancedTimerexplicit; ~ScopedAdvancedTimer()sofa::helper::ScopedAdvancedTimer. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html:543,Integrability,message,message,543,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::ScopedAdvancedTimer Member List . This is the complete list of members for sofa::helper::ScopedAdvancedTimer, including all inherited members. m_idsofa::helper::ScopedAdvancedTimer; m_objIdsofa::helper::ScopedAdvancedTimer; ScopedAdvancedTimer(const std::string &message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message, T *obj)sofa::helper::ScopedAdvancedTimerexplicit; ~ScopedAdvancedTimer()sofa::helper::ScopedAdvancedTimer. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::ScopedAdvancedTimer Member List . This is the complete list of members for sofa::helper::ScopedAdvancedTimer, including all inherited members. m_idsofa::helper::ScopedAdvancedTimer; m_objIdsofa::helper::ScopedAdvancedTimer; ScopedAdvancedTimer(const std::string &message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message, T *obj)sofa::helper::ScopedAdvancedTimerexplicit; ~ScopedAdvancedTimer()sofa::helper::ScopedAdvancedTimer. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:723,Integrability,message,message,723,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:770,Integrability,message,message,770,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:838,Integrability,message,message,838,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:1203,Integrability,message,message,1203,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:1330,Integrability,message,message,1330,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:1478,Integrability,message,message,1478,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:349,Usability,simpl,simplify,349,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1sparsematrixproduct_1_1_indexed_value-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Member List . This is the complete list of members for sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >, including all inherited members. indexsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >; IndexedValue()=defaultsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >; IndexedValue(AnyScalar s)sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >inline; IndexedValue(const IndexedValue &other)=defaultsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >; operator Scalar() constsofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >inline; valuesofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1sparsematrixproduct_1_1_indexed_value-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1sparsematrixproduct_1_1_indexed_value-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html:121,Testability,test,testing,121,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html:235,Testability,test,testing,235,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html:347,Testability,test,testing,347,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html:435,Testability,test,testing,435,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html:34,Testability,test,testing,34,﻿. SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Static Public Member Functions; static void init (T &product);  ; static void cleanup (T &product);  . Function details. ◆ cleanup(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::cleanup ; (; T & ; product). inlinestatic . ◆ init(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::init ; (; T & ; product). inlinestatic . sofalinearalgebratestingSparseMatrixProductInit; Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html:250,Testability,test,testing,250,﻿. SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Static Public Member Functions; static void init (T &product);  ; static void cleanup (T &product);  . Function details. ◆ cleanup(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::cleanup ; (; T & ; product). inlinestatic . ◆ init(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::init ; (; T & ; product). inlinestatic . sofalinearalgebratestingSparseMatrixProductInit; Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html:543,Testability,test,testing,543,﻿. SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Static Public Member Functions; static void init (T &product);  ; static void cleanup (T &product);  . Function details. ◆ cleanup(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::cleanup ; (; T & ; product). inlinestatic . ◆ init(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::init ; (; T & ; product). inlinestatic . sofalinearalgebratestingSparseMatrixProductInit; Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html:690,Testability,test,testing,690,﻿. SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Static Public Member Functions; static void init (T &product);  ; static void cleanup (T &product);  . Function details. ◆ cleanup(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::cleanup ; (; T & ; product). inlinestatic . ◆ init(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::init ; (; T & ; product). inlinestatic . sofalinearalgebratestingSparseMatrixProductInit; Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:344,Modifiability,inherit,inherited,344,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:121,Testability,test,testing,121,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:263,Testability,test,testing,263,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:398,Testability,test,testing,398,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:492,Testability,test,testing,492,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:592,Testability,test,testing,592,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:698,Testability,test,testing,698,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html:34,Testability,test,testing,34,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference . #include <BaseMatrix_test.h>. Static Public Attributes; static constexpr sofa::Index NbRows = TNbRows;  ; static constexpr sofa::Index NbCols = TNbCols;  . Attribute details. ◆ NbCols. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbCols = TNbCols. staticconstexpr . ◆ NbRows. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbRows = TNbRows. staticconstexpr . sofalinearalgebratestingTestBaseMatrixTraits; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html:272,Testability,test,testing,272,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference . #include <BaseMatrix_test.h>. Static Public Attributes; static constexpr sofa::Index NbRows = TNbRows;  ; static constexpr sofa::Index NbCols = TNbCols;  . Attribute details. ◆ NbCols. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbCols = TNbCols. staticconstexpr . ◆ NbRows. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbRows = TNbRows. staticconstexpr . sofalinearalgebratestingTestBaseMatrixTraits; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html:677,Testability,test,testing,677,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference . #include <BaseMatrix_test.h>. Static Public Attributes; static constexpr sofa::Index NbRows = TNbRows;  ; static constexpr sofa::Index NbCols = TNbCols;  . Attribute details. ◆ NbCols. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbCols = TNbCols. staticconstexpr . ◆ NbRows. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbRows = TNbRows. staticconstexpr . sofalinearalgebratestingTestBaseMatrixTraits; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html:916,Testability,test,testing,916,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference . #include <BaseMatrix_test.h>. Static Public Attributes; static constexpr sofa::Index NbRows = TNbRows;  ; static constexpr sofa::Index NbCols = TNbCols;  . Attribute details. ◆ NbCols. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbCols = TNbCols. staticconstexpr . ◆ NbRows. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbRows = TNbRows. staticconstexpr . sofalinearalgebratestingTestBaseMatrixTraits; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >, including all inherited members. Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:121,Testability,test,testing,121,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >, including all inherited members. Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:235,Testability,test,testing,235,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >, including all inherited members. Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:340,Testability,test,testing,340," Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:395,Testability,test,testing,395," Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:566,Testability,test,testing,566," Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:779,Testability,test,testing,779," Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1012,Testability,test,testing,1012," Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1260,Testability,test,testing,1260," Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1497,Testability,test,testing,1497,"ame RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1655,Testability,test,testing,1655,"ix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::Lhs",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1907,Testability,test,testing,1907,"Index > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:2095,Testability,test,testing,2095,"x > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:2165,Testability,test,testing,2165,"x > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:2355,Testability,test,testing,2355,"x > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:2584,Testability,test,testing,2584,"x > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:2842,Testability,test,testing,2842,"x > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:2913,Testability,test,testing,2913,"x > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:2992,Testability,test,testing,2992,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3073,Testability,test,testing,3073,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3125,Testability,test,testing,3125,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3157,Testability,test,testing,3157,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3233,Testability,test,testing,3233,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3355,Testability,test,testing,3355,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3417,Testability,test,testing,3417,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3489,Testability,test,testing,3489,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3556,Testability,test,testing,3556,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3627,Testability,test,testing,3627,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3679,Testability,test,testing,3679,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3729,Testability,test,testing,3729,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3794,Testability,test,testing,3794,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3871,Testability,test,testing,3871,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3920,Testability,test,testing,3920,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:3983,Testability,test,testing,3983,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:4096,Testability,test,testing,4096,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:4234,Testability,test,testing,4234,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:4340,Testability,test,testing,4340,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:4403,Testability,test,testing,4403,"tions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; LHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; RHSMatrix typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:1225,Availability,failure,failure,1225,"ist of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:975,Modifiability,inherit,inherited,975,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:1426,Modifiability,inherit,inherited,1426," >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:2640,Modifiability,inherit,inherited,2640,"ber Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::SparseMatrixTest< T::LhsScalar >; static void generateRandomSparseMatrix (Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity);  ; static void generateFromTriplets (Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src);  ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:3725,Modifiability,inherit,inherited,3725,"x > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::SparseMatrixTest< T::LhsScalar >; static void generateRandomSparseMatrix (Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity);  ; static void generateFromTriplets (Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src);  ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Real >; template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5045,Modifiability,inherit,inherited,5045,"onst Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5207,Modifiability,inherit,inherited,5207,"onst Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5354,Modifiability,inherit,inherited,5354," isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:34,Testability,test,testing,34,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:277,Testability,test,testing,277,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:427,Testability,test,testing,427,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:546,Testability,test,testing,546,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:996,Testability,test,testing,996,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:1447,Testability,test,testing,1447," >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:2661,Testability,test,testing,2661,"ate<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::SparseMatrixTest< T::LhsScalar >; static void generateRandomSparseMatrix (Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity);  ; static void generateFromTriplets (Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src);  ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOption",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:3746,Testability,test,testing,3746,"x > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::SparseMatrixTest< T::LhsScalar >; static void generateRandomSparseMatrix (Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity);  ; static void generateFromTriplets (Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src);  ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Real >; template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5066,Testability,test,testing,5066,"onst Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5091,Testability,test,testing,5091,"onst Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5139,Testability,test,testing,5139,"onst Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5228,Testability,test,testing,5228,"onst Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BS",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5375,Testability,test,testing,5375," isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5605,Testability,test,testing,5605,"const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; typename _DstScalar ; , . int ; _DstOptions, . typename _DstStorageIndex ; , . typename _SrcScalar ; , . int ; _SrcOptions, . typename _SrcStorage",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:6005,Testability,test,testing,6005,"ributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; typename _DstScalar ; , . int ; _DstOptions, . typename _DstStorageIndex ; , . typename _SrcScalar ; , . int ; _SrcOptions, . typename _SrcStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<class T > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen. inlinestatic . ◆ generateRandomSparseMatrix(). template<class T > . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; int ; EigenSparseMatrixOptions). inlinestatic . Generate a s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:6438,Testability,test,testing,6438,"eed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; typename _DstScalar ; , . int ; _DstOptions, . typename _DstStorageIndex ; , . typename _SrcScalar ; , . int ; _SrcOptions, . typename _SrcStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<class T > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen. inlinestatic . ◆ generateRandomSparseMatrix(). template<class T > . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; int ; EigenSparseMatrixOptions). inlinestatic . Generate a sparse matrix of size nbRows x nbCols. The sparsity is the ratio of non-zero values compared to the total size of the matrix (= nbRows x nbCols). . sofalinearalgebratestingTestSparseMatrixProduct; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:6732,Testability,test,testing,6732,"eed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; typename _DstScalar ; , . int ; _DstOptions, . typename _DstStorageIndex ; , . typename _SrcScalar ; , . int ; _SrcOptions, . typename _SrcStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<class T > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen. inlinestatic . ◆ generateRandomSparseMatrix(). template<class T > . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; int ; EigenSparseMatrixOptions). inlinestatic . Generate a sparse matrix of size nbRows x nbCols. The sparsity is the ratio of non-zero values compared to the total size of the matrix (= nbRows x nbCols). . sofalinearalgebratestingTestSparseMatrixProduct; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:6910,Testability,test,testing,6910,"eed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; typename _DstScalar ; , . int ; _DstOptions, . typename _DstStorageIndex ; , . typename _SrcScalar ; , . int ; _SrcOptions, . typename _SrcStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<class T > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen. inlinestatic . ◆ generateRandomSparseMatrix(). template<class T > . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; int ; EigenSparseMatrixOptions). inlinestatic . Generate a sparse matrix of size nbRows x nbCols. The sparsity is the ratio of non-zero values compared to the total size of the matrix (= nbRows x nbCols). . sofalinearalgebratestingTestSparseMatrixProduct; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m1___block_sparse-members.html:334,Modifiability,inherit,inherited,334,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >; operator()(const M1 *m1, M2 *m2, double &fact)sofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM1_BlockSparse< Real, transpose, M1, M2 >. Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m1___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m1___block_sparse-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m_s___block_sparse-members.html:350,Modifiability,inherit,inherited,350,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >; operator()(const M1 *m1, M1 *m2, double &fact)sofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAMS_BlockSparse< Real, NL, NC, transpose, M1, M2 >. Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m_s___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m_s___block_sparse-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m___block_sparse-members.html:348,Modifiability,inherit,inherited,348,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >; operator()(const M1 *m1, M2 *m2, double &fact)sofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpAM_BlockSparse< Real, NL, NC, transpose, M1, M2 >. Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m___block_sparse-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal-members.html:368,Modifiability,inherit,inherited,368,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >; operator()(const M *mat, V1 &result, const V2 &v)sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, NL, NC, add, transpose, M, V1, V2 >. Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal_3_01_real_00_011_00_0b7ce101d86ed51b5fac766026e3115a9.html:364,Modifiability,inherit,inherited,364,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >, including all inherited members. Index typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >; operator()(const M *mat, V1 &result, const V2 &v)sofa::linearalgebra::BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >inline. Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal_3_01_real_00_011_00_0b7ce101d86ed51b5fac766026e3115a9.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_diagonal_3_01_real_00_011_00_0b7ce101d86ed51b5fac766026e3115a9.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_sparse-members.html:364,Modifiability,inherit,inherited,364,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 > Member List . This is the complete list of members for sofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >, including all inherited members. BlockConstAccessor typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; BlockData typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; ColBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; Index typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >; operator()(const M *mat, V1 &result, const V2 &v)sofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >inline; RowBlockConstIterator typedefsofa::linearalgebra::BaseMatrixLinearOpMV_BlockSparse< Real, NL, NC, add, transpose, M, V1, V2 >. Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_sparse-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v___block_sparse-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_indexed_block-members.html:344,Modifiability,inherit,inherited,344,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock Member List . This is the complete list of members for sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock, including all inherited members. csofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock; IndexedBlock()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; IndexedBlock(Index i, Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; IndexedBlock(Index i, Index j, const Block &v)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; lsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock; operator!=(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator<(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator<=(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator==(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator>(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; operator>=(const IndexedBlock &b) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlockinline; valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::IndexedBlock. Generated on Mon Nov 11 2024 03:31:23 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_indexed_block-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_indexed_block-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_3d920f8e446ae9f930ab47a8575e9c8c.html:350,Modifiability,inherit,inherited,350,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Member List . This is the complete list of members for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >, including all inherited members. EigenSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >; operator()(const TCompressedRowSparseMatrix &mat, std::size_t size) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >inline; operator()(const TCompressedRowSparseMatrix &mat) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >inline; Real typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >; TCompressedRowSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_3d920f8e446ae9f930ab47a8575e9c8c.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_3d920f8e446ae9f930ab47a8575e9c8c.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html:585,Modifiability,inherit,inherited,585,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Struct Template Reference . #include <CompressedRowSparseMatrixConstraintEigenUtils.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat, std::size_t size) const;  ; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat) const;  . sofalinearalgebraCompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >; Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec-members.html:312,Modifiability,inherit,inherited,312,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec > Member List . This is the complete list of members for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >, including all inherited members. EigenSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >; operator()(const TCompressedRowSparseMatrix &mat, std::size_t size) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >inline; operator()(const TCompressedRowSparseMatrix &mat) constsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >inline; Real typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >; TCompressedRowSparseMatrix typedefsofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_block_traits-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CRSBlockTraits< Block > Member List . This is the complete list of members for sofa::linearalgebra::CRSBlockTraits< Block >, including all inherited members. VecBlock typedefsofa::linearalgebra::CRSBlockTraits< Block >; VecFlag typedefsofa::linearalgebra::CRSBlockTraits< Block >; VecIndex typedefsofa::linearalgebra::CRSBlockTraits< Block >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_block_traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_block_traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy-members.html:246,Modifiability,inherit,inherited,246,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::CRSDefaultPolicy Member List . This is the complete list of members for sofa::linearalgebra::CRSDefaultPolicy, including all inherited members. AutoCompresssofa::linearalgebra::CRSDefaultPolicystatic; AutoSizesofa::linearalgebra::CRSDefaultPolicystatic; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; CompressZerossofa::linearalgebra::CRSDefaultPolicystatic; IsAlwaysSquaresofa::linearalgebra::CRSDefaultPolicystatic; IsAlwaysSymmetricsofa::linearalgebra::CRSDefaultPolicystatic; matrixTypesofa::linearalgebra::CRSDefaultPolicystatic; OrderedInsertionsofa::linearalgebra::CRSDefaultPolicystatic; StoreLowerTriangularBlocksofa::linearalgebra::CRSDefaultPolicystatic. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:1221,Usability,clear,clear,1221,"e . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CRSDefaultPolicy:. [legend]. Static Public Attributes; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ Clear",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:1283,Usability,clear,clearing,1283,"e . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CRSDefaultPolicy:. [legend]. Static Public Attributes; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ Clear",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:2364,Usability,clear,clear,2364,"rtion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ ClearByZeros. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::ClearByZeros = true. staticconstexpr . Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) . ◆ CompressZeros. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::CompressZeros = true. staticconstexpr . Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) . ◆ IsAlwaysSquare. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::IsAlwaysSquare = false. staticconstexpr . Set to true if this matrix is always square (must be true for symmetric) . ◆ IsAlwaysSymmetric. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::IsAlwaysSymmetric = false. staticconstexpr . Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) . ◆ matrixType. constexpr int sofa::linearalgebra::CRSDefaultPolicy::matrixType = 0. staticconstexpr . Do not change this value, has to be overrided for all derivated class. . ◆ OrderedInsertion. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::OrderedInsertion = false. staticconstexpr . Set to true if insertion in matri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:2426,Usability,clear,clearing,2426,"rtion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ ClearByZeros. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::ClearByZeros = true. staticconstexpr . Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) . ◆ CompressZeros. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::CompressZeros = true. staticconstexpr . Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) . ◆ IsAlwaysSquare. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::IsAlwaysSquare = false. staticconstexpr . Set to true if this matrix is always square (must be true for symmetric) . ◆ IsAlwaysSymmetric. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::IsAlwaysSymmetric = false. staticconstexpr . Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) . ◆ matrixType. constexpr int sofa::linearalgebra::CRSDefaultPolicy::matrixType = 0. staticconstexpr . Do not change this value, has to be overrided for all derivated class. . ◆ OrderedInsertion. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::OrderedInsertion = false. staticconstexpr . Set to true if insertion in matri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options-members.html:248,Modifiability,inherit,inherited,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< T > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< T >, including all inherited members. valuesofa::linearalgebra::EigenOptions< T >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_map_3_01_t_00_01_options_0003192d32bdc4f44b4f781bd8ab55233e.html:330,Modifiability,inherit,inherited,330,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_map_3_01_t_00_01_options_0003192d32bdc4f44b4f781bd8ab55233e.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_map_3_01_t_00_01_options_0003192d32bdc4f44b4f781bd8ab55233e.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01const_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_map_3_01_t_00_01_options_00_01_stride_type_01_4_01_4-members.html:318,Modifiability,inherit,inherited,318,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< Eigen::Map< T, Options, StrideType > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< Eigen::Map< T, Options, StrideType > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< Eigen::Map< T, Options, StrideType > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_map_3_01_t_00_01_options_00_01_stride_type_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_map_3_01_t_00_01_options_00_01_stride_type_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenOptions< Eigen::Transpose< T > > Member List . This is the complete list of members for sofa::linearalgebra::EigenOptions< Eigen::Transpose< T > >, including all inherited members. valuesofa::linearalgebra::EigenOptions< Eigen::Transpose< T > >static. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_options_3_01_eigen_1_1_transpose_3_01_t_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_matrix_1_1map__traits-members.html:352,Modifiability,inherit,inherited,352,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Member List . This is the complete list of members for sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >, including all inherited members. const_map(const real_type *data, unsigned k)sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >inlinestatic; const_map_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; map(real_type *data, unsigned k)sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >inlinestatic; map_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; matrix_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; real_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >; sizesofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >static; value_type typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType >. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_matrix_1_1map__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_matrix_1_1map__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec-members.html:312,Modifiability,inherit,inherited,312,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Member List . This is the complete list of members for sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >, including all inherited members. EigenSparseMatrix typedefsofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >; operator()(const EigenSparseMatrix &eigenMat)sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >inline; Real typedefsofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >; TCompressedRowSparseMatrix typedefsofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >. Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_sparse_matrix_product_1_1_intersection-members.html:328,Modifiability,inherit,inherited,328,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Member List . This is the complete list of members for sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection, including all inherited members. intersectionsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection; ListPairIndex typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection; PairIndex typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection; ValuesIntersection typedefsofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_sparse_matrix_product_1_1_intersection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_sparse_matrix_product_1_1_intersection-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:787,Availability,error,errorFactorDJsofa,787,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:846,Availability,error,errorMaxsofa,846,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::mapping_test::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:305,Testability,test,testing,305,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:350,Testability,test,testing,350,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:731,Testability,test,testing,731,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:1137,Testability,test,testing,1137,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:1679,Testability,test,testing,1679,"::Mapping_test< _Mapping > Member List . This is the complete list of members for sofa::mapping_test::Mapping_test< _Mapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; deltaRangesofa::mapping_test::Mapping_test< _Mapping >; difference(const OutCoord &a, const OutCoord &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; difference(const OutVecDeriv &a, const OutVecDeriv &b)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; EigenSparseMatrix typedefsofa::mapping_test::Mapping_test< _Mapping >; epsilon()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; errorFactorDJsofa::mapping_test::Mapping_test< _Mapping >; errorMaxsofa::mapping_test::Mapping_test< _Mapping >; flagssofa::mapping_test::Mapping_test< _Mapping >; getMatrix(const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices)sofa::mapping_test::Mapping_test< _Mapping >inlineprotectedstatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::mapping_test::Mapping_test< _Mapping >; InCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; inDofssofa::mapping_test::Mapping_test< _Mapping >; infinity()sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; InMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; InVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:1966,Testability,test,testing,1966,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2035,Testability,test,testing,2035,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2067,Testability,test,testing,2067,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2409,Testability,test,testing,2409,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2544,Testability,test,testing,2544,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2619,Testability,test,testing,2619,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2704,Testability,test,testing,2704,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2784,Testability,test,testing,2784,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2868,Testability,test,testing,2868,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2933,Testability,test,testing,2933,)sofa::testing::NumericTest< _Mapping::In:,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:2983,Testability,test,testing,2983," _Mapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::mapping_test::Mapping_test< _Mapping >; mappingsofa::mapping_test::Mapping_test< _Mapping >; Mapping_test()sofa::mapping_test::Mapping_test< _Mapping >inline; Mapping_test(std::string fileName)sofa::mapping_test::Mapping_test< _Mapping >inline; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Mapping::In::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Mapping::In::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Mapping::In::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Mapping::In::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Out typedefsofa::mapping_test::Mapping_test< _Mapping >; OutCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDataMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDataVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDataVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutDOFs typedefsofa::mapping_test::Mapping_test< _Mapping >; outDofssofa::mapping_test::Mapping_test< _Mapping >; OutMatrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; preTreatment(const OutVecDeriv &f)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; ReadInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadOutVecCoord typedefsofa::mapping_tes",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:4520,Testability,test,testing,4520,"atrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; preTreatment(const OutVecDeriv &f)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; ReadInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadOutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; Real typedefsofa::mapping_test::Mapping_test< _Mapping >; rootsofa::mapping_test::Mapping_test< _Mapping >; runTest(const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; runTest(const InVecCoord &parent, const OutVecCoord expectedChild)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; seedsofa::testing::BaseTeststatic; simulationsofa::mapping_test::Mapping_test< _Mapping >; TEST_applyDJTsofa::mapping_test::Mapping_test< _Mapping >static; TEST_applyJT_matrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_ASSEMBLY_APIsofa::mapping_test::Mapping_test< _Mapping >static; TEST_buildGeometricStiffnessMatrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_GEOMETRIC_STIFFNESSsofa::mapping_test::Mapping_test< _Mapping >static; TEST_getJssofa::mapping_test::Mapping_test< _Mapping >static; TEST_getKsofa::mapping_test::Mapping_test< _Mapping >static; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Mapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:5129,Testability,test,testing,5129,"fa::mapping_test::Mapping_test< _Mapping >; ReadOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; Real typedefsofa::mapping_test::Mapping_test< _Mapping >; rootsofa::mapping_test::Mapping_test< _Mapping >; runTest(const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; runTest(const InVecCoord &parent, const OutVecCoord expectedChild)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; seedsofa::testing::BaseTeststatic; simulationsofa::mapping_test::Mapping_test< _Mapping >; TEST_applyDJTsofa::mapping_test::Mapping_test< _Mapping >static; TEST_applyJT_matrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_ASSEMBLY_APIsofa::mapping_test::Mapping_test< _Mapping >static; TEST_buildGeometricStiffnessMatrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_GEOMETRIC_STIFFNESSsofa::mapping_test::Mapping_test< _Mapping >static; TEST_getJssofa::mapping_test::Mapping_test< _Mapping >static; TEST_getKsofa::mapping_test::Mapping_test< _Mapping >static; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Mapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Mapping::In::Real >inline; WriteInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ~BaseTest() overridesofa::testing::BaseTest; ~Mapping_test() overridesofa::mapping_test::Mapping_test< _Mapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:5255,Testability,test,testing,5255,"fa::mapping_test::Mapping_test< _Mapping >; ReadOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; Real typedefsofa::mapping_test::Mapping_test< _Mapping >; rootsofa::mapping_test::Mapping_test< _Mapping >; runTest(const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; runTest(const InVecCoord &parent, const OutVecCoord expectedChild)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; seedsofa::testing::BaseTeststatic; simulationsofa::mapping_test::Mapping_test< _Mapping >; TEST_applyDJTsofa::mapping_test::Mapping_test< _Mapping >static; TEST_applyJT_matrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_ASSEMBLY_APIsofa::mapping_test::Mapping_test< _Mapping >static; TEST_buildGeometricStiffnessMatrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_GEOMETRIC_STIFFNESSsofa::mapping_test::Mapping_test< _Mapping >static; TEST_getJssofa::mapping_test::Mapping_test< _Mapping >static; TEST_getKsofa::mapping_test::Mapping_test< _Mapping >static; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Mapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Mapping::In::Real >inline; WriteInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ~BaseTest() overridesofa::testing::BaseTest; ~Mapping_test() overridesofa::mapping_test::Mapping_test< _Mapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:5406,Testability,test,testing,5406,"fa::mapping_test::Mapping_test< _Mapping >; ReadOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; Real typedefsofa::mapping_test::Mapping_test< _Mapping >; rootsofa::mapping_test::Mapping_test< _Mapping >; runTest(const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; runTest(const InVecCoord &parent, const OutVecCoord expectedChild)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; seedsofa::testing::BaseTeststatic; simulationsofa::mapping_test::Mapping_test< _Mapping >; TEST_applyDJTsofa::mapping_test::Mapping_test< _Mapping >static; TEST_applyJT_matrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_ASSEMBLY_APIsofa::mapping_test::Mapping_test< _Mapping >static; TEST_buildGeometricStiffnessMatrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_GEOMETRIC_STIFFNESSsofa::mapping_test::Mapping_test< _Mapping >static; TEST_getJssofa::mapping_test::Mapping_test< _Mapping >static; TEST_getKsofa::mapping_test::Mapping_test< _Mapping >static; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Mapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Mapping::In::Real >inline; WriteInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ~BaseTest() overridesofa::testing::BaseTest; ~Mapping_test() overridesofa::mapping_test::Mapping_test< _Mapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:5525,Testability,test,testing,5525,"fa::mapping_test::Mapping_test< _Mapping >; ReadOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; Real typedefsofa::mapping_test::Mapping_test< _Mapping >; rootsofa::mapping_test::Mapping_test< _Mapping >; runTest(const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; runTest(const InVecCoord &parent, const OutVecCoord expectedChild)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; seedsofa::testing::BaseTeststatic; simulationsofa::mapping_test::Mapping_test< _Mapping >; TEST_applyDJTsofa::mapping_test::Mapping_test< _Mapping >static; TEST_applyJT_matrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_ASSEMBLY_APIsofa::mapping_test::Mapping_test< _Mapping >static; TEST_buildGeometricStiffnessMatrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_GEOMETRIC_STIFFNESSsofa::mapping_test::Mapping_test< _Mapping >static; TEST_getJssofa::mapping_test::Mapping_test< _Mapping >static; TEST_getKsofa::mapping_test::Mapping_test< _Mapping >static; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Mapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Mapping::In::Real >inline; WriteInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ~BaseTest() overridesofa::testing::BaseTest; ~Mapping_test() overridesofa::mapping_test::Mapping_test< _Mapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:5879,Testability,test,testing,5879,"fa::mapping_test::Mapping_test< _Mapping >; ReadOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; Real typedefsofa::mapping_test::Mapping_test< _Mapping >; rootsofa::mapping_test::Mapping_test< _Mapping >; runTest(const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; runTest(const InVecCoord &parent, const OutVecCoord expectedChild)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; seedsofa::testing::BaseTeststatic; simulationsofa::mapping_test::Mapping_test< _Mapping >; TEST_applyDJTsofa::mapping_test::Mapping_test< _Mapping >static; TEST_applyJT_matrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_ASSEMBLY_APIsofa::mapping_test::Mapping_test< _Mapping >static; TEST_buildGeometricStiffnessMatrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_GEOMETRIC_STIFFNESSsofa::mapping_test::Mapping_test< _Mapping >static; TEST_getJssofa::mapping_test::Mapping_test< _Mapping >static; TEST_getKsofa::mapping_test::Mapping_test< _Mapping >static; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Mapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Mapping::In::Real >inline; WriteInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; WriteOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ~BaseTest() overridesofa::testing::BaseTest; ~Mapping_test() overridesofa::mapping_test::Mapping_test< _Mapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:1708,Availability,error,errors,1708,"st::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the sce",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:2254,Availability,failure,failure,2254," positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The te",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:2279,Availability,error,error,2279," positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The te",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:2301,Availability,error,errorMax,2301," positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The te",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3135,Availability,error,errorMax,3135,"ltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3223,Availability,error,errorMax,3223,"ltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3282,Availability,error,errorFactorDJ,3282,"lon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TE",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3399,Availability,error,errorFactorDJ,3399,"lon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TE",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3415,Availability,error,errorMax,3415,"lon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TE",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5956,Availability,failure,failure,5956,"nst OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1,",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8081,Availability,error,errorFactorDJ,8081," different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ ou",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8175,Availability,error,errorFactorDJ,8175,"al number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8291,Availability,error,errorFactorDJ,8291,");  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr so",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8307,Availability,error,errorMax,8307,");  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr so",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8353,Availability,error,errorMax,8353,"MaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8442,Availability,error,errorMax,8442,");  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8529,Availability,error,errorMax,8529,"ctors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:12837,Availability,error,errors,12837,"ng_test< _Mapping >::difference ; (; const OutVecDeriv & ; a, . const OutVecDeriv & ; b . ). inlinevirtual . ◆ getMatrix(). template<class _Mapping > . template<class EigenSparseMatrixType > . static EigenSparseMatrixType* sofa::mapping_test::Mapping_test< _Mapping >::getMatrix ; (; const type::vector< sofa::linearalgebra::BaseMatrix * > * ; matrices). inlinestaticprotected . Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. . ◆ preTreatment(). template<class _Mapping > . virtual OutVecDeriv sofa::mapping_test::Mapping_test< _Mapping >::preTreatment ; (; const OutVecDeriv & ; f). inlinevirtual . Possible child force pre-treatment, does nothing by default . ◆ runTest() [1/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parent, . const OutVecCoord ; expectedChild . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters,",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:13741,Availability,error,errors,13741,"al . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The initialization values can used when the mapping is an embedding, e.g. to attach a mesh to a rigid object we compute the local coordinates of the vertices based on their world coordinates and the frame coordinates. In other cases, such as mapping from pairs of points to distances, no initialization values are necessary, an one can use the same values as for testing, i.e. runTest( xp, expected_xc, xp, expected_xc).; Parameters. parentInitinitial parent position ; childInitinitial child position ; parentNewnew parent position ; expectedChildNewexpected position of the child corresponding to the new parent position . sofamapping_testMapping_test; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:12991,Integrability,depend,depend,12991,"rixType > . static EigenSparseMatrixType* sofa::mapping_test::Mapping_test< _Mapping >::getMatrix ; (; const type::vector< sofa::linearalgebra::BaseMatrix * > * ; matrices). inlinestaticprotected . Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. . ◆ preTreatment(). template<class _Mapping > . virtual OutVecDeriv sofa::mapping_test::Mapping_test< _Mapping >::preTreatment ; (; const OutVecDeriv & ; f). inlinevirtual . Possible child force pre-treatment, does nothing by default . ◆ runTest() [1/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parent, . const OutVecCoord ; expectedChild . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3661,Modifiability,inherit,inherited,3661,"the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4662,Modifiability,inherit,inherited,4662,"est; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual vo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5365,Modifiability,inherit,inherited,5365,"constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSpars",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5515,Modifiability,inherit,inherited,5515,"constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSpars",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5742,Modifiability,inherit,inherited,5742,"r Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the m",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:6422,Modifiability,inherit,inherited,6422,"name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:6642,Modifiability,inherit,inherited,6642,"tions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:1530,Security,validat,validate,1530,"inite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:1768,Security,validat,validate,1768,"lyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:1860,Security,validat,validate,1860,"s instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The m",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:1986,Security,validat,validate,1986,"it, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::e",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:428,Testability,test,tests,428,"﻿. SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mappin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:465,Testability,test,test,465,"﻿. SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mappin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:751,Testability,test,tests,751,"﻿. SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mappin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:788,Testability,test,test,788,"﻿. SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mappin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:866,Testability,test,test,866," Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:951,Testability,test,test,951," Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:1207,Testability,test,tests,1207," Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:2532,Testability,test,tested,2532,"ous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing op",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:2750,Testability,test,tests,2750,"mations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:2852,Testability,test,tests,2852," Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mapping->applyDJT, we set the child force, and we compare the parent force before and after a small displacement. The magnitude of the small random changes applied in finite differences is between deltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Att",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3150,Testability,test,test,3150,"ltaRange.first*epsilon and deltaRange.second*epsilon, and a failure is issued if the error is greater than errorMax*epsilon, where epsilon=std::numeric_limits<Real>::epsilon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3302,Testability,test,test,3302,"lon() is 1.19209e-07 for float and 2.22045e-16 for double.; AuthorFrançois Faure ; Date2013 . Public Attributes; core::Mapping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TE",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3491,Testability,test,testing,3491,"pping< In, Out > * mapping;  the mapping to be tested More...;  ; InDOFs::SPtr inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3618,Testability,test,testing,3618,"...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3682,Testability,test,testing,3682,"the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3707,Testability,test,testing,3707,"the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3755,Testability,test,testing,3755,"the constructor an re-used in the tests. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3871,Testability,test,testing,3871,"ests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileNam",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:3965,Testability,test,testing,3965," each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv differe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4068,Testability,test,testing,4068,"his epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const Ou",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4159,Testability,test,testing,4159,"x;  The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4261,Testability,test,testing,4261,"imits<Real>::epsilon. More...;  ; Real errorFactorDJ;  The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4387,Testability,test,testing,4387," difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. More...;  ; unsigned char flags;  testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4573,Testability,test,testing,4573,"with precaution. Please implement the missing API in the mapping rather than not testing it. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:4683,Testability,test,testing,4683,"est; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static constexpr unsigned char TEST_getJs = 1;  testing getJs used in assembly API More...;  ; static constexpr unsigned char TEST_getK = 2;  testing getK used in assembly API More...;  ; static constexpr unsigned char TEST_applyJT_matrix = 4;  testing applyJT on matrices More...;  ; static constexpr unsigned char TEST_applyDJT = 8;  testing applyDJT More...;  ; static constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual vo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5386,Testability,test,testing,5386,"constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSpars",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5536,Testability,test,testing,5536,"constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSpars",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5763,Testability,test,testing,5763,"r Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the m",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:6443,Testability,test,testing,6443,"name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:6663,Testability,test,testing,6663,"tions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8194,Testability,test,test,8194,");  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr so",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8456,Testability,test,test,8456,"ctors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8677,Testability,test,testing,8677,"between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mappin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8804,Testability,test,testing,8804,"pping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9074,Testability,test,tested,9074," double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9389,Testability,test,tests,9389,"orMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. static",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9567,Testability,test,tests,9567,"_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRI",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9727,Testability,test,testing,9727,"ion. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping >",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9910,Testability,test,testing,9910,"apping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . con",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:10121,Testability,test,testing,10121,"ing_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getK = 2. staticconstexpr . testing getK used in assembly API . Constructor details. ◆ Mapping_test() [1/2]. template<class _Mapping > . sofa::mapping_",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:10369,Testability,test,testing,10369, tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getK = 2. staticconstexpr . testing getK used in assembly API . Constructor details. ◆ Mapping_test() [1/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; ). inline . ◆ Mapping_test() [2/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; std::string ; fileName). inline . ◆ ~Mapping_test(). template<c,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:10644,Testability,test,testing,10644,"ng_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getK = 2. staticconstexpr . testing getK used in assembly API . Constructor details. ◆ Mapping_test() [1/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; ). inline . ◆ Mapping_test() [2/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; std::string ; fileName). inline . ◆ ~Mapping_test(). template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::~Mapping_test ; (; ). inlineoverride . Function details. ◆ difference() [1/2]. template<class _Mapping > . virtual OutDeriv sofa::mapping_test::Mapping_test< _Mapping >::difference ; (; const OutCoord & ; a, . const Ou",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:10843,Testability,test,testing,10843,"ing >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getK = 2. staticconstexpr . testing getK used in assembly API . Constructor details. ◆ Mapping_test() [1/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; ). inline . ◆ Mapping_test() [2/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; std::string ; fileName). inline . ◆ ~Mapping_test(). template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::~Mapping_test ; (; ). inlineoverride . Function details. ◆ difference() [1/2]. template<class _Mapping > . virtual OutDeriv sofa::mapping_test::Mapping_test< _Mapping >::difference ; (; const OutCoord & ; a, . const OutCoord & ; b . ). inlinevirtual . Returns OutCoord subtraction a-b . ◆ difference() [2/2]. template<class _Mapping > . virtual OutVecDeriv sofa::mapping_test::Mapping_test< _Mapping >::differ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:11024,Testability,test,testing,11024,"test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getK = 2. staticconstexpr . testing getK used in assembly API . Constructor details. ◆ Mapping_test() [1/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; ). inline . ◆ Mapping_test() [2/2]. template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::Mapping_test ; (; std::string ; fileName). inline . ◆ ~Mapping_test(). template<class _Mapping > . sofa::mapping_test::Mapping_test< _Mapping >::~Mapping_test ; (; ). inlineoverride . Function details. ◆ difference() [1/2]. template<class _Mapping > . virtual OutDeriv sofa::mapping_test::Mapping_test< _Mapping >::difference ; (; const OutCoord & ; a, . const OutCoord & ; b . ). inlinevirtual . Returns OutCoord subtraction a-b . ◆ difference() [2/2]. template<class _Mapping > . virtual OutVecDeriv sofa::mapping_test::Mapping_test< _Mapping >::difference ; (; const OutVecDeriv & ; a, . const OutVecDeriv & ; b . ). inlinevirtual . ◆ getMatrix(). template<class _Mapping > . template<class EigenSparseMatrixType > . static EigenSp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:13207,Testability,test,tested,13207,"icprotected . Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. . ◆ preTreatment(). template<class _Mapping > . virtual OutVecDeriv sofa::mapping_test::Mapping_test< _Mapping >::preTreatment ; (; const OutVecDeriv & ; f). inlinevirtual . Possible child force pre-treatment, does nothing by default . ◆ runTest() [1/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parent, . const OutVecCoord ; expectedChild . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The initialization values can used when the mapping is an embedding, e.g. to attach a mesh to a rigid object we compute the local coordinates of the vertices based on their world coo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:13983,Testability,test,tested,13983,"al . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The initialization values can used when the mapping is an embedding, e.g. to attach a mesh to a rigid object we compute the local coordinates of the vertices based on their world coordinates and the frame coordinates. In other cases, such as mapping from pairs of points to distances, no initialization values are necessary, an one can use the same values as for testing, i.e. runTest( xp, expected_xc, xp, expected_xc).; Parameters. parentInitinitial parent position ; childInitinitial child position ; parentNewnew parent position ; expectedChildNewexpected position of the child corresponding to the new parent position . sofamapping_testMapping_test; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:14380,Testability,test,testing,14380,"al . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The initialization values can used when the mapping is an embedding, e.g. to attach a mesh to a rigid object we compute the local coordinates of the vertices based on their world coordinates and the frame coordinates. In other cases, such as mapping from pairs of points to distances, no initialization values are necessary, an one can use the same values as for testing, i.e. runTest( xp, expected_xc, xp, expected_xc).; Parameters. parentInitinitial parent position ; childInitinitial child position ; parentNewnew parent position ; expectedChildNewexpected position of the child corresponding to the new parent position . sofamapping_testMapping_test; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1common_1_1_visitor_execute_func-members.html:260,Modifiability,inherit,inherited,260,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::common::VisitorExecuteFunc Member List . This is the complete list of members for sofa::simulation::common::VisitorExecuteFunc, including all inherited members. ctxsofa::simulation::common::VisitorExecuteFuncprotected; operator()(Visitor *pv)sofa::simulation::common::VisitorExecuteFuncinline; operator()(Visitor v)sofa::simulation::common::VisitorExecuteFuncinline; precomputedTraversalOrdersofa::simulation::common::VisitorExecuteFunc; prepareVisitor(sofa::simulation::Visitor *v)sofa::simulation::common::VisitorExecuteFuncinlineprotected; prepareVisitor(sofa::simulation::BaseMechanicalVisitor *mv)sofa::simulation::common::VisitorExecuteFuncinlineprotected; VisitorExecuteFunc(core::objectmodel::BaseContext &ctx, bool precomputedTraversalOrder=false)sofa::simulation::common::VisitorExecuteFuncinline. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1common_1_1_visitor_execute_func-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1common_1_1_visitor_execute_func-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct-members.html:264,Modifiability,inherit,inherited,264,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::graph::DAGNode::StatusStruct Member List . This is the complete list of members for sofa::simulation::graph::DAGNode::StatusStruct, including all inherited members. operator!=(const VisitedStatus &s) constsofa::simulation::graph::DAGNode::StatusStructinline; operator!=(const StatusStruct &s) constsofa::simulation::graph::DAGNode::StatusStructinline; operator=(const VisitedStatus &s)sofa::simulation::graph::DAGNode::StatusStructinline; operator==(const VisitedStatus &s) constsofa::simulation::graph::DAGNode::StatusStructinline; operator==(const StatusStruct &s) constsofa::simulation::graph::DAGNode::StatusStructinline; statussofa::simulation::graph::DAGNode::StatusStruct; StatusStruct()sofa::simulation::graph::DAGNode::StatusStructinline; StatusStruct(const VisitedStatus &s)sofa::simulation::graph::DAGNode::StatusStructinline. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html:310,Integrability,wrap,wrapper,310,﻿. SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::graph::DAGNode::StatusStruct Struct Reference . #include <DAGNode.h>; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) ; More...; Detailed Description; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) . Public Attributes; VisitedStatus status;  . Public Member Functions;  StatusStruct ();  ;  StatusStruct (const VisitedStatus &s);  ; void operator= (const VisitedStatus &s);  ; bool operator== (const VisitedStatus &s) const;  ; bool operator== (const StatusStruct &s) const;  ; bool operator!= (const VisitedStatus &s) const;  ; bool operator!= (const StatusStruct &s) const;  . Attribute details. ◆ status. VisitedStatus sofa::simulation::graph::DAGNode::StatusStruct::status. Constructor details. ◆ StatusStruct() [1/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; ). inline . ◆ StatusStruct() [2/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; const VisitedStatus & ; s). inline . Function details. ◆ operator!=() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const StatusStruct & ; s); const. inline . ◆ operator!=() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const VisitedStatus & ; s); const. inline . ◆ operator=(). void sofa::simulation::graph::DAGNode::StatusStruct::operator= ; (; const VisitedStatus & ; s). inline . ◆ operator==() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const StatusStruct & ; s); const. inline . ◆ operator==() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const VisitedStatus & ; s); const. inline . sofasimulationgraphDAGNodeStatusStruct; Genera,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html:446,Integrability,wrap,wrapper,446,﻿. SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::graph::DAGNode::StatusStruct Struct Reference . #include <DAGNode.h>; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) ; More...; Detailed Description; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) . Public Attributes; VisitedStatus status;  . Public Member Functions;  StatusStruct ();  ;  StatusStruct (const VisitedStatus &s);  ; void operator= (const VisitedStatus &s);  ; bool operator== (const VisitedStatus &s) const;  ; bool operator== (const StatusStruct &s) const;  ; bool operator!= (const VisitedStatus &s) const;  ; bool operator!= (const StatusStruct &s) const;  . Attribute details. ◆ status. VisitedStatus sofa::simulation::graph::DAGNode::StatusStruct::status. Constructor details. ◆ StatusStruct() [1/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; ). inline . ◆ StatusStruct() [2/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; const VisitedStatus & ; s). inline . Function details. ◆ operator!=() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const StatusStruct & ; s); const. inline . ◆ operator!=() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const VisitedStatus & ; s); const. inline . ◆ operator=(). void sofa::simulation::graph::DAGNode::StatusStruct::operator= ; (; const VisitedStatus & ; s). inline . ◆ operator==() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const StatusStruct & ; s); const. inline . ◆ operator==() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const VisitedStatus & ; s); const. inline . sofasimulationgraphDAGNodeStatusStruct; Genera,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_range-members.html:240,Modifiability,inherit,inherited,240,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::Range< InputIt > Member List . This is the complete list of members for sofa::simulation::Range< InputIt >, including all inherited members. endsofa::simulation::Range< InputIt >; Range(InputIt s, InputIt e)sofa::simulation::Range< InputIt >inline; startsofa::simulation::Range< InputIt >. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_range-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_range-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneLoader::Listener Member List . This is the complete list of members for sofa::simulation::SceneLoader::Listener, including all inherited members. rightAfterLoadingScene(sofa::simulation::NodeSPtr, SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual; rightAfterReloadingScene(sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual; rightBeforeLoadingScene(SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual; rightBeforeReloadingScene(SceneLoader *sceneLoader)sofa::simulation::SceneLoader::Listenervirtual. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html:323,Performance,load,loaded,323,"﻿. SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoader::Listener Struct Reference . #include <SceneLoaderFactory.h>; to be able to inform when a scene is loaded ; More...; Detailed Description; to be able to inform when a scene is loaded . Public Member Functions; virtual void rightBeforeLoadingScene (SceneLoader *sceneLoader);  callback called just before loading the scene file More...;  ; virtual void rightAfterLoadingScene (sofa::simulation::NodeSPtr, SceneLoader *sceneLoader);  callback called just after loading the scene file More...;  ; virtual void rightBeforeReloadingScene (SceneLoader *sceneLoader);  callback called just before reloading the scene file More...;  ; virtual void rightAfterReloadingScene (sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader);  callback called just after reloading the scene file More...;  . Function details. ◆ rightAfterLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterLoadingScene ; (; sofa::simulation::NodeSPtr ; , . SceneLoader * ; sceneLoader . ). virtual . callback called just after loading the scene file . ◆ rightAfterReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterReloadingScene ; (; sofa::simulation::NodeSPtr ; root, . SceneLoader * ; sceneLoader . ). virtual . callback called just after reloading the scene file . ◆ rightBeforeLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeLoadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before loading the scene file . ◆ rightBeforeReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeReloadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before reloading the scene file . sofasimulationSceneLoaderListener; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html:400,Performance,load,loaded,400,"﻿. SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoader::Listener Struct Reference . #include <SceneLoaderFactory.h>; to be able to inform when a scene is loaded ; More...; Detailed Description; to be able to inform when a scene is loaded . Public Member Functions; virtual void rightBeforeLoadingScene (SceneLoader *sceneLoader);  callback called just before loading the scene file More...;  ; virtual void rightAfterLoadingScene (sofa::simulation::NodeSPtr, SceneLoader *sceneLoader);  callback called just after loading the scene file More...;  ; virtual void rightBeforeReloadingScene (SceneLoader *sceneLoader);  callback called just before reloading the scene file More...;  ; virtual void rightAfterReloadingScene (sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader);  callback called just after reloading the scene file More...;  . Function details. ◆ rightAfterLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterLoadingScene ; (; sofa::simulation::NodeSPtr ; , . SceneLoader * ; sceneLoader . ). virtual . callback called just after loading the scene file . ◆ rightAfterReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterReloadingScene ; (; sofa::simulation::NodeSPtr ; root, . SceneLoader * ; sceneLoader . ). virtual . callback called just after reloading the scene file . ◆ rightBeforeLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeLoadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before loading the scene file . ◆ rightBeforeReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeReloadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before reloading the scene file . sofasimulationSceneLoaderListener; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html:528,Performance,load,loading,528,"﻿. SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoader::Listener Struct Reference . #include <SceneLoaderFactory.h>; to be able to inform when a scene is loaded ; More...; Detailed Description; to be able to inform when a scene is loaded . Public Member Functions; virtual void rightBeforeLoadingScene (SceneLoader *sceneLoader);  callback called just before loading the scene file More...;  ; virtual void rightAfterLoadingScene (sofa::simulation::NodeSPtr, SceneLoader *sceneLoader);  callback called just after loading the scene file More...;  ; virtual void rightBeforeReloadingScene (SceneLoader *sceneLoader);  callback called just before reloading the scene file More...;  ; virtual void rightAfterReloadingScene (sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader);  callback called just after reloading the scene file More...;  . Function details. ◆ rightAfterLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterLoadingScene ; (; sofa::simulation::NodeSPtr ; , . SceneLoader * ; sceneLoader . ). virtual . callback called just after loading the scene file . ◆ rightAfterReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterReloadingScene ; (; sofa::simulation::NodeSPtr ; root, . SceneLoader * ; sceneLoader . ). virtual . callback called just after reloading the scene file . ◆ rightBeforeLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeLoadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before loading the scene file . ◆ rightBeforeReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeReloadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before reloading the scene file . sofasimulationSceneLoaderListener; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html:683,Performance,load,loading,683,"﻿. SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoader::Listener Struct Reference . #include <SceneLoaderFactory.h>; to be able to inform when a scene is loaded ; More...; Detailed Description; to be able to inform when a scene is loaded . Public Member Functions; virtual void rightBeforeLoadingScene (SceneLoader *sceneLoader);  callback called just before loading the scene file More...;  ; virtual void rightAfterLoadingScene (sofa::simulation::NodeSPtr, SceneLoader *sceneLoader);  callback called just after loading the scene file More...;  ; virtual void rightBeforeReloadingScene (SceneLoader *sceneLoader);  callback called just before reloading the scene file More...;  ; virtual void rightAfterReloadingScene (sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader);  callback called just after reloading the scene file More...;  . Function details. ◆ rightAfterLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterLoadingScene ; (; sofa::simulation::NodeSPtr ; , . SceneLoader * ; sceneLoader . ). virtual . callback called just after loading the scene file . ◆ rightAfterReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterReloadingScene ; (; sofa::simulation::NodeSPtr ; root, . SceneLoader * ; sceneLoader . ). virtual . callback called just after reloading the scene file . ◆ rightBeforeLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeLoadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before loading the scene file . ◆ rightBeforeReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeReloadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before reloading the scene file . sofasimulationSceneLoaderListener; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html:1238,Performance,load,loading,1238,"﻿. SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoader::Listener Struct Reference . #include <SceneLoaderFactory.h>; to be able to inform when a scene is loaded ; More...; Detailed Description; to be able to inform when a scene is loaded . Public Member Functions; virtual void rightBeforeLoadingScene (SceneLoader *sceneLoader);  callback called just before loading the scene file More...;  ; virtual void rightAfterLoadingScene (sofa::simulation::NodeSPtr, SceneLoader *sceneLoader);  callback called just after loading the scene file More...;  ; virtual void rightBeforeReloadingScene (SceneLoader *sceneLoader);  callback called just before reloading the scene file More...;  ; virtual void rightAfterReloadingScene (sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader);  callback called just after reloading the scene file More...;  . Function details. ◆ rightAfterLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterLoadingScene ; (; sofa::simulation::NodeSPtr ; , . SceneLoader * ; sceneLoader . ). virtual . callback called just after loading the scene file . ◆ rightAfterReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterReloadingScene ; (; sofa::simulation::NodeSPtr ; root, . SceneLoader * ; sceneLoader . ). virtual . callback called just after reloading the scene file . ◆ rightBeforeLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeLoadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before loading the scene file . ◆ rightBeforeReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeReloadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before reloading the scene file . sofasimulationSceneLoaderListener; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html:1675,Performance,load,loading,1675,"﻿. SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoader::Listener Struct Reference . #include <SceneLoaderFactory.h>; to be able to inform when a scene is loaded ; More...; Detailed Description; to be able to inform when a scene is loaded . Public Member Functions; virtual void rightBeforeLoadingScene (SceneLoader *sceneLoader);  callback called just before loading the scene file More...;  ; virtual void rightAfterLoadingScene (sofa::simulation::NodeSPtr, SceneLoader *sceneLoader);  callback called just after loading the scene file More...;  ; virtual void rightBeforeReloadingScene (SceneLoader *sceneLoader);  callback called just before reloading the scene file More...;  ; virtual void rightAfterReloadingScene (sofa::simulation::NodeSPtr root, SceneLoader *sceneLoader);  callback called just after reloading the scene file More...;  . Function details. ◆ rightAfterLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterLoadingScene ; (; sofa::simulation::NodeSPtr ; , . SceneLoader * ; sceneLoader . ). virtual . callback called just after loading the scene file . ◆ rightAfterReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightAfterReloadingScene ; (; sofa::simulation::NodeSPtr ; root, . SceneLoader * ; sceneLoader . ). virtual . callback called just after reloading the scene file . ◆ rightBeforeLoadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeLoadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before loading the scene file . ◆ rightBeforeReloadingScene(). void sofa::simulation::SceneLoader::Listener::rightBeforeReloadingScene ; (; SceneLoader * ; sceneLoader). virtual . callback called just before reloading the scene file . sofasimulationSceneLoaderListener; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1_scene_loader_1_1_listener.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:106,Testability,test,testing,106,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:202,Testability,test,testing,202,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:290,Testability,test,testing,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:359,Testability,test,testing,359,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:418,Testability,test,testing,418,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:473,Testability,test,testing,473,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:542,Testability,test,testing,542,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:597,Testability,test,testing,597,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:651,Testability,test,testing,651,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:722,Testability,test,testing,722,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:780,Testability,test,testing,780,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:886,Testability,test,testing,886,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:956,Testability,test,testing,956,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:1061,Testability,test,testing,1061,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::data_traits< _DataTypes > Struct Template Reference . #include <NumericTest.h>; Detailed Description; template<class _DataTypes>; struct sofa::testing::data_traits< _DataTypes >; Helpers for DataTypes. Includes copies to and from vectors of scalars. . Static Public Member Functions; template<class VectorOfScalars > ; static void VecCoord_to_Vector (VectorOfScalars &vec, const VecCoord &vcoord);  Resize a vector of scalars, and copies a VecCoord in it. More...;  ; template<class VectorOfScalars > ; static void VecDeriv_to_Vector (VectorOfScalars &vec, const VecDeriv vderiv);  Resize a vector of scalars, and copies a VecDeriv in it. More...;  . Function details. ◆ VecCoord_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecCoord_to_Vector ; (; VectorOfScalars & ; vec, . const VecCoord & ; vcoord . ). inlinestatic . Resize a vector of scalars, and copies a VecCoord in it. . ◆ VecDeriv_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecDeriv_to_Vector ; (; VectorOfScalars & ; vec, . const VecDeriv ; vderiv . ). inlinestatic . Resize a vector of scalars, and copies a VecDeriv in it. . Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorspatial_dimensions . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorcoord_total_size . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorderiv_total_size . sofatestingdata_traits; Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html:217,Testability,test,testing,217,"﻿. SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::data_traits< _DataTypes > Struct Template Reference . #include <NumericTest.h>; Detailed Description; template<class _DataTypes>; struct sofa::testing::data_traits< _DataTypes >; Helpers for DataTypes. Includes copies to and from vectors of scalars. . Static Public Member Functions; template<class VectorOfScalars > ; static void VecCoord_to_Vector (VectorOfScalars &vec, const VecCoord &vcoord);  Resize a vector of scalars, and copies a VecCoord in it. More...;  ; template<class VectorOfScalars > ; static void VecDeriv_to_Vector (VectorOfScalars &vec, const VecDeriv vderiv);  Resize a vector of scalars, and copies a VecDeriv in it. More...;  . Function details. ◆ VecCoord_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecCoord_to_Vector ; (; VectorOfScalars & ; vec, . const VecCoord & ; vcoord . ). inlinestatic . Resize a vector of scalars, and copies a VecCoord in it. . ◆ VecDeriv_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecDeriv_to_Vector ; (; VectorOfScalars & ; vec, . const VecDeriv ; vderiv . ). inlinestatic . Resize a vector of scalars, and copies a VecDeriv in it. . Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorspatial_dimensions . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorcoord_total_size . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorderiv_total_size . sofatestingdata_traits; Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html:369,Testability,test,testing,369,"﻿. SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::data_traits< _DataTypes > Struct Template Reference . #include <NumericTest.h>; Detailed Description; template<class _DataTypes>; struct sofa::testing::data_traits< _DataTypes >; Helpers for DataTypes. Includes copies to and from vectors of scalars. . Static Public Member Functions; template<class VectorOfScalars > ; static void VecCoord_to_Vector (VectorOfScalars &vec, const VecCoord &vcoord);  Resize a vector of scalars, and copies a VecCoord in it. More...;  ; template<class VectorOfScalars > ; static void VecDeriv_to_Vector (VectorOfScalars &vec, const VecDeriv vderiv);  Resize a vector of scalars, and copies a VecDeriv in it. More...;  . Function details. ◆ VecCoord_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecCoord_to_Vector ; (; VectorOfScalars & ; vec, . const VecCoord & ; vcoord . ). inlinestatic . Resize a vector of scalars, and copies a VecCoord in it. . ◆ VecDeriv_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecDeriv_to_Vector ; (; VectorOfScalars & ; vec, . const VecDeriv ; vderiv . ). inlinestatic . Resize a vector of scalars, and copies a VecDeriv in it. . Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorspatial_dimensions . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorcoord_total_size . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorderiv_total_size . sofatestingdata_traits; Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html:1002,Testability,test,testing,1002,"﻿. SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::data_traits< _DataTypes > Struct Template Reference . #include <NumericTest.h>; Detailed Description; template<class _DataTypes>; struct sofa::testing::data_traits< _DataTypes >; Helpers for DataTypes. Includes copies to and from vectors of scalars. . Static Public Member Functions; template<class VectorOfScalars > ; static void VecCoord_to_Vector (VectorOfScalars &vec, const VecCoord &vcoord);  Resize a vector of scalars, and copies a VecCoord in it. More...;  ; template<class VectorOfScalars > ; static void VecDeriv_to_Vector (VectorOfScalars &vec, const VecDeriv vderiv);  Resize a vector of scalars, and copies a VecDeriv in it. More...;  . Function details. ◆ VecCoord_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecCoord_to_Vector ; (; VectorOfScalars & ; vec, . const VecCoord & ; vcoord . ). inlinestatic . Resize a vector of scalars, and copies a VecCoord in it. . ◆ VecDeriv_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecDeriv_to_Vector ; (; VectorOfScalars & ; vec, . const VecDeriv ; vderiv . ). inlinestatic . Resize a vector of scalars, and copies a VecDeriv in it. . Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorspatial_dimensions . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorcoord_total_size . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorderiv_total_size . sofatestingdata_traits; Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html:1301,Testability,test,testing,1301,"﻿. SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::data_traits< _DataTypes > Struct Template Reference . #include <NumericTest.h>; Detailed Description; template<class _DataTypes>; struct sofa::testing::data_traits< _DataTypes >; Helpers for DataTypes. Includes copies to and from vectors of scalars. . Static Public Member Functions; template<class VectorOfScalars > ; static void VecCoord_to_Vector (VectorOfScalars &vec, const VecCoord &vcoord);  Resize a vector of scalars, and copies a VecCoord in it. More...;  ; template<class VectorOfScalars > ; static void VecDeriv_to_Vector (VectorOfScalars &vec, const VecDeriv vderiv);  Resize a vector of scalars, and copies a VecDeriv in it. More...;  . Function details. ◆ VecCoord_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecCoord_to_Vector ; (; VectorOfScalars & ; vec, . const VecCoord & ; vcoord . ). inlinestatic . Resize a vector of scalars, and copies a VecCoord in it. . ◆ VecDeriv_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecDeriv_to_Vector ; (; VectorOfScalars & ; vec, . const VecDeriv ; vderiv . ). inlinestatic . Resize a vector of scalars, and copies a VecDeriv in it. . Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorspatial_dimensions . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorcoord_total_size . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorderiv_total_size . sofatestingdata_traits; Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html:280,Modifiability,inherit,inherited,280,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, isVector >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, isVector >static. Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html:106,Testability,test,testing,106,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, isVector >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, isVector >static. Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html:216,Testability,test,testing,216,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, isVector >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, isVector >static. Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html:383,Testability,test,testing,383,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, isVector >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, isVector >static. Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N, bool isVector> . static void sofa::testing::setRotWrapper< DataTypes, N, isVector >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). static . sofatestingsetRotWrapper; Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html:231,Testability,test,testing,231,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N, bool isVector> . static void sofa::testing::setRotWrapper< DataTypes, N, isVector >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). static . sofatestingsetRotWrapper; Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html:568,Testability,test,testing,568,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N, bool isVector> . static void sofa::testing::setRotWrapper< DataTypes, N, isVector >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). static . sofatestingsetRotWrapper; Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html:274,Modifiability,inherit,inherited,274,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, 2, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, 2, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, 2, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html:106,Testability,test,testing,106,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, 2, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, 2, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, 2, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html:213,Testability,test,testing,213,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, 2, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, 2, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, 2, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html:377,Testability,test,testing,377,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, 2, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, 2, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, 2, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes > . static void sofa::testing::setRotWrapper< DataTypes, 2, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, 2, false >; Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html:228,Testability,test,testing,228,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes > . static void sofa::testing::setRotWrapper< DataTypes, 2, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, 2, false >; Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html:533,Testability,test,testing,533,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes > . static void sofa::testing::setRotWrapper< DataTypes, 2, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, 2, false >; Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html:274,Modifiability,inherit,inherited,274,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html:106,Testability,test,testing,106,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html:213,Testability,test,testing,213,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html:377,Testability,test,testing,377,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, false >; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html:228,Testability,test,testing,228,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, false >; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html:547,Testability,test,testing,547,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, false >; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html:272,Modifiability,inherit,inherited,272,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, true > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, true >, including all inherited members. setRot(typename DataTypes::Coord &, const sofa::type::Quat< SReal > &)sofa::testing::setRotWrapper< DataTypes, N, true >inlinestatic. Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html:106,Testability,test,testing,106,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, true > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, true >, including all inherited members. setRot(typename DataTypes::Coord &, const sofa::type::Quat< SReal > &)sofa::testing::setRotWrapper< DataTypes, N, true >inlinestatic. Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html:212,Testability,test,testing,212,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, true > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, true >, including all inherited members. setRot(typename DataTypes::Coord &, const sofa::type::Quat< SReal > &)sofa::testing::setRotWrapper< DataTypes, N, true >inlinestatic. Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html:367,Testability,test,testing,367,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, true > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, true >, including all inherited members. setRot(typename DataTypes::Coord &, const sofa::type::Quat< SReal > &)sofa::testing::setRotWrapper< DataTypes, N, true >inlinestatic. Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &, const sofa::type::Quat< SReal > &);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, true >::setRot ; (; typename DataTypes::Coord & ; , . const sofa::type::Quat< SReal > & ;  . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, true >; Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html:227,Testability,test,testing,227,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &, const sofa::type::Quat< SReal > &);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, true >::setRot ; (; typename DataTypes::Coord & ; , . const sofa::type::Quat< SReal > & ;  . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, true >; Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html:537,Testability,test,testing,537,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &, const sofa::type::Quat< SReal > &);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, true >::setRot ; (; typename DataTypes::Coord & ; , . const sofa::type::Quat< SReal > & ;  . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, true >; Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:242,Modifiability,inherit,inherited,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:106,Testability,test,testing,106,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:197,Testability,test,testing,197,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:277,Testability,test,testing,277,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:311,Testability,test,testing,311,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:370,Testability,test,testing,370,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:449,Testability,test,testing,449,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:505,Testability,test,testing,505,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:537,Testability,test,testing,537,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:613,Testability,test,testing,613,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:735,Testability,test,testing,735,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:797,Testability,test,testing,797,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:869,Testability,test,testing,869,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:936,Testability,test,testing,936,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1007,Testability,test,testing,1007,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1059,Testability,test,testing,1059,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1109,Testability,test,testing,1109,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1159,Testability,test,testing,1159,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1200,Testability,test,testing,1200,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1263,Testability,test,testing,1263,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1376,Testability,test,testing,1376,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1514,Testability,test,testing,1514,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1620,Testability,test,testing,1620,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:1683,Testability,test,testing,1683,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:2194,Availability,failure,failure,2194,"zes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to compare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:5579,Availability,failure,failure,5579,"t< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SReal> . template<Size N, typename Real , typename Vector2 > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const Vector2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes . sofatestingNumericTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:702,Modifiability,inherit,inherited,702,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:2896,Modifiability,inherit,inherited,2896,"pare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matr",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3058,Modifiability,inherit,inherited,3058,"pare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matr",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:242,Testability,test,testing,242,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:427,Testability,test,testing,427,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:538,Testability,test,testing,538,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:723,Testability,test,testing,723,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:2917,Testability,test,testing,2917,"pare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matr",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:2942,Testability,test,testing,2942,"pare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matr",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:2990,Testability,test,testing,2990,"pare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matr",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3079,Testability,test,testing,3079,"pare vectors . template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matr",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3249,Testability,test,testing,3249,"l vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ; template<Size N, typename Real , typename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3393,Testability,test,testing,3393,"ename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::M",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3549,Testability,test,testing,3549,"ntries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matr",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3690,Testability,test,testing,3690,":type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; doub",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3967,Testability,test,testing,3967,"ing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::Nume",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:4338,Testability,test,testing,4338,"tatic Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class C",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:4663,Testability,test,testing,4663,"bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . templa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:4811,Testability,test,testing,4811,"io*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const so",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:4981,Testability,test,testing,4981,">::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SRea",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:5147,Testability,test,testing,5147,"ve different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SReal> . template<Size N, typename Real , typename Vector2 > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const Vecto",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:5401,Testability,test,testing,5401,"t< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SReal> . template<Size N, typename Real , typename Vector2 > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const Vector2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes . sofatestingNumericTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:5726,Testability,test,testing,5726,"t< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SReal> . template<Size N, typename Real , typename Vector2 > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const Vector2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes . sofatestingNumericTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:6073,Testability,test,testing,6073,"t< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SReal> . template<Size N, typename Real , typename Vector2 > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const Vector2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes . sofatestingNumericTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:106,Testability,test,testing,106,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:202,Testability,test,testing,202,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:287,Testability,test,testing,287,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:474,Testability,test,testing,474,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:685,Testability,test,testing,685,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:900,Testability,test,testing,900,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1040,Testability,test,testing,1040,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1103,Testability,test,testing,1103,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1286,Testability,test,testing,1286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1493,Testability,test,testing,1493,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1557,Testability,test,testing,1557,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1636,Testability,test,testing,1636,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1692,Testability,test,testing,1692,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1724,Testability,test,testing,1724,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1800,Testability,test,testing,1800,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1922,Testability,test,testing,1922,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:1984,Testability,test,testing,1984,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2056,Testability,test,testing,2056,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2123,Testability,test,testing,2123,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2194,Testability,test,testing,2194,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2246,Testability,test,testing,2246,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2296,Testability,test,testing,2296,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2346,Testability,test,testing,2346,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2387,Testability,test,testing,2387,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2450,Testability,test,testing,2450,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2563,Testability,test,testing,2563,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2701,Testability,test,testing,2701,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2807,Testability,test,testing,2807,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:2870,Testability,test,testing,2870,"yFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< SReal >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< SReal >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< SReal >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< SReal >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< SReal >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< SReal >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3512,Availability,failure,failure,3512,"agnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlines",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:1892,Modifiability,inherit,inherited,1892," Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference bet",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3012,Modifiability,inherit,inherited,3012,"t sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). temp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3174,Modifiability,inherit,inherited,3174,"t sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). temp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3311,Modifiability,inherit,inherited,3311,"real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix<",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3684,Modifiability,inherit,inherited,3684,", or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex >",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3921,Modifiability,inherit,inherited,3921,"orresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BSto",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:19,Testability,test,testing,19,"﻿. SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::SparseMatrixTest< TReal > Struct Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:217,Testability,test,testing,217,"﻿. SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::SparseMatrixTest< TReal > Struct Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:341,Testability,test,testing,341,"﻿. SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::SparseMatrixTest< TReal > Struct Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:1913,Testability,test,testing,1913," Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference bet",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3033,Testability,test,testing,3033,"t sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). temp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3058,Testability,test,testing,3058,"t sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). temp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3106,Testability,test,testing,3106,"t sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). temp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3195,Testability,test,testing,3195,"t sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). temp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3332,Testability,test,testing,3332,"real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix<",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3705,Testability,test,testing,3705,", or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex >",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3942,Testability,test,testing,3942,"orresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BSto",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:4300,Testability,test,testing,4300,">;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar,",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:4742,Testability,test,testing,4742,"  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > & ; src . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<typename TReal = SReal> . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; linearalgebra::BaseMatrix & ; dst, . const Eigen::SparseMatrix< TReal > & ; src . ). inlinestatic . ◆ generateFromTriplets(). template<typename TReal = SReal> . template<class InputIt > . static void sofa::testing::SparseMatrixTest< TReal >::gene",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:5191,Testability,test,testing,5191,"ptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > & ; src . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<typename TReal = SReal> . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; linearalgebra::BaseMatrix & ; dst, . const Eigen::SparseMatrix< TReal > & ; src . ). inlinestatic . ◆ generateFromTriplets(). template<typename TReal = SReal> . template<class InputIt > . static void sofa::testing::SparseMatrixTest< TReal >::generateFromTriplets ; (; Eigen::SparseMatrix< TReal > & ; eigenMatrix, . InputIt ; first, . InputIt ; last, . Eigen::Index ; nbRows, . Eigen::Index ; nbCols . ). inlinestatic . ◆ generateRandomSparseMatrix(). template<typename TReal = SReal> . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > & ; eigenMatrix, . Eigen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:5499,Testability,test,testing,5499,"mpareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > & ; src . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<typename TReal = SReal> . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; linearalgebra::BaseMatrix & ; dst, . const Eigen::SparseMatrix< TReal > & ; src . ). inlinestatic . ◆ generateFromTriplets(). template<typename TReal = SReal> . template<class InputIt > . static void sofa::testing::SparseMatrixTest< TReal >::generateFromTriplets ; (; Eigen::SparseMatrix< TReal > & ; eigenMatrix, . InputIt ; first, . InputIt ; last, . Eigen::Index ; nbRows, . Eigen::Index ; nbCols . ). inlinestatic . ◆ generateRandomSparseMatrix(). template<typename TReal = SReal> . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > & ; eigenMatrix, . Eigen::Index ; nbRows, . Eigen::Index ; nbCols, . TReal ; sparsity . ). inlinestatic . Generate a sparse matrix of size nbRows x nbCols. The sparsity is the ratio of non-zero values compared to the total size of the matrix (= nbRows x nbCols). . sofatestingSparseMatrixTest; Generated on Mon N",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:5760,Testability,test,testing,5760," = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > & ; src . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<typename TReal = SReal> . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; linearalgebra::BaseMatrix & ; dst, . const Eigen::SparseMatrix< TReal > & ; src . ). inlinestatic . ◆ generateFromTriplets(). template<typename TReal = SReal> . template<class InputIt > . static void sofa::testing::SparseMatrixTest< TReal >::generateFromTriplets ; (; Eigen::SparseMatrix< TReal > & ; eigenMatrix, . InputIt ; first, . InputIt ; last, . Eigen::Index ; nbRows, . Eigen::Index ; nbCols . ). inlinestatic . ◆ generateRandomSparseMatrix(). template<typename TReal = SReal> . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > & ; eigenMatrix, . Eigen::Index ; nbRows, . Eigen::Index ; nbCols, . TReal ; sparsity . ). inlinestatic . Generate a sparse matrix of size nbRows x nbCols. The sparsity is the ratio of non-zero values compared to the total size of the matrix (= nbRows x nbCols). . sofatestingSparseMatrixTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:6100,Testability,test,testing,6100," = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > & ; src . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<typename TReal = SReal> . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; linearalgebra::BaseMatrix & ; dst, . const Eigen::SparseMatrix< TReal > & ; src . ). inlinestatic . ◆ generateFromTriplets(). template<typename TReal = SReal> . template<class InputIt > . static void sofa::testing::SparseMatrixTest< TReal >::generateFromTriplets ; (; Eigen::SparseMatrix< TReal > & ; eigenMatrix, . InputIt ; first, . InputIt ; last, . Eigen::Index ; nbRows, . Eigen::Index ; nbCols . ). inlinestatic . ◆ generateRandomSparseMatrix(). template<typename TReal = SReal> . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > & ; eigenMatrix, . Eigen::Index ; nbRows, . Eigen::Index ; nbCols, . TReal ; sparsity . ). inlinestatic . Generate a sparse matrix of size nbRows x nbCols. The sparsity is the ratio of non-zero values compared to the total size of the matrix (= nbRows x nbCols). . sofatestingSparseMatrixTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element-members.html:256,Modifiability,inherit,inherited,256,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::topology::Element< GeometryElement > Member List . This is the complete list of members for sofa::topology::Element< GeometryElement >, including all inherited members. Array typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; array() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; array() noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; assign(const sofa::Index &value) noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; at(size_type i)sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; at(size_type i) constsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; back()sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; back() constsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; begin() noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; begin() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; cbegin() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; cend() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; const_iterator typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; const_reference typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; data() const noexceptsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >inline; difference_type typedefsofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; Element() noexceptsofa::topology::Element< GeometryElement >inline; Element(ArgsT &&... args) noexceptsofa::topology::Element< GeometryElement >inline; Element_typesofa::topology::Eleme",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html:846,Modifiability,inherit,inherited,846,"﻿. SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::topology::Element< GeometryElement > Struct Template Reference . #include <Element.h>. Inheritance diagram for sofa::topology::Element< GeometryElement >:. [legend]. Static Public Attributes; static constexpr auto NumberOfNodes = GeometryElement::NumberOfNodes;  ; static constexpr sofa::geometry::ElementType Element_type = GeometryElement::Element_type;  . Public Member Functions; constexpr Element () noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> ; constexpr Element (ArgsT &&... args) noexcept;  ;  Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr sofa::Index & get () &noexcept;  ; constexpr const sofa::Index & get () const &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html:2448,Modifiability,inherit,inherited,2448," &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sofa::Index, N > &y);  ; constexpr const sofa::Index * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< sofa::Index, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const sofa::Index &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; sofa::Index elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; static constexpr size_type size () noexcept;  ; static bool empty () noexcept;  ; static constexpr size_type max_size () noexcept;  . Attribute details. ◆ Element_type. template<typename GeometryElement > . constexpr sofa::geometry::ElementType sofa::topology::Element< GeometryElement >::Element_type = GeometryElement::Element_type. staticconstexpr . ◆ NumberOfNodes. template<typename GeometryElement > . constexpr auto sofa::topology::Element< GeometryElement >::NumberOfNodes = GeometryElement::NumberOfNodes. staticconstexpr . Constructor details. ◆ Element() [1/2]. template<typename GeometryElement > . constexpr sofa::topology::Element< GeometryElement >::Element ; (; ). inlineconstexprnoexcept . ◆ Element() [2/2]. template<typename GeometryElement > . template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> . constexpr sofa::topology::Element< GeometryElemen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html:2593,Modifiability,inherit,inherited,2593," &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sofa::Index, N > &y);  ; constexpr const sofa::Index * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< sofa::Index, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const sofa::Index &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; sofa::Index elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; static constexpr size_type size () noexcept;  ; static bool empty () noexcept;  ; static constexpr size_type max_size () noexcept;  . Attribute details. ◆ Element_type. template<typename GeometryElement > . constexpr sofa::geometry::ElementType sofa::topology::Element< GeometryElement >::Element_type = GeometryElement::Element_type. staticconstexpr . ◆ NumberOfNodes. template<typename GeometryElement > . constexpr auto sofa::topology::Element< GeometryElement >::NumberOfNodes = GeometryElement::NumberOfNodes. staticconstexpr . Constructor details. ◆ Element() [1/2]. template<typename GeometryElement > . constexpr sofa::topology::Element< GeometryElement >::Element ; (; ). inlineconstexprnoexcept . ◆ Element() [2/2]. template<typename GeometryElement > . template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> . constexpr sofa::topology::Element< GeometryElemen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html:2137,Security,access,access,2137,"expr Element () noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> ; constexpr Element (ArgsT &&... args) noexcept;  ;  Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr sofa::Index & get () &noexcept;  ; constexpr const sofa::Index & get () const &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sofa::Index, N > &y);  ; constexpr const sofa::Index * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< sofa::Index, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const sofa::Index &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; sofa::Index elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_arra",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html:2210,Security,access,access,2210,"nst noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr sofa::Index & get () &noexcept;  ; constexpr const sofa::Index & get () const &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sofa::Index, N > &y);  ; constexpr const sofa::Index * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< sofa::Index, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const sofa::Index &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; sofa::Index elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; static constexpr size_type size () noexcept;  ; static bool empty () noexcept;  ; static constexpr size_type max_size () noexcept;  . Attribute details. ◆ Element_type. template<typename GeometryElement > . constexpr sofa::geometry::ElementType sofa::topology::Element< GeometryElement >::Element_type = GeometryElement::Element_type. staticconstexpr . ◆ NumberOfNodes. template<typename GeometryElement > . constexpr auto sofa::topology::Element< GeometryElement >::NumberOfNodes = GeometryElement::NumberOfNodes. s",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html:25,Safety,detect,detect,25,"﻿. SOFA API: sofa::type::detect< typename, class, typename > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< typename, class, typename > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< typename, class, typename >:. [legend]. sofatypedetect; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html:174,Safety,detect,detect,174,"﻿. SOFA API: sofa::type::detect< typename, class, typename > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< typename, class, typename > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< typename, class, typename >:. [legend]. sofatypedetect; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html:300,Safety,detect,detect,300,"﻿. SOFA API: sofa::type::detect< typename, class, typename > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< typename, class, typename > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< typename, class, typename >:. [legend]. sofatypedetect; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html:25,Safety,detect,detect,25,"﻿. SOFA API: sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< T, Op, void_t< Op< T > > >:. [legend]. sofatypedetect< T, Op, void_t< Op< T > > >; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html:173,Safety,detect,detect,173,"﻿. SOFA API: sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< T, Op, void_t< Op< T > > >:. [legend]. sofatypedetect< T, Op, void_t< Op< T > > >; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html:298,Safety,detect,detect,298,"﻿. SOFA API: sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< T, Op, void_t< Op< T > > >:. [legend]. sofatypedetect< T, Op, void_t< Op< T > > >; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html:244,Modifiability,inherit,inherited,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_container< T > Member List . This is the complete list of members for sofa::type::trait::is_container< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_container< T >inlinestatic; test(...)sofa::type::trait::is_container< T >inlinestatic; test_type typedefsofa::type::trait::is_container< T >; valuesofa::type::trait::is_container< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html:263,Testability,test,test,263,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_container< T > Member List . This is the complete list of members for sofa::type::trait::is_container< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_container< T >inlinestatic; test(...)sofa::type::trait::is_container< T >inlinestatic; test_type typedefsofa::type::trait::is_container< T >; valuesofa::type::trait::is_container< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html:580,Testability,test,test,580,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_container< T > Member List . This is the complete list of members for sofa::type::trait::is_container< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_container< T >inlinestatic; test(...)sofa::type::trait::is_container< T >inlinestatic; test_type typedefsofa::type::trait::is_container< T >; valuesofa::type::trait::is_container< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:595,Testability,test,test,595,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:702,Testability,test,test,702,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:1021,Testability,test,test,1021,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:1145,Testability,test,test,1145,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:1200,Testability,test,test,1200,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:1322,Testability,test,test,1322,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:1367,Testability,test,test,1367,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:1489,Testability,test,test,1489,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_vector< T > Member List . This is the complete list of members for sofa::type::trait::is_vector< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_vector< T >inlinestatic; test(...)sofa::type::trait::is_vector< T >inlinestatic; test_type typedefsofa::type::trait::is_vector< T >; valuesofa::type::trait::is_vector< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html:257,Testability,test,test,257,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_vector< T > Member List . This is the complete list of members for sofa::type::trait::is_vector< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_vector< T >inlinestatic; test(...)sofa::type::trait::is_vector< T >inlinestatic; test_type typedefsofa::type::trait::is_vector< T >; valuesofa::type::trait::is_vector< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html:629,Testability,test,test,629,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_vector< T > Member List . This is the complete list of members for sofa::type::trait::is_vector< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_vector< T >inlinestatic; test(...)sofa::type::trait::is_vector< T >inlinestatic; test_type typedefsofa::type::trait::is_vector< T >; valuesofa::type::trait::is_vector< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:627,Testability,test,test,627,"﻿. SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraiti",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:734,Testability,test,test,734,"﻿. SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraiti",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:1111,Testability,test,test,1111,"﻿. SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraiti",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:1232,Testability,test,test,1232," . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_vector; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:1287,Testability,test,test,1287," . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_vector; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:1406,Testability,test,test,1406," . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_vector; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:1451,Testability,test,test,1451," . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_vector; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:1570,Testability,test,test,1570," . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_vector; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_01_has_reb5d3b20ae2e02479ead2e02364616ead2.html:370,Modifiability,inherit,inherited,370,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Member List . This is the complete list of members for sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >, including all inherited members. to typedefsofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >. Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_01_has_reb5d3b20ae2e02479ead2e02364616ead2.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_01_has_reb5d3b20ae2e02479ead2e02364616ead2.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html:625,Availability,error,error,625,"﻿. SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference . #include <Rebind.h>; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; More...; Detailed Description; template<class _T, class _OtherType>; struct sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; Template Parameters. _TType that does NOT have a nested rebind_to member . sofatypeRebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html:1080,Availability,error,error,1080,"﻿. SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference . #include <Rebind.h>; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; More...; Detailed Description; template<class _T, class _OtherType>; struct sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. ; Template Parameters. _TType that does NOT have a nested rebind_to member . sofatypeRebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >; Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_00_01___other_type_00_01std_1_1enable__if__t_3_9_has_rebi365dd689ec88fe5a7e84777cbc666289.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_3_01_a_01_4_00_01___other_type_00_01std_1_1enable__if__t_ca216f65b38eb10d1f80a271bdf63cfd.html:390,Modifiability,inherit,inherited,390,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > > Member List . This is the complete list of members for sofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > >, including all inherited members. to typedefsofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _OtherType >::value > >. Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_3_01_a_01_4_00_01___other_type_00_01std_1_1enable__if__t_ca216f65b38eb10d1f80a271bdf63cfd.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_rebind_3_01___t_3_01_a_01_4_00_01___other_type_00_01std_1_1enable__if__t_ca216f65b38eb10d1f80a271bdf63cfd.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:218,Modifiability,inherit,inherited,218,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:263,Testability,test,testing,263,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:308,Testability,test,testing,308,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:370,Testability,test,testing,370,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:463,Testability,test,testing,463,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:495,Testability,test,testing,495,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:597,Testability,test,testing,597,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:668,Testability,test,testing,668,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html:719,Testability,test,testing,719,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AdvancedTimerTest Member List . This is the complete list of members for sofa::AdvancedTimerTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; initScene()sofa::AdvancedTimerTestinlineprotected; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp() overridesofa::AdvancedTimerTestinlineprotectedvirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; rootsofa::AdvancedTimerTest; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:457,Modifiability,inherit,inherited,457,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:728,Modifiability,inherit,inherited,728,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:865,Modifiability,inherit,inherited,865,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:1015,Modifiability,inherit,inherited,1015,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:478,Testability,test,testing,478,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:503,Testability,test,testing,503,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:551,Testability,test,testing,551,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:749,Testability,test,testing,749,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:886,Testability,test,testing,886,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:1036,Testability,test,testing,1036,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:1474,Testability,test,testing,1474,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2254,Deployability,patch,patchStructsofa,2254,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:384,Testability,test,testing,384,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:429,Testability,test,testing,429,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1115,Testability,test,testing,1115,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1212,Testability,test,testing,1212,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1257,Testability,test,testing,1257,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::AffinePatch_sofa_test< _DataTypes > Member List . This is the complete list of members for sofa::AffinePatch_sofa_test< _DataTypes >, including all inherited members. AffineMovementProjectiveConstraint typedefsofa::AffinePatch_sofa_test< _DataTypes >; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; compareSimulatedToTheoreticalPositions(double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition)sofa::AffinePatch_sofa_test< _DataTypes >inline; Coord typedefsofa::AffinePatch_sofa_test< _DataTypes >; CPos typedefsofa::AffinePatch_sofa_test< _DataTypes >; createScene2DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; createScene3DRegularGrid(bool randomRotation=true, bool randomTranslation=true)sofa::AffinePatch_sofa_test< _DataTypes >inline; DataTypes typedefsofa::AffinePatch_sofa_test< _DataTypes >; Deriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1347,Testability,test,testing,1347,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1414,Testability,test,testing,1414,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1446,Testability,test,testing,1446,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1522,Testability,test,testing,1522,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1655,Testability,test,testing,1655,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1866,Testability,test,testing,1866,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:1949,Testability,test,testing,1949,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2027,Testability,test,testing,2027,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2109,Testability,test,testing,2109,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2172,Testability,test,testing,2172,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2222,Testability,test,testing,2222,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotec",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2475,Testability,test,testing,2475,"const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::N",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2802,Testability,test,testedRotationsofa,2802,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2859,Testability,test,testedTranslationsofa,2859,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:3196,Testability,test,testing,3196,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:3320,Testability,test,testing,3320,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:3469,Testability,test,testing,3469,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:3586,Testability,test,testing,3586,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:3660,Testability,test,testing,3660,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2644,Availability,failure,failure,2644,"ular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:822,Deployability,patch,patchStruct,822,"﻿. SOFA API: sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theore",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4285,Deployability,patch,patchStruct,4285,"e::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::comp",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4401,Deployability,patch,patchStruct,4401,"en corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; d",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:1142,Modifiability,inherit,inherited,1142,"ons |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Fun",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2055,Modifiability,inherit,inherited,2055,"ting::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between correspo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2205,Modifiability,inherit,inherited,2205,"ting::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between correspo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2432,Modifiability,inherit,inherited,2432,"e with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2847,Modifiability,inherit,inherited,2847,"genceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2991,Modifiability,inherit,inherited,2991,"onTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4108,Modifiability,inherit,inherited,4108,"ponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:490,Testability,test,test,490,"﻿. SOFA API: sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theore",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:975,Testability,test,testedRotation,975,"﻿. SOFA API: sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theore",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:1051,Testability,test,testedTranslation,1051,"rence. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:1163,Testability,test,testing,1163,"ons |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Fun",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:1188,Testability,test,testing,1188,"ons |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Fun",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:1236,Testability,test,testing,1236,"ons |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Fun",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2076,Testability,test,testing,2076,"ting::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between correspo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2226,Testability,test,testing,2226,"ting::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between correspo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2453,Testability,test,testing,2453,"e with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2868,Testability,test,testing,2868,"genceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:3012,Testability,test,testing,3012,"onTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4129,Testability,test,testing,4129,"ponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ com",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4808,Testability,test,testedRotation,4808,"sponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; diffMaxBetweenSimulatedAndTheoreticalPosition . ). inline . After simulation compare the positions of points to the theoretical positions. . ◆ createScene2DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene2DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 2D regular grid and an affine constraint. . ◆ createScene3DRe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4920,Testability,test,testedRotation,4920," static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; diffMaxBetweenSimulatedAndTheoreticalPosition . ). inline . After simulation compare the positions of points to the theoretical positions. . ◆ createScene2DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene2DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 2D regular grid and an affine constraint. . ◆ createScene3DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _D",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4981,Testability,test,testedTranslation,4981,"eal > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; diffMaxBetweenSimulatedAndTheoreticalPosition . ). inline . After simulation compare the positions of points to the theoretical positions. . ◆ createScene2DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene2DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 2D regular grid and an affine constraint. . ◆ createScene3DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene3DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTransl",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:5082,Testability,test,testedTranslation,5082,"..;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; diffMaxBetweenSimulatedAndTheoreticalPosition . ). inline . After simulation compare the positions of points to the theoretical positions. . ◆ createScene2DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene2DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 2D regular grid and an affine constraint. . ◆ createScene3DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene3DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 3D regular grid and an affin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct-members.html:238,Modifiability,inherit,inherited,238,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::CylinderTractionStruct< T > Member List . This is the complete list of members for sofa::CylinderTractionStruct< T >, including all inherited members. dofssofa::CylinderTractionStruct< T >; forceFieldsofa::CylinderTractionStruct< T >; rootsofa::CylinderTractionStruct< T >. Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_cylinder_traction_struct-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html:337,Testability,test,test,337,﻿. SOFA API: sofa::CylinderTractionStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::CylinderTractionStruct< T > Struct Template Reference . Structure which contains the nodes and the pointers useful for the cylindertraction test. ; More... Inheritance diagram for sofa::CylinderTractionStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::CylinderTractionStruct< T >; Structure which contains the nodes and the pointers useful for the cylindertraction test. . Public Attributes; simulation::Node::SPtr root;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  ; component::mechanicalload::TrianglePressureForceField< T >::SPtr forceField;  . Attribute details. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::CylinderTractionStruct< T >::dofs. ◆ forceField. template<class T > . component::mechanicalload::TrianglePressureForceField<T>::SPtr sofa::CylinderTractionStruct< T >::forceField. ◆ root. template<class T > . simulation::Node::SPtr sofa::CylinderTractionStruct< T >::root. sofaCylinderTractionStruct; Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html:590,Testability,test,test,590,﻿. SOFA API: sofa::CylinderTractionStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::CylinderTractionStruct< T > Struct Template Reference . Structure which contains the nodes and the pointers useful for the cylindertraction test. ; More... Inheritance diagram for sofa::CylinderTractionStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::CylinderTractionStruct< T >; Structure which contains the nodes and the pointers useful for the cylindertraction test. . Public Attributes; simulation::Node::SPtr root;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  ; component::mechanicalload::TrianglePressureForceField< T >::SPtr forceField;  . Attribute details. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::CylinderTractionStruct< T >::dofs. ◆ forceField. template<class T > . component::mechanicalload::TrianglePressureForceField<T>::SPtr sofa::CylinderTractionStruct< T >::forceField. ◆ root. template<class T > . simulation::Node::SPtr sofa::CylinderTractionStruct< T >::root. sofaCylinderTractionStruct; Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:250,Modifiability,inherit,inherited,250,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:285,Testability,test,testing,285,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:720,Testability,test,testing,720,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:752,Testability,test,testing,752,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:786,Testability,test,testing,786,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:836,Testability,test,testing,836,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:941,Testability,test,testing,941,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html:992,Testability,test,testing,992,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DataEngine_test< DataEngineType > Member List . This is the complete list of members for sofa::DataEngine_test< DataEngineType >, including all inherited members. BaseTest()sofa::testing::BaseTest; DataEngine_test()sofa::DataEngine_test< DataEngineType >inline; DDGLinkContainer typedefsofa::DataEngine_test< DataEngineType >; DDGNode typedefsofa::DataEngine_test< DataEngineType >; Engine typedefsofa::DataEngine_test< DataEngineType >; init()sofa::DataEngine_test< DataEngineType >inlinevirtual; m_enginesofa::DataEngine_test< DataEngineType >; m_engineInputsofa::DataEngine_test< DataEngineType >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; run_basic_test()sofa::DataEngine_test< DataEngineType >inline; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:2516,Deployability,update,update,2516,"e only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:938,Modifiability,inherit,inherited,938,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1200,Modifiability,inherit,inherited,1200," Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1458,Modifiability,inherit,inherited,1458,"ate<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:2605,Modifiability,inherit,inherit,2605,"e only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:359,Testability,test,tests,359,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:587,Testability,test,tests,587,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:677,Testability,test,tested,677,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:959,Testability,test,testing,959,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:984,Testability,test,testing,984,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1032,Testability,test,testing,1032,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1221,Testability,test,testing,1221," Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1479,Testability,test,testing,1479,"ate<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1711,Testability,test,tested,1711,"Type::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Gener",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:2548,Testability,test,test,2548,"e only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:2634,Testability,test,test,2634,"e only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:2681,Testability,test,test,2681,"e only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_data_engine__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:234,Modifiability,inherit,inherited,234,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:279,Testability,test,testing,279,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:324,Testability,test,testing,324,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:386,Testability,test,testing,386,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:428,Testability,test,testing,428,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:460,Testability,test,testing,460,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:494,Testability,test,testing,494,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:544,Testability,test,testing,544,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:586,Testability,test,testing,586,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:611,Testability,test,testOneStep,611,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html:689,Testability,test,testing,689,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::DefaultAnimationLoop_test Member List . This is the complete list of members for sofa::DefaultAnimationLoop_test, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; testOneStep()sofa::DefaultAnimationLoop_testinline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:379,Modifiability,inherit,inherited,379,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:529,Modifiability,inherit,inherited,529,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:780,Modifiability,inherit,inherited,780,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:942,Modifiability,inherit,inherited,942,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:335,Testability,test,testOneStep,335,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:400,Testability,test,testing,400,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:550,Testability,test,testing,550,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:801,Testability,test,testing,801,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:826,Testability,test,testing,826,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:874,Testability,test,testing,874,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:963,Testability,test,testing,963,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:1074,Testability,test,testOneStep,1074,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:1127,Testability,test,testOneStep,1127,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:868,Availability,error,errorFactorPotentialEnergysofa,868,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:936,Availability,error,errorMaxsofa,936,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:297,Testability,test,testing,297,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:342,Testability,test,testing,342,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:798,Testability,test,testing,798,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1333,Testability,test,testing,1333,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1378,Testability,test,testing,1378,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::ForceField_test< _ForceFieldType > Member List . This is the complete list of members for sofa::ForceField_test< _ForceFieldType >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; checkStiffnesssofa::ForceField_test< _ForceFieldType >; Coord typedefsofa::ForceField_test< _ForceFieldType >; DataTypes typedefsofa::ForceField_test< _ForceFieldType >; debugsofa::ForceField_test< _ForceFieldType >; deltaRangesofa::ForceField_test< _ForceFieldType >; Deriv typedefsofa::ForceField_test< _ForceFieldType >; DOF typedefsofa::ForceField_test< _ForceFieldType >; dofsofa::ForceField_test< _ForceFieldType >; epsilon()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; errorFactorPotentialEnergysofa::ForceField_test< _ForceFieldType >; errorMaxsofa::ForceField_test< _ForceFieldType >; flagssofa::ForceField_test< _ForceFieldType >; forcesofa::ForceField_test< _ForceFieldType >; ForceField typedefsofa::ForceField_test< _ForceFieldType >; ForceField_test()sofa::ForceField_test< _ForceFieldType >inline; ForceField_test(std::string filename)sofa::ForceField_test< _ForceFieldType >inline; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::Dat",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1484,Testability,test,testing,1484," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1567,Testability,test,testing,1567," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1599,Testability,test,testing,1599," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1675,Testability,test,testing,1675," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1824,Testability,test,testing,1824," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:1959,Testability,test,testing,1959," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:2058,Testability,test,testing,2058," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:2152,Testability,test,testing,2152," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:2250,Testability,test,testing,2250," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:2329,Testability,test,testing,2329," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:2379,Testability,test,testing,2379," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:2610,Testability,test,testing,2610," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:2914,Testability,test,testing,2914," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:3054,Testability,test,testing,3054," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:3219,Testability,test,testing,3219," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:3352,Testability,test,testing,3352," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html:3442,Testability,test,testing,3442," ratio=1.)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; nodesofa::ForceField_test< _ForceFieldType >; norm(float a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::ForceField_test< _ForceFieldType >; run_test(const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true)sofa::ForceField_test< _ForceFieldType >inline; seedsofa::testing::BaseTeststatic; TEST_ALLsofa::ForceField_test< _ForceFieldType >static; TEST_POTENTIAL_ENERGYsofa::ForceField_test< _ForceFieldType >static; VecCoord typedefsofa::ForceField_test< _ForceFieldType >; VecDeriv typedefsofa::ForceField_test< _ForceFieldType >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generate",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:479,Availability,avail,available,479,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1206,Availability,avail,available,1206,"ld_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to che",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1737,Availability,error,errorMax,1737,"methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1748,Availability,toler,tolerance,1748,"methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1890,Availability,error,errorFactorPotentialEnergy,1890,"eld_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2017,Availability,error,errorFactorPotentialEnergy,2017,"eld_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2046,Availability,error,errorMax,2046,"eld_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:4067,Availability,failure,failure,4067," initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference betwee",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6204,Availability,error,errorMax,6204,"t sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6365,Availability,error,errorFactorPotentialEnergy,6365,"s inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6479,Availability,error,errorFactorPotentialEnergy,6479,"at norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6605,Availability,error,errorFactorPotentialEnergy,6605,". template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFiel",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6634,Availability,error,errorMax,6634,". template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFiel",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6670,Availability,error,errorMax,6670,"checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6766,Availability,error,errorMax,6766,"t checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6776,Availability,toler,tolerance,6776,"true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1942,Energy Efficiency,energy,energy,1942,"eld_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6530,Energy Efficiency,energy,energy,6530,". template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFiel",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:8979,Energy Efficiency,energy,energy,8979," _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefield.; . ◆ ForceField_test() [2/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; std::string ; filename). inline . Create a scene from a xml file. . Function details. ◆ run_test(). template<typename _ForceFieldType > . void sofa::ForceField_test< _ForceFieldType >::run_test ; (; const VecCoord & ; x, . const VecDeriv & ; v, . const VecDeriv & ; ef, . bool ; initScene = true . ). inline . Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. ; Parameters. xpositions ; vvelocities ; efexpected forces This function first checks that the expected forces are obtained. Then, it checks getPotentialEnergy. And then, it checks the stiffness, unless member checkStiffness is set to false. A new position is created using a small random change, and the new force is computed. The change of potential energy is compared to the dot product between displacement and force. The change of force is compared to the change computed by function addDForce, and to the product of the position change with the stiffness matrix. . sofaForceField_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5910,Integrability,message,messages,5910,"ude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flag",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2421,Modifiability,inherit,inherited,2421,"stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3325,Modifiability,inherit,inherited,3325,"ness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMax",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3462,Modifiability,inherit,inherited,3462," . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3612,Modifiability,inherit,inherited,3612," . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3839,Modifiability,inherit,inherited,3839,"esting everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:4246,Modifiability,inherit,inherited,4246,"est; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protecte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5379,Modifiability,inherit,inherited,5379,"entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::Fo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:313,Testability,test,tests,313,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:514,Testability,test,test,514,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1040,Testability,test,tests,1040,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1241,Testability,test,test,1241,"ting ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test afte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1771,Testability,test,test,1771,"methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1923,Testability,test,test,1923,"eld_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2289,Testability,test,test,2289,"function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2442,Testability,test,testing,2442,"stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2467,Testability,test,testing,2467,"stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2515,Testability,test,testing,2515,"stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2655,Testability,test,testing,2655,"rceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2696,Testability,test,tests,2696,"precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2812,Testability,test,test,2812,"precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:2889,Testability,test,testing,2889,"ore...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::Numer",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3346,Testability,test,testing,3346,"ness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMax",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3483,Testability,test,testing,3483," . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3633,Testability,test,testing,3633," . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3860,Testability,test,testing,3860,"esting everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:4267,Testability,test,testing,4267,"est; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protecte",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5400,Testability,test,testing,5400,"entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::Fo",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5709,Testability,test,test,5709,";  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6511,Testability,test,test,6511,". template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFiel",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:6799,Testability,test,test,6799,"true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7012,Testability,test,testing,7012,"ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefi",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7450,Testability,test,testing,7450," _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefield.; . ◆ ForceField_test() [2/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; std::string ; filename). inline . Create a scene from a xml file. . Function details. ◆ run_test(). template<typename _ForceFieldType > . void sofa::ForceField_test< _ForceFieldType >::run_test ; (; const VecCoord & ; x, . const VecDeriv & ; v, . const VecDeriv & ; ef, . bool ; initScene = true . ). inl",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7632,Testability,test,testing,7632,"on (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefield.; . ◆ ForceField_test() [2/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; std::string ; filename). inline . Create a scene from a xml file. . Function details. ◆ run_test(). template<typename _ForceFieldType > . void sofa::ForceField_test< _ForceFieldType >::run_test ; (; const VecCoord & ; x, . const VecDeriv & ; v, . const VecDeriv & ; ef, . bool ; initScene = true . ). inline . Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. ; Parameters. xposition",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7673,Testability,test,tests,7673,"ield_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefield.; . ◆ ForceField_test() [2/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; std::string ; filename). inline . Create a scene from a xml file. . Function details. ◆ run_test(). template<typename _ForceFieldType > . void sofa::ForceField_test< _ForceFieldType >::run_test ; (; const VecCoord & ; x, . const VecDeriv & ; v, . const VecDeriv & ; ef, . bool ; initScene = true . ). inline . Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. ; Parameters. xpositions ; vvelocities ; efexpected forces This function first checks that the expected forces",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7789,Testability,test,test,7789,"ield_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefield.; . ◆ ForceField_test() [2/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; std::string ; filename). inline . Create a scene from a xml file. . Function details. ◆ run_test(). template<typename _ForceFieldType > . void sofa::ForceField_test< _ForceFieldType >::run_test ; (; const VecCoord & ; x, . const VecDeriv & ; v, . const VecDeriv & ; ef, . bool ; initScene = true . ). inline . Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. ; Parameters. xpositions ; vvelocities ; efexpected forces This function first checks that the expected forces",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_force_field__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:254,Modifiability,inherit,inherited,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:608,Testability,test,testing,608,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:653,Testability,test,testing,653,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:859,Testability,test,testing,859,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1021,Testability,test,testing,1021,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1066,Testability,test,testing,1066,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::LinearElasticity_test< _DataTypes > Member List . This is the complete list of members for sofa::LinearElasticity_test< _DataTypes >, including all inherited members. addTetrahedralCorotationalFEMLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; addTetrahedralLinearElastic(simulation::Node::SPtr root, double youngModulus, double poissonRatio)sofa::LinearElasticity_test< _DataTypes >inline; BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; Coord typedefsofa::LinearElasticity_test< _DataTypes >; DataTypes typedefsofa::LinearElasticity_test< _DataTypes >; Deriv typedefsofa::LinearElasticity_test< _DataTypes >; epsilon()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; ForceFieldSPtr typedefsofa::LinearElasticity_test< _DataTypes >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; infinity()sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1156,Testability,test,testing,1156,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1292,Testability,test,testing,1292,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1324,Testability,test,testing,1324,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1400,Testability,test,testing,1400,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1533,Testability,test,testing,1533,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1673,Testability,test,testing,1673,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1756,Testability,test,testing,1756,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1834,Testability,test,testing,1834,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1916,Testability,test,testing,1916,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:1979,Testability,test,testing,1979,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:2029,Testability,test,testing,2029,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:2126,Testability,test,testing,2126,")sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; LinearElasticityFF typedefsofa::LinearElasticity_test< _DataTypes >; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlin",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:2337,Testability,test,testLinearElasticityInTraction,2337," m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::LinearElasticity_test< _DataTypes >; seedsofa::testing::BaseTeststatic; SetUp() overridesofa::LinearElasticity_test< _DataTypes >inline; simulationsofa::LinearElasticity_test< _DataTypes >; TearDown() overridesofa::LinearElasticity_test< _DataTypes >inline; testLinearElasticityInTraction(LinearElasticityFF createForceField)sofa::LinearElasticity_test< _DataTypes >inline; TetrahedralTensorMassForceField typedefsofa::LinearElasticity_test< _DataTypes >; tractionStructsofa::LinearElasticity_test< _DataTypes >; VecCoord typedefsofa::LinearElasticity_test< _DataTypes >; VecDeriv typedefsofa::LinearElasticity_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; vIndexsofa::LinearElasticity_test< _DataTypes >; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:2748,Testability,test,testing,2748," m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::LinearElasticity_test< _DataTypes >; seedsofa::testing::BaseTeststatic; SetUp() overridesofa::LinearElasticity_test< _DataTypes >inline; simulationsofa::LinearElasticity_test< _DataTypes >; TearDown() overridesofa::LinearElasticity_test< _DataTypes >inline; testLinearElasticityInTraction(LinearElasticityFF createForceField)sofa::LinearElasticity_test< _DataTypes >inline; TetrahedralTensorMassForceField typedefsofa::LinearElasticity_test< _DataTypes >; tractionStructsofa::LinearElasticity_test< _DataTypes >; VecCoord typedefsofa::LinearElasticity_test< _DataTypes >; VecDeriv typedefsofa::LinearElasticity_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; vIndexsofa::LinearElasticity_test< _DataTypes >; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:2872,Testability,test,testing,2872," m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::LinearElasticity_test< _DataTypes >; seedsofa::testing::BaseTeststatic; SetUp() overridesofa::LinearElasticity_test< _DataTypes >inline; simulationsofa::LinearElasticity_test< _DataTypes >; TearDown() overridesofa::LinearElasticity_test< _DataTypes >inline; testLinearElasticityInTraction(LinearElasticityFF createForceField)sofa::LinearElasticity_test< _DataTypes >inline; TetrahedralTensorMassForceField typedefsofa::LinearElasticity_test< _DataTypes >; tractionStructsofa::LinearElasticity_test< _DataTypes >; VecCoord typedefsofa::LinearElasticity_test< _DataTypes >; VecDeriv typedefsofa::LinearElasticity_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; vIndexsofa::LinearElasticity_test< _DataTypes >; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:3021,Testability,test,testing,3021," m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::LinearElasticity_test< _DataTypes >; seedsofa::testing::BaseTeststatic; SetUp() overridesofa::LinearElasticity_test< _DataTypes >inline; simulationsofa::LinearElasticity_test< _DataTypes >; TearDown() overridesofa::LinearElasticity_test< _DataTypes >inline; testLinearElasticityInTraction(LinearElasticityFF createForceField)sofa::LinearElasticity_test< _DataTypes >inline; TetrahedralTensorMassForceField typedefsofa::LinearElasticity_test< _DataTypes >; tractionStructsofa::LinearElasticity_test< _DataTypes >; VecCoord typedefsofa::LinearElasticity_test< _DataTypes >; VecDeriv typedefsofa::LinearElasticity_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; vIndexsofa::LinearElasticity_test< _DataTypes >; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:3138,Testability,test,testing,3138," m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::LinearElasticity_test< _DataTypes >; seedsofa::testing::BaseTeststatic; SetUp() overridesofa::LinearElasticity_test< _DataTypes >inline; simulationsofa::LinearElasticity_test< _DataTypes >; TearDown() overridesofa::LinearElasticity_test< _DataTypes >inline; testLinearElasticityInTraction(LinearElasticityFF createForceField)sofa::LinearElasticity_test< _DataTypes >inline; TetrahedralTensorMassForceField typedefsofa::LinearElasticity_test< _DataTypes >; tractionStructsofa::LinearElasticity_test< _DataTypes >; VecCoord typedefsofa::LinearElasticity_test< _DataTypes >; VecDeriv typedefsofa::LinearElasticity_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; vIndexsofa::LinearElasticity_test< _DataTypes >; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html:3261,Testability,test,testing,3261," m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::LinearElasticity_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::LinearElasticity_test< _DataTypes >; seedsofa::testing::BaseTeststatic; SetUp() overridesofa::LinearElasticity_test< _DataTypes >inline; simulationsofa::LinearElasticity_test< _DataTypes >; TearDown() overridesofa::LinearElasticity_test< _DataTypes >inline; testLinearElasticityInTraction(LinearElasticityFF createForceField)sofa::LinearElasticity_test< _DataTypes >inline; TetrahedralTensorMassForceField typedefsofa::LinearElasticity_test< _DataTypes >; tractionStructsofa::LinearElasticity_test< _DataTypes >; VecCoord typedefsofa::LinearElasticity_test< _DataTypes >; VecDeriv typedefsofa::LinearElasticity_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; vIndexsofa::LinearElasticity_test< _DataTypes >; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:2202,Availability,failure,failure,2202,") override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less t",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1039,Modifiability,inherit,inherited,1039," 679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (co",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1613,Modifiability,inherit,inherited,1613,"icity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  St",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1763,Modifiability,inherit,inherited,1763,"icity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  St",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1990,Modifiability,inherit,inherited,1990,"butes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:2405,Modifiability,inherit,inherited,2405,"r root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:2549,Modifiability,inherit,inherited,2549,"onTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:3666,Modifiability,inherit,inherited,3666,"ponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::LinearElasticity_test< _DataTypes >::simulation. Simulation. . ◆ tractionStruct. template<typename _DataTypes > . CylinderTractionStruct<DataTypes> sofa::LinearElasticity_test< _DataTypes >::tractionStruct. struct with the pointer of the main components . ◆ vIndex. template<typename _DataTypes > . size_t sofa::LinearElasticity_test< _DataTypes >::vIndex. index of the vertex used to compute the compute the deformation . Function details. ◆ addTetrahedralCorotationalFEMLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sofa::LinearElasticity_test< _DataTypes >::addTetrahedralCorotationalFEMLinearElastic ; (; simulation::Node::SPtr ; root, . double ; youngModulus, . double ; poissonRatio . ). inline . ◆ addTetrahedralLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:608,Testability,test,test,608,"﻿. SOFA API: sofa::LinearElasticity_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited f",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1060,Testability,test,testing,1060," 679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (co",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1085,Testability,test,testing,1085," 679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (co",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1133,Testability,test,testing,1133," 679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (co",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1485,Testability,test,testLinearElasticityInTraction,1485,"icity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  St",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1634,Testability,test,testing,1634,"icity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  St",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:1784,Testability,test,testing,1784,"icity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  St",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:2011,Testability,test,testing,2011,"butes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:2426,Testability,test,testing,2426,"r root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:2570,Testability,test,testing,2570,"onTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:3687,Testability,test,testing,3687,"ponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::LinearElasticity_test< _DataTypes >::simulation. Simulation. . ◆ tractionStruct. template<typename _DataTypes > . CylinderTractionStruct<DataTypes> sofa::LinearElasticity_test< _DataTypes >::tractionStruct. struct with the pointer of the main components . ◆ vIndex. template<typename _DataTypes > . size_t sofa::LinearElasticity_test< _DataTypes >::vIndex. index of the vertex used to compute the compute the deformation . Function details. ◆ addTetrahedralCorotationalFEMLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sofa::LinearElasticity_test< _DataTypes >::addTetrahedralCorotationalFEMLinearElastic ; (; simulation::Node::SPtr ; root, . double ; youngModulus, . double ; poissonRatio . ). inline . ◆ addTetrahedralLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sof",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:5145,Testability,test,testLinearElasticityInTraction,5145,"t sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::LinearElasticity_test< _DataTypes >::simulation. Simulation. . ◆ tractionStruct. template<typename _DataTypes > . CylinderTractionStruct<DataTypes> sofa::LinearElasticity_test< _DataTypes >::tractionStruct. struct with the pointer of the main components . ◆ vIndex. template<typename _DataTypes > . size_t sofa::LinearElasticity_test< _DataTypes >::vIndex. index of the vertex used to compute the compute the deformation . Function details. ◆ addTetrahedralCorotationalFEMLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sofa::LinearElasticity_test< _DataTypes >::addTetrahedralCorotationalFEMLinearElastic ; (; simulation::Node::SPtr ; root, . double ; youngModulus, . double ; poissonRatio . ). inline . ◆ addTetrahedralLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sofa::LinearElasticity_test< _DataTypes >::addTetrahedralLinearElastic ; (; simulation::Node::SPtr ; root, . double ; youngModulus, . double ; poissonRatio . ). inline . ◆ SetUp(). template<typename _DataTypes > . void sofa::LinearElasticity_test< _DataTypes >::SetUp ; (; ). inlineoverride . ◆ TearDown(). template<typename _DataTypes > . void sofa::LinearElasticity_test< _DataTypes >::TearDown ; (; ). inlineoverride . ◆ testLinearElasticityInTraction(). template<typename _DataTypes > . bool sofa::LinearElasticity_test< _DataTypes >::testLinearElasticityInTraction ; (; LinearElasticityFF ; createForceField). inline . sofaLinearElasticity_test; Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:5260,Testability,test,testLinearElasticityInTraction,5260,"t sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::LinearElasticity_test< _DataTypes >::simulation. Simulation. . ◆ tractionStruct. template<typename _DataTypes > . CylinderTractionStruct<DataTypes> sofa::LinearElasticity_test< _DataTypes >::tractionStruct. struct with the pointer of the main components . ◆ vIndex. template<typename _DataTypes > . size_t sofa::LinearElasticity_test< _DataTypes >::vIndex. index of the vertex used to compute the compute the deformation . Function details. ◆ addTetrahedralCorotationalFEMLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sofa::LinearElasticity_test< _DataTypes >::addTetrahedralCorotationalFEMLinearElastic ; (; simulation::Node::SPtr ; root, . double ; youngModulus, . double ; poissonRatio . ). inline . ◆ addTetrahedralLinearElastic(). template<typename _DataTypes > . ForceFieldSPtr sofa::LinearElasticity_test< _DataTypes >::addTetrahedralLinearElastic ; (; simulation::Node::SPtr ; root, . double ; youngModulus, . double ; poissonRatio . ). inline . ◆ SetUp(). template<typename _DataTypes > . void sofa::LinearElasticity_test< _DataTypes >::SetUp ; (; ). inlineoverride . ◆ TearDown(). template<typename _DataTypes > . void sofa::LinearElasticity_test< _DataTypes >::TearDown ; (; ). inlineoverride . ◆ testLinearElasticityInTraction(). template<typename _DataTypes > . bool sofa::LinearElasticity_test< _DataTypes >::testLinearElasticityInTraction ; (; LinearElasticityFF ; createForceField). inline . sofaLinearElasticity_test; Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:637,Usability,simpl,simply,637,"﻿. SOFA API: sofa::LinearElasticity_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited f",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:701,Availability,error,errorMaxsofa,701,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:252,Modifiability,inherit,inherited,252,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:297,Testability,test,testing,297,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:342,Testability,test,testing,342,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:640,Testability,test,testing,640,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:794,Testability,test,testing,794,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1180,Testability,test,testing,1180,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::MultiMapping_test< _MultiMapping > Member List . This is the complete list of members for sofa::MultiMapping_test< _MultiMapping >, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; childsofa::MultiMapping_test< _MultiMapping >; deltaRangesofa::MultiMapping_test< _MultiMapping >; difference(const OutCoord &c1, const OutCoord &c2)sofa::MultiMapping_test< _MultiMapping >inline; EigenSparseMatrix typedefsofa::MultiMapping_test< _MultiMapping >; epsilon()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; errorMaxsofa::MultiMapping_test< _MultiMapping >; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; In typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; InDeriv typedefsofa::MultiMapping_test< _MultiMapping >; inDofssofa::MultiMapping_test< _MultiMapping >; InDOFs typedefsofa::MultiMapping_test< _MultiMapping >; infinity()sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; InVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; InVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1397,Testability,test,testing,1397,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1471,Testability,test,testing,1471,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1503,Testability,test,testing,1503,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1685,Testability,test,testing,1685,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1825,Testability,test,testing,1825,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:1972,Testability,test,testing,1972,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:2062,Testability,test,testing,2062,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:2147,Testability,test,testing,2147,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:2236,Testability,test,testing,2236,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:2306,Testability,test,testing,2306,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:2356,Testability,test,testing,2356,")sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; Mapping typedefsofa::MultiMapping_test< _MultiMapping >; mappingsofa::MultiMapping_test< _MultiMapping >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; MultiMapping_test()sofa::MultiMapping_test< _MultiMapping >inline; norm(float a)sofa::testing::NumericTest< _MultiM",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:3475,Testability,test,testing,3475,"t< _MultiMapping >; OutDataVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; OutDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; OutDeriv typedefsofa::MultiMapping_test< _MultiMapping >; outDofssofa::MultiMapping_test< _MultiMapping >; OutDOFs typedefsofa::MultiMapping_test< _MultiMapping >; OutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; OutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; parentssofa::MultiMapping_test< _MultiMapping >; ReadInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; Real typedefsofa::MultiMapping_test< _MultiMapping >; rootsofa::MultiMapping_test< _MultiMapping >; runTest(const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords)sofa::MultiMapping_test< _MultiMapping >inline; seedsofa::testing::BaseTeststatic; setupScene(int numParents)sofa::MultiMapping_test< _MultiMapping >inline; simulationsofa::MultiMapping_test< _MultiMapping >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; WriteInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ~BaseTest() overridesofa::testing::BaseTest; ~MultiMapping_test() overridesofa::MultiMa",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:3664,Testability,test,testing,3664,"rd typedefsofa::MultiMapping_test< _MultiMapping >; OutDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; OutDeriv typedefsofa::MultiMapping_test< _MultiMapping >; outDofssofa::MultiMapping_test< _MultiMapping >; OutDOFs typedefsofa::MultiMapping_test< _MultiMapping >; OutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; OutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; parentssofa::MultiMapping_test< _MultiMapping >; ReadInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; Real typedefsofa::MultiMapping_test< _MultiMapping >; rootsofa::MultiMapping_test< _MultiMapping >; runTest(const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords)sofa::MultiMapping_test< _MultiMapping >inline; seedsofa::testing::BaseTeststatic; setupScene(int numParents)sofa::MultiMapping_test< _MultiMapping >inline; simulationsofa::MultiMapping_test< _MultiMapping >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; WriteInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ~BaseTest() overridesofa::testing::BaseTest; ~MultiMapping_test() overridesofa::MultiMapping_test< _MultiMapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:3795,Testability,test,testing,3795,"rd typedefsofa::MultiMapping_test< _MultiMapping >; OutDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; OutDeriv typedefsofa::MultiMapping_test< _MultiMapping >; outDofssofa::MultiMapping_test< _MultiMapping >; OutDOFs typedefsofa::MultiMapping_test< _MultiMapping >; OutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; OutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; parentssofa::MultiMapping_test< _MultiMapping >; ReadInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; Real typedefsofa::MultiMapping_test< _MultiMapping >; rootsofa::MultiMapping_test< _MultiMapping >; runTest(const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords)sofa::MultiMapping_test< _MultiMapping >inline; seedsofa::testing::BaseTeststatic; setupScene(int numParents)sofa::MultiMapping_test< _MultiMapping >inline; simulationsofa::MultiMapping_test< _MultiMapping >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; WriteInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ~BaseTest() overridesofa::testing::BaseTest; ~MultiMapping_test() overridesofa::MultiMapping_test< _MultiMapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:3951,Testability,test,testing,3951,"rd typedefsofa::MultiMapping_test< _MultiMapping >; OutDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; OutDeriv typedefsofa::MultiMapping_test< _MultiMapping >; outDofssofa::MultiMapping_test< _MultiMapping >; OutDOFs typedefsofa::MultiMapping_test< _MultiMapping >; OutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; OutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; parentssofa::MultiMapping_test< _MultiMapping >; ReadInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; Real typedefsofa::MultiMapping_test< _MultiMapping >; rootsofa::MultiMapping_test< _MultiMapping >; runTest(const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords)sofa::MultiMapping_test< _MultiMapping >inline; seedsofa::testing::BaseTeststatic; setupScene(int numParents)sofa::MultiMapping_test< _MultiMapping >inline; simulationsofa::MultiMapping_test< _MultiMapping >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; WriteInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ~BaseTest() overridesofa::testing::BaseTest; ~MultiMapping_test() overridesofa::MultiMapping_test< _MultiMapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:4075,Testability,test,testing,4075,"rd typedefsofa::MultiMapping_test< _MultiMapping >; OutDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; OutDeriv typedefsofa::MultiMapping_test< _MultiMapping >; outDofssofa::MultiMapping_test< _MultiMapping >; OutDOFs typedefsofa::MultiMapping_test< _MultiMapping >; OutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; OutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; parentssofa::MultiMapping_test< _MultiMapping >; ReadInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; Real typedefsofa::MultiMapping_test< _MultiMapping >; rootsofa::MultiMapping_test< _MultiMapping >; runTest(const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords)sofa::MultiMapping_test< _MultiMapping >inline; seedsofa::testing::BaseTeststatic; setupScene(int numParents)sofa::MultiMapping_test< _MultiMapping >inline; simulationsofa::MultiMapping_test< _MultiMapping >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; WriteInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ~BaseTest() overridesofa::testing::BaseTest; ~MultiMapping_test() overridesofa::MultiMapping_test< _MultiMapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html:4418,Testability,test,testing,4418,"rd typedefsofa::MultiMapping_test< _MultiMapping >; OutDataVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; OutDeriv typedefsofa::MultiMapping_test< _MultiMapping >; outDofssofa::MultiMapping_test< _MultiMapping >; OutDOFs typedefsofa::MultiMapping_test< _MultiMapping >; OutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; OutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; parentssofa::MultiMapping_test< _MultiMapping >; ReadInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; ReadOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; Real typedefsofa::MultiMapping_test< _MultiMapping >; rootsofa::MultiMapping_test< _MultiMapping >; runTest(const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords)sofa::MultiMapping_test< _MultiMapping >inline; seedsofa::testing::BaseTeststatic; setupScene(int numParents)sofa::MultiMapping_test< _MultiMapping >inline; simulationsofa::MultiMapping_test< _MultiMapping >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _MultiMapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _MultiMapping::In::Real >inline; WriteInVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteInVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecCoord typedefsofa::MultiMapping_test< _MultiMapping >; WriteOutVecDeriv typedefsofa::MultiMapping_test< _MultiMapping >; ~BaseTest() overridesofa::testing::BaseTest; ~MultiMapping_test() overridesofa::MultiMapping_test< _MultiMapping >inline.",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1611,Availability,error,errorMax,1611,". ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2824,Availability,failure,failure,2824,"AsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:4963,Availability,error,errorMax,4963,"he maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. .",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:5053,Availability,error,errorMax,5053,"y if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulati",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:7020,Availability,error,errors,7020,"ulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an re-used in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ difference(). template<class _MultiMapping > . OutDeriv sofa::MultiMapping_test< _MultiMapping >::difference ; (; const OutCoord & ; c1, . const OutCoord & ; c2 . ). inline . Returns OutCoord subtraction a-b (should return a OutDeriv, but???) . ◆ runTest(). template<class _MultiMapping > . bool sofa::MultiMapping_test< _MultiMapping >::runTest ; (; const type::vector< InVecCoord > & ; parentCoords, . const OutVecCoord & ; expectedChildCoords . ). inline . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The parent position is applied, the resulting child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The parent coordinates are transferred in the parent states, then the scene is initialized, then various mapping functions are applied. The parent states are resized based on the size of the parentCoords vectors. The child state is not resized. Its should be already sized, or its size set automatically during initialization.; Parameters. parentCoordsParent positions (one InVecCoord per parent) ; expectedChildCoordsexpected position of the child corresponding to the parent positions . ◆ setupScene(). template<class _MultiMapping > . void sofa::MultiMapping_test< _MultiMapping >::setupScene ; (; int ; numParents). inline . Create scene with given number of parent states. Currently, only one child state is handled. All the parents are set as child of the root node, while the ch",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:381,Energy Efficiency,adapt,adapted,381,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:645,Energy Efficiency,adapt,adapted,645,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:381,Modifiability,adapt,adapted,381,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:645,Modifiability,adapt,adapted,645,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1772,Modifiability,inherit,inherited,1772," type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a fail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2228,Modifiability,inherit,inherited,2228,"s;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::te",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2378,Modifiability,inherit,inherited,2378,"s;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::te",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2605,Modifiability,inherit,inherited,2605," (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:3027,Modifiability,inherit,inherited,3027,"ord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vector",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:3171,Modifiability,inherit,inherited,3171,"aseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Mem",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:4295,Modifiability,inherit,inherited,4295,"ing entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:365,Testability,test,tests,365,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:629,Testability,test,tests,629,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:809,Testability,test,tested,809,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1052,Testability,test,tests,1052," SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeri",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1330,Testability,test,tests,1330," . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulatio",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1626,Testability,test,test,1626,". ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1793,Testability,test,testing,1793," type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a fail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1818,Testability,test,testing,1818," type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a fail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1866,Testability,test,testing,1866," type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a fail",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2249,Testability,test,testing,2249,"s;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::te",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2399,Testability,test,testing,2399,"s;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::te",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2626,Testability,test,testing,2626," (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; st",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:3048,Testability,test,testing,3048,"ord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vector",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:3192,Testability,test,testing,3192,"aseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Mem",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:4316,Testability,test,testing,4316,"ing entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:5067,Testability,test,test,5067,":type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:5470,Testability,test,tested,5470,"ute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an re-used in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ dif",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:5958,Testability,test,tests,5958,"float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an re-used in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ difference(). template<class _MultiMapping > . OutDeriv sofa::MultiMapping_test< _MultiMapping >::difference ; (; const OutCoord & ; c1, . const OutCoord & ; c2 . ). inline . Returns OutCoord subtraction a-b (should return a OutDeriv, but???) . ◆ runTest(). template<class _MultiMapping > . bool sofa::MultiMapping_test< _MultiMapping >::runTest ; (; const type::vector< InVecCoord > & ; parentCoords, . const OutVecCoord & ; expectedChildCoords . ). inline . Test",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:6137,Testability,test,tests,6137,"ifference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an re-used in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ difference(). template<class _MultiMapping > . OutDeriv sofa::MultiMapping_test< _MultiMapping >::difference ; (; const OutCoord & ; c1, . const OutCoord & ; c2 . ). inline . Returns OutCoord subtraction a-b (should return a OutDeriv, but???) . ◆ runTest(). template<class _MultiMapping > . bool sofa::MultiMapping_test< _MultiMapping >::runTest ; (; const type::vector< InVecCoord > & ; parentCoords, . const OutVecCoord & ; expectedChildCoords . ). inline . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The parent position is applied, the resulting child position is",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:7198,Testability,test,tested,7198,"d in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ difference(). template<class _MultiMapping > . OutDeriv sofa::MultiMapping_test< _MultiMapping >::difference ; (; const OutCoord & ; c1, . const OutCoord & ; c2 . ). inline . Returns OutCoord subtraction a-b (should return a OutDeriv, but???) . ◆ runTest(). template<class _MultiMapping > . bool sofa::MultiMapping_test< _MultiMapping >::runTest ; (; const type::vector< InVecCoord > & ; parentCoords, . const OutVecCoord & ; expectedChildCoords . ). inline . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The parent position is applied, the resulting child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The parent coordinates are transferred in the parent states, then the scene is initialized, then various mapping functions are applied. The parent states are resized based on the size of the parentCoords vectors. The child state is not resized. Its should be already sized, or its size set automatically during initialization.; Parameters. parentCoordsParent positions (one InVecCoord per parent) ; expectedChildCoordsexpected position of the child corresponding to the parent positions . ◆ setupScene(). template<class _MultiMapping > . void sofa::MultiMapping_test< _MultiMapping >::setupScene ; (; int ; numParents). inline . Create scene with given number of parent states. Currently, only one child state is handled. All the parents are set as child of the root node, while the child is in a child node. . sofaMultiMapping_test; Generated on Mon Nov 11 2024 02:17:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct-members.html:224,Modifiability,inherit,inherited,224,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::PatchTestStruct< T > Member List . This is the complete list of members for sofa::PatchTestStruct< T >, including all inherited members. affineConstraintsofa::PatchTestStruct< T >; dofssofa::PatchTestStruct< T >; SquareNodesofa::PatchTestStruct< T >. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct-members.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html:344,Deployability,patch,patch,344,﻿. SOFA API: sofa::PatchTestStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::PatchTestStruct< T > Struct Template Reference . #include <RegularGridNodeCreation.h>; Structure which contains the nodes and the pointers useful for the patch test. ; More... Inheritance diagram for sofa::PatchTestStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::PatchTestStruct< T >; Structure which contains the nodes and the pointers useful for the patch test. . Public Attributes; simulation::Node::SPtr SquareNode;  ; component::constraint::projective::AffineMovementProjectiveConstraint< T >::SPtr affineConstraint;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  . Attribute details. ◆ affineConstraint. template<class T > . component::constraint::projective::AffineMovementProjectiveConstraint<T>::SPtr sofa::PatchTestStruct< T >::affineConstraint. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::PatchTestStruct< T >::dofs. ◆ SquareNode. template<class T > . simulation::Node::SPtr sofa::PatchTestStruct< T >::SquareNode. sofaPatchTestStruct; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html:572,Deployability,patch,patch,572,﻿. SOFA API: sofa::PatchTestStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::PatchTestStruct< T > Struct Template Reference . #include <RegularGridNodeCreation.h>; Structure which contains the nodes and the pointers useful for the patch test. ; More... Inheritance diagram for sofa::PatchTestStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::PatchTestStruct< T >; Structure which contains the nodes and the pointers useful for the patch test. . Public Attributes; simulation::Node::SPtr SquareNode;  ; component::constraint::projective::AffineMovementProjectiveConstraint< T >::SPtr affineConstraint;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  . Attribute details. ◆ affineConstraint. template<class T > . component::constraint::projective::AffineMovementProjectiveConstraint<T>::SPtr sofa::PatchTestStruct< T >::affineConstraint. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::PatchTestStruct< T >::dofs. ◆ SquareNode. template<class T > . simulation::Node::SPtr sofa::PatchTestStruct< T >::SquareNode. sofaPatchTestStruct; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html:350,Testability,test,test,350,﻿. SOFA API: sofa::PatchTestStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::PatchTestStruct< T > Struct Template Reference . #include <RegularGridNodeCreation.h>; Structure which contains the nodes and the pointers useful for the patch test. ; More... Inheritance diagram for sofa::PatchTestStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::PatchTestStruct< T >; Structure which contains the nodes and the pointers useful for the patch test. . Public Attributes; simulation::Node::SPtr SquareNode;  ; component::constraint::projective::AffineMovementProjectiveConstraint< T >::SPtr affineConstraint;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  . Attribute details. ◆ affineConstraint. template<class T > . component::constraint::projective::AffineMovementProjectiveConstraint<T>::SPtr sofa::PatchTestStruct< T >::affineConstraint. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::PatchTestStruct< T >::dofs. ◆ SquareNode. template<class T > . simulation::Node::SPtr sofa::PatchTestStruct< T >::SquareNode. sofaPatchTestStruct; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html
https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html:578,Testability,test,test,578,﻿. SOFA API: sofa::PatchTestStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::PatchTestStruct< T > Struct Template Reference . #include <RegularGridNodeCreation.h>; Structure which contains the nodes and the pointers useful for the patch test. ; More... Inheritance diagram for sofa::PatchTestStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::PatchTestStruct< T >; Structure which contains the nodes and the pointers useful for the patch test. . Public Attributes; simulation::Node::SPtr SquareNode;  ; component::constraint::projective::AffineMovementProjectiveConstraint< T >::SPtr affineConstraint;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  . Attribute details. ◆ affineConstraint. template<class T > . component::constraint::projective::AffineMovementProjectiveConstraint<T>::SPtr sofa::PatchTestStruct< T >::affineConstraint. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::PatchTestStruct< T >::dofs. ◆ SquareNode. template<class T > . simulation::Node::SPtr sofa::PatchTestStruct< T >::SquareNode. sofaPatchTestStruct; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/structsofa_1_1_patch_test_struct.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html
https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_08300ae5924c636a2a2005701ca71e93.html:396,Modifiability,inherit,inherited,396,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, false >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_08300ae5924c636a2a2005701ca71e93.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_08300ae5924c636a2a2005701ca71e93.html
https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_1d7a257d1b3cd7689a5858361a1ac1ad.html:394,Modifiability,inherit,inherited,394,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, RowMajor, true >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_1d7a257d1b3cd7689a5858361a1ac1ad.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_1d7a257d1b3cd7689a5858361a1ac1ad.html
https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_91cf57710619aa6efcc2f33cc15ab2eb.html:396,Modifiability,inherit,inherited,396,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, false >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_91cf57710619aa6efcc2f33cc15ab2eb.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_91cf57710619aa6efcc2f33cc15ab2eb.html
https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_c1ab4283c4d4e722daf669199f7c4381.html:394,Modifiability,inherit,inherited,394,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true > Member List . This is the complete list of members for Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >, including all inherited members. Index typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; Lhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; LhsInnerIterator typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; Res typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; Rhs typedefEigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >; run(const SparseLhsType &lhs, const DenseRhsType &rhs, DenseResType &res, const typename Res::Scalar &alpha, unsigned nbThreads)Eigen::internal::sparse_time_dense_product_impl_MT< SparseLhsType, DenseRhsType, DenseResType, ColMajor, true >inlinestatic. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_c1ab4283c4d4e722daf669199f7c4381.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1sparse__time__dense__product__impl___m_t_3_01_sparse_lhs_type_00_01_c1ab4283c4d4e722daf669199f7c4381.html
https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1traits_3_01_sparse_time_dense_product___m_t_3_01_lhs_00_01_rhs_01_4_01_4-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > > Member List . This is the complete list of members for Eigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > >, including all inherited members. StorageKind typedefEigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > >; XprKind typedefEigen::internal::traits< SparseTimeDenseProduct_MT< Lhs, Rhs > >. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1internal_1_1traits_3_01_sparse_time_dense_product___m_t_3_01_lhs_00_01_rhs_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1internal_1_1traits_3_01_sparse_time_dense_product___m_t_3_01_lhs_00_01_rhs_01_4_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, InnerSize > Member List . This is the complete list of members for Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, InnerSize >, including all inherited members. Type typedefEigen::SparseDenseProductReturnType_MT< Lhs, Rhs, InnerSize >. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t-members.html
https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t_3_01_lhs_00_01_rhs_00_011_01_4-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, 1 > Member List . This is the complete list of members for Eigen::SparseDenseProductReturnType_MT< Lhs, Rhs, 1 >, including all inherited members. Type typedefEigen::SparseDenseProductReturnType_MT< Lhs, Rhs, 1 >. Generated on Mon Nov 11 2024 02:15:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t_3_01_lhs_00_01_rhs_00_011_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/struct_eigen_1_1_sparse_dense_product_return_type___m_t_3_01_lhs_00_01_rhs_00_011_01_4-members.html
https://www.sofa-framework.org/api/master/sofa/html/unionsofa_1_1gui_1_1qt_1_1_object_model_ptr-members.html:230,Modifiability,inherit,inherited,230,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ObjectModelPtr Member List . This is the complete list of members for sofa::gui::qt::ObjectModelPtr, including all inherited members. Datasofa::gui::qt::ObjectModelPtr; Nodesofa::gui::qt::ObjectModelPtr; Objectsofa::gui::qt::ObjectModelPtr. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/unionsofa_1_1gui_1_1qt_1_1_object_model_ptr-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/unionsofa_1_1gui_1_1qt_1_1_object_model_ptr-members.html
